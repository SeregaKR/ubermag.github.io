Search.setIndex({"docnames": ["api/_autosummary/discretisedfield", "api/_autosummary/discretisedfield.DValue", "api/_autosummary/discretisedfield.Field", "api/_autosummary/discretisedfield.FieldRotator", "api/_autosummary/discretisedfield.Line", "api/_autosummary/discretisedfield.Mesh", "api/_autosummary/discretisedfield.Region", "api/_autosummary/discretisedfield.integral", "api/_autosummary/discretisedfield.interact", "api/_autosummary/discretisedfield.io", "api/_autosummary/discretisedfield.io.field_from_hdf5", "api/_autosummary/discretisedfield.io.field_from_ovf", "api/_autosummary/discretisedfield.io.field_from_vtk", "api/_autosummary/discretisedfield.io.field_to_hdf5", "api/_autosummary/discretisedfield.io.field_to_ovf", "api/_autosummary/discretisedfield.io.field_to_vtk", "api/_autosummary/discretisedfield.io.ovf2vtk", "api/_autosummary/discretisedfield.io.ovf2vtk.ovf2vtk", "api/_autosummary/discretisedfield.plotting", "api/_autosummary/discretisedfield.plotting.Hv", "api/_autosummary/discretisedfield.plotting.K3dField", "api/_autosummary/discretisedfield.plotting.K3dMesh", "api/_autosummary/discretisedfield.plotting.K3dRegion", "api/_autosummary/discretisedfield.plotting.MplField", "api/_autosummary/discretisedfield.plotting.MplMesh", "api/_autosummary/discretisedfield.plotting.MplRegion", "api/_autosummary/discretisedfield.plotting.add_colorwheel", "api/_autosummary/discretisedfield.test", "api/_autosummary/discretisedfield.tools", "api/_autosummary/discretisedfield.tools.count_bps", "api/_autosummary/discretisedfield.tools.count_large_cell_angle_regions", "api/_autosummary/discretisedfield.tools.demag_field", "api/_autosummary/discretisedfield.tools.demag_tensor", "api/_autosummary/discretisedfield.tools.emergent_magnetic_field", "api/_autosummary/discretisedfield.tools.max_neigbouring_cell_angle", "api/_autosummary/discretisedfield.tools.neigbouring_cell_angle", "api/_autosummary/discretisedfield.tools.topological_charge", "api/_autosummary/discretisedfield.tools.topological_charge_density", "api/_autosummary/mag2exp", "api/_autosummary/mag2exp.ltem", "api/_autosummary/mag2exp.ltem.defocus_image", "api/_autosummary/mag2exp.ltem.integrated_magnetic_flux_density", "api/_autosummary/mag2exp.ltem.phase", "api/_autosummary/mag2exp.ltem.relativistic_wavelength", "api/_autosummary/mag2exp.magnetometry", "api/_autosummary/mag2exp.magnetometry.magnetisation", "api/_autosummary/mag2exp.magnetometry.torque", "api/_autosummary/mag2exp.mfm", "api/_autosummary/mag2exp.mfm.phase_shift", "api/_autosummary/mag2exp.quick_plots", "api/_autosummary/mag2exp.quick_plots.ltem_defocus", "api/_autosummary/mag2exp.quick_plots.ltem_ft_phase", "api/_autosummary/mag2exp.quick_plots.ltem_integrated_mfd", "api/_autosummary/mag2exp.quick_plots.ltem_phase", "api/_autosummary/mag2exp.quick_plots.mfm_phase_shift", "api/_autosummary/mag2exp.quick_plots.sans_chiral_function", "api/_autosummary/mag2exp.quick_plots.sans_cross_section", "api/_autosummary/mag2exp.quick_plots.saxs", "api/_autosummary/mag2exp.quick_plots.x_ray_holography", "api/_autosummary/mag2exp.sans", "api/_autosummary/mag2exp.sans.chiral_function", "api/_autosummary/mag2exp.sans.cross_section", "api/_autosummary/mag2exp.test", "api/_autosummary/mag2exp.x_ray", "api/_autosummary/mag2exp.x_ray.holography", "api/_autosummary/mag2exp.x_ray.saxs", "api/_autosummary/micromagneticdata", "api/_autosummary/micromagneticdata.AbstractDrive", "api/_autosummary/micromagneticdata.CombinedDrive", "api/_autosummary/micromagneticdata.Data", "api/_autosummary/micromagneticdata.Drive", "api/_autosummary/micromagneticdata.Mumax3Drive", "api/_autosummary/micromagneticdata.OOMMFDrive", "api/_autosummary/micromagneticdata.test", "api/_autosummary/micromagneticmodel", "api/_autosummary/micromagneticmodel.CubicAnisotropy", "api/_autosummary/micromagneticmodel.DMI", "api/_autosummary/micromagneticmodel.Damping", "api/_autosummary/micromagneticmodel.Demag", "api/_autosummary/micromagneticmodel.Driver", "api/_autosummary/micromagneticmodel.Dynamics", "api/_autosummary/micromagneticmodel.DynamicsTerm", "api/_autosummary/micromagneticmodel.Energy", "api/_autosummary/micromagneticmodel.EnergyTerm", "api/_autosummary/micromagneticmodel.Evolver", "api/_autosummary/micromagneticmodel.Exchange", "api/_autosummary/micromagneticmodel.ExternalDriver", "api/_autosummary/micromagneticmodel.ExternalRunner", "api/_autosummary/micromagneticmodel.MagnetoElastic", "api/_autosummary/micromagneticmodel.Precession", "api/_autosummary/micromagneticmodel.RKKY", "api/_autosummary/micromagneticmodel.Slonczewski", "api/_autosummary/micromagneticmodel.System", "api/_autosummary/micromagneticmodel.UniaxialAnisotropy", "api/_autosummary/micromagneticmodel.Zeeman", "api/_autosummary/micromagneticmodel.ZhangLi", "api/_autosummary/micromagneticmodel.abstract", "api/_autosummary/micromagneticmodel.abstract.Abstract", "api/_autosummary/micromagneticmodel.abstract.Container", "api/_autosummary/micromagneticmodel.abstract.Term", "api/_autosummary/micromagneticmodel.consts", "api/_autosummary/micromagneticmodel.consts.e", "api/_autosummary/micromagneticmodel.consts.g", "api/_autosummary/micromagneticmodel.consts.gamma", "api/_autosummary/micromagneticmodel.consts.gamma0", "api/_autosummary/micromagneticmodel.consts.h", "api/_autosummary/micromagneticmodel.consts.hbar", "api/_autosummary/micromagneticmodel.consts.kB", "api/_autosummary/micromagneticmodel.consts.me", "api/_autosummary/micromagneticmodel.consts.mu0", "api/_autosummary/micromagneticmodel.consts.muB", "api/_autosummary/micromagneticmodel.examples", "api/_autosummary/micromagneticmodel.examples.macrospin", "api/_autosummary/micromagneticmodel.test", "api/_autosummary/micromagnetictests", "api/_autosummary/micromagnetictests.calculatortests", "api/_autosummary/micromagnetictests.calculatortests.TestCompute", "api/_autosummary/micromagnetictests.calculatortests.TestCubicAnisotropy", "api/_autosummary/micromagnetictests.calculatortests.TestDMI", "api/_autosummary/micromagnetictests.calculatortests.TestDamping", "api/_autosummary/micromagnetictests.calculatortests.TestDemag", "api/_autosummary/micromagnetictests.calculatortests.TestDynamics", "api/_autosummary/micromagnetictests.calculatortests.TestEnergy", "api/_autosummary/micromagnetictests.calculatortests.TestExchange", "api/_autosummary/micromagnetictests.calculatortests.TestFixedSubregions", "api/_autosummary/micromagnetictests.calculatortests.TestHysteresisDriver", "api/_autosummary/micromagnetictests.calculatortests.TestMesh", "api/_autosummary/micromagnetictests.calculatortests.TestMinDriver", "api/_autosummary/micromagnetictests.calculatortests.TestPrecession", "api/_autosummary/micromagnetictests.calculatortests.TestRKKY", "api/_autosummary/micromagnetictests.calculatortests.TestSlonczewski", "api/_autosummary/micromagnetictests.calculatortests.TestThreads", "api/_autosummary/micromagnetictests.calculatortests.TestTimeDriver", "api/_autosummary/micromagnetictests.calculatortests.TestUniaxialAnisotropy", "api/_autosummary/micromagnetictests.calculatortests.TestZeeman", "api/_autosummary/micromagnetictests.calculatortests.TestZhangLi", "api/_autosummary/micromagnetictests.calculatortests.test_dirname", "api/_autosummary/micromagnetictests.calculatortests.test_format", "api/_autosummary/micromagnetictests.calculatortests.test_info_file", "api/_autosummary/micromagnetictests.calculatortests.test_multiple_drives", "api/_autosummary/micromagnetictests.calculatortests.test_outputstep", "api/_autosummary/micromagnetictests.calculatortests.test_schedule", "api/_autosummary/micromagnetictests.calculatortests.test_skyrmion", "api/_autosummary/micromagnetictests.calculatortests.test_stdprob3", "api/_autosummary/micromagnetictests.calculatortests.test_stdprob4", "api/_autosummary/micromagnetictests.calculatortests.test_stdprob5", "api/_autosummary/micromagnetictests.get_tests", "api/_autosummary/micromagnetictests.test", "api/_autosummary/oommfc", "api/_autosummary/oommfc.CGEvolver", "api/_autosummary/oommfc.Driver", "api/_autosummary/oommfc.EulerEvolver", "api/_autosummary/oommfc.HysteresisDriver", "api/_autosummary/oommfc.MinDriver", "api/_autosummary/oommfc.RungeKuttaEvolver", "api/_autosummary/oommfc.SpinTEvolver", "api/_autosummary/oommfc.SpinXferEvolver", "api/_autosummary/oommfc.TimeDriver", "api/_autosummary/oommfc.UHH_ThetaEvolver", "api/_autosummary/oommfc.Xf_ThermHeunEvolver", "api/_autosummary/oommfc.Xf_ThermSpinXferEvolver", "api/_autosummary/oommfc.compute", "api/_autosummary/oommfc.delete", "api/_autosummary/oommfc.oommf", "api/_autosummary/oommfc.oommf.DockerOOMMFRunner", "api/_autosummary/oommfc.oommf.ExeOOMMFRunner", "api/_autosummary/oommfc.oommf.OOMMFRunner", "api/_autosummary/oommfc.oommf.Runner", "api/_autosummary/oommfc.oommf.TclOOMMFRunner", "api/_autosummary/oommfc.oommf.overhead", "api/_autosummary/oommfc.runner", "api/_autosummary/oommfc.test", "api/_autosummary/oommfc.test_docker", "api/_autosummary/ubermag", "api/_autosummary/ubermag.debug_info", "api/_autosummary/ubermag.test", "api/_autosummary/ubermagtable", "api/_autosummary/ubermagtable.Table", "api/_autosummary/ubermagtable.interact", "api/_autosummary/ubermagtable.test", "api/_autosummary/ubermagtable.util", "api/_autosummary/ubermagtable.util.columns", "api/_autosummary/ubermagtable.util.data", "api/_autosummary/ubermagtable.util.units", "api/_autosummary/ubermagutil", "api/_autosummary/ubermagutil.changedir", "api/_autosummary/ubermagutil.hysteresis_values", "api/_autosummary/ubermagutil.inherit_docs", "api/_autosummary/ubermagutil.setup_logging", "api/_autosummary/ubermagutil.test", "api/_autosummary/ubermagutil.typesystem", "api/_autosummary/ubermagutil.typesystem.Descriptor", "api/_autosummary/ubermagutil.typesystem.Dictionary", "api/_autosummary/ubermagutil.typesystem.Name", "api/_autosummary/ubermagutil.typesystem.Parameter", "api/_autosummary/ubermagutil.typesystem.Scalar", "api/_autosummary/ubermagutil.typesystem.Subset", "api/_autosummary/ubermagutil.typesystem.Typed", "api/_autosummary/ubermagutil.typesystem.Vector", "api/_autosummary/ubermagutil.typesystem.typesystem", "api/_autosummary/ubermagutil.units", "api/_autosummary/ubermagutil.units.si_max_multiplier", "api/_autosummary/ubermagutil.units.si_multiplier", "api/index", "changelog", "contributing", "demo", "documentation", "documentation/compatibility", "documentation/discretisedfield", "documentation/index", "documentation/mag2exp", "documentation/micromagneticdata", "documentation/micromagneticmodel", "documentation/micromagnetictests", "documentation/mumax3c", "documentation/notebooks/discretisedfield/field-definition", "documentation/notebooks/discretisedfield/field-holoviews-visualisation", "documentation/notebooks/discretisedfield/field-k3d-visualisation", "documentation/notebooks/discretisedfield/field-matplotlib-visualisation", "documentation/notebooks/discretisedfield/field-normalisation", "documentation/notebooks/discretisedfield/field-operations", "documentation/notebooks/discretisedfield/field-read-write", "documentation/notebooks/discretisedfield/field-rotations", "documentation/notebooks/discretisedfield/field-spatially-varying", "documentation/notebooks/discretisedfield/field-tools", "documentation/notebooks/discretisedfield/line", "documentation/notebooks/discretisedfield/mesh-basics", "documentation/notebooks/discretisedfield/mesh-bc", "documentation/notebooks/discretisedfield/mesh-line-plane", "documentation/notebooks/discretisedfield/mesh-pad", "documentation/notebooks/discretisedfield/mesh-subregions", "documentation/notebooks/discretisedfield/mesh-visualisation", "documentation/notebooks/discretisedfield/mesh-widgets", "documentation/notebooks/discretisedfield/ovf2vtk", "documentation/notebooks/discretisedfield/region-basics", "documentation/notebooks/discretisedfield/region-facing-surfaces", "documentation/notebooks/discretisedfield/region-visualisation", "documentation/notebooks/discretisedfield/xarray-usage", "documentation/notebooks/mag2exp/DC_magnetometry", "documentation/notebooks/mag2exp/Lorentz_TEM", "documentation/notebooks/mag2exp/Magnetic_Force_Microscopy", "documentation/notebooks/mag2exp/Rotations_Lorentz_Microscopy", "documentation/notebooks/mag2exp/SANS", "documentation/notebooks/mag2exp/SAXS", "documentation/notebooks/mag2exp/Torque_magnetometry", "documentation/notebooks/mag2exp/Unit_converter", "documentation/notebooks/mag2exp/X_ray_Holography", "documentation/notebooks/micromagneticdata/documentation", "documentation/notebooks/micromagneticdata/interactive_plotting", "documentation/notebooks/micromagneticmodel/constants", "documentation/notebooks/micromagneticmodel/deriving-dynamics-term", "documentation/notebooks/micromagneticmodel/deriving-energy-term", "documentation/notebooks/micromagneticmodel/dynamics-terms", "documentation/notebooks/micromagneticmodel/energy-terms", "documentation/notebooks/micromagneticmodel/evolver-driver", "documentation/notebooks/micromagneticmodel/same-class-terms", "documentation/notebooks/micromagneticmodel/system", "documentation/notebooks/micromagneticmodel/term-parameters", "documentation/notebooks/micromagnetictests/usage", "documentation/notebooks/oommfc/controlling-default-runner", "documentation/notebooks/oommfc/cubicanisotropy", "documentation/notebooks/oommfc/dirname", "documentation/notebooks/oommfc/dmi", "documentation/notebooks/oommfc/exchange", "documentation/notebooks/oommfc/mindriver-steps", "documentation/notebooks/oommfc/parallel", "documentation/notebooks/oommfc/uniaxialanisotropy", "documentation/notebooks/oommfc/verbosity_levels", "documentation/notebooks/oommfc/zeeman", "documentation/notebooks/ubermag/ubermag-version", "documentation/notebooks/ubermagtable/table-basics", "documentation/notebooks/ubermagtable/table-fft", "documentation/notebooks/ubermagtable/table-interactive-plot", "documentation/notebooks/ubermagtable/table-merge", "documentation/notebooks/ubermagtable/table-visualisation", "documentation/notebooks/ubermagtable/table-widgets", "documentation/notebooks/ubermagutil/constant-attributes", "documentation/notebooks/ubermagutil/hysteresis", "documentation/notebooks/ubermagutil/imposing-typesystem", "documentation/notebooks/ubermagutil/inherit-docs", "documentation/notebooks/ubermagutil/logging", "documentation/notebooks/ubermagutil/otherwise-type", "documentation/notebooks/ubermagutil/parameter-descriptor", "documentation/notebooks/ubermagutil/si-prefix", "documentation/oommfc", "documentation/ubermag", "documentation/ubermagtable", "documentation/ubermagutil", "examples/index", "examples/notebooks/07-tutorial-standard-problem3", "examples/notebooks/08-tutorial-standard-problem4", "examples/notebooks/09-tutorial-standard-problem5", "examples/notebooks/10-tutorial-standard-problem-fmr", "examples/notebooks/11-tutorial-deriving-fields", "examples/notebooks/12-tutorial-stray-field", "examples/notebooks/13-tutorial-skyrmion", "examples/notebooks/choosing-runner", "examples/notebooks/energy-term-computations", "examples/notebooks/field-operations2", "examples/notebooks/finite-temperature", "examples/notebooks/fixed-subregions", "examples/notebooks/hysteresis", "examples/notebooks/multiple-terms", "examples/notebooks/negative-A", "examples/notebooks/periodic-boundary-conditions", "examples/notebooks/rkky", "examples/notebooks/sine-hysteresis", "examples/notebooks/space-time-field", "examples/notebooks/spatially-varying-parameters1", "examples/notebooks/spatially-varying-parameters2", "examples/notebooks/time-dependent-field", "examples/notebooks/time-dependent-field-current", "faq", "getting-started/index", "getting-started/jupyter-basics", "getting-started/notebooks/driving-dw", "getting-started/notebooks/dw-pair-conversion", "getting-started/notebooks/dynamics-equation", "getting-started/notebooks/energy-equation", "getting-started/notebooks/first-ubermag-simulation", "getting-started/notebooks/magnetisation-field", "getting-started/notebooks/python-basics", "help", "index", "installation", "news"], "filenames": ["api/_autosummary/discretisedfield.rst", "api/_autosummary/discretisedfield.DValue.rst", "api/_autosummary/discretisedfield.Field.rst", "api/_autosummary/discretisedfield.FieldRotator.rst", "api/_autosummary/discretisedfield.Line.rst", "api/_autosummary/discretisedfield.Mesh.rst", "api/_autosummary/discretisedfield.Region.rst", "api/_autosummary/discretisedfield.integral.rst", "api/_autosummary/discretisedfield.interact.rst", "api/_autosummary/discretisedfield.io.rst", "api/_autosummary/discretisedfield.io.field_from_hdf5.rst", "api/_autosummary/discretisedfield.io.field_from_ovf.rst", "api/_autosummary/discretisedfield.io.field_from_vtk.rst", "api/_autosummary/discretisedfield.io.field_to_hdf5.rst", "api/_autosummary/discretisedfield.io.field_to_ovf.rst", "api/_autosummary/discretisedfield.io.field_to_vtk.rst", "api/_autosummary/discretisedfield.io.ovf2vtk.rst", "api/_autosummary/discretisedfield.io.ovf2vtk.ovf2vtk.rst", "api/_autosummary/discretisedfield.plotting.rst", "api/_autosummary/discretisedfield.plotting.Hv.rst", "api/_autosummary/discretisedfield.plotting.K3dField.rst", "api/_autosummary/discretisedfield.plotting.K3dMesh.rst", "api/_autosummary/discretisedfield.plotting.K3dRegion.rst", "api/_autosummary/discretisedfield.plotting.MplField.rst", "api/_autosummary/discretisedfield.plotting.MplMesh.rst", "api/_autosummary/discretisedfield.plotting.MplRegion.rst", "api/_autosummary/discretisedfield.plotting.add_colorwheel.rst", "api/_autosummary/discretisedfield.test.rst", "api/_autosummary/discretisedfield.tools.rst", "api/_autosummary/discretisedfield.tools.count_bps.rst", "api/_autosummary/discretisedfield.tools.count_large_cell_angle_regions.rst", "api/_autosummary/discretisedfield.tools.demag_field.rst", "api/_autosummary/discretisedfield.tools.demag_tensor.rst", "api/_autosummary/discretisedfield.tools.emergent_magnetic_field.rst", "api/_autosummary/discretisedfield.tools.max_neigbouring_cell_angle.rst", "api/_autosummary/discretisedfield.tools.neigbouring_cell_angle.rst", "api/_autosummary/discretisedfield.tools.topological_charge.rst", "api/_autosummary/discretisedfield.tools.topological_charge_density.rst", "api/_autosummary/mag2exp.rst", "api/_autosummary/mag2exp.ltem.rst", "api/_autosummary/mag2exp.ltem.defocus_image.rst", "api/_autosummary/mag2exp.ltem.integrated_magnetic_flux_density.rst", "api/_autosummary/mag2exp.ltem.phase.rst", "api/_autosummary/mag2exp.ltem.relativistic_wavelength.rst", "api/_autosummary/mag2exp.magnetometry.rst", "api/_autosummary/mag2exp.magnetometry.magnetisation.rst", "api/_autosummary/mag2exp.magnetometry.torque.rst", "api/_autosummary/mag2exp.mfm.rst", "api/_autosummary/mag2exp.mfm.phase_shift.rst", "api/_autosummary/mag2exp.quick_plots.rst", "api/_autosummary/mag2exp.quick_plots.ltem_defocus.rst", "api/_autosummary/mag2exp.quick_plots.ltem_ft_phase.rst", "api/_autosummary/mag2exp.quick_plots.ltem_integrated_mfd.rst", "api/_autosummary/mag2exp.quick_plots.ltem_phase.rst", "api/_autosummary/mag2exp.quick_plots.mfm_phase_shift.rst", "api/_autosummary/mag2exp.quick_plots.sans_chiral_function.rst", "api/_autosummary/mag2exp.quick_plots.sans_cross_section.rst", "api/_autosummary/mag2exp.quick_plots.saxs.rst", "api/_autosummary/mag2exp.quick_plots.x_ray_holography.rst", "api/_autosummary/mag2exp.sans.rst", "api/_autosummary/mag2exp.sans.chiral_function.rst", "api/_autosummary/mag2exp.sans.cross_section.rst", "api/_autosummary/mag2exp.test.rst", "api/_autosummary/mag2exp.x_ray.rst", "api/_autosummary/mag2exp.x_ray.holography.rst", "api/_autosummary/mag2exp.x_ray.saxs.rst", "api/_autosummary/micromagneticdata.rst", "api/_autosummary/micromagneticdata.AbstractDrive.rst", "api/_autosummary/micromagneticdata.CombinedDrive.rst", "api/_autosummary/micromagneticdata.Data.rst", "api/_autosummary/micromagneticdata.Drive.rst", "api/_autosummary/micromagneticdata.Mumax3Drive.rst", "api/_autosummary/micromagneticdata.OOMMFDrive.rst", "api/_autosummary/micromagneticdata.test.rst", "api/_autosummary/micromagneticmodel.rst", "api/_autosummary/micromagneticmodel.CubicAnisotropy.rst", "api/_autosummary/micromagneticmodel.DMI.rst", "api/_autosummary/micromagneticmodel.Damping.rst", "api/_autosummary/micromagneticmodel.Demag.rst", "api/_autosummary/micromagneticmodel.Driver.rst", "api/_autosummary/micromagneticmodel.Dynamics.rst", "api/_autosummary/micromagneticmodel.DynamicsTerm.rst", "api/_autosummary/micromagneticmodel.Energy.rst", "api/_autosummary/micromagneticmodel.EnergyTerm.rst", "api/_autosummary/micromagneticmodel.Evolver.rst", "api/_autosummary/micromagneticmodel.Exchange.rst", "api/_autosummary/micromagneticmodel.ExternalDriver.rst", "api/_autosummary/micromagneticmodel.ExternalRunner.rst", "api/_autosummary/micromagneticmodel.MagnetoElastic.rst", "api/_autosummary/micromagneticmodel.Precession.rst", "api/_autosummary/micromagneticmodel.RKKY.rst", "api/_autosummary/micromagneticmodel.Slonczewski.rst", "api/_autosummary/micromagneticmodel.System.rst", "api/_autosummary/micromagneticmodel.UniaxialAnisotropy.rst", "api/_autosummary/micromagneticmodel.Zeeman.rst", "api/_autosummary/micromagneticmodel.ZhangLi.rst", "api/_autosummary/micromagneticmodel.abstract.rst", "api/_autosummary/micromagneticmodel.abstract.Abstract.rst", "api/_autosummary/micromagneticmodel.abstract.Container.rst", "api/_autosummary/micromagneticmodel.abstract.Term.rst", "api/_autosummary/micromagneticmodel.consts.rst", "api/_autosummary/micromagneticmodel.consts.e.rst", "api/_autosummary/micromagneticmodel.consts.g.rst", "api/_autosummary/micromagneticmodel.consts.gamma.rst", "api/_autosummary/micromagneticmodel.consts.gamma0.rst", "api/_autosummary/micromagneticmodel.consts.h.rst", "api/_autosummary/micromagneticmodel.consts.hbar.rst", "api/_autosummary/micromagneticmodel.consts.kB.rst", "api/_autosummary/micromagneticmodel.consts.me.rst", "api/_autosummary/micromagneticmodel.consts.mu0.rst", "api/_autosummary/micromagneticmodel.consts.muB.rst", "api/_autosummary/micromagneticmodel.examples.rst", "api/_autosummary/micromagneticmodel.examples.macrospin.rst", "api/_autosummary/micromagneticmodel.test.rst", "api/_autosummary/micromagnetictests.rst", "api/_autosummary/micromagnetictests.calculatortests.rst", "api/_autosummary/micromagnetictests.calculatortests.TestCompute.rst", "api/_autosummary/micromagnetictests.calculatortests.TestCubicAnisotropy.rst", "api/_autosummary/micromagnetictests.calculatortests.TestDMI.rst", "api/_autosummary/micromagnetictests.calculatortests.TestDamping.rst", "api/_autosummary/micromagnetictests.calculatortests.TestDemag.rst", "api/_autosummary/micromagnetictests.calculatortests.TestDynamics.rst", "api/_autosummary/micromagnetictests.calculatortests.TestEnergy.rst", "api/_autosummary/micromagnetictests.calculatortests.TestExchange.rst", "api/_autosummary/micromagnetictests.calculatortests.TestFixedSubregions.rst", "api/_autosummary/micromagnetictests.calculatortests.TestHysteresisDriver.rst", "api/_autosummary/micromagnetictests.calculatortests.TestMesh.rst", "api/_autosummary/micromagnetictests.calculatortests.TestMinDriver.rst", "api/_autosummary/micromagnetictests.calculatortests.TestPrecession.rst", "api/_autosummary/micromagnetictests.calculatortests.TestRKKY.rst", "api/_autosummary/micromagnetictests.calculatortests.TestSlonczewski.rst", "api/_autosummary/micromagnetictests.calculatortests.TestThreads.rst", "api/_autosummary/micromagnetictests.calculatortests.TestTimeDriver.rst", "api/_autosummary/micromagnetictests.calculatortests.TestUniaxialAnisotropy.rst", "api/_autosummary/micromagnetictests.calculatortests.TestZeeman.rst", "api/_autosummary/micromagnetictests.calculatortests.TestZhangLi.rst", "api/_autosummary/micromagnetictests.calculatortests.test_dirname.rst", "api/_autosummary/micromagnetictests.calculatortests.test_format.rst", "api/_autosummary/micromagnetictests.calculatortests.test_info_file.rst", "api/_autosummary/micromagnetictests.calculatortests.test_multiple_drives.rst", "api/_autosummary/micromagnetictests.calculatortests.test_outputstep.rst", "api/_autosummary/micromagnetictests.calculatortests.test_schedule.rst", "api/_autosummary/micromagnetictests.calculatortests.test_skyrmion.rst", "api/_autosummary/micromagnetictests.calculatortests.test_stdprob3.rst", "api/_autosummary/micromagnetictests.calculatortests.test_stdprob4.rst", "api/_autosummary/micromagnetictests.calculatortests.test_stdprob5.rst", "api/_autosummary/micromagnetictests.get_tests.rst", "api/_autosummary/micromagnetictests.test.rst", "api/_autosummary/oommfc.rst", "api/_autosummary/oommfc.CGEvolver.rst", "api/_autosummary/oommfc.Driver.rst", "api/_autosummary/oommfc.EulerEvolver.rst", "api/_autosummary/oommfc.HysteresisDriver.rst", "api/_autosummary/oommfc.MinDriver.rst", "api/_autosummary/oommfc.RungeKuttaEvolver.rst", "api/_autosummary/oommfc.SpinTEvolver.rst", "api/_autosummary/oommfc.SpinXferEvolver.rst", "api/_autosummary/oommfc.TimeDriver.rst", "api/_autosummary/oommfc.UHH_ThetaEvolver.rst", "api/_autosummary/oommfc.Xf_ThermHeunEvolver.rst", "api/_autosummary/oommfc.Xf_ThermSpinXferEvolver.rst", "api/_autosummary/oommfc.compute.rst", "api/_autosummary/oommfc.delete.rst", "api/_autosummary/oommfc.oommf.rst", "api/_autosummary/oommfc.oommf.DockerOOMMFRunner.rst", "api/_autosummary/oommfc.oommf.ExeOOMMFRunner.rst", "api/_autosummary/oommfc.oommf.OOMMFRunner.rst", "api/_autosummary/oommfc.oommf.Runner.rst", "api/_autosummary/oommfc.oommf.TclOOMMFRunner.rst", "api/_autosummary/oommfc.oommf.overhead.rst", "api/_autosummary/oommfc.runner.rst", "api/_autosummary/oommfc.test.rst", "api/_autosummary/oommfc.test_docker.rst", "api/_autosummary/ubermag.rst", "api/_autosummary/ubermag.debug_info.rst", "api/_autosummary/ubermag.test.rst", "api/_autosummary/ubermagtable.rst", "api/_autosummary/ubermagtable.Table.rst", "api/_autosummary/ubermagtable.interact.rst", "api/_autosummary/ubermagtable.test.rst", "api/_autosummary/ubermagtable.util.rst", "api/_autosummary/ubermagtable.util.columns.rst", "api/_autosummary/ubermagtable.util.data.rst", "api/_autosummary/ubermagtable.util.units.rst", "api/_autosummary/ubermagutil.rst", "api/_autosummary/ubermagutil.changedir.rst", "api/_autosummary/ubermagutil.hysteresis_values.rst", "api/_autosummary/ubermagutil.inherit_docs.rst", "api/_autosummary/ubermagutil.setup_logging.rst", "api/_autosummary/ubermagutil.test.rst", "api/_autosummary/ubermagutil.typesystem.rst", "api/_autosummary/ubermagutil.typesystem.Descriptor.rst", "api/_autosummary/ubermagutil.typesystem.Dictionary.rst", "api/_autosummary/ubermagutil.typesystem.Name.rst", "api/_autosummary/ubermagutil.typesystem.Parameter.rst", "api/_autosummary/ubermagutil.typesystem.Scalar.rst", "api/_autosummary/ubermagutil.typesystem.Subset.rst", "api/_autosummary/ubermagutil.typesystem.Typed.rst", "api/_autosummary/ubermagutil.typesystem.Vector.rst", "api/_autosummary/ubermagutil.typesystem.typesystem.rst", "api/_autosummary/ubermagutil.units.rst", "api/_autosummary/ubermagutil.units.si_max_multiplier.rst", "api/_autosummary/ubermagutil.units.si_multiplier.rst", "api/index.rst", "changelog.rst", "contributing.rst", "demo.ipynb", "documentation.rst", "documentation/compatibility.rst", "documentation/discretisedfield.rst", "documentation/index.rst", "documentation/mag2exp.rst", "documentation/micromagneticdata.rst", "documentation/micromagneticmodel.rst", "documentation/micromagnetictests.rst", "documentation/mumax3c.rst", "documentation/notebooks/discretisedfield/field-definition.ipynb", "documentation/notebooks/discretisedfield/field-holoviews-visualisation.ipynb", "documentation/notebooks/discretisedfield/field-k3d-visualisation.ipynb", "documentation/notebooks/discretisedfield/field-matplotlib-visualisation.ipynb", "documentation/notebooks/discretisedfield/field-normalisation.ipynb", "documentation/notebooks/discretisedfield/field-operations.ipynb", "documentation/notebooks/discretisedfield/field-read-write.ipynb", "documentation/notebooks/discretisedfield/field-rotations.ipynb", "documentation/notebooks/discretisedfield/field-spatially-varying.ipynb", "documentation/notebooks/discretisedfield/field-tools.ipynb", "documentation/notebooks/discretisedfield/line.ipynb", "documentation/notebooks/discretisedfield/mesh-basics.ipynb", "documentation/notebooks/discretisedfield/mesh-bc.ipynb", "documentation/notebooks/discretisedfield/mesh-line-plane.ipynb", "documentation/notebooks/discretisedfield/mesh-pad.ipynb", "documentation/notebooks/discretisedfield/mesh-subregions.ipynb", "documentation/notebooks/discretisedfield/mesh-visualisation.ipynb", "documentation/notebooks/discretisedfield/mesh-widgets.ipynb", "documentation/notebooks/discretisedfield/ovf2vtk.ipynb", "documentation/notebooks/discretisedfield/region-basics.ipynb", "documentation/notebooks/discretisedfield/region-facing-surfaces.ipynb", "documentation/notebooks/discretisedfield/region-visualisation.ipynb", "documentation/notebooks/discretisedfield/xarray-usage.ipynb", "documentation/notebooks/mag2exp/DC_magnetometry.ipynb", "documentation/notebooks/mag2exp/Lorentz_TEM.ipynb", "documentation/notebooks/mag2exp/Magnetic_Force_Microscopy.ipynb", "documentation/notebooks/mag2exp/Rotations_Lorentz_Microscopy.ipynb", "documentation/notebooks/mag2exp/SANS.ipynb", "documentation/notebooks/mag2exp/SAXS.ipynb", "documentation/notebooks/mag2exp/Torque_magnetometry.ipynb", "documentation/notebooks/mag2exp/Unit_converter.ipynb", "documentation/notebooks/mag2exp/X_ray_Holography.ipynb", "documentation/notebooks/micromagneticdata/documentation.ipynb", "documentation/notebooks/micromagneticdata/interactive_plotting.ipynb", "documentation/notebooks/micromagneticmodel/constants.ipynb", "documentation/notebooks/micromagneticmodel/deriving-dynamics-term.ipynb", "documentation/notebooks/micromagneticmodel/deriving-energy-term.ipynb", "documentation/notebooks/micromagneticmodel/dynamics-terms.ipynb", "documentation/notebooks/micromagneticmodel/energy-terms.ipynb", "documentation/notebooks/micromagneticmodel/evolver-driver.ipynb", "documentation/notebooks/micromagneticmodel/same-class-terms.ipynb", "documentation/notebooks/micromagneticmodel/system.ipynb", "documentation/notebooks/micromagneticmodel/term-parameters.ipynb", "documentation/notebooks/micromagnetictests/usage.ipynb", "documentation/notebooks/oommfc/controlling-default-runner.ipynb", "documentation/notebooks/oommfc/cubicanisotropy.ipynb", "documentation/notebooks/oommfc/dirname.ipynb", "documentation/notebooks/oommfc/dmi.ipynb", "documentation/notebooks/oommfc/exchange.ipynb", "documentation/notebooks/oommfc/mindriver-steps.ipynb", "documentation/notebooks/oommfc/parallel.ipynb", "documentation/notebooks/oommfc/uniaxialanisotropy.ipynb", "documentation/notebooks/oommfc/verbosity_levels.ipynb", "documentation/notebooks/oommfc/zeeman.ipynb", "documentation/notebooks/ubermag/ubermag-version.ipynb", "documentation/notebooks/ubermagtable/table-basics.ipynb", "documentation/notebooks/ubermagtable/table-fft.ipynb", "documentation/notebooks/ubermagtable/table-interactive-plot.ipynb", "documentation/notebooks/ubermagtable/table-merge.ipynb", "documentation/notebooks/ubermagtable/table-visualisation.ipynb", "documentation/notebooks/ubermagtable/table-widgets.ipynb", "documentation/notebooks/ubermagutil/constant-attributes.ipynb", "documentation/notebooks/ubermagutil/hysteresis.ipynb", "documentation/notebooks/ubermagutil/imposing-typesystem.ipynb", "documentation/notebooks/ubermagutil/inherit-docs.ipynb", "documentation/notebooks/ubermagutil/logging.ipynb", "documentation/notebooks/ubermagutil/otherwise-type.ipynb", "documentation/notebooks/ubermagutil/parameter-descriptor.ipynb", "documentation/notebooks/ubermagutil/si-prefix.ipynb", "documentation/oommfc.rst", "documentation/ubermag.rst", "documentation/ubermagtable.rst", "documentation/ubermagutil.rst", "examples/index.rst", "examples/notebooks/07-tutorial-standard-problem3.ipynb", "examples/notebooks/08-tutorial-standard-problem4.ipynb", "examples/notebooks/09-tutorial-standard-problem5.ipynb", "examples/notebooks/10-tutorial-standard-problem-fmr.ipynb", "examples/notebooks/11-tutorial-deriving-fields.ipynb", "examples/notebooks/12-tutorial-stray-field.ipynb", "examples/notebooks/13-tutorial-skyrmion.ipynb", "examples/notebooks/choosing-runner.ipynb", "examples/notebooks/energy-term-computations.ipynb", "examples/notebooks/field-operations2.ipynb", "examples/notebooks/finite-temperature.ipynb", "examples/notebooks/fixed-subregions.ipynb", "examples/notebooks/hysteresis.ipynb", "examples/notebooks/multiple-terms.ipynb", "examples/notebooks/negative-A.ipynb", "examples/notebooks/periodic-boundary-conditions.ipynb", "examples/notebooks/rkky.ipynb", "examples/notebooks/sine-hysteresis.ipynb", "examples/notebooks/space-time-field.ipynb", "examples/notebooks/spatially-varying-parameters1.ipynb", "examples/notebooks/spatially-varying-parameters2.ipynb", "examples/notebooks/time-dependent-field.ipynb", "examples/notebooks/time-dependent-field-current.ipynb", "faq.rst", "getting-started/index.rst", "getting-started/jupyter-basics.rst", "getting-started/notebooks/driving-dw.ipynb", "getting-started/notebooks/dw-pair-conversion.ipynb", "getting-started/notebooks/dynamics-equation.ipynb", "getting-started/notebooks/energy-equation.ipynb", "getting-started/notebooks/first-ubermag-simulation.ipynb", "getting-started/notebooks/magnetisation-field.ipynb", "getting-started/notebooks/python-basics.ipynb", "help.rst", "index.rst", "installation.rst", "news.rst"], "titles": ["discretisedfield", "DValue", "Field", "FieldRotator", "Line", "Mesh", "Region", "discretisedfield.integral", "discretisedfield.interact", "discretisedfield.io", "discretisedfield.io.field_from_hdf5", "discretisedfield.io.field_from_ovf", "discretisedfield.io.field_from_vtk", "discretisedfield.io.field_to_hdf5", "discretisedfield.io.field_to_ovf", "discretisedfield.io.field_to_vtk", "discretisedfield.io.ovf2vtk", "discretisedfield.io.ovf2vtk.ovf2vtk", "discretisedfield.plotting", "Hv", "K3dField", "K3dMesh", "K3dRegion", "MplField", "MplMesh", "MplRegion", "discretisedfield.plotting.add_colorwheel", "discretisedfield.test", "discretisedfield.tools", "discretisedfield.tools.count_bps", "discretisedfield.tools.count_large_cell_angle_regions", "discretisedfield.tools.demag_field", "discretisedfield.tools.demag_tensor", "discretisedfield.tools.emergent_magnetic_field", "discretisedfield.tools.max_neigbouring_cell_angle", "discretisedfield.tools.neigbouring_cell_angle", "discretisedfield.tools.topological_charge", "discretisedfield.tools.topological_charge_density", "mag2exp", "mag2exp.ltem", "mag2exp.ltem.defocus_image", "mag2exp.ltem.integrated_magnetic_flux_density", "mag2exp.ltem.phase", "mag2exp.ltem.relativistic_wavelength", "mag2exp.magnetometry", "mag2exp.magnetometry.magnetisation", "mag2exp.magnetometry.torque", "mag2exp.mfm", "mag2exp.mfm.phase_shift", "mag2exp.quick_plots", "mag2exp.quick_plots.ltem_defocus", "mag2exp.quick_plots.ltem_ft_phase", "mag2exp.quick_plots.ltem_integrated_mfd", "mag2exp.quick_plots.ltem_phase", "mag2exp.quick_plots.mfm_phase_shift", "mag2exp.quick_plots.sans_chiral_function", "mag2exp.quick_plots.sans_cross_section", "mag2exp.quick_plots.saxs", "mag2exp.quick_plots.x_ray_holography", "mag2exp.sans", "mag2exp.sans.chiral_function", "mag2exp.sans.cross_section", "mag2exp.test", "mag2exp.x_ray", "mag2exp.x_ray.holography", "mag2exp.x_ray.saxs", "micromagneticdata", "AbstractDrive", "CombinedDrive", "Data", "Drive", "Mumax3Drive", "OOMMFDrive", "micromagneticdata.test", "micromagneticmodel", "CubicAnisotropy", "DMI", "Damping", "Demag", "Driver", "Dynamics", "DynamicsTerm", "Energy", "EnergyTerm", "Evolver", "Exchange", "ExternalDriver", "ExternalRunner", "MagnetoElastic", "Precession", "RKKY", "Slonczewski", "System", "UniaxialAnisotropy", "Zeeman", "ZhangLi", "micromagneticmodel.abstract", "Abstract", "Container", "Term", "micromagneticmodel.consts", "micromagneticmodel.consts.e", "micromagneticmodel.consts.g", "micromagneticmodel.consts.gamma", "micromagneticmodel.consts.gamma0", "micromagneticmodel.consts.h", "micromagneticmodel.consts.hbar", "micromagneticmodel.consts.kB", "micromagneticmodel.consts.me", "micromagneticmodel.consts.mu0", "micromagneticmodel.consts.muB", "micromagneticmodel.examples", "micromagneticmodel.examples.macrospin", "micromagneticmodel.test", "micromagnetictests", "micromagnetictests.calculatortests", "TestCompute", "TestCubicAnisotropy", "TestDMI", "TestDamping", "TestDemag", "TestDynamics", "TestEnergy", "TestExchange", "TestFixedSubregions", "TestHysteresisDriver", "TestMesh", "TestMinDriver", "TestPrecession", "TestRKKY", "TestSlonczewski", "TestThreads", "TestTimeDriver", "TestUniaxialAnisotropy", "TestZeeman", "TestZhangLi", "micromagnetictests.calculatortests.test_dirname", "micromagnetictests.calculatortests.test_format", "micromagnetictests.calculatortests.test_info_file", "micromagnetictests.calculatortests.test_multiple_drives", "micromagnetictests.calculatortests.test_outputstep", "micromagnetictests.calculatortests.test_schedule", "micromagnetictests.calculatortests.test_skyrmion", "micromagnetictests.calculatortests.test_stdprob3", "micromagnetictests.calculatortests.test_stdprob4", "micromagnetictests.calculatortests.test_stdprob5", "micromagnetictests.get_tests", "micromagnetictests.test", "oommfc", "CGEvolver", "Driver", "EulerEvolver", "HysteresisDriver", "MinDriver", "RungeKuttaEvolver", "SpinTEvolver", "SpinXferEvolver", "TimeDriver", "UHH_ThetaEvolver", "Xf_ThermHeunEvolver", "Xf_ThermSpinXferEvolver", "oommfc.compute", "oommfc.delete", "oommfc.oommf", "DockerOOMMFRunner", "ExeOOMMFRunner", "OOMMFRunner", "Runner", "TclOOMMFRunner", "oommfc.oommf.overhead", "oommfc.runner", "oommfc.test", "oommfc.test_docker", "ubermag", "ubermag.debug_info", "ubermag.test", "ubermagtable", "Table", "ubermagtable.interact", "ubermagtable.test", "ubermagtable.util", "ubermagtable.util.columns", "ubermagtable.util.data", "ubermagtable.util.units", "ubermagutil", "ubermagutil.changedir", "ubermagutil.hysteresis_values", "ubermagutil.inherit_docs", "ubermagutil.setup_logging", "ubermagutil.test", "ubermagutil.typesystem", "Descriptor", "Dictionary", "Name", "Parameter", "Scalar", "Subset", "Typed", "Vector", "ubermagutil.typesystem.typesystem", "ubermagutil.units", "ubermagutil.units.si_max_multiplier", "ubermagutil.units.si_multiplier", "API Reference", "Changelog", "Contributing", "Demo", "Documentation", "Compatibility: Ubermag - OOMMF - mumax<sup>3</sup>", "discretisedfield", "Package documentation", "mag2exp", "micromagneticdata", "micromagneticmodel", "micromagnetictests", "mumax3c", "Defining a uniform field", "Visualising field using <code class=\"docutils literal notranslate\"><span class=\"pre\">holoviews</span></code>", "Field visualisation using <code class=\"docutils literal notranslate\"><span class=\"pre\">k3d</span></code>", "Visualising field using <code class=\"docutils literal notranslate\"><span class=\"pre\">matplotlib</span></code>", "Field normalisation", "Field operations", "Reading and writing fields", "Field rotation", "Spatially varying fields", "Field tools", "Line object", "Mesh basics", "Mesh boundary conditions", "Mesh plane and line", "Mesh pad", "Mesh subregions", "Mesh visualisation", "Mesh widgets", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ovf2vtk</span></code> tool", "Region basics", "Region facing surfaces", "Region visualisation", "Importing/Exporting field from/to <code class=\"docutils literal notranslate\"><span class=\"pre\">xarray.DataArray</span></code>", "DC magnetometry", "Lorentz Transmission Electron Microscopy", "Magnetic Force Microscopy", "Using Rotations with <code class=\"docutils literal notranslate\"><span class=\"pre\">mag2exp</span></code>", "Small Angle Neutron Scattering", "Small Angle X-ray Scattering", "Torque magnetometry", "Unit Conversions", "X-ray Holography", "Analysing simulation results", "Interactive plots", "Constants", "Deriving a dynamics term", "Deriving an energy term", "Dynamics terms and dynamics equation", "Energy terms and energy equation", "Deriving evolver and driver classes", "Multiple energy terms of the same class", "Defining micromagnetic system", "Term parameters", "Usage", "Controlling the default runner", "Tutorial 05: Cubic anisotropy energy term", "Custom directory name", "Tutorial 04: Dzyaloshinskii-Moriya energy term", "Tutorial 02: Exchange energy term", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinDriver</span></code> steps", "Running simulations in parallel", "Tutorial 03: Uniaxial anisotropy energy term", "Verbosity levels", "Tutorial 01: Zeeman energy term", "&lt;no title&gt;", "Table basics", "Table FFT", "Table interactive plot", "Table merge", "Table visualisation", "Table widgets", "Constant attributes", "Hysteresis values", "Imposing <code class=\"docutils literal notranslate\"><span class=\"pre\">typesystem</span></code> on a class", "<code class=\"docutils literal notranslate\"><span class=\"pre\">inherit_docs</span></code> decorator", "Logging control", "Defining <code class=\"docutils literal notranslate\"><span class=\"pre\">otherwise</span></code> type", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Parameter</span></code> descriptor", "Extracting the SI prefix", "oommfc", "ubermag", "ubermagtable", "ubermagutil", "Examples", "Standard problem 3", "Standard problem 4", "Standard problem 5", "FMR standard problem", "Deriving energy values", "Calculating a stray field using an airbox method", "Skyrmion in a disk", "Choosing runner", "Energy term computations", "Field operations 2", "Simulation at finite temperature", "Fixed subregions", "Hysteresis simulations", "Multiple energy terms of the same class", "Negative exchange energy constant", "Periodic boundary conditions", "RKKY energy term", "Sine-hysteresis", "Both spatially and time varying field", "Spatially varying parameters 1", "Spatially varying parameters 2", "Time-varying field", "Time-dependent fields and currents", "FAQ", "Getting started", "Jupyter lab", "Exercise: Current induced domain wall motion", "Exercise: Domain wall pair conversion", "Dynamics equation", "Energy equation", "Our first ubermag simulation", "Magnetisation field", "Python basics", "Help", "Ubermag", "Installation", "News"], "terms": {"finit": [0, 2, 5, 158, 160, 204, 216, 223, 227, 235, 289, 293, 320, 321, 324], "differ": [0, 2, 3, 5, 6, 19, 23, 24, 25, 32, 37, 67, 68, 69, 94, 98, 167, 169, 170, 204, 206, 207, 210, 216, 217, 218, 219, 221, 222, 223, 224, 225, 227, 231, 232, 234, 235, 237, 241, 244, 246, 247, 249, 253, 254, 256, 257, 258, 261, 264, 267, 268, 269, 271, 281, 283, 293, 297, 302, 303, 304, 306, 309, 310, 312, 318, 319, 320, 321, 322, 324, 325], "field": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 23, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 64, 65, 67, 68, 70, 75, 76, 77, 85, 88, 89, 91, 92, 93, 94, 95, 112, 161, 177, 178, 204, 209, 226, 229, 230, 231, 235, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 254, 257, 262, 263, 265, 266, 272, 289, 290, 292, 293, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 314, 316, 317, 318, 319, 320, 324, 326], "class": [0, 1, 2, 3, 4, 5, 6, 18, 19, 20, 21, 22, 23, 24, 25, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 176, 177, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 204, 207, 213, 216, 222, 224, 225, 238, 242, 251, 252, 254, 263, 271, 277, 280, 282, 283, 288, 289, 312, 318, 319, 321, 322, 325, 326], "function": [0, 1, 2, 3, 4, 6, 7, 8, 9, 12, 16, 17, 18, 19, 23, 28, 29, 34, 36, 38, 39, 40, 44, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 66, 67, 74, 86, 94, 111, 114, 115, 146, 148, 162, 163, 167, 173, 176, 177, 178, 180, 184, 188, 190, 192, 193, 194, 195, 196, 197, 198, 200, 204, 206, 207, 217, 218, 220, 223, 225, 227, 231, 232, 235, 237, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 254, 258, 261, 267, 269, 271, 272, 273, 275, 278, 281, 286, 290, 291, 292, 294, 296, 298, 299, 300, 302, 305, 306, 307, 309, 311, 321, 324], "submodul": [0, 9, 38, 39, 44, 47, 59, 63, 74, 114, 148, 176, 184, 204], "discretisedfield": [1, 2, 3, 4, 5, 6, 19, 20, 21, 22, 23, 24, 25, 40, 41, 42, 45, 46, 48, 60, 61, 64, 65, 67, 70, 75, 76, 77, 85, 88, 89, 91, 92, 93, 94, 95, 161, 204, 206, 210, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 257, 262, 263, 265, 266, 270, 272, 281, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326], "infinitesimali": 1, "small": [1, 4, 5, 6, 20, 21, 23, 24, 25, 55, 56, 57, 59, 65, 94, 177, 211, 219, 223, 227, 232, 237, 260, 297, 312, 324, 325], "valu": [1, 2, 3, 4, 5, 6, 8, 13, 14, 15, 19, 20, 21, 23, 24, 25, 30, 33, 34, 35, 36, 37, 40, 41, 42, 45, 46, 48, 60, 61, 64, 65, 67, 68, 69, 70, 71, 72, 75, 76, 77, 85, 88, 89, 90, 91, 92, 93, 94, 95, 97, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 177, 183, 186, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 204, 206, 216, 217, 218, 220, 221, 222, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 255, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 277, 279, 281, 282, 283, 284, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 318, 319, 320, 325], "differenti": [1, 94, 158, 243, 244, 247, 312], "thi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 17, 19, 20, 21, 22, 23, 24, 25, 30, 34, 35, 36, 37, 41, 48, 50, 52, 60, 67, 68, 69, 70, 71, 72, 76, 86, 87, 90, 92, 94, 99, 150, 162, 164, 167, 177, 178, 183, 188, 192, 193, 194, 195, 196, 197, 198, 204, 206, 207, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 229, 230, 231, 232, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 268, 271, 272, 273, 275, 276, 278, 279, 280, 281, 283, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 309, 310, 311, 313, 314, 315, 316, 318, 319, 320, 321, 322, 324, 325], "i": [1, 2, 3, 4, 5, 6, 8, 9, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 64, 65, 67, 68, 69, 70, 71, 72, 75, 76, 77, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 97, 98, 99, 112, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 170, 177, 178, 186, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 204, 205, 206, 207, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 286, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 325], "us": [1, 2, 3, 4, 5, 6, 9, 12, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 30, 36, 37, 40, 41, 42, 43, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 64, 65, 67, 69, 70, 71, 72, 75, 76, 77, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 150, 161, 164, 165, 167, 168, 170, 177, 184, 188, 201, 204, 205, 206, 207, 209, 211, 215, 216, 220, 221, 222, 223, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 257, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 281, 283, 284, 286, 289, 290, 291, 292, 293, 294, 297, 298, 299, 300, 302, 304, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326], "defin": [1, 2, 3, 4, 5, 6, 10, 12, 13, 14, 15, 19, 23, 24, 33, 36, 37, 42, 60, 61, 64, 65, 70, 75, 76, 77, 78, 80, 82, 85, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 177, 191, 192, 194, 195, 196, 198, 204, 206, 209, 213, 217, 219, 220, 221, 223, 224, 225, 227, 228, 229, 230, 231, 235, 237, 238, 239, 240, 241, 243, 244, 245, 247, 249, 254, 255, 261, 263, 264, 265, 266, 267, 268, 269, 272, 273, 275, 279, 283, 288, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 318, 319, 320, 321, 322, 324], "comput": [1, 2, 4, 5, 6, 20, 23, 29, 32, 33, 34, 35, 36, 37, 69, 70, 71, 72, 74, 86, 94, 114, 150, 177, 201, 202, 204, 206, 219, 223, 225, 230, 239, 261, 263, 264, 267, 269, 272, 289, 290, 291, 293, 295, 296, 299, 305, 312, 315, 319, 320, 322, 323, 324, 325], "integr": [1, 2, 29, 36, 41, 42, 52, 64, 65, 204, 206, 223, 225, 238, 241, 247, 293, 294, 298, 299, 305, 324], "For": [1, 2, 3, 4, 5, 6, 7, 8, 19, 20, 21, 22, 23, 24, 25, 36, 67, 69, 75, 76, 77, 85, 86, 87, 88, 89, 91, 93, 94, 98, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 170, 177, 178, 204, 216, 217, 218, 219, 221, 223, 224, 225, 227, 228, 229, 231, 232, 233, 235, 236, 237, 241, 243, 244, 246, 247, 249, 251, 252, 253, 254, 258, 259, 265, 273, 275, 279, 282, 289, 291, 294, 296, 297, 298, 300, 302, 303, 304, 307, 308, 311, 312, 315, 319, 320, 321, 322, 323, 324, 325], "instanc": [1, 2, 4, 5, 6, 20, 21, 23, 24, 25, 99, 177, 191, 192, 193, 194, 195, 196, 197, 198, 204, 216, 218, 221, 224, 227, 228, 229, 231, 232, 233, 235, 236, 237, 251, 252, 253, 254, 258, 259, 265, 273, 275, 279, 282, 291, 294, 298, 302, 304, 321, 322, 323], "dv": [1, 2, 5, 46, 221, 245, 299], "dx": [1, 2, 5, 177, 206, 221, 223, 292, 293, 305], "surfac": [1, 2, 5, 6, 90, 209, 241, 306], "vector": [1, 2, 3, 4, 5, 12, 14, 15, 19, 20, 23, 29, 30, 33, 34, 35, 36, 37, 42, 52, 61, 67, 75, 76, 88, 91, 93, 94, 95, 204, 218, 220, 222, 224, 225, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 253, 254, 257, 258, 261, 263, 264, 267, 269, 279, 282, 291, 293, 295, 296, 297, 305, 309, 310, 316, 318, 319, 320, 321, 324, 326], "d": [1, 2, 5, 46, 60, 61, 76, 77, 78, 89, 91, 95, 192, 206, 217, 221, 228, 239, 240, 241, 242, 243, 244, 245, 246, 247, 254, 279, 291, 292, 293, 294, 296, 297, 298, 299, 302, 305, 310, 312, 316, 317, 318, 319, 320, 321, 322], "etc": [1, 5, 6, 23, 24, 25, 231, 232, 237, 275, 284, 324], "paramet": [1, 2, 3, 4, 5, 6, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 45, 46, 48, 60, 61, 64, 65, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 80, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 150, 161, 162, 164, 165, 167, 168, 177, 181, 182, 183, 186, 188, 191, 192, 193, 195, 196, 197, 198, 201, 202, 206, 213, 216, 217, 219, 225, 231, 232, 233, 237, 241, 251, 252, 253, 254, 255, 257, 261, 263, 264, 267, 269, 275, 276, 282, 288, 289, 290, 291, 292, 293, 299, 304, 306, 312, 313, 316, 317, 318, 320, 321, 322], "python": [1, 2, 5, 94, 191, 193, 204, 219, 221, 227, 231, 251, 252, 258, 261, 267, 269, 270, 279, 281, 283, 295, 306, 309, 314, 315, 320, 321, 323, 324, 325, 326], "A": [1, 2, 4, 5, 6, 12, 19, 23, 24, 25, 34, 35, 80, 81, 82, 83, 85, 91, 92, 95, 97, 98, 99, 109, 161, 170, 177, 187, 199, 204, 205, 206, 216, 217, 219, 221, 223, 227, 233, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 254, 257, 258, 260, 261, 263, 265, 266, 267, 269, 272, 276, 280, 282, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 309, 310, 311, 312, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325], "which": [1, 2, 4, 5, 6, 19, 20, 21, 22, 23, 24, 25, 29, 35, 36, 37, 48, 67, 68, 69, 70, 71, 72, 75, 86, 88, 90, 93, 94, 97, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 165, 177, 191, 192, 193, 201, 202, 204, 210, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 254, 255, 257, 260, 261, 263, 264, 266, 267, 269, 271, 272, 273, 275, 276, 278, 281, 283, 289, 290, 291, 292, 293, 295, 296, 297, 299, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 318, 319, 320, 321, 322, 324, 325], "take": [1, 2, 19, 23, 61, 86, 150, 177, 204, 217, 221, 222, 223, 224, 227, 229, 230, 238, 240, 241, 243, 247, 254, 260, 261, 263, 264, 267, 269, 271, 272, 290, 294, 297, 298, 302, 309, 312, 319, 321], "object": [1, 2, 3, 4, 5, 6, 7, 9, 19, 20, 21, 22, 23, 24, 25, 67, 68, 69, 70, 71, 72, 86, 97, 98, 99, 146, 150, 162, 166, 167, 177, 204, 206, 209, 216, 217, 220, 221, 222, 223, 225, 227, 229, 231, 232, 233, 235, 237, 238, 240, 241, 242, 243, 244, 247, 248, 249, 251, 252, 255, 256, 257, 260, 261, 263, 264, 265, 266, 267, 269, 272, 273, 275, 276, 290, 291, 292, 293, 294, 296, 297, 298, 300, 302, 305, 308, 309, 310, 311, 312, 318, 319, 321, 324], "an": [1, 2, 5, 6, 10, 11, 13, 14, 15, 19, 20, 23, 26, 34, 37, 40, 43, 48, 67, 68, 70, 75, 76, 77, 79, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 98, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 167, 177, 181, 182, 183, 191, 192, 199, 204, 205, 206, 208, 210, 213, 217, 218, 219, 221, 222, 223, 224, 225, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 251, 253, 254, 255, 258, 260, 263, 264, 265, 269, 271, 272, 273, 274, 275, 276, 277, 281, 282, 283, 289, 290, 291, 293, 297, 298, 299, 301, 302, 303, 305, 307, 308, 309, 312, 316, 317, 318, 319, 321, 323, 324, 325], "input": [1, 2, 12, 86, 150, 177, 204, 218, 219, 221, 229, 234, 249, 251, 252, 254, 255, 258, 260, 261, 263, 264, 267, 269, 271, 279, 300, 302, 303, 309, 312, 321, 322], "extract": [1, 2, 5, 11, 12, 181, 182, 183, 217, 218, 219, 229, 231, 241, 288, 325], "requir": [1, 2, 3, 19, 23, 69, 86, 91, 94, 95, 150, 164, 204, 205, 217, 219, 220, 221, 222, 223, 225, 238, 245, 246, 253, 254, 255, 258, 260, 273, 281, 282, 291, 292, 293, 297, 312, 324, 325], "exampl": [1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 40, 41, 42, 43, 45, 46, 48, 60, 61, 62, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 80, 82, 85, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 113, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 169, 170, 171, 172, 175, 177, 178, 179, 181, 182, 183, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 204, 205, 206, 207, 215, 217, 218, 219, 223, 227, 228, 229, 231, 233, 235, 236, 238, 240, 241, 242, 243, 247, 248, 255, 258, 260, 262, 264, 265, 267, 268, 272, 273, 274, 275, 276, 279, 281, 283, 295, 297, 299, 300, 301, 309, 312, 315, 319, 322, 323, 324], "import": [1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 33, 34, 35, 36, 37, 40, 41, 42, 43, 45, 46, 48, 60, 61, 62, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 80, 82, 85, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 112, 113, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 169, 171, 172, 175, 177, 178, 179, 181, 182, 183, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 204, 206, 209, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 315, 316, 317, 318, 319, 320, 321, 323, 325], "df": [1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 27, 30, 33, 34, 35, 36, 37, 40, 41, 42, 45, 46, 48, 60, 61, 64, 65, 75, 76, 77, 85, 88, 89, 91, 92, 93, 94, 95, 204, 206, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 251, 252, 257, 258, 261, 262, 263, 264, 265, 266, 267, 269, 272, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 318, 319, 320, 321], "lambda": [1, 2, 13, 14, 15, 30, 40, 43, 91, 204, 219, 240, 243, 244, 246, 249, 306, 312], "f": [1, 2, 33, 36, 37, 40, 94, 97, 218, 219, 222, 224, 225, 238, 240, 242, 246, 254, 260, 272, 284, 290, 293, 294, 298, 299, 303, 307, 308, 311, 312, 322], "mesh": [1, 2, 3, 4, 8, 13, 14, 15, 19, 20, 21, 23, 24, 30, 32, 33, 34, 35, 36, 37, 40, 41, 42, 45, 46, 48, 60, 61, 64, 65, 75, 76, 77, 85, 88, 89, 91, 92, 93, 94, 95, 150, 204, 206, 209, 216, 217, 218, 219, 220, 222, 225, 226, 235, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 254, 257, 258, 261, 262, 263, 264, 265, 266, 267, 269, 272, 275, 283, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 318, 319, 320], "p1": [1, 2, 3, 4, 5, 6, 8, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 30, 33, 34, 35, 36, 37, 40, 41, 42, 45, 46, 48, 60, 61, 64, 65, 75, 76, 77, 85, 88, 89, 91, 92, 93, 94, 95, 206, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 257, 258, 261, 262, 263, 264, 265, 266, 267, 269, 272, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 318, 319, 320, 321], "50": [1, 2, 5, 6, 20, 21, 23, 24, 30, 204, 216, 219, 220, 221, 223, 224, 227, 231, 235, 242, 254, 268, 281, 292, 295, 296, 300, 316, 320, 321, 322], "25": [1, 2, 5, 6, 67, 217, 219, 221, 224, 226, 227, 246, 248, 249, 253, 254, 270, 271, 272, 274, 290, 291, 294, 295, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 318, 319, 320, 321, 322], "0": [1, 2, 3, 4, 5, 6, 8, 11, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 30, 33, 34, 35, 36, 37, 40, 41, 42, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 60, 61, 64, 65, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 80, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 97, 98, 99, 112, 151, 152, 153, 161, 166, 177, 186, 191, 195, 198, 202, 206, 208, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 278, 279, 281, 282, 284, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 318, 319, 320, 321, 322], "p2": [1, 2, 3, 4, 5, 6, 8, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 30, 33, 34, 35, 36, 37, 40, 41, 42, 45, 46, 48, 60, 61, 64, 65, 75, 76, 77, 85, 88, 89, 91, 92, 93, 94, 95, 206, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 257, 258, 261, 262, 263, 264, 265, 266, 267, 269, 272, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 318, 319, 320, 321], "5": [1, 2, 5, 6, 13, 14, 15, 20, 23, 24, 42, 67, 70, 75, 76, 77, 85, 88, 89, 91, 92, 93, 94, 95, 157, 162, 191, 195, 199, 204, 206, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 255, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 278, 279, 281, 282, 283, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 318, 319, 320, 321, 324], "cell": [1, 2, 3, 5, 12, 14, 15, 19, 20, 21, 23, 24, 29, 30, 33, 34, 35, 36, 37, 40, 41, 42, 45, 46, 48, 60, 61, 64, 65, 67, 112, 204, 206, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 258, 261, 262, 263, 264, 265, 266, 267, 269, 272, 283, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 307, 308, 309, 310, 311, 312, 316, 317, 318, 319, 320, 321, 323], "region": [1, 2, 3, 5, 8, 20, 21, 22, 23, 24, 25, 30, 45, 48, 75, 76, 77, 85, 88, 89, 90, 91, 92, 93, 94, 95, 204, 206, 209, 217, 220, 225, 227, 228, 229, 230, 231, 232, 233, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 261, 262, 263, 264, 265, 266, 267, 269, 272, 275, 283, 291, 292, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 318, 319, 320], "dim": [1, 2, 3, 4, 8, 13, 14, 15, 19, 20, 23, 30, 33, 34, 35, 36, 37, 40, 41, 42, 45, 46, 48, 60, 61, 64, 65, 75, 76, 77, 85, 88, 89, 91, 92, 93, 94, 95, 206, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 257, 258, 261, 262, 263, 264, 265, 266, 267, 269, 272, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 318, 319, 320, 321], "1": [1, 2, 3, 4, 5, 6, 8, 13, 14, 15, 19, 20, 21, 23, 24, 25, 26, 30, 33, 34, 35, 36, 37, 40, 41, 42, 43, 45, 46, 48, 50, 51, 52, 53, 55, 56, 60, 61, 64, 65, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 80, 85, 86, 87, 88, 89, 91, 92, 93, 95, 97, 98, 99, 101, 106, 107, 109, 110, 112, 152, 153, 157, 161, 166, 169, 177, 186, 191, 192, 193, 194, 198, 199, 201, 202, 206, 208, 216, 217, 218, 219, 220, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 255, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 316, 317, 319, 321, 324], "3": [1, 2, 3, 4, 5, 6, 8, 13, 14, 15, 19, 20, 21, 23, 24, 25, 30, 33, 34, 35, 36, 37, 40, 41, 42, 45, 46, 48, 54, 60, 61, 64, 65, 67, 75, 76, 88, 91, 92, 93, 94, 98, 149, 151, 154, 155, 156, 158, 159, 160, 177, 191, 192, 194, 195, 197, 198, 202, 206, 208, 210, 216, 217, 218, 219, 220, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 315, 316, 317, 319, 321, 324, 325], "14": [1, 2, 191, 195, 197, 198, 204, 206, 216, 217, 218, 219, 221, 223, 224, 225, 226, 227, 231, 232, 235, 237, 239, 240, 241, 243, 245, 246, 247, 248, 249, 253, 254, 261, 262, 263, 264, 265, 267, 269, 271, 272, 274, 279, 291, 298, 299, 302, 305, 307, 309, 312, 318, 319, 320, 321, 322], "125": [1, 291, 322], "method": [1, 2, 3, 4, 5, 6, 7, 10, 12, 17, 19, 20, 21, 22, 23, 24, 25, 30, 35, 36, 37, 48, 56, 61, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 165, 166, 167, 168, 177, 183, 191, 192, 193, 194, 195, 196, 197, 198, 204, 206, 217, 218, 219, 221, 222, 224, 225, 229, 230, 232, 235, 237, 240, 241, 242, 243, 245, 246, 247, 249, 251, 252, 255, 260, 262, 265, 266, 271, 273, 275, 276, 280, 284, 289, 291, 293, 297, 301, 302, 305, 312, 322, 325], "__abs__": [1, 2], "absolut": [1, 2, 10, 11, 12, 19, 23, 36, 177, 204, 217, 225], "norm": [1, 2, 19, 20, 23, 45, 46, 48, 60, 61, 64, 65, 67, 92, 204, 206, 217, 218, 219, 220, 221, 222, 223, 226, 239, 240, 241, 242, 243, 244, 245, 247, 249, 257, 261, 262, 263, 264, 265, 266, 267, 269, 272, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 318, 319, 320, 321], "oper": [1, 2, 5, 6, 98, 99, 204, 206, 207, 209, 216, 218, 223, 227, 231, 235, 236, 246, 248, 249, 253, 254, 265, 274, 289, 295, 316, 319, 321, 324, 325], "return": [1, 2, 3, 4, 5, 6, 10, 11, 12, 19, 20, 23, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 45, 46, 48, 60, 61, 64, 65, 67, 68, 69, 70, 71, 72, 87, 91, 92, 94, 95, 97, 98, 99, 112, 146, 161, 164, 165, 166, 167, 168, 169, 170, 177, 181, 182, 183, 186, 187, 201, 202, 204, 206, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 229, 230, 231, 233, 235, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 255, 259, 261, 263, 264, 267, 269, 271, 272, 276, 279, 280, 290, 292, 295, 296, 297, 299, 302, 303, 304, 305, 308, 309, 310, 312, 316, 317, 319, 321, 322], "result": [1, 2, 5, 6, 19, 29, 34, 35, 64, 67, 68, 70, 86, 98, 99, 161, 167, 177, 186, 204, 206, 212, 216, 221, 223, 227, 229, 235, 236, 246, 247, 255, 262, 272, 274, 291, 301, 303, 312, 313, 317, 322, 324], "type": [1, 2, 3, 4, 5, 6, 10, 11, 12, 19, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 45, 46, 48, 60, 61, 64, 65, 67, 68, 69, 70, 71, 72, 87, 92, 94, 97, 98, 99, 112, 146, 158, 161, 164, 165, 166, 168, 169, 177, 181, 182, 183, 186, 191, 192, 193, 194, 195, 196, 198, 199, 201, 202, 204, 217, 221, 225, 234, 240, 248, 253, 254, 277, 279, 288, 303, 312, 325], "9": [1, 2, 4, 5, 6, 8, 13, 14, 15, 20, 21, 22, 23, 24, 25, 40, 41, 45, 46, 48, 60, 61, 64, 65, 75, 76, 77, 85, 88, 89, 91, 92, 93, 94, 95, 108, 112, 177, 201, 202, 206, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 274, 275, 280, 283, 284, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 316, 317, 318, 319, 320, 321, 322, 324], "2": [1, 2, 3, 4, 5, 6, 8, 13, 14, 15, 19, 20, 21, 23, 24, 25, 33, 36, 37, 40, 42, 43, 46, 48, 60, 61, 64, 65, 67, 70, 71, 72, 75, 77, 78, 80, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 102, 109, 177, 187, 194, 198, 206, 208, 216, 217, 218, 219, 220, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 316, 317, 319, 321, 324], "ab": [1, 2, 177, 221, 246, 249, 272, 293, 299], "plane": [1, 2, 5, 8, 19, 20, 23, 36, 37, 40, 42, 48, 50, 60, 61, 204, 206, 209, 217, 218, 219, 222, 223, 225, 239, 240, 241, 242, 243, 244, 245, 247, 249, 262, 263, 265, 266, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 309, 310, 312, 316, 317, 319, 320, 321], "z": [1, 2, 3, 4, 5, 6, 19, 20, 23, 29, 30, 35, 36, 37, 40, 41, 42, 45, 48, 60, 61, 64, 65, 67, 76, 164, 204, 206, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 254, 261, 263, 264, 265, 267, 269, 272, 284, 290, 291, 292, 293, 295, 296, 297, 299, 300, 302, 303, 305, 307, 308, 309, 310, 312, 316, 317, 318, 319, 320, 321, 322], "averag": [1, 2, 5, 206, 249, 264, 271, 273, 275, 291, 293, 294, 298, 300, 312, 320, 321, 322], "__call__": [1, 2, 19, 21, 22, 23, 24, 25, 67], "call": [1, 2, 3, 5, 6, 7, 19, 36, 37, 75, 76, 77, 85, 87, 88, 89, 90, 91, 93, 94, 95, 98, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 166, 167, 191, 192, 193, 194, 195, 196, 197, 198, 199, 204, 216, 217, 218, 219, 221, 222, 224, 232, 235, 237, 240, 248, 249, 255, 260, 268, 273, 275, 281, 290, 301, 303, 315, 322, 325], "self": [1, 2, 3, 5, 6, 98, 164, 165, 166, 167, 168, 177, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 217, 218, 219, 221, 251, 252, 255, 260, 277, 279, 280, 281, 282, 283, 296, 303, 305, 324], "inifinitesimali": 1, "number": [1, 2, 3, 4, 5, 6, 19, 20, 21, 22, 23, 24, 25, 29, 30, 35, 37, 40, 42, 43, 48, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 80, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 150, 161, 177, 186, 195, 198, 201, 202, 204, 206, 216, 217, 219, 221, 223, 224, 225, 226, 227, 229, 230, 231, 232, 234, 246, 248, 255, 265, 266, 268, 272, 279, 291, 299, 302, 305, 312, 321, 324], "real": [1, 2, 4, 5, 6, 20, 21, 22, 23, 24, 25, 30, 40, 42, 43, 48, 61, 64, 65, 75, 76, 77, 78, 85, 88, 89, 90, 91, 92, 93, 94, 95, 161, 177, 186, 195, 198, 201, 202, 221, 240, 243, 244, 246, 272], "__matmul__": [1, 2], "other": [1, 2, 4, 5, 6, 15, 19, 23, 26, 33, 67, 68, 70, 86, 98, 99, 150, 177, 192, 193, 194, 195, 198, 204, 216, 219, 226, 227, 228, 229, 230, 231, 235, 240, 246, 248, 254, 258, 259, 263, 264, 265, 272, 283, 290, 291, 300, 302, 303, 308, 315, 319, 322, 324], "binari": [1, 2, 6, 86, 98, 99, 150, 161, 204, 221, 222, 248, 274], "dot": [1, 2], "product": [1, 2, 3, 223, 245, 260, 297], "It": [1, 2, 4, 5, 6, 12, 19, 20, 21, 23, 24, 25, 36, 37, 67, 69, 71, 72, 86, 97, 98, 99, 150, 177, 188, 191, 192, 193, 194, 195, 198, 204, 210, 216, 217, 218, 219, 221, 222, 223, 224, 225, 227, 229, 230, 231, 232, 237, 238, 240, 241, 242, 243, 244, 247, 248, 249, 250, 255, 257, 271, 278, 279, 286, 290, 301, 312, 318], "can": [1, 2, 3, 4, 5, 6, 12, 15, 19, 20, 21, 22, 23, 24, 25, 29, 30, 35, 36, 37, 42, 46, 60, 61, 65, 67, 68, 69, 70, 86, 91, 92, 94, 95, 97, 98, 99, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 167, 170, 177, 192, 197, 204, 205, 206, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325], "appli": [1, 2, 3, 6, 19, 23, 46, 67, 70, 98, 99, 177, 204, 206, 223, 239, 242, 243, 245, 249, 269, 272, 291, 292, 293, 302, 307, 309, 312, 317, 318, 319, 320], "between": [1, 2, 4, 5, 6, 19, 30, 34, 35, 48, 90, 98, 99, 169, 204, 208, 217, 219, 221, 226, 229, 233, 241, 246, 258, 263, 264, 265, 290, 291, 292, 301, 302, 304, 306, 312, 317, 321, 322], "two": [1, 2, 3, 4, 5, 6, 19, 36, 37, 67, 68, 70, 90, 94, 98, 99, 177, 204, 206, 216, 217, 219, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 235, 236, 237, 240, 246, 249, 253, 254, 258, 261, 263, 264, 267, 269, 274, 279, 281, 290, 291, 292, 294, 298, 303, 306, 309, 310, 312, 313, 316, 317, 318, 321, 322, 325], "array_lik": [1, 2, 4, 5, 6, 19, 21, 24, 25, 48, 64, 75, 88, 91, 93, 94, 322], "length": [1, 2, 4, 5, 6, 19, 21, 24, 25, 40, 75, 88, 90, 93, 94, 177, 198, 204, 206, 216, 217, 221, 223, 224, 226, 227, 229, 230, 231, 232, 235, 236, 237, 241, 243, 244, 274, 279, 282, 290, 291, 292, 294, 295, 296, 298, 305, 312, 316, 319, 320, 321], "second": [1, 2, 3, 5, 6, 21, 24, 69, 91, 94, 95, 98, 99, 146, 177, 204, 217, 219, 221, 223, 225, 227, 230, 231, 232, 236, 237, 241, 248, 249, 258, 272, 274, 292, 296, 312, 318, 323], "operand": [1, 2, 5, 6, 98, 99, 177, 221, 274, 322], "rais": [1, 2, 4, 5, 6, 19, 20, 23, 33, 35, 36, 37, 67, 68, 69, 70, 71, 72, 86, 87, 97, 98, 162, 167, 177, 186, 191, 192, 193, 194, 195, 196, 197, 198, 218, 219, 221, 227, 229, 231, 236, 238, 251, 252, 255, 256, 260, 277, 279, 282, 283, 303, 322, 323], "typeerror": [1, 2, 6, 68, 76, 85, 90, 91, 95, 98, 191, 192, 193, 194, 195, 197, 198, 199, 204, 236, 238, 251, 252, 279, 282, 283, 322], "If": [1, 2, 3, 4, 5, 6, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 30, 33, 35, 36, 37, 64, 67, 68, 69, 70, 71, 72, 75, 76, 77, 85, 86, 87, 88, 89, 91, 93, 94, 97, 98, 150, 161, 162, 164, 166, 167, 177, 181, 183, 186, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 205, 210, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 231, 232, 236, 237, 238, 245, 246, 249, 251, 252, 253, 254, 255, 258, 260, 262, 265, 271, 272, 274, 275, 277, 279, 283, 289, 291, 298, 312, 314, 322, 323, 324, 325], "cannot": [1, 2, 6, 19, 20, 23, 69, 70, 71, 72, 98, 150, 186, 191, 201, 202, 204, 218, 219, 221, 227, 260, 270, 293, 312, 325], "ds2": 1, "__mul__": [1, 2, 6, 221], "ani": [1, 2, 4, 5, 6, 19, 20, 21, 22, 23, 24, 25, 67, 69, 70, 86, 150, 177, 196, 204, 205, 216, 217, 218, 219, 224, 225, 227, 231, 232, 233, 234, 235, 236, 237, 242, 243, 245, 247, 254, 255, 260, 268, 273, 275, 276, 277, 286, 297, 302, 303, 312, 315, 319, 322, 323, 324, 325], "dimens": [1, 2, 4, 5, 19, 20, 23, 42, 67, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 229, 238, 239, 247, 248, 290, 291, 292, 293, 295, 321, 322, 326], "multipl": [1, 2, 3, 4, 5, 6, 20, 21, 23, 24, 25, 67, 68, 70, 91, 94, 95, 150, 177, 204, 213, 221, 231, 232, 237, 248, 260, 265, 273, 274, 275, 289, 293, 319, 324], "dy": [1, 2, 5, 206, 221, 292, 293, 305], "dz": [1, 2, 5, 41, 65, 221, 292, 293], "dxdydz": 1, "true": [1, 2, 5, 6, 13, 14, 15, 19, 20, 23, 24, 36, 40, 46, 70, 71, 72, 86, 87, 98, 99, 150, 161, 162, 164, 167, 169, 170, 177, 181, 183, 191, 192, 193, 194, 195, 196, 197, 198, 199, 204, 216, 217, 218, 219, 221, 222, 225, 227, 229, 231, 235, 240, 242, 251, 252, 254, 260, 262, 265, 277, 279, 281, 283, 290, 299, 300, 322], "int": [1, 2, 5, 6, 19, 20, 22, 25, 30, 65, 67, 69, 70, 71, 72, 86, 87, 98, 150, 161, 166, 188, 191, 195, 198, 217, 221, 231, 237, 245, 266, 279, 305, 322], "none": [2, 3, 4, 5, 6, 19, 20, 21, 22, 23, 24, 25, 30, 40, 48, 50, 54, 58, 64, 67, 70, 71, 72, 80, 82, 86, 87, 92, 98, 99, 150, 161, 177, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 217, 218, 219, 223, 225, 238, 240, 248, 322], "compon": [2, 4, 6, 12, 15, 19, 23, 32, 46, 55, 67, 198, 204, 217, 218, 219, 223, 224, 225, 238, 240, 241, 244, 247, 248, 249, 257, 265, 272, 273, 275, 291, 293, 296, 305, 307, 308, 310, 316, 318, 321], "dtype": [2, 4, 238, 248, 274, 302, 322], "unit": [2, 4, 5, 6, 19, 20, 21, 23, 24, 25, 30, 33, 34, 35, 42, 48, 61, 65, 177, 204, 211, 217, 220, 221, 223, 224, 225, 227, 228, 229, 231, 232, 233, 235, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 265, 271, 272, 275, 276, 284, 290, 302, 324], "specifi": [2, 3, 4, 5, 6, 12, 19, 20, 21, 22, 23, 24, 25, 30, 34, 35, 40, 64, 86, 91, 94, 95, 150, 161, 177, 192, 194, 195, 198, 204, 216, 217, 219, 221, 223, 224, 225, 229, 231, 234, 240, 241, 247, 248, 254, 266, 271, 280, 281, 291, 292, 293, 300, 301, 302, 307, 308, 312, 320, 321, 322, 323, 324], "its": [2, 5, 6, 23, 34, 46, 48, 65, 98, 177, 191, 192, 193, 194, 195, 196, 197, 198, 204, 205, 206, 216, 217, 218, 219, 221, 223, 224, 227, 231, 234, 235, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 253, 254, 258, 260, 261, 264, 267, 269, 271, 280, 281, 282, 283, 291, 293, 294, 295, 298, 304, 306, 309, 314, 315, 319, 320, 321, 322, 323, 324, 325], "analysi": [2, 67, 68, 70, 71, 72, 177, 324], "visualis": [2, 4, 5, 6, 15, 20, 21, 22, 23, 24, 25, 40, 41, 42, 48, 60, 61, 64, 65, 67, 177, 206, 209, 222, 223, 225, 247, 248, 271, 287, 291, 312, 316, 321, 324], "The": [2, 3, 4, 5, 6, 12, 15, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 32, 34, 35, 40, 42, 43, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 64, 65, 67, 68, 70, 86, 91, 94, 95, 98, 112, 146, 150, 161, 167, 169, 170, 177, 186, 192, 194, 204, 206, 207, 208, 210, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 246, 248, 249, 251, 252, 253, 254, 255, 258, 259, 261, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 276, 281, 283, 284, 286, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 309, 310, 311, 312, 314, 316, 318, 319, 321, 322, 324, 325], "pass": [2, 3, 4, 5, 6, 14, 19, 20, 21, 22, 23, 24, 25, 36, 67, 68, 69, 70, 75, 76, 77, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 170, 177, 188, 191, 192, 193, 194, 195, 198, 204, 216, 217, 218, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 245, 248, 249, 251, 252, 253, 254, 255, 259, 260, 262, 265, 266, 267, 268, 271, 273, 275, 276, 277, 279, 281, 282, 283, 297, 301, 302, 306, 308, 311, 312, 313, 321, 322], "anoth": [2, 6, 216, 220, 227, 229, 242, 249, 253, 254, 263, 264, 273, 291, 310], "must": [2, 3, 4, 5, 6, 12, 19, 20, 23, 25, 36, 37, 40, 86, 91, 94, 95, 166, 188, 191, 195, 198, 204, 217, 219, 221, 223, 224, 225, 229, 231, 232, 237, 238, 241, 251, 252, 254, 255, 256, 257, 261, 263, 264, 267, 269, 279, 300, 303, 309, 312, 321, 322], "": [2, 5, 6, 19, 23, 48, 69, 70, 71, 72, 78, 86, 91, 92, 94, 150, 177, 204, 206, 219, 221, 232, 234, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 254, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 279, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 318, 319, 320, 322], "scalar": [2, 4, 6, 14, 15, 19, 20, 23, 34, 35, 36, 37, 40, 42, 48, 50, 51, 53, 54, 55, 56, 57, 58, 60, 61, 64, 65, 67, 68, 70, 76, 77, 85, 89, 91, 95, 177, 192, 194, 199, 204, 206, 218, 220, 221, 223, 224, 238, 240, 241, 243, 244, 245, 247, 248, 249, 251, 252, 258, 271, 279, 283, 291, 296, 305, 310, 316, 317, 319, 321, 324], "three": [2, 3, 4, 5, 15, 33, 36, 37, 67, 94, 198, 206, 216, 217, 218, 221, 222, 223, 224, 227, 228, 234, 238, 243, 249, 251, 257, 258, 260, 261, 279, 290, 297, 304, 306, 318, 321, 323, 325], "dimension": [2, 19, 23, 33, 36, 37, 64, 198, 206, 216, 217, 218, 219, 221, 224, 225, 238, 239, 240, 244, 245, 247, 251, 261, 262, 263, 264, 267, 269, 279, 301, 303, 309, 311, 312, 316, 317, 318, 319, 321, 326], "set": [2, 4, 5, 6, 19, 24, 25, 48, 67, 68, 70, 71, 72, 90, 92, 164, 167, 177, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 204, 207, 210, 216, 217, 220, 224, 228, 232, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 256, 258, 259, 261, 263, 264, 267, 268, 269, 279, 281, 283, 286, 291, 292, 296, 304, 305, 306, 309, 310, 312, 314, 318, 321, 322, 324, 325], "detail": [2, 3, 6, 7, 8, 22, 23, 33, 36, 37, 67, 86, 91, 94, 95, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 170, 178, 204, 205, 207, 215, 217, 219, 225, 249, 255, 258, 265, 290, 291, 292, 293, 300, 302, 308, 312, 315, 320, 322, 323, 324, 325, 326], "how": [2, 19, 36, 37, 205, 207, 217, 218, 219, 221, 223, 224, 227, 229, 231, 232, 234, 235, 237, 241, 242, 246, 247, 249, 258, 260, 261, 263, 264, 265, 266, 267, 269, 273, 275, 289, 290, 294, 297, 300, 302, 303, 304, 306, 307, 309, 311, 316, 318, 319, 320, 321], "refer": [2, 3, 6, 7, 8, 19, 22, 23, 36, 60, 61, 64, 65, 67, 86, 91, 94, 95, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 170, 178, 204, 206, 207, 215, 217, 218, 219, 221, 223, 224, 227, 238, 249, 253, 254, 255, 258, 289, 300, 302, 308, 312, 315, 322, 323, 324, 325], "similarli": [2, 4, 6, 204, 218, 219, 221, 223, 226, 227, 235, 238, 246, 253, 254, 271, 279, 283, 284, 291, 294, 298, 302, 311, 318, 320, 321, 322], "ha": [2, 5, 15, 19, 23, 34, 35, 67, 68, 70, 94, 167, 191, 192, 194, 195, 198, 204, 206, 217, 219, 221, 223, 224, 225, 227, 229, 233, 237, 238, 240, 241, 243, 245, 246, 247, 248, 255, 260, 261, 263, 264, 267, 269, 272, 276, 281, 283, 301, 302, 303, 309, 310, 312, 316, 319, 322, 323, 324], "normalis": [2, 29, 204, 206, 209, 223, 261, 263, 264, 267, 269, 309], "pleas": [2, 3, 6, 7, 8, 19, 22, 23, 36, 76, 94, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 178, 205, 216, 217, 218, 219, 221, 223, 227, 231, 235, 253, 254, 265, 289, 290, 291, 292, 300, 302, 303, 306, 308, 312, 315, 316, 317, 320, 323, 324, 325, 326], "rectangular": [2, 219, 223], "callabl": [2, 19, 67, 91, 94, 95, 161, 204, 312, 321], "dict": [2, 5, 6, 19, 23, 29, 68, 70, 75, 76, 77, 85, 88, 89, 91, 93, 94, 95, 177, 183, 188, 219, 238, 240], "option": [2, 3, 4, 5, 6, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 29, 30, 34, 35, 36, 37, 40, 42, 64, 67, 69, 70, 71, 72, 78, 86, 87, 90, 91, 92, 94, 95, 98, 150, 161, 162, 164, 177, 188, 191, 192, 195, 198, 204, 206, 216, 217, 221, 225, 232, 234, 248, 249, 253, 254, 268, 300, 312, 320, 322, 323, 325], "properti": [2, 3, 4, 5, 6, 19, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 177, 194, 204, 206, 219, 221, 227, 232, 235, 237, 248, 251, 252, 253, 254, 255, 257, 262, 294, 298, 299, 318], "default": [2, 3, 4, 5, 6, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 29, 30, 34, 35, 36, 37, 69, 70, 71, 72, 86, 87, 91, 92, 98, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 167, 170, 177, 181, 183, 188, 191, 204, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 228, 231, 232, 233, 237, 238, 246, 249, 256, 265, 270, 271, 273, 275, 276, 281, 285, 291, 302, 322, 325], "mean": [2, 19, 23, 26, 42, 48, 219, 220, 221, 227, 229, 242, 272, 320, 322], "provid": [2, 19, 67, 68, 70, 71, 72, 91, 92, 94, 95, 97, 150, 204, 210, 216, 217, 218, 219, 221, 238, 246, 248, 253, 254, 255, 256, 260, 261, 263, 264, 267, 269, 271, 272, 275, 281, 283, 284, 286, 291, 292, 303, 315, 321, 322, 323, 325], "initialis": [2, 4, 76, 86, 97, 98, 204, 216, 217, 221, 223, 224, 254, 255, 256, 279, 290, 292, 294, 298, 300, 301, 304, 306, 312, 316, 317, 318, 319, 320], "zero": [2, 6, 19, 20, 23, 36, 40, 45, 48, 204, 216, 217, 218, 219, 220, 223, 224, 225, 228, 241, 291, 292, 294, 295, 296, 298, 305, 318, 322], "str": [2, 3, 4, 5, 6, 10, 11, 12, 13, 14, 15, 19, 20, 23, 24, 25, 29, 30, 34, 35, 36, 37, 61, 67, 68, 69, 70, 71, 72, 76, 86, 87, 92, 94, 97, 98, 150, 161, 164, 165, 166, 167, 168, 177, 181, 182, 183, 188, 191, 193, 197, 199, 238, 277, 282, 322], "np": [2, 40, 46, 60, 61, 65, 91, 94, 95, 177, 219, 221, 223, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 272, 290, 293, 312, 322, 326], "data": [2, 4, 11, 12, 14, 15, 19, 20, 66, 67, 68, 70, 71, 72, 86, 150, 162, 176, 177, 204, 217, 218, 219, 223, 226, 238, 262, 265, 271, 272, 273, 274, 275, 276, 290, 291, 292, 293, 300, 302, 303, 310, 311, 312, 316, 317, 318, 322, 324], "underli": [2, 216, 224, 238], "numpi": [2, 5, 40, 60, 61, 65, 75, 88, 93, 94, 95, 198, 204, 216, 219, 223, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 272, 290, 293, 312, 322], "arrai": [2, 3, 5, 19, 40, 41, 42, 216, 224, 225, 231, 238, 239, 240, 241, 243, 244, 248, 249, 262, 263, 293, 312, 319, 322, 326], "best": [2, 4, 5, 6, 20, 21, 23, 24, 25, 167, 170, 177, 219, 260], "automat": [2, 3, 4, 5, 6, 12, 19, 20, 21, 22, 23, 24, 25, 70, 71, 72, 86, 161, 177, 204, 217, 219, 223, 231, 232, 237, 260, 270, 272, 275, 297, 306, 315, 324, 325], "determin": [2, 5, 6, 19, 20, 23, 24, 25, 98, 167, 218, 223, 241, 284], "current": [2, 19, 67, 68, 70, 76, 86, 91, 95, 150, 161, 204, 222, 223, 225, 231, 246, 253, 260, 289, 314, 317, 318, 323, 325, 326], "float64": [2, 238, 248, 274, 302, 322], "physic": [2, 6, 37, 100, 207, 225, 289, 324], "uniform": [2, 19, 23, 42, 45, 209, 217, 219, 225, 240, 249, 291, 293, 294, 298, 312, 319, 321], "nano": [2, 5, 6, 231, 232, 237, 275], "size": [2, 4, 5, 6, 20, 21, 23, 24, 25, 112, 177, 198, 204, 219, 221, 223, 226, 227, 229, 230, 231, 232, 237, 240, 251, 272, 279, 282, 290, 291, 292, 296, 297, 305, 312, 316, 317, 318, 319, 321, 322], "thin": [2, 5, 231, 232, 237, 240, 241, 291, 292, 293, 305, 317, 321], "film": [2, 5, 231, 232, 237, 241, 291, 292, 293, 305, 317, 321], "50e": [2, 5, 6, 8, 20, 22, 24, 25, 45, 46, 48, 61, 65, 201, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 248, 258, 265, 266, 295, 296, 297, 302, 305, 307, 308, 317, 320, 321], "25e": [2, 5, 6, 45, 46, 48, 60, 61, 219, 227, 247, 248, 291, 312], "5e": [2, 5, 6, 13, 14, 15, 40, 41, 64, 75, 76, 77, 85, 88, 89, 91, 93, 94, 95, 98, 99, 201, 202, 206, 217, 218, 219, 221, 222, 226, 227, 228, 229, 230, 231, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 252, 253, 254, 263, 264, 265, 266, 274, 284, 291, 292, 293, 295, 296, 297, 299, 300, 302, 305, 307, 308, 310, 311, 312, 316, 319, 321, 322], "1e": [2, 4, 5, 6, 20, 21, 23, 24, 25, 40, 41, 45, 46, 48, 60, 61, 64, 65, 76, 82, 85, 90, 91, 92, 94, 95, 97, 98, 99, 112, 162, 177, 201, 202, 204, 217, 218, 219, 221, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 241, 243, 248, 254, 257, 258, 261, 263, 264, 265, 266, 267, 268, 269, 272, 275, 276, 284, 290, 291, 292, 294, 295, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 311, 312, 313, 316, 318, 319, 320, 321, 322], "10": [2, 3, 4, 5, 6, 8, 13, 14, 15, 19, 20, 21, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, 37, 42, 67, 91, 94, 177, 195, 198, 201, 202, 206, 208, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 240, 241, 242, 243, 246, 247, 248, 249, 251, 252, 253, 254, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 279, 291, 292, 293, 294, 295, 296, 298, 299, 300, 302, 303, 305, 309, 310, 311, 312, 316, 317, 318, 319, 320, 321, 324, 325], "n": [2, 3, 4, 5, 6, 8, 13, 14, 15, 19, 20, 21, 23, 24, 25, 30, 34, 35, 37, 61, 67, 69, 70, 75, 76, 77, 85, 88, 89, 91, 92, 93, 94, 95, 109, 162, 177, 201, 202, 204, 206, 216, 217, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 237, 238, 248, 249, 257, 265, 266, 268, 271, 272, 275, 281, 284, 290, 291, 292, 293, 296, 298, 299, 300, 302, 304, 305, 306, 307, 308, 310, 311, 312, 313, 316, 317, 318, 319, 320, 321, 325, 326], "50e9": 2, "25e9": 2, "5e9": [2, 312], "1e9": [2, 94, 206, 218, 219, 222, 226, 254, 269, 293, 309, 311, 312], "8": [2, 5, 70, 161, 206, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 235, 237, 238, 240, 241, 242, 243, 245, 246, 247, 248, 249, 251, 252, 253, 254, 256, 257, 260, 261, 263, 264, 265, 267, 268, 269, 270, 271, 272, 274, 275, 283, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 302, 303, 305, 306, 309, 310, 311, 312, 316, 317, 318, 319, 320, 321, 322, 324, 325], "conveni": [2, 19, 23, 28, 162, 177, 204, 217, 219, 221, 223, 238, 248, 249, 250, 271, 275, 278, 284, 290, 302, 322], "13": [2, 91, 94, 95, 158, 206, 216, 217, 218, 219, 221, 223, 224, 225, 226, 227, 231, 232, 235, 237, 240, 241, 243, 245, 246, 248, 249, 250, 251, 253, 254, 256, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 274, 291, 293, 294, 296, 298, 299, 300, 302, 303, 305, 306, 309, 311, 312, 318, 319, 320, 321, 322], "__add__": [2, 98, 99, 303], "constant": [2, 3, 29, 33, 36, 37, 48, 75, 76, 77, 85, 88, 89, 90, 91, 93, 94, 98, 100, 105, 106, 107, 109, 191, 192, 193, 194, 195, 196, 197, 198, 199, 206, 213, 220, 223, 241, 246, 253, 254, 288, 289, 290, 291, 292, 293, 298, 310, 312, 316, 317, 318, 319, 320], "either": [2, 5, 6, 19, 20, 21, 24, 25, 30, 40, 75, 76, 77, 85, 88, 89, 91, 93, 94, 95, 98, 221, 223, 225, 227, 231, 235, 237, 238, 243, 246, 254, 312, 319, 321], "iter": [2, 5, 67, 68, 69, 70, 97, 98, 177, 204, 216, 227, 229, 248, 249, 262, 265, 271, 272, 291, 300, 302, 303, 311, 318, 321], "tupl": [2, 4, 5, 6, 19, 21, 23, 24, 25, 45, 46, 75, 88, 90, 93, 94, 146, 177, 198, 204, 216, 217, 221, 224, 227, 229, 230, 231, 232, 235, 236, 237, 249, 275, 279, 282, 283, 321], "list": [2, 4, 5, 19, 23, 24, 67, 68, 69, 70, 75, 80, 82, 88, 90, 93, 94, 97, 98, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 177, 181, 182, 186, 198, 199, 201, 205, 210, 216, 217, 219, 227, 229, 231, 234, 238, 248, 253, 254, 255, 272, 273, 275, 279, 284, 301, 312, 323, 324, 325], "ndarrai": [2, 75, 88, 93, 94, 198, 322], "both": [2, 4, 5, 6, 15, 19, 20, 23, 30, 183, 204, 216, 221, 227, 229, 230, 232, 237, 241, 242, 243, 247, 256, 267, 283, 289, 290, 312, 319, 325], "same": [2, 4, 5, 6, 19, 23, 67, 68, 70, 97, 98, 99, 150, 162, 167, 204, 213, 216, 217, 221, 222, 223, 224, 225, 227, 229, 231, 232, 234, 235, 237, 241, 243, 249, 255, 260, 262, 289, 294, 298, 299, 301, 304, 306, 312, 313, 316, 322, 323], "have": [2, 3, 4, 5, 6, 19, 23, 68, 94, 98, 150, 177, 204, 206, 216, 217, 218, 219, 221, 222, 223, 224, 225, 227, 228, 231, 232, 235, 236, 237, 238, 239, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 256, 258, 260, 261, 263, 264, 265, 267, 269, 271, 272, 273, 274, 279, 280, 281, 283, 291, 295, 297, 301, 302, 303, 304, 306, 308, 309, 312, 313, 315, 316, 318, 320, 321, 322, 323, 324, 325], "valueerror": [2, 4, 5, 6, 19, 20, 23, 33, 35, 36, 37, 67, 68, 71, 72, 75, 77, 88, 89, 93, 94, 98, 177, 186, 191, 192, 193, 194, 195, 196, 198, 204, 218, 219, 221, 227, 229, 236, 238, 251, 252, 256, 260, 279, 282, 283, 303], "add": [2, 4, 5, 23, 70, 71, 72, 98, 177, 206, 219, 230, 231, 232, 237, 253, 254, 256, 275, 291, 292, 303, 311, 312, 316, 319, 325], "f1": [2, 221], "f2": [2, 221], "re": [2, 6, 19, 217], "traceback": [2, 5, 6, 36, 37, 75, 76, 77, 85, 88, 89, 90, 91, 93, 94, 95, 98, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 191, 192, 193, 194, 195, 196, 197, 198, 199, 218, 219, 221, 260, 303, 322], "most": [2, 5, 6, 23, 36, 37, 41, 75, 76, 77, 85, 88, 89, 90, 91, 93, 94, 95, 98, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 191, 192, 193, 194, 195, 196, 197, 198, 199, 217, 218, 219, 221, 223, 225, 235, 240, 241, 260, 272, 283, 303, 312, 322], "recent": [2, 5, 6, 36, 37, 75, 76, 77, 85, 88, 89, 90, 91, 93, 94, 95, 98, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 191, 192, 193, 194, 195, 196, 197, 198, 199, 218, 219, 221, 260, 303, 322], "last": [2, 4, 5, 6, 36, 37, 67, 69, 75, 76, 77, 85, 88, 89, 90, 91, 93, 94, 95, 98, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 186, 191, 192, 193, 194, 195, 196, 197, 198, 199, 206, 216, 218, 219, 221, 223, 233, 238, 249, 251, 252, 260, 265, 271, 291, 301, 302, 303, 322], "__sub__": [2, 98], "__and__": 2, "cross": [2, 3, 60, 61, 223, 235, 238, 245, 310], "__array_ufunc__": 2, "ufunc": [2, 204, 322], "kwarg": [2, 3, 4, 5, 8, 19, 20, 21, 22, 23, 24, 25, 26, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 99, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 177, 178, 191, 192, 193, 194, 195, 196, 197, 198, 199, 218, 219, 255], "support": [2, 177, 204, 210, 215, 216, 217, 219, 221, 223, 228, 231, 293, 297, 319, 322, 324], "point": [2, 4, 5, 6, 12, 13, 14, 15, 19, 20, 23, 29, 40, 41, 42, 45, 48, 60, 61, 64, 65, 177, 204, 206, 216, 217, 218, 219, 220, 221, 222, 224, 226, 227, 229, 231, 235, 243, 260, 261, 263, 264, 267, 269, 272, 281, 291, 292, 296, 297, 299, 300, 302, 304, 305, 306, 308, 309, 310, 312, 318, 319, 320, 321, 322, 324], "sampl": [2, 4, 19, 36, 37, 48, 60, 61, 112, 206, 216, 217, 218, 219, 220, 222, 224, 225, 226, 228, 229, 239, 240, 241, 242, 243, 244, 245, 247, 249, 261, 263, 264, 267, 269, 271, 273, 274, 275, 276, 290, 291, 292, 293, 295, 296, 297, 301, 303, 304, 305, 306, 309, 310, 311, 312, 316, 317, 319, 320, 321], "discretis": [2, 5, 20, 21, 23, 24, 34, 35, 112, 216, 218, 219, 221, 222, 223, 224, 227, 229, 230, 231, 232, 264, 272, 283, 290, 291, 292, 293, 294, 296, 297, 298, 301, 305, 310, 312, 316, 317, 318, 319, 320, 321], "belong": [2, 5, 6, 221, 224, 227, 229, 231, 235, 322], "whose": [2, 5, 6, 150, 162, 198, 206, 216, 219, 221, 223, 224, 231, 261, 263, 264, 267, 269, 271, 280, 283, 301, 309, 322], "coordin": [2, 4, 5, 6, 19, 20, 67, 204, 216, 221, 223, 226, 227, 229, 233, 235, 236, 238, 240, 248, 290, 321], "mathbf": [2, 5, 6, 37, 42, 75, 76, 77, 78, 85, 89, 91, 93, 94, 95, 206, 221, 225, 227, 228, 231, 251, 252, 253, 254, 257, 258, 263, 264, 292, 294, 298, 299, 300, 305, 306, 311, 316, 317, 318, 319, 320, 321], "p": [2, 5, 6, 30, 48, 61, 91, 166, 169, 204, 217, 219, 225, 227, 231, 235, 242, 246, 254, 277, 284, 293, 312], "p_": [2, 5, 6, 235, 237, 321], "x": [2, 3, 4, 5, 6, 8, 14, 19, 20, 23, 29, 30, 35, 37, 40, 41, 42, 45, 48, 57, 60, 61, 63, 64, 65, 67, 68, 70, 71, 72, 76, 177, 178, 202, 204, 206, 211, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 237, 238, 240, 241, 242, 243, 245, 246, 248, 249, 254, 261, 263, 264, 265, 267, 269, 271, 272, 273, 274, 275, 276, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 305, 307, 308, 309, 310, 312, 316, 317, 318, 319, 320, 321, 322, 324], "y": [2, 4, 5, 6, 19, 20, 23, 29, 30, 35, 40, 41, 42, 45, 48, 60, 61, 64, 65, 67, 76, 177, 204, 206, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 237, 238, 240, 241, 242, 248, 249, 254, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 275, 284, 290, 291, 292, 293, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 318, 319, 320, 321, 322], "20": [2, 3, 6, 67, 206, 208, 217, 219, 220, 221, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 239, 240, 241, 242, 246, 248, 249, 253, 254, 264, 265, 267, 271, 272, 274, 291, 292, 293, 294, 296, 298, 300, 302, 303, 304, 305, 306, 310, 311, 312, 316, 318, 319, 320, 321, 322], "4": [2, 4, 5, 37, 40, 42, 67, 70, 75, 88, 90, 91, 93, 150, 161, 206, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 255, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 318, 319, 320, 321, 324], "__dir__": [2, 5, 20, 23, 98], "extens": [2, 5, 13, 14, 15, 98, 159, 160, 204, 217, 222, 234, 249, 300, 325], "dir": [2, 5, 20, 23, 98], "label": [2, 4, 5, 6, 20, 21, 23, 24, 25, 164, 177, 204, 217, 219, 221, 231, 232, 237, 238, 240, 275, 290], "remov": [2, 3, 5, 6, 13, 14, 15, 20, 23, 98, 219, 222, 223, 312, 323], "grad": [2, 221], "div": [2, 221], "depend": [2, 19, 23, 30, 45, 61, 67, 70, 71, 72, 91, 94, 95, 150, 161, 177, 204, 206, 208, 217, 228, 233, 238, 240, 246, 248, 253, 263, 271, 272, 276, 289, 290, 311, 315, 319, 322], "avalil": [2, 5, 98], "attribut": [2, 5, 67, 97, 98, 100, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 177, 191, 192, 193, 194, 195, 196, 197, 198, 199, 204, 216, 217, 219, 220, 221, 223, 224, 225, 227, 228, 229, 231, 238, 248, 251, 252, 253, 254, 255, 265, 271, 282, 283, 288, 322], "__eq__": [2, 5, 6, 98, 99], "relat": [2, 5, 6, 39, 41, 46, 47, 59, 98, 99, 150, 204, 221, 223, 225, 227, 235, 246], "ar": [2, 3, 4, 5, 6, 11, 12, 13, 14, 15, 19, 20, 23, 24, 25, 29, 30, 32, 33, 34, 35, 36, 37, 42, 43, 48, 60, 67, 68, 70, 86, 90, 91, 94, 95, 98, 99, 150, 161, 162, 166, 177, 181, 183, 186, 191, 194, 198, 204, 205, 206, 210, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 241, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 260, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 273, 275, 276, 280, 283, 284, 289, 290, 291, 292, 293, 294, 297, 298, 299, 301, 302, 303, 304, 306, 309, 310, 311, 312, 313, 314, 316, 319, 320, 321, 322, 324, 325, 326], "consid": [2, 5, 6, 98, 99, 202, 210, 216, 218, 289, 324], "equal": [2, 5, 6, 98, 99, 204, 216, 217, 221, 229, 238, 241, 281, 290, 312], "thei": [2, 5, 6, 12, 19, 20, 98, 99, 191, 218, 231, 234, 238, 240, 246, 249, 251, 252, 258, 260, 264, 301, 303, 319], "contain": [2, 4, 5, 9, 12, 19, 29, 67, 80, 82, 91, 92, 94, 95, 99, 112, 161, 167, 204, 207, 219, 221, 223, 224, 225, 241, 248, 249, 260, 279, 281, 291, 292, 295, 297, 303, 312, 317, 320, 322, 323, 324, 325], "fals": [2, 5, 6, 7, 14, 19, 20, 23, 24, 36, 46, 70, 71, 72, 86, 87, 98, 99, 150, 162, 164, 167, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 231, 235, 238, 240, 245, 248, 249, 265, 271, 279, 296, 302, 310, 317, 322], "otherwis": [2, 5, 6, 19, 23, 30, 86, 98, 99, 166, 192, 194, 195, 198, 207, 217, 219, 224, 238, 251, 252, 255, 288, 322], "bool": [2, 5, 6, 13, 14, 15, 19, 20, 23, 24, 36, 70, 71, 72, 86, 87, 98, 99, 150, 161, 162, 164, 167, 177, 181, 183, 191, 192, 195, 196, 197, 198, 235, 322], "check": [2, 5, 6, 86, 98, 164, 166, 167, 191, 193, 204, 216, 221, 222, 235, 240, 257, 274, 279, 281, 283, 291, 294, 298, 312, 315, 318, 320], "f3": [2, 221], "__getattr__": [2, 5, 98], "attr": [2, 5, 97, 98, 238], "access": [2, 3, 5, 19, 23, 67, 70, 71, 72, 98, 164, 170, 204, 217, 219, 221, 223, 231, 234, 238, 247, 248, 253, 254, 262, 271, 315, 321, 322, 324], "individu": [2, 4, 5, 12, 19, 67, 68, 70, 71, 72, 98, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 183, 188, 193, 204, 217, 221, 248, 255, 265, 271, 298, 299, 300, 302, 304, 319, 321, 324, 325], "custom": [2, 94, 204, 217, 221, 254, 265, 285, 312, 325, 326], "manual": [2, 19, 170, 204, 217, 219, 223, 249, 281, 325], "get": [2, 3, 4, 5, 6, 61, 67, 68, 69, 70, 71, 72, 92, 97, 98, 112, 146, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 166, 167, 169, 177, 204, 205, 206, 207, 210, 217, 219, 220, 221, 224, 227, 228, 229, 231, 232, 233, 235, 236, 237, 243, 248, 249, 253, 254, 260, 265, 268, 273, 276, 289, 302, 303, 312, 317, 323, 324, 325], "mx": [2, 206, 219, 221, 248, 249, 262, 265, 271, 272, 273, 275, 276, 290, 291, 292, 293, 300, 302, 303, 311, 312, 318], "my": [2, 206, 219, 221, 231, 232, 233, 234, 237, 248, 249, 262, 265, 271, 272, 273, 275, 276, 290, 291, 293, 297, 300, 302, 303, 311, 312, 318], "mz": [2, 206, 219, 221, 248, 249, 262, 265, 271, 272, 273, 275, 290, 291, 300, 302, 303, 307, 311, 312, 318], "__getitem__": [2, 5, 67, 69, 70, 98, 204], "item": [2, 5, 6, 67, 69, 70, 98, 258, 263, 264, 322], "subregion": [2, 5, 13, 14, 15, 21, 24, 90, 150, 204, 208, 209, 221, 224, 227, 254, 261, 263, 264, 267, 269, 289, 304, 306, 309, 310], "were": [2, 5, 204, 224, 325], "dictionari": [2, 5, 19, 23, 29, 68, 70, 75, 76, 77, 85, 88, 89, 91, 93, 94, 95, 177, 183, 188, 194, 204, 217, 224, 230, 231, 258, 263, 271, 281, 283, 304, 306, 309, 312], "when": [2, 4, 5, 6, 19, 20, 23, 48, 67, 69, 70, 71, 72, 87, 164, 166, 167, 177, 191, 204, 219, 221, 222, 229, 230, 231, 235, 236, 241, 242, 247, 249, 260, 262, 266, 268, 271, 272, 277, 282, 291, 297, 301, 303, 307, 308, 312, 317, 321, 322, 324, 325], "wa": [2, 4, 5, 69, 87, 97, 192, 193, 194, 195, 196, 197, 198, 204, 218, 219, 221, 222, 251, 252, 253, 254, 256, 271, 280, 293, 302, 324, 325], "creat": [2, 3, 4, 5, 6, 19, 20, 21, 22, 23, 24, 25, 26, 40, 69, 70, 71, 72, 86, 111, 150, 161, 177, 188, 204, 205, 206, 217, 218, 219, 221, 222, 226, 231, 232, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 255, 257, 259, 260, 262, 264, 265, 272, 274, 275, 290, 291, 292, 293, 296, 297, 301, 302, 307, 308, 310, 312, 317, 318, 319, 320, 321, 323, 324, 325], "altern": [2, 5, 95, 150, 161, 164, 240, 322, 325], "minimum": [2, 5, 6, 30, 186, 204, 221, 227, 233, 235, 240, 276, 278, 290, 319, 321], "origin": [2, 5, 48, 206, 217, 221, 229, 235, 241, 242, 321], "kei": [2, 5, 19, 91, 94, 95, 183, 188, 192, 194, 224, 230, 231, 241, 258, 261, 263, 264, 267, 269, 271, 283, 304, 309, 312], "disretisedfield": [2, 5, 92, 221], "100": [2, 5, 6, 19, 20, 21, 23, 24, 30, 34, 35, 204, 206, 221, 227, 229, 231, 235, 240, 241, 245, 246, 249, 272, 292, 295, 299, 302, 312, 316, 319, 321], "r1": [2, 5, 21, 24, 90, 304, 310], "r2": [2, 5, 21, 24, 90, 304, 310], "def": [2, 8, 20, 23, 40, 41, 42, 45, 48, 60, 61, 64, 65, 91, 94, 95, 178, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 206, 217, 218, 219, 220, 221, 222, 224, 225, 226, 239, 240, 241, 242, 243, 244, 246, 247, 249, 251, 252, 255, 259, 260, 261, 263, 264, 265, 267, 269, 273, 277, 279, 280, 282, 283, 290, 292, 295, 296, 297, 299, 302, 303, 304, 305, 308, 309, 310, 312, 316, 317, 319, 321, 322], "value_fun": [2, 13, 14, 15, 40, 41, 42, 64, 65, 218, 219, 222, 226], "els": [2, 20, 30, 40, 41, 42, 45, 48, 64, 70, 217, 218, 219, 220, 222, 224, 225, 235, 261, 264, 267, 279, 282, 290, 295, 296, 297, 299, 302, 303, 305, 308, 310, 312, 316, 317, 319, 321, 322], "subfield": 2, "9e": [2, 227, 229], "14e": [2, 5], "4e": [2, 40, 41, 64, 227, 229, 235, 239, 240, 241, 242, 243, 244, 247, 275, 296, 297, 305, 312, 321], "shape": [2, 204, 216, 223, 224, 225, 296, 311, 322], "__iter__": [2, 5, 67, 69, 97, 98], "gener": [2, 4, 5, 6, 9, 67, 70, 94, 98, 146, 150, 186, 217, 219, 223, 225, 227, 228, 229, 233, 235, 243, 246, 255, 272, 276, 278, 286, 304, 312, 322], "yield": [2, 5, 67, 69, 97, 98, 146], "all": [2, 3, 4, 5, 6, 15, 19, 20, 21, 23, 24, 25, 27, 30, 34, 35, 62, 67, 68, 69, 70, 73, 81, 83, 94, 97, 98, 113, 146, 147, 162, 166, 171, 175, 177, 179, 188, 189, 191, 198, 201, 204, 205, 206, 207, 210, 216, 217, 218, 219, 221, 223, 224, 225, 226, 227, 230, 231, 232, 235, 237, 238, 239, 240, 241, 246, 247, 248, 249, 251, 252, 259, 260, 261, 262, 263, 264, 265, 267, 269, 271, 273, 274, 275, 276, 280, 281, 283, 286, 289, 290, 291, 292, 293, 294, 295, 297, 298, 302, 303, 304, 309, 312, 314, 315, 318, 319, 320, 321, 322, 324, 325, 326], "first": [2, 4, 5, 6, 15, 19, 21, 24, 67, 69, 146, 167, 170, 177, 186, 191, 193, 204, 206, 210, 216, 217, 218, 219, 221, 222, 223, 224, 225, 227, 230, 231, 232, 236, 237, 238, 240, 241, 248, 249, 260, 272, 274, 289, 292, 293, 294, 296, 297, 299, 301, 302, 305, 312, 314, 318, 322, 323, 324, 325], "wherea": [2, 4, 5, 23, 94, 146, 221, 231, 232, 233, 237, 261, 263, 264, 267, 271, 276, 304, 310], "one": [2, 4, 5, 6, 12, 15, 19, 20, 21, 23, 24, 25, 29, 30, 34, 35, 67, 68, 70, 71, 72, 86, 98, 150, 161, 177, 201, 204, 206, 216, 217, 219, 221, 222, 223, 224, 225, 227, 230, 231, 232, 235, 238, 246, 248, 249, 258, 261, 262, 263, 264, 265, 267, 268, 269, 272, 273, 274, 275, 279, 283, 289, 290, 301, 302, 303, 309, 310, 311, 312, 315, 316, 318, 319, 320, 322, 325], "through": [2, 40, 67, 70, 97, 166, 169, 227, 229, 233, 238, 240, 241, 247, 296, 297, 305, 321, 322, 324], "coord": [2, 238], "print": [2, 86, 87, 97, 98, 161, 166, 188, 204, 219, 221, 224, 227, 229, 235, 236, 238, 240, 242, 246, 248, 251, 252, 255, 256, 268, 270, 277, 279, 281, 282, 283, 290, 291, 294, 298, 299, 321, 322, 323], "indic": [2, 5, 86, 87, 227, 228, 240, 243, 268], "__lshift__": [2, 67, 68, 70, 177], "stack": [2, 68, 231, 236], "singl": [2, 19, 30, 67, 70, 75, 76, 77, 85, 86, 88, 89, 91, 93, 94, 95, 112, 150, 161, 177, 216, 217, 221, 223, 224, 227, 229, 240, 248, 249, 272, 274, 283, 284, 290, 312, 318, 322, 323, 324], "except": [2, 86, 218, 219, 221, 227, 229, 236, 251, 252, 255, 256, 277, 279, 282, 283, 303, 322], "disrectisedfield": 2, "10e": [2, 5, 6, 13, 14, 15, 22, 24, 25, 48, 60, 61, 65, 92, 94, 217, 219, 221, 226, 231, 235, 236, 238, 257, 261, 263, 264, 265, 266, 267, 269, 292, 293, 294, 296, 297, 298, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 319, 321], "2e": [2, 40, 41, 45, 46, 48, 61, 64, 85, 158, 206, 217, 218, 219, 221, 227, 228, 229, 230, 231, 235, 236, 238, 248, 254, 258, 266, 271, 284, 300, 317, 321], "6": [2, 4, 5, 6, 20, 21, 23, 24, 25, 68, 70, 71, 72, 105, 177, 201, 202, 206, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 255, 256, 257, 260, 261, 262, 263, 264, 265, 267, 268, 269, 271, 272, 273, 274, 275, 276, 279, 281, 282, 283, 284, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 316, 318, 319, 320, 321, 324], "abstract": [2, 67, 70, 79, 84, 86, 87, 98, 99, 166, 255, 303], "variabl": [2, 5, 67, 68, 70, 71, 72, 150, 161, 167, 177, 191, 193, 204, 217, 231, 246, 249, 251, 252, 253, 254, 255, 265, 271, 272, 274, 275, 276, 279, 281, 283, 325], "e": [2, 3, 4, 5, 6, 19, 20, 21, 22, 23, 24, 25, 33, 40, 42, 43, 67, 68, 70, 75, 76, 77, 85, 86, 88, 89, 91, 93, 94, 98, 161, 177, 195, 204, 205, 206, 207, 217, 218, 219, 221, 222, 223, 230, 231, 232, 236, 237, 240, 243, 244, 246, 248, 250, 255, 262, 264, 265, 271, 272, 274, 281, 284, 290, 291, 293, 294, 298, 299, 300, 302, 303, 311, 312, 313, 318, 320, 321, 323, 324, 325], "g": [2, 4, 5, 6, 19, 20, 21, 22, 23, 24, 25, 33, 67, 68, 70, 75, 76, 77, 85, 86, 88, 89, 91, 93, 94, 98, 177, 195, 204, 205, 207, 217, 218, 219, 222, 230, 231, 232, 236, 237, 242, 246, 248, 255, 274, 281, 284, 290, 293, 312, 313, 318, 321, 323, 324], "multipli": [2, 4, 5, 6, 20, 21, 22, 23, 24, 25, 65, 91, 94, 95, 177, 200, 201, 202, 204, 218, 219, 231, 232, 233, 237, 240, 246, 254, 275, 276, 296, 305, 311, 312], "45": [2, 204, 219, 221, 223, 247, 254, 281, 290, 312, 322], "__rmul__": 2, "__truediv__": [2, 6, 221], "__neg__": 2, "unari": 2, "negat": 2, "each": [2, 6, 19, 29, 42, 70, 98, 150, 166, 206, 216, 221, 223, 225, 227, 231, 239, 241, 247, 249, 263, 264, 272, 273, 274, 275, 281, 299, 311, 319, 320, 321, 322], "equival": [2, 15, 204, 234, 241, 243], "cdot": [2, 33, 37, 48, 61, 75, 76, 78, 85, 91, 93, 94, 95, 206, 225, 241, 243, 246, 252, 253, 254, 257, 261, 263, 267, 269, 291, 292, 294, 298, 299, 305, 306, 318, 319, 320], "3e": [2, 13, 14, 15, 218, 227, 230, 236, 248, 262, 291, 292, 293, 301, 312, 316, 317, 319], "1000": [2, 5, 204, 246, 284, 302, 312, 313, 320], "__pos__": 2, "itself": [2, 6, 11, 20, 218, 221, 227], "__pow__": [2, 221], "onli": [2, 3, 5, 6, 19, 20, 23, 24, 30, 32, 34, 35, 37, 70, 71, 72, 86, 87, 94, 98, 99, 112, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 167, 172, 191, 193, 195, 196, 197, 198, 204, 206, 216, 217, 219, 221, 223, 224, 225, 227, 228, 235, 238, 240, 241, 244, 247, 251, 252, 254, 255, 261, 263, 264, 265, 267, 269, 272, 273, 275, 279, 289, 291, 292, 296, 299, 301, 302, 305, 309, 312, 313, 318, 319, 320, 324, 325], "power": [2, 221, 241, 243], "attempt": [2, 5, 6, 36, 37, 75, 76, 77, 85, 88, 89, 90, 91, 93, 94, 95, 191, 192, 193, 194, 195, 196, 197, 198, 199, 218, 251, 252, 277, 279, 281, 282, 283, 322, 325], "__repr__": [2, 3, 4, 5, 6, 67, 68, 69, 71, 72, 92, 97, 98, 164, 165, 166, 167, 168, 177], "represent": [2, 3, 4, 5, 6, 11, 14, 15, 67, 68, 69, 71, 72, 92, 97, 98, 177, 204, 222, 224, 227, 235, 253, 254, 271, 320], "string": [2, 3, 4, 5, 6, 19, 23, 67, 68, 69, 70, 71, 72, 85, 87, 90, 91, 92, 94, 95, 97, 98, 150, 177, 193, 194, 216, 222, 227, 228, 229, 230, 231, 232, 233, 235, 237, 253, 254, 255, 261, 263, 264, 267, 269, 271, 273, 275, 279, 280, 282, 283, 309, 312, 322, 325], "intern": [2, 3, 4, 5, 6, 20, 21, 22, 23, 24, 25, 94, 177, 204, 217, 219, 223, 312, 313, 324, 326], "_repr_html_": [2, 3, 5, 6], "html": [2, 3, 5, 6, 91, 94, 95, 155, 204, 231, 232, 237, 275, 281, 290, 291, 292, 312, 323], "tag": [2, 3, 5, 6], "from": [2, 3, 4, 5, 6, 10, 11, 12, 19, 20, 23, 24, 25, 29, 40, 41, 48, 64, 65, 67, 69, 70, 86, 88, 98, 99, 146, 150, 167, 181, 182, 183, 187, 191, 192, 193, 194, 195, 196, 197, 198, 204, 206, 209, 217, 218, 219, 220, 221, 222, 223, 226, 227, 231, 232, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 255, 259, 260, 271, 272, 273, 274, 275, 276, 279, 280, 281, 284, 290, 291, 292, 293, 297, 300, 301, 302, 310, 312, 315, 318, 319, 320, 321, 324, 325], "subtract": 2, "divid": [2, 4, 5, 6, 20, 21, 23, 24, 25, 177, 186, 207, 221, 223, 227, 231, 232, 237, 275, 296, 305, 312, 322], "divis": [2, 204], "allow": [2, 19, 67, 68, 70, 76, 94, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 167, 177, 188, 191, 192, 193, 194, 195, 196, 197, 198, 204, 217, 219, 221, 223, 228, 229, 231, 232, 233, 237, 244, 247, 251, 252, 254, 255, 256, 260, 265, 273, 275, 276, 279, 282, 293, 297, 312, 324, 325, 326], "allclos": [2, 40, 46, 299], "rtol": 2, "05": [2, 206, 208, 239, 245, 246, 248, 249, 252, 265, 268, 281, 285, 290, 292, 294], "atol": 2, "08": [2, 217, 221, 226, 227, 228, 229, 230, 231, 235, 236, 238, 248, 265, 268, 291, 293, 297, 298, 299, 300, 303, 312, 321], "whether": [2, 23, 98, 222, 236, 238], "within": [2, 204, 224], "rel": [2, 204, 243, 245], "toler": [2, 6, 204, 315], "compar": [2, 35, 98, 99, 204, 223, 227, 235, 240, 247, 299, 324], "non": [2, 19, 20, 45, 48, 61, 177, 204, 217, 218, 223, 241, 243, 244, 247, 253, 258, 274, 292, 306, 312, 316, 317, 318, 319, 321, 322, 325], "classmethod": [2, 177], "coordinate_field": [2, 204, 224], "3d": [2, 19, 23, 204, 217, 219, 223, 224, 231, 232, 237, 247, 263, 296, 305, 320, 321], "midpoint": [2, 5, 204, 227, 238], "follow": [2, 3, 19, 23, 76, 91, 92, 94, 95, 204, 208, 215, 216, 217, 219, 221, 222, 223, 226, 227, 228, 229, 232, 238, 246, 249, 250, 251, 252, 255, 272, 279, 283, 290, 312, 314, 315, 316, 317, 320, 321, 323, 324, 325], "code": [2, 23, 94, 204, 205, 206, 224, 249, 254, 272, 279, 291, 316, 320, 323], "should": [2, 5, 12, 19, 23, 48, 71, 72, 94, 150, 177, 195, 198, 204, 210, 217, 219, 221, 224, 234, 238, 254, 255, 259, 261, 263, 264, 267, 269, 282, 289, 299, 302, 312, 319, 321, 322, 324, 325], "prefer": [2, 94, 319], "over": [2, 23, 29, 36, 67, 68, 70, 91, 94, 95, 188, 192, 194, 195, 198, 204, 219, 248, 275, 281, 290, 291, 312, 315, 317, 322], "creation": [2, 19, 204, 221], "becaus": [2, 6, 19, 166, 177, 204, 206, 217, 218, 219, 221, 222, 228, 229, 235, 242, 251, 252, 254, 256, 258, 260, 274, 282, 293, 294, 298, 303, 304, 306, 312, 316, 320], "much": [2, 204, 205, 219, 221, 232, 237, 312, 318, 323], "better": [2, 204, 231, 249], "perform": [2, 48, 191, 204, 217, 221, 227, 231, 239, 240, 241, 245, 247, 275, 279, 294, 295, 298, 299, 322, 326], "cfield": [2, 221], "posit": [2, 3, 5, 48, 61, 77, 91, 177, 191, 195, 198, 204, 206, 216, 217, 219, 223, 224, 230, 235, 241, 242, 266, 279, 302, 312, 316, 317, 318, 319, 320, 321], "deriv": [2, 67, 79, 84, 86, 94, 97, 99, 191, 192, 193, 194, 195, 196, 197, 198, 206, 213, 221, 241, 250, 280, 289, 299, 305, 312], "direct": [2, 5, 6, 7, 9, 19, 23, 29, 30, 34, 35, 41, 42, 45, 46, 48, 60, 61, 64, 65, 204, 206, 216, 217, 219, 221, 225, 227, 228, 229, 230, 231, 232, 233, 236, 237, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 264, 267, 269, 272, 290, 291, 292, 293, 294, 296, 297, 298, 300, 302, 303, 305, 309, 312, 316, 317, 318, 319, 320, 321], "via": [2, 4, 5, 19, 23, 67, 68, 69, 70, 94, 150, 158, 161, 177, 204, 216, 218, 219, 222, 224, 235, 240, 248, 260, 264, 271, 276, 312, 324, 325], "argument": [2, 3, 4, 5, 6, 14, 19, 20, 21, 22, 23, 24, 25, 26, 67, 68, 69, 70, 76, 86, 87, 97, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 177, 199, 204, 217, 218, 219, 221, 222, 223, 224, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 245, 247, 249, 251, 252, 253, 254, 255, 262, 266, 271, 273, 275, 276, 281, 283, 290, 294, 297, 298, 301, 302, 308, 312, 313], "order": [2, 5, 19, 20, 61, 92, 93, 94, 167, 216, 219, 221, 223, 227, 233, 235, 238, 241, 242, 243, 244, 246, 247, 249, 254, 255, 258, 260, 261, 262, 263, 264, 269, 273, 276, 291, 293, 295, 297, 299, 301, 304, 306, 309, 312, 319, 320, 321, 325], "exist": [2, 67, 68, 70, 71, 72, 86, 161, 162, 204, 221, 224, 255, 323, 324, 325], "In": [2, 5, 6, 20, 23, 35, 40, 48, 92, 94, 193, 204, 206, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 245, 246, 247, 249, 250, 254, 255, 256, 257, 258, 260, 261, 263, 264, 265, 266, 267, 269, 272, 273, 275, 276, 279, 281, 282, 283, 291, 292, 293, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 306, 309, 310, 311, 312, 316, 318, 319, 320, 321, 322, 323, 325], "case": [2, 4, 5, 6, 20, 21, 23, 24, 25, 67, 76, 177, 220, 221, 223, 224, 227, 229, 231, 232, 234, 235, 237, 254, 256, 263, 272, 275, 280, 282, 283, 289, 301, 312, 318, 319, 321], "more": [2, 3, 5, 6, 14, 20, 23, 67, 91, 94, 95, 162, 188, 204, 206, 207, 217, 219, 223, 225, 227, 228, 230, 231, 232, 234, 235, 237, 243, 244, 251, 252, 255, 258, 281, 283, 289, 290, 291, 292, 300, 302, 306, 308, 312, 315, 318, 320, 321, 323, 324, 325], "precis": [2, 5, 14, 20, 23, 86, 150, 161, 162, 204, 219, 231, 232, 234, 237, 251, 252, 281, 283, 306, 321, 322, 325], "assum": [2, 217, 219, 224, 235, 242, 247, 272, 297, 312, 314, 315, 318, 319, 321], "doe": [2, 19, 67, 68, 71, 72, 162, 166, 177, 191, 192, 193, 194, 195, 196, 197, 198, 204, 215, 216, 219, 229, 231, 232, 237, 240, 246, 254, 255, 260, 263, 264, 269, 270, 275, 278, 283, 286, 293, 297, 302, 309, 312, 313, 322, 324], "chang": [2, 4, 5, 19, 20, 23, 67, 94, 185, 191, 192, 193, 194, 195, 196, 197, 198, 199, 216, 217, 218, 219, 220, 221, 223, 224, 226, 229, 231, 232, 233, 237, 241, 242, 243, 244, 249, 253, 254, 262, 265, 271, 273, 276, 277, 280, 281, 283, 293, 297, 301, 302, 315, 318, 319, 322, 324, 325, 326], "strongli": [2, 219, 238], "boundari": [2, 3, 5, 204, 209, 223, 225, 241, 243, 244, 289, 293, 297], "condit": [2, 3, 5, 209, 223, 225, 235, 243, 244, 289, 297], "period": [2, 3, 5, 243, 244, 245, 246, 289, 297, 312], "neumann": [2, 5], "central": [2, 94, 219], "insid": [2, 6, 204, 218, 219, 220, 221, 222, 223, 241, 246, 249, 255, 259, 260, 273, 296, 297, 305, 320, 324], "forward": [2, 19, 217, 238, 312], "backward": 2, "notimplementederror": [2, 251, 252, 255], "higher": [2, 93, 188, 217, 221, 240, 243, 244, 254, 322], "than": [2, 19, 67, 68, 204, 206, 217, 223, 231, 240, 242, 281, 312], "ask": [2, 41, 220, 221, 226, 227, 228, 229, 231, 232, 233, 235, 237, 260, 281, 320, 321, 323, 324], "spatial": [2, 3, 5, 19, 23, 33, 36, 37, 45, 75, 76, 77, 85, 88, 89, 91, 93, 94, 204, 209, 217, 219, 223, 247, 251, 252, 283, 289, 293, 307, 324, 326], "vari": [2, 75, 76, 77, 85, 88, 89, 91, 93, 94, 209, 219, 233, 241, 251, 252, 258, 276, 283, 289, 307, 312, 318, 322], "we": [2, 6, 42, 48, 64, 65, 166, 204, 205, 206, 207, 208, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325], "choos": [2, 4, 177, 204, 223, 226, 231, 232, 235, 237, 263, 273, 275, 289, 291, 292, 293, 294, 298, 301, 303, 307, 308, 311, 319, 320, 325], "2x": 2, "3y": 2, "5z": 2, "accordingli": [2, 4, 5, 6, 20, 21, 23, 24, 25, 177, 230, 231, 235, 274, 283, 302, 311, 321], "expect": [2, 3, 12, 36, 228, 231, 232, 237, 261, 263, 264, 267, 269, 274, 275, 279, 294, 298, 302, 303, 309, 319, 320, 322], "100e": [2, 6, 206, 221, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 241, 242, 268, 290, 292, 295, 299, 319, 321], "try": [2, 219, 221, 227, 229, 236, 251, 252, 255, 256, 272, 277, 279, 282, 283, 289, 299, 303, 316, 320, 324, 325, 326], "howev": [2, 20, 177, 217, 218, 219, 221, 223, 224, 227, 228, 231, 232, 237, 241, 244, 246, 247, 249, 256, 265, 272, 280, 282, 283, 297, 307, 318, 321, 322, 325], "calcul": [2, 4, 5, 6, 20, 21, 23, 24, 25, 29, 31, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 86, 115, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 161, 174, 177, 204, 206, 208, 210, 215, 221, 225, 235, 240, 241, 243, 244, 245, 246, 247, 255, 259, 289, 290, 294, 298, 313, 320, 324], "from_xarrai": [2, 204], "xa": 2, "xarrai": [2, 19, 67, 204, 209, 216, 217, 248, 326], "dataarrai": [2, 19, 67, 204, 209, 217, 248, 326], "accept": [2, 4, 5, 6, 19, 20, 21, 22, 23, 24, 25, 69, 70, 86, 150, 177, 192, 194, 195, 198, 218, 219, 231, 232, 233, 237, 251, 252, 275, 276, 283, 302, 312], "four": [2, 67, 217, 238, 246], "addition": [2, 94, 217, 219, 255, 324, 325], "comp": [2, 19, 67, 238, 248], "correspond": [2, 5, 19, 20, 206, 217, 224, 232, 233, 235, 240, 276, 321], "geometr": [2, 238], "ax": [2, 4, 5, 6, 20, 21, 22, 23, 24, 25, 26, 67, 177, 204, 219, 221, 223, 230, 231, 232, 237, 238, 240, 245, 254, 261, 273, 275, 291, 312, 322], "respect": [2, 4, 42, 43, 48, 60, 61, 67, 204, 219, 223, 228, 232, 238, 240, 243, 246, 312], "repres": [2, 4, 67, 193, 204, 206, 223, 238, 319, 322], "along": [2, 5, 6, 41, 42, 46, 64, 65, 67, 177, 204, 217, 223, 227, 233, 236, 238, 239, 240, 241, 243, 247, 272, 293, 296, 302, 305, 319, 320, 322], "axi": [2, 4, 5, 6, 20, 21, 23, 24, 25, 26, 177, 204, 217, 218, 219, 221, 223, 226, 227, 229, 231, 232, 236, 237, 238, 240, 242, 243, 244, 245, 254, 258, 261, 265, 267, 273, 275, 290, 298, 302, 303, 307, 312, 316, 317, 319, 322], "space": [2, 19, 32, 40, 42, 51, 64, 65, 79, 86, 150, 177, 218, 221, 222, 227, 229, 231, 238, 240, 241, 242, 243, 244, 258, 261, 263, 264, 267, 269, 279, 308, 309, 312], "absenc": [2, 206], "util": [2, 19, 67, 68, 70, 71, 72, 163, 184, 190, 200, 204, 241, 265, 324], "note": [2, 19, 23, 60, 70, 71, 72, 76, 86, 87, 150, 204, 215, 216, 217, 218, 219, 223, 227, 231, 235, 240, 243, 244, 246, 249, 291, 292, 306, 312, 315, 322, 323, 324, 325], "keyerror": 2, "least": 2, "miss": [2, 177, 187, 204, 205, 208, 225, 227, 274], "ndim": 2, "xr": [2, 65, 238, 326], "ones": [2, 19, 67, 231, 238, 320], "float": [2, 4, 5, 6, 36, 169, 191, 195, 198, 199, 201, 202, 204, 238, 279, 322], "arang": [2, 29, 231, 238, 312], "name": [2, 4, 5, 10, 11, 12, 13, 14, 15, 19, 23, 46, 48, 67, 68, 69, 70, 71, 72, 86, 87, 90, 92, 97, 98, 112, 146, 150, 161, 162, 165, 166, 167, 177, 181, 183, 188, 191, 192, 194, 195, 196, 197, 198, 204, 206, 216, 217, 219, 221, 224, 231, 232, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 256, 257, 261, 263, 264, 265, 266, 267, 269, 271, 272, 274, 277, 279, 281, 283, 285, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 315, 316, 317, 318, 319, 320, 321, 322, 325], "mag": [2, 67, 238, 248], "21": [2, 204, 217, 219, 221, 223, 224, 226, 227, 230, 231, 238, 239, 246, 248, 249, 253, 254, 262, 271, 272, 274, 284, 291, 294, 298, 302, 303, 311, 312, 318, 321, 322], "fromfil": [2, 9, 10, 11, 12, 13, 14, 177, 178, 222, 271, 272, 273, 274, 275, 276], "filenam": [2, 4, 5, 6, 10, 11, 12, 13, 14, 15, 23, 24, 25, 86, 177, 181, 182, 183, 219, 222, 231, 232, 234, 237, 271, 275], "read": [2, 10, 11, 12, 13, 14, 70, 71, 72, 164, 177, 182, 204, 209, 249, 255, 260, 271, 297, 324], "ovf": [2, 11, 14, 16, 17, 70, 204, 222, 234, 324], "vtk": [2, 12, 15, 16, 17, 70, 204, 217, 218, 219, 222, 234, 248, 324], "hdf5": [2, 10, 13, 222, 324], "file": [2, 5, 10, 11, 12, 13, 14, 15, 16, 17, 67, 68, 70, 71, 72, 86, 91, 94, 95, 150, 161, 162, 164, 165, 166, 168, 177, 181, 182, 183, 204, 206, 218, 219, 221, 248, 255, 259, 260, 262, 264, 268, 271, 272, 273, 274, 275, 276, 291, 297, 300, 303, 312, 315, 322, 323, 324, 325], "omf": [2, 11, 204, 222, 234, 248], "ohf": [2, 14, 222], "oef": 2, "h5": [2, 13, 222], "base": [2, 3, 4, 5, 6, 18, 19, 20, 21, 22, 23, 24, 25, 29, 31, 32, 37, 44, 48, 61, 63, 67, 69, 70, 86, 150, 161, 177, 191, 204, 217, 218, 219, 225, 227, 231, 232, 233, 235, 237, 241, 248, 249, 251, 252, 255, 275, 276, 293, 300, 302, 326], "o": [2, 13, 14, 15, 37, 67, 68, 69, 70, 71, 72, 76, 162, 177, 178, 181, 182, 183, 204, 219, 222, 225, 226, 231, 232, 234, 237, 248, 249, 254, 262, 263, 271, 272, 273, 274, 275, 276, 290, 302, 319, 325], "dirnam": [2, 67, 68, 69, 70, 71, 72, 86, 150, 161, 177, 178, 181, 182, 183, 185, 248, 249, 262, 271, 273, 274, 275, 276], "path": [2, 10, 11, 12, 13, 14, 15, 42, 67, 68, 69, 70, 71, 72, 162, 165, 167, 168, 177, 178, 181, 182, 183, 204, 222, 240, 248, 249, 260, 262, 271, 272, 273, 274, 275, 276, 281, 297, 325], "join": [2, 67, 68, 69, 70, 71, 72, 177, 178, 181, 182, 183, 248, 249, 262, 271, 272, 273, 274, 275, 276], "__file__": [2, 10, 11, 12, 67, 68, 69, 70, 71, 72, 177, 178, 181, 182, 183], "test": [2, 6, 10, 11, 12, 67, 68, 69, 70, 71, 72, 114, 115, 146, 170, 172, 177, 178, 181, 182, 183, 235, 248, 249, 259, 271, 273, 274, 275, 276, 286, 324], "test_sampl": [2, 10, 11, 12, 67, 68, 69, 70, 71, 72, 177, 178, 181, 182, 183, 248, 249, 271, 273, 274, 275, 276], "oommf": [2, 11, 72, 76, 86, 91, 94, 95, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 177, 178, 181, 182, 183, 204, 206, 210, 215, 222, 239, 240, 242, 243, 244, 245, 247, 254, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 281, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 316, 317, 318, 319, 320, 324], "ovf2": [2, 11, 14], "bin4": [2, 11, 14, 86, 150, 161, 204, 222], "write": [2, 6, 9, 12, 13, 14, 15, 86, 87, 150, 164, 204, 205, 209, 220, 221, 255, 306, 312, 322, 324], "field_from_ovf": [2, 14], "field_from_vtk": [2, 15], "field_from_hdf5": [2, 13], "xyz": [2, 5, 7, 196, 221, 228, 243], "improp": [2, 7], "ce": 2, "explicitli": [2, 71, 72, 167, 217, 219, 231, 232, 237, 256, 260, 275, 280], "infinitesim": 2, "dvalu": 2, "befor": [2, 20, 23, 67, 68, 70, 167, 191, 204, 219, 221, 225, 227, 231, 235, 249, 253, 254, 312, 316, 318, 319, 320, 321, 322, 325], "cumul": 2, "volum": [2, 3, 5, 6, 29, 46, 65, 223, 235, 245, 246, 294, 298, 322, 324], "int_": [2, 41, 206, 221, 299], "mathrm": [2, 219, 246, 312, 319], "v": [2, 4, 6, 33, 37, 40, 43, 65, 206, 221, 225, 226, 235, 240, 245, 246, 251, 278, 299], "r": [2, 4, 5, 6, 219, 221, 222, 226, 231, 232, 237, 239, 240, 241, 242, 243, 244, 245, 247, 251, 252, 293, 296, 305, 321, 325], "5000": 2, "2000": 2, "3000": 2, "f_plane": 2, "500": [2, 5, 98, 206, 240, 291, 302, 307, 308, 312, 316], "flux": [2, 41, 46, 52, 245], "300": [2, 43, 217, 240, 283, 302], "x_": [2, 221], "min": [2, 6, 235, 240, 245, 278], "max": [2, 6, 221, 235, 240, 241, 243, 244, 245, 249, 271, 278, 324], "30": [2, 20, 188, 199, 206, 217, 219, 221, 223, 224, 238, 241, 242, 246, 248, 249, 254, 274, 302, 303, 310, 311, 312, 321, 322], "line": [2, 5, 6, 15, 17, 19, 23, 24, 25, 150, 204, 209, 231, 232, 234, 237, 240, 241, 270, 296, 303, 305, 312, 316, 319, 322, 323, 325], "given": [2, 3, 5, 19, 29, 30, 33, 35, 36, 40, 41, 48, 61, 186, 224, 225, 240, 241, 244, 246, 253, 254, 312, 319, 324, 325], "_": [2, 5, 6, 40, 41, 42, 46, 48, 75, 77, 78, 89, 91, 206, 217, 225, 227, 231, 240, 241, 245, 246, 253, 254, 257, 292, 294, 298, 299, 300, 311, 318, 320], "frac": [2, 5, 6, 37, 40, 41, 42, 43, 46, 48, 60, 61, 65, 76, 77, 78, 89, 91, 95, 206, 218, 221, 225, 228, 235, 240, 241, 243, 244, 245, 246, 253, 254, 257, 263, 290, 291, 292, 294, 298, 299, 300, 305, 311, 318, 320], "outsid": [2, 5, 48, 204, 218, 219, 220, 221, 235, 241, 249, 295, 296, 305], "domain": [2, 5, 74, 218, 272, 290, 291, 292, 301, 310, 312, 314, 318, 321, 324], "pad": [2, 5, 209, 241], "pad_width": [2, 5, 230], "mode": [2, 164, 204, 241], "ad": [2, 4, 5, 6, 20, 21, 22, 23, 24, 25, 26, 69, 94, 98, 99, 150, 177, 206, 219, 230, 248, 253, 254, 256, 258, 263, 264, 274, 291, 312, 316, 322, 325], "chosen": [2, 3, 5, 36, 67, 68, 70, 94, 177, 217, 232, 235, 236, 237, 260, 319], "assign": [2, 4, 19, 34, 191, 216, 219, 231, 253, 254, 255, 260, 273, 277, 279, 282, 322], "them": [2, 4, 67, 70, 98, 217, 221, 223, 226, 227, 231, 232, 235, 237, 240, 243, 244, 253, 254, 265, 275, 279, 289, 290, 307, 319, 320, 323], "wai": [2, 5, 23, 167, 177, 205, 217, 218, 219, 222, 224, 227, 228, 229, 231, 232, 237, 240, 246, 253, 254, 258, 261, 263, 264, 267, 269, 273, 275, 281, 283, 291, 298, 301, 306, 309, 312, 316, 321, 322, 325], "go": [2, 5, 6, 23, 86, 206, 216, 219, 221, 224, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 256, 261, 263, 264, 265, 266, 267, 269, 271, 275, 276, 291, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 309, 311, 319, 320, 322, 325], "integ": [2, 5, 186, 191, 195, 198, 216, 221, 223, 227, 229, 230, 232, 279, 282, 322], "neg": [2, 5, 61, 69, 77, 89, 191, 224, 230, 241, 251, 252, 269, 289, 306, 309, 319, 321], "pf": 2, "arg": [2, 3, 5, 67, 177, 281], "perpendicular": [2, 5, 6, 46, 221, 229, 236, 243, 245, 254, 263, 319], "intersect": [2, 5, 217, 219, 229], "centr": [2, 5, 6, 206, 218, 224, 227, 229, 231, 235, 291, 292, 321], "keyword": [2, 3, 4, 5, 6, 19, 20, 21, 22, 23, 24, 25, 26, 68, 69, 70, 97, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 177, 193, 204, 217, 218, 219, 233, 255, 276, 302], "parallel": [2, 5, 64, 65, 204, 221, 240, 243, 244, 246, 247, 260, 261, 264, 267, 269, 285, 290, 303, 309, 318, 319], "yz": [2, 5, 219, 221, 312], "15": [2, 5, 6, 177, 204, 206, 216, 217, 218, 219, 221, 223, 224, 225, 226, 227, 231, 232, 235, 237, 240, 241, 245, 246, 248, 249, 253, 254, 261, 264, 267, 269, 274, 281, 284, 291, 292, 296, 299, 302, 305, 306, 309, 311, 312, 316, 317, 319, 320, 321, 322], "specif": [2, 5, 40, 61, 74, 86, 91, 94, 95, 150, 167, 191, 192, 194, 195, 198, 199, 207, 210, 231, 240, 244, 247, 251, 252, 255, 259, 289, 301, 324, 325], "project": [2, 158, 173, 217, 219, 231, 232, 237, 279, 300, 323, 324, 326], "out": [2, 5, 19, 23, 42, 70, 166, 206, 217, 219, 235, 239, 240, 241, 242, 247, 275, 293, 310, 316, 317, 322, 325], "One": [2, 3, 76, 221, 224, 238, 313, 321], "would": [2, 69, 150, 192, 194, 195, 198, 217, 219, 223, 224, 227, 230, 231, 240, 251, 252, 274, 279, 282, 283, 299, 312, 323, 325], "certain": [2, 19, 23, 191, 197, 219, 220, 221, 225, 227, 230, 233, 258, 273, 275, 276, 279, 282, 298, 312, 322], "to_vtk": 2, "convert": [2, 5, 6, 15, 177, 204, 217, 231, 232, 234, 237, 238, 246, 248], "rectilinear": [2, 12], "grid": [2, 12, 219, 223, 290, 291, 293, 300], "conver": 2, "vtkrectilineargrid": 2, "store": [2, 4, 15, 67, 86, 150, 161, 177, 204, 226, 238, 248, 249, 271, 275, 276, 300], "cell_data": [2, 15], "rectilinear_grid": [2, 15], "attributeerror": [2, 97, 98, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 191, 192, 193, 194, 195, 196, 197, 198, 199, 221, 255, 277, 279, 283], "f_vtk": 2, "getnumberofcel": 2, "to_xarrai": [2, 67, 204, 248], "addtion": 2, "select": [2, 4, 5, 19, 37, 61, 67, 68, 69, 70, 170, 177, 206, 217, 225, 233, 238, 241, 243, 244, 246, 248, 273, 275, 276, 325], "sel": [2, 238], "bin8": [2, 11, 14, 15, 86, 150, 161, 204, 222], "extend_scalar": [2, 14, 204], "save_subregion": [2, 5, 13, 14, 15], "written": [2, 10, 12, 13, 14, 42, 46, 86, 91, 95, 150, 161, 204, 221, 268], "field_to_vtk": [2, 12], "bin": [2, 15, 170, 204, 260, 270, 281, 325], "txt": [2, 11, 14, 15, 86, 150, 161, 177, 181, 182, 183, 204, 222, 271, 324], "xml": [2, 15, 204], "save": [2, 4, 5, 6, 9, 13, 14, 15, 23, 24, 25, 69, 70, 71, 72, 86, 87, 150, 162, 177, 204, 206, 217, 219, 222, 231, 232, 237, 255, 262, 265, 266, 271, 275, 291, 292, 293, 302, 318], "field_to_ovf": [2, 11], "final": [2, 3, 206, 221, 222, 223, 227, 231, 232, 235, 237, 242, 247, 257, 261, 263, 264, 266, 267, 269, 271, 274, 275, 290, 291, 293, 296, 299, 301, 303, 305, 309, 313, 319, 325], "field_to_hdf5": [2, 10], "interpret": [2, 217, 227, 325], "valid": [2, 5, 6, 24, 25, 191, 192, 193, 194, 195, 196, 197, 198, 199, 220, 231, 232, 237, 251, 252, 279, 283], "format": [2, 5, 6, 24, 25, 86, 150, 161, 204, 206, 222, 234, 290, 291, 294], "json": [2, 5, 13, 14, 15, 204], "15e": [2, 219, 226, 241, 312, 316, 317], "7": [2, 5, 6, 69, 91, 206, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 251, 252, 253, 257, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 279, 283, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 302, 303, 305, 306, 309, 310, 311, 312, 316, 317, 318, 319, 320, 321, 322, 324], "mytestfil": [2, 13, 14, 15], "isfil": [2, 13, 14, 15, 222], "field_read": [2, 13, 14], "delet": [2, 13, 14, 15, 166, 191, 206, 222, 264, 268], "__hash__": [2, 5, 6, 98, 99], "angl": [2, 3, 23, 30, 34, 35, 55, 56, 57, 59, 65, 204, 211, 219, 242, 245, 324], "slice": [2, 5, 19, 20, 23, 36, 37, 70, 204, 218, 219, 221, 225, 229, 241, 249, 293, 320, 321], "compoen": 2, "horizont": [2, 4, 177, 219, 231, 232, 237, 273, 275, 302, 307], "radian": [2, 30, 34, 35, 225, 240, 241], "pi": [2, 3, 37, 40, 41, 60, 61, 65, 94, 95, 206, 221, 223, 225, 239, 240, 242, 243, 244, 245, 246, 290, 305, 311, 312, 319, 322], "rang": [2, 4, 5, 23, 177, 186, 219, 242, 261, 264, 267, 269, 272, 273, 275, 299, 303, 304, 306, 309, 319, 322], "unsupport": [2, 221, 322], "ones_lik": 2, "entir": [2, 221, 227, 231, 269, 275, 309], "55": [2, 219, 221, 254, 263], "conjug": [2, 65, 149, 221, 240], "complex": [2, 65, 204, 235, 237, 272], "curl": [2, 290, 299], "nabla": [2, 76, 85, 95, 206, 253, 254, 257, 263, 264, 291, 292, 294, 298, 299, 305, 306, 319, 320], "time": [2, 6, 33, 37, 42, 46, 61, 67, 70, 71, 72, 76, 77, 86, 87, 89, 91, 94, 95, 157, 169, 177, 204, 206, 208, 224, 225, 240, 243, 245, 246, 248, 251, 253, 255, 257, 260, 263, 264, 265, 271, 272, 273, 274, 275, 276, 289, 291, 292, 293, 294, 297, 298, 299, 300, 302, 305, 307, 313, 315, 316, 317, 318, 319, 320, 321, 323], "left": [2, 37, 40, 41, 42, 43, 46, 48, 61, 65, 76, 91, 206, 221, 225, 235, 240, 241, 243, 244, 245, 246, 247, 248, 254, 261, 263, 264, 267, 279, 291, 305, 318, 322, 324], "partial": [2, 37, 41, 48, 76, 206, 221, 225, 240, 241, 254, 263, 305], "v_": [2, 278], "right": [2, 26, 37, 40, 41, 42, 43, 46, 48, 61, 65, 76, 91, 206, 221, 225, 232, 235, 237, 240, 241, 243, 244, 245, 246, 247, 248, 254, 261, 263, 264, 267, 279, 291, 305, 318, 324], "2xy": [2, 221], "2y": [2, 238], "5xz": 2, "diverg": [2, 23], "sum_i": 2, "fftn": 2, "fourier": [2, 32, 40, 42, 51, 61, 65, 177, 204, 240, 243, 244, 247, 272, 293], "transform": [2, 3, 32, 42, 51, 61, 65, 177, 204, 240, 243, 244, 247, 272, 293, 312], "fft": [2, 230, 287, 293, 322], "normal": [2, 217, 240, 248, 249, 254, 325], "2d": [2, 23, 217, 232, 237, 251, 263, 299, 320], "gradient": [2, 149], "contant": 2, "hv": [2, 67, 204, 206, 217, 241, 249], "plot": [2, 4, 5, 6, 8, 19, 20, 21, 22, 23, 24, 25, 50, 51, 52, 53, 54, 55, 56, 57, 58, 67, 177, 178, 204, 206, 207, 212, 216, 223, 225, 226, 231, 233, 238, 239, 240, 242, 243, 244, 245, 263, 265, 266, 272, 275, 276, 287, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 304, 305, 306, 307, 310, 312, 316, 317, 318, 320, 321, 326], "interfac": [2, 67, 204, 215, 217, 219, 249, 315, 324, 326], "holoview": [2, 19, 67, 204, 209, 218, 219, 249, 324], "hvplot": [2, 67, 217, 219, 241], "also": [2, 12, 24, 67, 94, 150, 161, 167, 192, 193, 194, 195, 198, 204, 206, 210, 217, 218, 219, 220, 221, 223, 226, 227, 231, 232, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249, 254, 258, 260, 263, 264, 266, 272, 275, 280, 282, 283, 286, 290, 294, 298, 302, 312, 318, 319, 321, 322, 323, 325], "quickli": [2, 67, 217, 222], "avail": [2, 19, 37, 67, 94, 146, 167, 170, 174, 204, 208, 217, 221, 223, 225, 242, 248, 250, 260, 268, 272, 281, 300, 312, 315, 324, 325], "document": [2, 3, 19, 23, 67, 91, 94, 95, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 204, 217, 218, 219, 221, 223, 242, 247, 249, 251, 252, 258, 280, 289, 300, 312, 315, 323], "link": [2, 67, 325], "below": [2, 67, 217, 221, 223, 241, 247, 312, 322, 325], "contour": [2, 15, 19, 23, 67, 204, 240], "kdim": [2, 19, 67, 206, 217, 241, 249], "dynamicmap": [2, 19, 67], "ifftn": 2, "invers": [2, 177, 272], "imag": [2, 19, 40, 48, 50, 64, 164, 204, 208, 221, 260, 297, 325], "imaginari": [2, 55, 221], "part": [2, 19, 70, 193, 207, 217, 221, 223, 224, 227, 235, 240, 241, 245, 248, 261, 263, 264, 267, 269, 273, 292, 300, 305, 317, 320, 321, 324], "irfftn": 2, "k3d": [2, 5, 6, 20, 21, 22, 204, 206, 209, 217, 219, 223, 247, 257, 261, 263, 264, 267, 269, 291, 292, 294, 296, 298, 301, 303, 304, 305, 306, 309, 310, 311, 316, 317, 319, 320, 321, 324, 326], "laplac": [2, 299], "laplacian": 2, "f_": [2, 33, 221, 311], "assert": 2, "mpl": [2, 4, 5, 6, 8, 22, 23, 24, 25, 40, 42, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 64, 65, 177, 178, 204, 206, 222, 223, 225, 226, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 262, 263, 265, 266, 272, 273, 275, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 318, 319, 320, 321], "matplotlib": [2, 4, 5, 6, 18, 23, 24, 25, 26, 40, 41, 42, 48, 60, 61, 64, 65, 177, 204, 206, 209, 217, 218, 223, 231, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 263, 273, 275, 290, 291, 293, 296, 302, 305, 312, 321, 324], "light": [2, 23, 43, 52, 64, 65, 204, 240, 244, 247], "obtain": [2, 6, 23, 29, 41, 64, 94, 204, 219, 221, 223, 229, 233, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 260, 271, 272, 276, 291, 293, 316, 319, 324], "wrong": [2, 75, 76, 77, 85, 88, 89, 90, 91, 93, 94, 95, 204], "addit": [2, 3, 12, 19, 20, 23, 68, 70, 86, 150, 161, 164, 177, 188, 204, 216, 217, 219, 223, 224, 225, 232, 237, 238, 241, 242, 248, 249, 254, 255, 258, 281, 286, 291, 297, 306, 312, 319, 325], "manipul": [2, 176, 218, 238, 271, 310], "orient": [2, 37, 204, 206, 219, 221, 225, 233, 249, 276, 296, 299, 305, 310, 312, 319, 320, 324], "everi": [2, 70, 71, 72, 204, 216, 227, 248, 249, 258, 272, 281, 293, 325], "so": [2, 4, 5, 6, 20, 21, 22, 23, 24, 25, 69, 70, 88, 177, 204, 216, 217, 218, 219, 227, 231, 232, 233, 237, 240, 243, 244, 260, 261, 265, 267, 275, 276, 290, 293, 297, 299, 302, 303, 306, 307, 317, 319, 321, 323, 324, 325], "remain": [2, 19, 150, 217, 246, 263, 264, 301, 312], "unchang": 2, "phase": [2, 40, 41, 48, 50, 51, 52, 53, 54, 58, 79, 86, 94, 150, 221, 240, 241, 242], "rfftn": 2, "appropri": [2, 4, 5, 6, 20, 21, 23, 24, 25, 177, 291, 312, 316, 319, 325], "independ": [2, 23, 67, 68, 70, 71, 72, 94, 177, 204, 219, 221, 249, 255, 271, 272, 274, 275, 324, 325], "actual": [2, 204, 216, 223, 224, 260, 320, 325], "initi": [2, 3, 67, 94, 112, 191, 192, 193, 194, 195, 196, 197, 198, 204, 206, 217, 223, 239, 240, 241, 242, 243, 244, 245, 247, 248, 263, 272, 277, 292, 293, 296, 297, 301, 305, 306, 307, 308, 312, 318, 319], "anymor": [2, 216, 220, 221, 223], "value_funct": [2, 221], "now": [2, 204, 206, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 235, 236, 237, 239, 241, 243, 244, 246, 249, 251, 252, 253, 254, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 269, 271, 273, 274, 276, 279, 280, 282, 283, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 318, 319, 320, 321, 322, 325], "sub1": 2, "sub2": 2, "s1": 2, "s2": 2, "zero_field": 2, "rotat": [3, 94, 204, 209, 211, 232, 237, 243, 245, 312], "dure": [3, 4, 87, 97, 150, 167, 204, 206, 216, 221, 223, 265, 291, 301, 320, 325], "new": [3, 12, 26, 67, 70, 71, 72, 167, 170, 177, 181, 182, 183, 204, 207, 210, 216, 217, 218, 219, 220, 221, 223, 224, 227, 229, 230, 238, 248, 249, 260, 271, 272, 276, 280, 282, 289, 314, 315, 320, 322, 323, 324, 325], "construct": 3, "interpol": [3, 19, 217, 219, 223, 240, 241, 243, 244, 247, 312], "onto": [3, 23, 223], "consecut": [3, 223, 248, 249], "possibl": [3, 26, 34, 35, 36, 94, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 188, 204, 205, 217, 219, 221, 222, 223, 224, 225, 235, 238, 241, 243, 244, 248, 249, 258, 260, 264, 283, 312], "without": [3, 12, 19, 46, 87, 94, 166, 204, 208, 217, 219, 229, 232, 237, 260, 298, 312, 318, 319, 323, 324], "numer": [3, 182, 204, 206, 223, 227, 291, 312, 313, 324], "error": [3, 87, 162, 164, 165, 166, 168, 204, 223, 227, 231, 260, 293, 325], "alwai": [3, 19, 177, 216, 217, 219, 221, 223, 227, 235, 274, 275, 302, 304, 321], "start": [3, 6, 29, 69, 94, 204, 207, 210, 216, 219, 223, 226, 227, 231, 232, 236, 237, 261, 263, 264, 265, 266, 267, 269, 273, 281, 289, 291, 292, 293, 298, 299, 302, 304, 306, 308, 309, 310, 311, 312, 315, 318, 319, 324], "unrot": [3, 223], "effect": [3, 19, 48, 223, 241, 244, 247, 295, 298, 318, 319, 324], "math": [3, 23, 91, 94, 95, 149, 151, 152, 153, 154, 156, 157, 206, 221, 261, 264, 267, 305, 312, 322], "field_rot": [3, 223, 242, 247], "from_eul": [3, 223, 242], "seq": [3, 223, 242], "clear_rot": [3, 223, 242], "definit": [3, 37, 94, 216, 224, 225, 231, 235, 246, 258, 295, 312, 316, 321, 322, 324], "scipi": [3, 223, 246, 290, 293, 322], "These": [3, 46, 61, 204, 217, 235, 240, 241, 243, 246, 247, 248, 249, 258, 312], "directli": [3, 19, 23, 70, 94, 150, 169, 204, 217, 223, 227, 240, 241, 246, 247, 249, 286, 312, 325], "relev": [3, 61, 223, 240, 241, 242, 243, 246, 247, 291, 300, 312, 323], "explan": [3, 94, 205, 207, 208, 217], "align_vector": [3, 223, 242, 247], "like": [3, 19, 217, 221, 222, 223, 231, 232, 235, 237, 245, 249, 263, 273, 275, 296, 302, 320, 323, 325], "kept": [3, 19, 217, 223], "fix": [3, 150, 223, 289, 312], "consist": [3, 5, 75, 88, 93, 94, 146, 204, 206, 217, 223, 228, 229, 231, 232, 253, 254, 255, 257, 261, 263, 264, 267, 269, 286, 299, 301, 303, 304, 306, 309, 310, 318, 319, 324], "step": [3, 67, 70, 91, 94, 95, 150, 186, 204, 206, 219, 223, 225, 233, 238, 248, 249, 255, 266, 268, 271, 276, 278, 281, 285, 291, 292, 293, 295, 299, 300, 301, 302, 311, 312, 313, 317, 318, 325], "remesh": [3, 223], "produc": [3, 240, 241, 243, 245, 268], "larger": [3, 19, 23, 204, 219, 223, 230, 232, 291], "done": [3, 19, 204, 218, 219, 223, 231, 248, 249, 251, 252, 271, 272, 278, 300, 306, 308, 312, 324], "mostli": [3, 6, 204], "linear": [3, 223, 243, 244], "process": [3, 94, 204, 241, 312], "notebook": [3, 204, 205, 210, 215, 217, 218, 219, 221, 235, 246, 248, 249, 253, 254, 262, 281, 289, 299, 310, 315, 322, 323, 324, 325], "from_quat": [3, 223], "from_matrix": [3, 223], "from_rotvec": [3, 223], "from_mpr": 3, "keep": [3, 216, 223, 229, 262, 301, 318], "point_column": [4, 226], "value_column": [4, 226], "panda": [4, 69, 177, 206, 238, 271, 291], "datafram": [4, 69, 177, 271, 291], "On": [4, 15, 37, 166, 204, 216, 225, 228, 230, 235, 258, 259, 260, 283, 297, 323, 324, 325], "hand": [4, 15, 216, 228, 230, 235, 248, 258, 259, 283, 290], "column": [4, 67, 68, 69, 70, 71, 72, 177, 183, 204, 206, 226, 271, 272, 273, 274, 275, 276, 302, 311, 318], "distanc": [4, 204, 233, 240, 246], "By": [4, 19, 20, 23, 204, 216, 217, 218, 219, 222, 223, 226, 227, 228, 233, 238, 256, 265, 268, 271, 273, 274, 275, 321, 322, 323, 324, 325], "where": [4, 5, 6, 19, 20, 21, 23, 24, 25, 30, 37, 40, 42, 43, 45, 46, 48, 60, 61, 65, 91, 95, 146, 150, 177, 183, 206, 217, 218, 219, 221, 223, 225, 230, 231, 232, 233, 235, 237, 240, 241, 243, 244, 245, 246, 259, 261, 262, 263, 264, 267, 269, 273, 275, 290, 291, 294, 298, 309, 315, 318, 319, 321, 322, 325], "px": [4, 226], "py": [4, 23, 217, 218, 219, 221, 226, 259, 260, 281, 296, 303, 305, 322], "pz": [4, 226], "vx": [4, 224, 226], "vy": [4, 224, 226], "vz": [4, 224, 226], "compos": 4, "retriev": [4, 222, 253, 254], "form": [4, 12, 205, 240, 243, 245, 247, 299, 301, 317], "expos": [4, 177, 218, 219, 231, 232, 237, 273, 275, 324], "repr": [4, 92, 97, 98, 164, 165, 166, 167, 168, 177, 235, 251, 252, 253, 254], "figsiz": [4, 5, 6, 23, 24, 25, 177, 219, 226, 231, 232, 237, 262, 266, 275, 290, 291, 293, 295, 299, 301, 303, 304, 306, 309, 310, 312, 317, 319], "yaxi": [4, 226, 273], "xlim": [4, 177, 178, 226, 273, 275, 293], "figur": [4, 5, 6, 23, 24, 25, 177, 204, 219, 223, 231, 232, 237, 240, 241, 247, 275, 290, 291, 293, 310, 321], "To": [4, 5, 6, 15, 19, 23, 24, 25, 94, 150, 177, 204, 206, 215, 217, 218, 219, 221, 223, 225, 228, 230, 232, 234, 236, 237, 240, 241, 242, 246, 248, 249, 253, 254, 255, 259, 272, 273, 275, 281, 297, 312, 315, 316, 318, 319, 322, 323, 324, 325], "particular": [4, 5, 19, 23, 67, 70, 161, 177, 204, 221, 238, 255, 260, 282, 291, 297, 324], "lenth": [4, 229, 231, 232, 237], "often": [4, 5, 6, 20, 21, 23, 24, 25, 177, 219, 227, 231, 235, 246, 247, 278, 279, 322], "nanoscal": [4, 5, 6, 20, 21, 23, 24, 25, 202], "veri": [4, 5, 6, 19, 20, 21, 23, 24, 25, 204, 205, 217, 224, 227, 234, 246, 248, 249, 312, 320, 323], "larg": [4, 5, 6, 20, 21, 23, 24, 25, 30, 67, 68, 70, 204, 219, 234, 248, 279, 293, 305, 312], "kilomet": [4, 5, 6, 20, 21, 23, 24, 25], "accord": [4, 5, 6, 19, 20, 21, 23, 24, 25, 177, 191, 218], "scale": [4, 5, 6, 20, 21, 23, 24, 25, 177, 204, 219, 241, 243, 244, 290, 295, 296, 305, 310], "shown": [4, 5, 6, 19, 20, 21, 23, 24, 25, 177, 204, 210, 217, 219, 221, 223, 231, 232, 233, 237, 240, 247, 254, 268, 272, 273, 275, 276, 279, 289, 291, 312, 315, 321, 323], "text": [4, 5, 6, 20, 21, 23, 24, 25, 76, 77, 78, 86, 89, 91, 94, 95, 150, 161, 177, 204, 206, 218, 219, 221, 222, 224, 227, 229, 231, 232, 235, 237, 246, 253, 254, 257, 258, 261, 263, 264, 266, 267, 269, 275, 278, 290, 291, 292, 293, 294, 298, 299, 300, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 318, 319, 320, 321], "nm": [4, 5, 6, 20, 21, 23, 24, 25, 46, 48, 206, 218, 219, 222, 227, 229, 231, 235, 240, 241, 245, 246, 291, 292, 293, 294, 295, 298, 310, 316, 317, 319, 320, 321], "pdf": [4, 5, 6, 23, 24, 25, 177, 219, 231, 232, 237, 275], "pyplot": [4, 5, 6, 23, 24, 25, 26, 177, 219, 231, 232, 237, 239, 240, 242, 245, 273, 275, 290, 291, 293, 302, 312], "limit": [4, 23, 177, 204, 219, 223, 226, 241, 247, 290, 312], "selector": [4, 5, 69, 177, 226, 248, 273], "interact": [4, 20, 48, 61, 90, 177, 204, 206, 208, 212, 217, 226, 232, 233, 237, 241, 243, 246, 265, 276, 287, 302, 306, 310, 312, 315, 316, 317, 318, 319, 321], "ipywidget": [4, 5, 8, 69, 70, 177, 178, 233, 276], "selectmultipl": [4, 177, 276], "widget": [4, 5, 19, 69, 70, 177, 209, 217, 219, 273, 287, 302], "slider": [4, 5, 8, 19, 70, 177, 178, 204, 217, 218, 219, 226, 241, 248, 249, 265, 273, 302, 310, 312, 316, 317], "selectionrangeslid": [4, 177], "navig": [4, 177, 233], "descript": [4, 5, 69, 70, 177, 219, 221, 224, 233, 276, 323, 324], "optimum": [4, 177], "denot": [4, 5, 230], "renam": [4, 177, 181, 183, 204, 217, 226, 271], "val": 4, "inappropri": 4, "p0": 4, "index": [4, 5, 98, 204, 227, 231, 248, 265, 302], "my_interesting_valu": 4, "bc": [5, 227, 228, 243, 244, 297, 299, 305], "m": [5, 6, 31, 33, 37, 40, 42, 43, 46, 48, 61, 65, 75, 76, 77, 78, 85, 89, 91, 92, 93, 94, 95, 104, 112, 202, 204, 206, 216, 217, 220, 221, 223, 224, 225, 227, 228, 229, 231, 232, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 257, 258, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 284, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 318, 319, 320, 321, 322, 324, 325], "cubic": [5, 75, 227, 232, 235, 246, 285, 290, 320, 321], "regular": 5, "sinc": [5, 94, 221, 223, 227, 235, 254, 311, 312, 324], "span": [5, 6, 226, 229, 241, 291, 292, 321], "instead": [5, 6, 9, 12, 19, 23, 71, 72, 150, 170, 204, 215, 216, 217, 219, 220, 221, 223, 233, 234, 268, 312, 315, 316, 322, 326], "charact": [5, 193, 228, 325], "dirichlet": [5, 228], "dirichlett": 5, "still": [5, 204, 217, 231, 260, 297, 312], "experiment": [5, 38, 64, 65, 204, 239, 240, 241, 243, 244, 245, 246, 247, 324], "necessari": [5, 19, 217, 218, 219, 220, 224, 229, 231, 236, 256, 263, 264, 274, 277, 279, 283, 290, 298, 301, 308, 310, 316, 318, 322, 325], "aggreg": 5, "align": [5, 61, 223, 240, 243, 245, 261, 263, 264, 267, 269, 303, 309, 312, 318, 319, 320], "properli": [5, 270], "diagon": [5, 6, 227, 235, 293], "opposit": [5, 6, 225, 227, 235], "d_": [5, 263], "n_": [5, 227], "empti": [5, 19, 26, 98, 192, 228, 241, 283], "well": [5, 11, 15, 94, 223, 224, 226, 227, 229, 231, 232, 235, 237, 238, 240, 253, 254, 265, 273, 283, 293, 300, 302, 306, 321, 324, 325], "ii": [5, 88], "iii": 5, "xy": [5, 219, 221, 223, 228, 229, 240, 243, 244, 249, 297, 299, 305, 312], "52": [5, 204, 219, 221, 244, 254, 267, 318, 319, 322], "mesh1": [5, 221], "mesh2": [5, 221], "mesh3": [5, 221], "len": [5, 69, 80, 82, 98, 227, 231, 240, 241, 321, 322], "pmin": [5, 6, 227, 235, 319, 321], "pmax": [5, 6, 223, 235, 319, 321], "submesh": [5, 221], "newli": [5, 86], "09": [5, 202, 206, 208, 217, 221, 226, 229, 231, 235, 238, 242, 243, 244, 247, 248, 249, 261, 263, 264, 265, 267, 269, 271, 284, 291, 301, 302, 311, 321], "__len__": [5, 98], "element": [5, 6, 19, 21, 23, 24, 46, 94, 146, 198, 201, 204, 217, 221, 227, 230, 231, 232, 236, 237, 244, 247, 248, 312], "total": [5, 29, 87, 204, 223, 227, 231, 268, 271, 294, 298, 312, 320, 321], "__or__": [5, 6], "common": [5, 207, 219, 243, 245, 283, 324], "region1": [5, 6, 75, 76, 77, 85, 88, 89, 91, 93, 94, 204, 224, 236, 258, 261, 263, 264, 267, 269, 283, 322], "45e": 5, "20e": [5, 6, 217, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 243, 245, 246, 247, 293, 304, 308, 310, 312, 316, 319, 321], "region2": [5, 6, 75, 76, 77, 85, 88, 89, 91, 93, 94, 204, 224, 236, 258, 261, 263, 264, 267, 269, 283], "42e": 5, "13e": [5, 206], "region3": [5, 6], "axis_selector": [5, 218, 219, 233], "dropdown": [5, 233], "radiobutton": [5, 219, 233], "show": [5, 15, 19, 23, 204, 206, 207, 217, 218, 219, 221, 223, 225, 226, 227, 231, 232, 234, 235, 237, 239, 240, 242, 245, 246, 249, 260, 265, 266, 268, 273, 275, 281, 290, 291, 294, 295, 297, 298, 299, 304, 306, 307, 312, 316, 318, 319, 324, 325], "index2point": [5, 227], "i_": [5, 40, 240], "point2index": [5, 227], "load_subregion": 5, "field_filenam": 5, "load": [5, 9, 12, 204, 271, 272, 293], "neighbour": [5, 30, 34, 35, 225, 227, 228, 246, 263, 312, 319], "xz": [5, 312], "extend": [5, 205, 230, 251, 252, 321, 324], "edg": [5, 6, 24, 25, 204, 206, 223, 227, 229, 230, 235, 238, 240, 241, 242, 244, 247, 279, 290, 294, 298, 320, 321], "padded_mesh": [5, 230], "120": [5, 219, 293, 321], "110": [5, 204], "12": [5, 6, 36, 37, 43, 82, 85, 92, 97, 98, 99, 162, 177, 198, 201, 202, 204, 206, 216, 217, 218, 219, 221, 223, 224, 225, 226, 227, 229, 231, 232, 233, 235, 237, 240, 241, 243, 245, 246, 248, 249, 250, 251, 253, 254, 256, 258, 260, 261, 262, 263, 264, 265, 266, 267, 269, 271, 272, 274, 275, 276, 284, 291, 292, 293, 294, 295, 296, 298, 299, 301, 302, 304, 305, 306, 309, 310, 311, 312, 316, 317, 318, 319, 320, 321, 322], "11": [5, 85, 92, 98, 99, 198, 201, 206, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 257, 258, 260, 261, 263, 264, 265, 267, 269, 271, 272, 274, 279, 291, 292, 293, 294, 296, 297, 298, 299, 300, 302, 303, 305, 306, 309, 311, 312, 318, 319, 320, 321, 322], "info": [5, 67, 68, 69, 70, 206, 248, 249, 265, 281, 302], "basic": [5, 19, 188, 204, 207, 209, 216, 217, 218, 221, 223, 226, 253, 254, 255, 257, 281, 287, 299, 314, 318, 320, 321, 324], "inform": [5, 19, 23, 29, 67, 68, 69, 70, 86, 87, 161, 204, 216, 219, 224, 234, 238, 240, 245, 246, 247, 248, 249, 260, 268, 281, 300, 312, 318, 323, 325], "about": [5, 6, 22, 29, 68, 69, 70, 86, 87, 161, 174, 204, 207, 216, 219, 227, 234, 235, 238, 242, 246, 248, 260, 290, 300, 312, 315], "plane_mesh": [5, 229], "region2slic": 5, "sr": 5, "selectionslid": [5, 233, 276], "magnitud": [5, 221, 241, 291, 293, 296, 302, 318], "color": [5, 6, 19, 20, 21, 22, 23, 24, 25, 217, 218, 219, 231, 232, 237, 240, 241, 243, 244, 245], "colour": [5, 6, 15, 20, 21, 22, 23, 24, 25, 217, 218, 219, 231, 232, 240, 241, 243, 244, 291], "voxel": [5, 6, 20, 21, 22, 218, 231, 232, 237], "wirefram": [5, 6, 20, 21, 22, 231], "palett": [5, 6, 20, 21, 22, 24, 25], "namedtupl": [5, 19], "collect": [5, 174, 223, 322, 324, 325], "depict": [5, 6, 24, 25, 219, 231, 232, 237], "linewidth": [5, 6, 24, 25, 219, 240, 302], "linestyl": [5, 6, 24, 25, 231, 232, 237, 302], "box_aspect": [5, 6, 24, 25, 204], "aspect": [5, 6, 24, 25, 204, 223], "ratio": [5, 6, 24, 25, 103, 204, 206, 223, 253, 272, 291, 292, 312, 316, 317, 318, 320], "auto": [5, 6, 24, 25, 204], "vertic": [5, 219, 227, 231, 232, 233, 237, 276, 307], "tolerance_factor": [6, 204], "cuboid": [6, 291, 292, 293, 296, 297, 305], "corner": [6, 223, 227, 228, 232, 235, 237, 242, 261, 263, 264, 267, 269, 296, 297, 305, 309], "_1": [6, 61, 243], "_2": 6, "_i": [6, 42, 240, 246], "p_x": 6, "p_y": 6, "p_z": 6, "mainli": [6, 204], "factor": [6, 48, 91, 94, 95, 102, 240, 241, 243, 244, 246, 253], "comparison": [6, 204, 312], "adjust": [6, 20, 94, 204, 217, 219], "accur": [6, 206, 322], "__contains__": [6, 98, 204], "le": [6, 202, 319, 321], "maximum": [6, 30, 34, 64, 177, 186, 201, 204, 225, 233, 235, 240, 241, 247, 271, 274, 276, 278, 290, 321], "usag": [6, 177, 192, 193, 194, 195, 196, 197, 198, 214, 234, 279], "face": [6, 90, 209, 306], "move": [6, 204, 206, 236, 312, 316], "minu": [6, 236, 312], "infin": [6, 236], "enter": [6, 236], "leav": [6, 236], "third": [6, 217, 219, 225, 227, 236, 312], "find": [6, 23, 87, 167, 201, 202, 207, 236, 260, 281, 290], "p11": [6, 236], "p12": [6, 236], "p21": [6, 236], "p22": [6, 236], "30e": [6, 236, 241, 242, 262, 301, 304, 317, 321], "random_point": [6, 220, 235], "random": [6, 235, 239, 240, 241, 243, 244, 245, 247, 261, 263, 264, 267, 269, 303, 304, 306, 309, 312], "200e": [6, 235], "ellipsi": 6, "exact": [6, 290, 312], "to_dict": 6, "middl": [6, 221, 228, 229, 321], "p_c": 6, "l": [6, 206, 246, 290, 293, 299, 312, 316, 319, 320], "p_2": 6, "p_1": 6, "l_": [6, 227, 231, 235, 237, 290, 291, 292], "th": 6, "l_x": 6, "l_y": 6, "l_z": 6, "discrteisedfield": 7, "decor": [8, 178, 191, 192, 193, 194, 195, 196, 197, 198, 199, 273, 288, 324], "wrapper": [8, 178], "around": [8, 23, 94, 177, 178, 223, 241], "packag": [8, 15, 27, 62, 73, 86, 87, 113, 147, 166, 171, 173, 175, 178, 179, 188, 189, 204, 205, 207, 240, 242, 243, 244, 246, 247, 250, 255, 259, 265, 270, 272, 281, 286, 289, 296, 302, 305, 315, 317, 318, 321, 322, 323, 325], "myplot": [8, 178, 218, 219, 226, 291, 317], "modul": [9, 39, 44, 47, 59, 63, 100, 148, 204, 218, 221, 245, 259, 260, 290, 291, 292, 293, 298, 304, 306, 310, 311, 312, 318, 320], "discourag": 9, "pathlib": [10, 11, 12, 13, 14, 15, 70, 204], "current_path": [10, 11, 12], "parent": [10, 11, 12, 81, 83, 187], "filepath": [10, 11, 12], "version": [11, 12, 166, 177, 181, 183, 204, 210, 221, 235, 281, 315, 323, 324, 325], "ovf1": 11, "do": [12, 19, 204, 205, 206, 216, 217, 219, 221, 231, 232, 235, 237, 240, 243, 244, 245, 246, 249, 258, 260, 261, 262, 263, 264, 265, 267, 268, 269, 275, 291, 292, 301, 302, 309, 312, 320, 323, 324, 325], "appear": [12, 23, 238, 240], "componentnam": 12, "older": 12, "did": [12, 204, 216, 223, 227, 265, 282, 302, 317, 320], "old": [12, 177, 178, 204, 221, 223, 273, 274, 275], "correct": [12, 19, 71, 72, 166, 204, 246, 272, 279, 300, 314], "user": [12, 20, 70, 71, 72, 86, 94, 150, 204, 207, 217, 223, 231, 260, 297, 312, 313, 323, 324, 325], "dataset": 15, "enabl": [15, 19, 204, 217, 239, 246], "easi": [15, 240, 241, 246, 247, 290, 312, 316, 317], "some": [15, 177, 204, 206, 217, 219, 221, 223, 224, 227, 231, 232, 235, 237, 243, 244, 246, 250, 251, 252, 253, 254, 255, 257, 260, 273, 291, 297, 299, 302, 304, 312, 318, 320, 321, 322, 323, 324, 325], "open": [15, 205, 228, 315, 323], "paraview": [15, 204, 222, 248], "mayavi": [15, 222], "filter": [15, 19, 23, 42, 204, 217, 219, 240, 247], "convers": [16, 17, 70, 204, 211, 234, 314, 322], "command": [17, 86, 87, 167, 204, 217, 234, 246, 260, 270, 281, 315, 320, 325], "key_dim": 19, "callback": [19, 67, 68, 70, 204, 249], "vdim_guess_callback": 19, "prior": 19, "norm_filt": [19, 217], "control": [19, 23, 91, 94, 95, 150, 161, 167, 170, 188, 204, 219, 233, 276, 285, 288, 313, 325], "behaviour": [19, 204, 219, 249, 255], "typic": [19, 67, 68, 70, 150, 161, 204, 216, 231, 240], "disabl": [19, 23, 217, 219], "global": [19, 260], "hv_key_dim": 19, "dynam": [19, 77, 81, 89, 91, 92, 95, 98, 99, 112, 204, 208, 213, 249, 257, 261, 263, 264, 266, 267, 269, 272, 291, 292, 295, 299, 300, 307, 308, 309, 311, 312, 314, 316, 317, 319, 322, 324], "arbitrari": [19, 65, 91, 94, 95, 204, 217, 243, 247, 312, 326], "vdims_guess_callback": 19, "guess": [19, 312, 320], "vdim": [19, 23, 206, 217, 219, 240], "roi": [19, 217], "scalar_kw": [19, 23, 204, 206, 217, 219, 249, 299, 303], "vector_kw": [19, 23, 204, 217, 219, 249, 295, 310], "optim": [19, 23, 290], "combin": [19, 23, 61, 67, 68, 70, 159, 204, 216, 223, 243, 247, 248, 312, 324], "quick": [19, 23, 232, 237, 320], "ignor": [19, 219, 223], "drop": [19, 217], "down": [19, 217, 279], "tri": [19, 167, 204, 323], "match": [19, 98, 177, 238, 273, 274, 275], "work": [19, 86, 150, 166, 204, 219, 221, 223, 231, 232, 237, 249, 275, 323, 324], "exclud": 19, "area": [19, 221, 223, 225, 241, 243, 244, 322], "hide": [19, 217], "reli": [19, 86, 87, 260, 268], "broadcast": [19, 322], "been": [19, 23, 167, 204, 217, 221, 223, 246, 249, 260, 272, 323, 324], "subplot": [19, 23, 26, 204, 219, 240, 245, 291, 312], "understand": [19, 23, 218, 224, 249, 312, 318, 320, 322], "reduc": [19, 35, 106, 204, 217, 219, 223, 225, 322], "simpl": [19, 204, 217, 219, 223, 232, 233, 237, 241, 246, 249, 261, 262, 263, 264, 265, 266, 267, 269, 276, 291, 301, 302, 309, 312, 318, 320, 321], "sort": [19, 204, 205, 241, 312], "just": [19, 206, 217, 221, 228, 235, 241, 243, 244, 320, 321], "pick": [19, 217], "nearest": [19, 223, 238, 246], "extrem": [19, 217, 312], "equidist": 19, "directon": [19, 217], "arrow": [19, 23, 217], "associ": [19, 23, 162, 199, 219, 227, 322], "includ": [19, 91, 94, 95, 205, 224, 228, 240, 243, 244, 245, 272, 281, 316, 322, 325], "output": [19, 64, 67, 70, 71, 72, 86, 87, 150, 161, 204, 206, 217, 234, 240, 241, 247, 249, 255, 268, 291, 300, 318, 322], "level": [19, 23, 188, 217, 219, 240, 262, 281, 285, 324], "greater": [19, 223, 240], "panel": [19, 232, 237, 325], "cut": [19, 94, 221, 223, 243, 311], "No": [19, 150, 324], "opt": [19, 217, 246, 260, 281, 296, 305, 322], "modifi": [19, 217, 218, 223, 231, 232, 237, 290, 316, 318, 326], "after": [19, 67, 166, 170, 191, 192, 193, 194, 195, 196, 197, 198, 204, 206, 216, 221, 223, 224, 249, 259, 260, 261, 263, 264, 267, 269, 277, 292, 297, 300, 302, 309, 318, 319, 320, 321, 324, 325], "containt": 19, "standard": [19, 87, 204, 217, 243, 268, 289], "cdim": [19, 217], "use_color": [19, 23, 217, 219, 240], "vectorfield": 19, "encod": [19, 23], "vectorplot": 19, "warn": [19, 188, 217, 219, 224, 231, 281], "black": [19, 217], "blue": [19, 217, 223], "implement": [20, 23, 32, 204, 208, 221, 223, 249, 251, 252, 253, 254, 255, 272, 279, 280, 295, 299, 322, 326], "nonzero": [20, 218, 223, 247, 296, 310, 321], "5010096": [20, 21, 22], "interactive_field": [20, 218, 316], "being": [20, 67, 68, 70, 150, 204, 217, 231, 232, 237, 240, 241, 243, 247, 286, 319], "displai": [20, 23, 86, 87, 204, 206, 218, 219, 231, 232, 237, 238, 249, 310, 316], "extern": [20, 86, 87, 94, 112, 204, 206, 241, 245, 254, 255, 269, 272, 291, 292, 293, 298, 302, 307, 308, 309, 311, 312, 318, 319, 320], "whole": [20, 24, 231, 241, 249, 324], "normfun": 20, "filter_field": [20, 23, 204, 218, 219, 296, 310, 317, 319], "cmap": [20, 23, 206, 217, 218, 219, 240, 243, 244, 247, 249, 291, 296], "cividi": [20, 217, 219, 249], "colormap": [20, 23, 219, 249], "those": [20, 23, 216, 221, 224, 229, 231, 232, 237, 266, 271, 274, 275, 321], "color_field": [20, 23, 217, 218, 219, 261, 263, 264, 267, 269, 296, 309, 310, 319, 320], "head_siz": [20, 296, 310, 319, 320, 321], "point_siz": 20, "vector_multipli": 20, "head": [20, 29, 300, 302], "fit": 20, "togeth": [20, 218, 219, 240, 253, 254, 273, 312], "14517330": 21, "5613672": 21, "12865106": 21, "8483507": 21, "9664608": 21, "14322627": 21, "9211020": 21, "13416820": 21, "6600141": 21, "seealso": [23, 150], "func": [23, 91, 94, 95, 161, 177, 254, 307, 308, 311, 312], "what": [23, 94, 216, 221, 224, 226, 227, 232, 236, 237, 271, 275, 291, 302, 317, 318, 319, 320, 322, 323], "understood": [23, 86, 221], "snippet": [23, 323], "scalar_field": 23, "vector_field": 23, "fig": [23, 26, 219, 231, 232, 237, 240, 245, 275, 291, 312], "plt": [23, 26, 219, 231, 232, 237, 239, 240, 242, 245, 275, 290, 291, 293, 312], "add_subplot": [23, 231, 232, 237, 275], "111": [23, 231, 232, 237, 247, 275], "savefig": 23, "bbox_inch": 23, "tight": 23, "pad_inch": 23, "02": [23, 206, 208, 260, 262, 265, 266, 285, 290, 291, 292, 294, 295, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 316, 317, 318, 319, 320], "therefor": [23, 36, 37, 86, 87, 94, 204, 217, 218, 219, 223, 224, 225, 227, 229, 231, 232, 233, 235, 237, 249, 251, 252, 261, 263, 264, 267, 268, 269, 272, 275, 276, 291, 292, 309, 312, 319, 320, 325], "turn": [23, 206, 219], "colorbar": [23, 204, 217, 219, 240], "colorbar_label": [23, 219, 240, 241, 243, 244, 247], "pixel": 23, "hidden": 23, "init_valu": [23, 225], "sin": [23, 60, 61, 65, 94, 95, 219, 221, 242, 245, 254, 290, 307, 308, 311, 312, 322], "lightness_field": [23, 219], "clim": [23, 206, 217, 219, 240, 249, 299, 303], "colorwheel": [23, 26], "colorwheel_xlabel": [23, 219, 240], "colorwheel_ylabel": [23, 219, 240], "colorwheel_arg": [23, 219, 240], "hsv": [23, 26, 218, 219, 240], "1d": 23, "hue": 23, "see": [23, 26, 94, 206, 216, 217, 218, 219, 221, 223, 227, 230, 232, 237, 242, 243, 244, 249, 260, 262, 265, 281, 290, 291, 301, 302, 303, 304, 306, 310, 312, 315, 316, 318, 319, 320, 322], "mpl_toolkit": [23, 26, 219], "axes_grid1": [23, 26, 219], "inset_loc": [23, 26, 219], "inset_ax": [23, 26, 219], "symmetric_clim": [23, 204, 219], "symmetr": [23, 88, 219], "preced": 23, "imshow": [23, 219], "quiver": [23, 204, 219, 296, 305], "fail": [23, 204, 217], "sometim": [23, 217, 218, 219, 220, 223, 224, 229, 231, 232, 233, 235, 236, 237, 250, 256, 262, 274, 275, 276, 277, 280, 298], "too": [23, 219, 235, 240, 312], "resolv": [23, 293, 324], "word": [23, 193, 227, 229, 291], "smaller": [23, 223, 227, 231, 232], "vice": 23, "versa": 23, "1e20": 23, "mpl_scalar": [23, 219], "4c72b0": [24, 25], "dd8452": 24, "55a868": 24, "c44e52": 24, "8172b3": 24, "937860": 24, "da8bc3": 24, "8c8c8c": 24, "ccb974": 24, "64b5cd": 24, "show_region": [24, 231], "width": [26, 64, 217, 219, 231, 232, 237, 240, 241, 247, 291, 292, 296, 305, 312, 316], "height": [26, 217, 219, 231, 232, 237, 240, 241], "loc": [26, 219], "lower": [26, 29, 240, 281, 322], "inset": 26, "dfp": [26, 219], "doctest": 26, "skip": 26, "ins_ax": 26, "run": [27, 62, 70, 71, 72, 73, 86, 87, 94, 113, 147, 150, 161, 162, 166, 167, 169, 171, 172, 175, 179, 189, 204, 206, 217, 218, 219, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 255, 260, 261, 262, 263, 264, 265, 267, 269, 271, 274, 285, 286, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 315, 316, 317, 318, 319, 320, 323, 325], "bloch": [29, 310, 324], "count": [29, 30, 69, 240, 271], "arrang": 29, "emerg": [29, 33, 310], "magnet": [29, 33, 35, 40, 41, 42, 46, 47, 48, 51, 52, 53, 54, 58, 61, 64, 65, 67, 69, 74, 94, 109, 112, 114, 204, 211, 239, 243, 244, 245, 246, 247, 248, 249, 254, 261, 263, 264, 267, 269, 272, 290, 291, 292, 293, 295, 298, 302, 303, 304, 306, 307, 308, 309, 311, 312, 318, 319, 320, 321, 324], "subvolum": 29, "increas": [29, 239, 274], "local": [29, 315, 319], "sum": [29, 60, 61, 99, 221, 223, 243, 253, 254, 274, 294, 298, 303, 320, 322], "jump": [29, 249], "tail": [29, 290, 291], "end": [29, 41, 61, 69, 204, 217, 219, 224, 240, 241, 243, 244, 245, 246, 260, 263, 290, 291, 297, 302, 312, 319, 321, 325], "stai": 29, "report": [29, 205, 310, 323, 325], "bp": 29, "min_angl": [30, 225], "rad": [30, 34, 35, 225, 245], "abov": [30, 217, 219, 225, 238, 239, 240, 241, 242, 243, 244, 245, 247, 272, 296, 297, 307, 308, 312, 318, 319, 322, 323, 324, 325], "threshold": 30, "taken": [30, 206, 223, 224, 225, 247, 312, 322], "account": [30, 204, 223, 225, 247, 281], "degre": [30, 34, 35, 225, 242, 312], "deg": [30, 34, 35, 225, 271], "dft": [30, 31, 33, 34, 35, 36, 37, 206, 221, 225, 249, 305], "90": [30, 225], "tensor": [31, 32, 204], "demagnetis": [31, 46, 78, 206, 230, 241, 245, 291, 292, 295, 320], "demag": [31, 32, 46, 48, 82, 92, 98, 99, 204, 206, 240, 241, 245, 247, 254, 266, 290, 291, 292, 293, 294, 295, 296, 298, 302, 310, 312, 319, 320], "albert": [31, 32, 293], "et": [31, 32, 310], "al": [31, 32, 310], "jmmm": [31, 32], "387": [31, 32], "2015": [31, 32], "http": [31, 32, 91, 94, 95, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 204, 231, 232, 237, 238, 260, 275, 281, 290, 291, 292, 297, 300, 312, 315, 317, 323, 325], "doi": [31, 32, 317, 324], "org": [31, 32, 231, 232, 237, 275, 281, 290, 291, 292, 315, 317, 324], "1016": [31, 32], "j": [31, 32, 33, 37, 88, 91, 105, 106, 107, 110, 206, 225, 246, 258, 261, 263, 264, 267, 271, 290, 291, 292, 293, 294, 298, 312, 316, 317, 319, 320], "03": [31, 32, 206, 208, 265, 285, 296, 298, 311], "081": [31, 32], "magnetis": [31, 42, 46, 48, 60, 61, 64, 65, 67, 68, 70, 71, 72, 86, 87, 92, 112, 150, 161, 204, 206, 219, 225, 238, 240, 241, 242, 243, 244, 245, 247, 248, 257, 261, 263, 264, 265, 266, 267, 269, 272, 273, 275, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 316, 317, 318, 319, 324], "obatain": 31, "demag_tensor": 31, "six": [32, 34, 225], "nxx": 32, "nyi": 32, "nzz": 32, "nxy": 32, "nxz": 32, "nyz": 32, "boldsymbol": [33, 95, 253, 292], "kl": 33, "partial_k": 33, "partial_l": 33, "volovik": 33, "rysti": 33, "m\u00e4kinen": 33, "t": [33, 40, 41, 67, 71, 72, 76, 77, 89, 91, 92, 94, 95, 110, 162, 177, 178, 191, 192, 193, 194, 195, 196, 197, 198, 199, 204, 206, 208, 217, 219, 221, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 251, 252, 254, 255, 260, 263, 265, 266, 268, 271, 272, 273, 274, 275, 276, 277, 279, 282, 283, 284, 291, 292, 293, 297, 300, 302, 307, 308, 310, 311, 312, 313, 316, 317, 318, 319, 321, 322], "eltsov": 33, "b": [33, 37, 41, 46, 187, 192, 194, 199, 217, 218, 219, 221, 225, 240, 245, 246, 279, 280, 281, 302], "spin": [33, 60, 61, 91, 95, 150, 204, 243, 246, 262, 271, 301, 312, 316, 317, 318, 319], "orbit": 33, "weyl": 33, "glass": 33, "topolog": [33, 36, 37, 204, 324], "superfluid": 33, "low": [33, 243, 244, 324], "temp": 33, "phy": 33, "196": [33, 204, 271, 272, 291, 311, 318], "82": [33, 204, 221], "101": [33, 191, 199, 204, 272, 300], "2019": [33, 241, 243, 310], "charg": [33, 36, 37, 43, 101, 204, 240, 324], "densiti": [33, 36, 37, 41, 46, 52, 94, 161, 204, 206, 217, 245, 261, 263, 264, 267, 269, 290, 294, 298, 319], "less": [34, 35, 68], "moment": [35, 46, 48, 227, 228, 239, 241, 245, 246, 261, 263, 264, 267, 269, 272, 303, 309, 311, 319], "invalid": [35, 191, 192, 193, 194, 195, 196, 197, 198, 199, 251, 252, 260, 279, 296, 305, 322], "continu": [36, 37, 225, 243, 291, 299], "There": [36, 94, 204, 205, 216, 217, 218, 219, 221, 222, 224, 225, 227, 234, 235, 237, 238, 243, 253, 254, 258, 260, 261, 264, 265, 267, 269, 272, 278, 297, 302, 303, 309, 312, 320, 321, 325], "topological_charge_dens": [36, 225, 249], "berg": [36, 37, 206, 221, 225, 305], "luescher": [36, 37, 206, 221, 225, 305], "q": [37, 48, 60, 61, 206, 225, 241, 243], "found": [37, 69, 70, 71, 72, 86, 165, 166, 167, 201, 202, 204, 219, 221, 224, 225, 238, 242, 247, 251, 252, 270, 290, 291, 292, 293, 325], "statist": [37, 225], "distribut": [37, 217, 225, 240, 325], "lattic": [37, 225, 246], "sigma": [37, 61, 90, 225, 243, 244, 254, 306], "model": [37, 158, 225, 227, 257, 291, 312, 320, 324], "nuclear": [37, 225], "190": [37, 225], "412": [37, 225], "424": [37, 225], "1981": [37, 225], "kim": [37, 225], "mulker": [37, 225, 324], "quantifi": [37, 225], "micromagnet": [37, 66, 92, 161, 162, 204, 206, 213, 222, 225, 253, 254, 255, 271, 291, 294, 298, 312, 313, 316, 318, 319, 320, 321, 324, 325], "approach": [37, 219, 225], "iop": [37, 225], "scinot": [37, 225], "025211": [37, 225], "2020": [37, 225, 247, 324], "topological_charg": [37, 206, 221, 225, 305], "simul": [38, 70, 71, 72, 86, 87, 150, 161, 166, 204, 206, 212, 222, 223, 246, 255, 260, 261, 262, 263, 264, 267, 268, 269, 271, 283, 285, 289, 293, 297, 299, 301, 306, 309, 310, 311, 313, 314, 315, 316, 317, 322, 324, 325], "measur": [38, 48, 64, 65, 204, 239, 240, 241, 244, 245, 246, 247, 293], "lorentz": [39, 211, 242, 324], "transmiss": [39, 211, 242, 324], "electron": [39, 40, 41, 42, 43, 108, 211, 242, 324], "microscopi": [39, 47, 211, 242, 324], "quantiti": [39, 41, 47, 59, 60, 63, 223, 240, 241, 246, 247, 312], "c": [40, 41, 43, 50, 61, 101, 103, 192, 194, 206, 217, 218, 219, 222, 226, 235, 240, 246, 269, 279, 293, 309, 311, 325], "df_length": [40, 41, 50, 240], "0002": [40, 50], "voltag": [40, 41, 43, 50, 240, 242], "wavelength": [40, 43, 50, 240, 243, 244, 247], "defocus": [40, 242], "wavefunct": [40, 240], "shift": [40, 42, 48, 51, 53, 54, 58, 94, 221, 240, 241, 254, 307, 308, 311], "phi_m": [40, 240], "psi_0": [40, 240], "propag": [40, 42, 50, 64, 65, 240, 243, 244, 247], "microscop": 40, "contrast": [40, 48, 240, 241, 242, 319], "transfer": [40, 91, 95, 240, 316], "defocu": [40, 50, 240], "delta": [40, 48, 240, 241, 271, 278, 293, 299, 318], "widetild": [40, 42, 61, 65, 240, 243, 244], "psi": [40, 240], "_0": [40, 61, 240, 243], "k": [40, 42, 48, 54, 61, 75, 93, 97, 107, 240, 241, 243, 244, 245, 246, 247, 254, 258, 284, 290, 294, 296, 297, 298, 299, 302, 304, 305, 306, 312, 316, 317, 319], "c_": [40, 240, 263, 319], "relativist": [40, 43, 240], "spheric": [40, 240], "aberr": [40, 240], "coeffici": 40, "wavevector": [40, 243], "intens": [40, 65, 240, 243, 244], "vert": [40, 65, 240, 244], "psi_": [40, 240], "focu": [40, 240, 323], "acceler": [40, 43, 240], "u": [40, 43, 75, 93, 95, 97, 206, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 240, 241, 245, 246, 247, 251, 252, 253, 254, 255, 258, 260, 262, 263, 264, 265, 269, 271, 273, 274, 275, 276, 278, 280, 282, 283, 284, 290, 292, 293, 294, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 309, 312, 316, 317, 318, 319, 320, 321], "ft_phase": [40, 41, 42, 240], "df_img": [40, 41], "300e3": [40, 41, 43, 240, 242], "8000": [40, 41, 240], "relativistic_wavelength": 40, "beam": [41, 42, 60, 61, 64, 65, 240, 243, 244, 247], "bf": [41, 42, 46, 48, 61, 240, 241, 243, 244, 245, 246], "perp": [41, 42, 240, 246], "phi_0": [41, 240], "begin": [41, 61, 217, 219, 224, 240, 241, 243, 244, 245, 246, 263, 319, 321], "jame": [41, 277, 324], "close": [41, 204], "holographi": [41, 58, 211, 240, 324], "defocus_imag": [41, 50, 240], "imf": [41, 240], "kcx": [42, 50, 51, 52, 53, 240], "kcy": [42, 50, 51, 52, 53, 240], "experienc": 42, "phi": [42, 48, 240, 241, 242], "_m": [42, 240], "k_x": [42, 240], "k_y": [42, 240], "mu_0": [42, 46, 48, 240, 241, 245], "k_": [42, 93, 240, 246, 254, 267, 290], "h": [42, 43, 46, 48, 77, 78, 89, 94, 98, 99, 112, 204, 206, 234, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 253, 254, 256, 257, 262, 265, 266, 272, 291, 292, 293, 294, 296, 297, 298, 299, 300, 303, 305, 307, 308, 311, 312, 318, 319, 320, 324], "_z": [42, 240], "k_c": [42, 240], "here": [42, 64, 65, 69, 91, 95, 205, 207, 210, 217, 219, 221, 225, 228, 232, 235, 236, 237, 240, 241, 242, 243, 245, 246, 249, 251, 252, 253, 254, 259, 260, 281, 289, 297, 299, 303, 306, 307, 312, 315, 319, 323, 325], "vacuum": [42, 240], "permeabl": [42, 240], "radiu": [42, 78, 220, 240, 296, 321], "cx": [42, 206, 218, 219, 222], "dk_x": 42, "cy": [42, 206, 218, 219, 222], "dk_y": 42, "resolut": [42, 241, 247, 249, 312], "radii": 42, "tikhonov": [42, 240], "m_e": 43, "sqrt": [43, 242, 290], "mass": [43, 108], "speed": [43, 204, 322], "kv": [43, 240], "9687489006848795e": 43, "techniqu": [44, 239, 240, 241, 243, 244, 245, 247, 324], "textrm": [45, 46, 48], "am": [45, 46, 48, 206, 261, 263, 264, 267, 269, 303, 309], "micromagneticmodel": [45, 46, 48, 60, 61, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 150, 161, 162, 204, 206, 208, 210, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 318, 319, 320, 324, 325], "mm": [45, 46, 48, 60, 61, 75, 76, 77, 78, 80, 82, 85, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 112, 161, 162, 206, 208, 239, 240, 241, 242, 243, 244, 245, 247, 250, 251, 252, 253, 254, 255, 256, 257, 261, 262, 263, 264, 265, 266, 267, 268, 269, 272, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 318, 319, 320], "1e6": [45, 46, 75, 88, 92, 93, 94, 99, 112, 218, 219, 221, 222, 226, 239, 240, 241, 242, 243, 244, 247, 253, 254, 256, 257, 262, 265, 266, 269, 290, 295, 296, 297, 301, 302, 303, 305, 307, 308, 309, 311, 319], "1000000": [45, 239, 248, 253, 254, 284], "v_fun": [45, 48, 60, 61], "elif": [45, 48, 64, 224, 322], "325269": 45, "1193457478": 45, "405269": 45, "1193455959": 45, "460000": 45, "use_demag": [46, 245], "tau": [46, 245], "equat": [46, 61, 92, 98, 112, 158, 204, 206, 208, 213, 240, 241, 243, 244, 245, 246, 256, 257, 261, 263, 264, 267, 269, 272, 291, 292, 293, 298, 299, 301, 303, 306, 309, 311, 312, 314, 316, 324], "term": [46, 75, 76, 77, 78, 80, 81, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 104, 112, 161, 204, 206, 213, 241, 245, 285, 289, 291, 292, 297, 299, 308, 309, 312, 316, 318, 319, 320], "constitu": 46, "app": [46, 245], "system": [46, 48, 69, 70, 71, 72, 79, 86, 112, 150, 161, 162, 204, 213, 221, 223, 225, 235, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 261, 262, 263, 264, 265, 266, 267, 268, 269, 272, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 318, 319, 321, 324, 325], "box2": [46, 48, 239, 240, 241, 242, 243, 244, 245, 247], "energi": [46, 48, 75, 76, 78, 83, 85, 88, 90, 92, 93, 94, 98, 99, 112, 153, 161, 204, 208, 213, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 257, 258, 262, 265, 266, 271, 272, 285, 289, 291, 292, 293, 295, 296, 297, 301, 302, 305, 307, 308, 309, 310, 311, 312, 314, 316, 317, 318, 324], "zeeman": [46, 98, 99, 112, 161, 204, 206, 208, 239, 240, 241, 242, 243, 244, 245, 247, 248, 256, 257, 262, 263, 264, 265, 266, 272, 285, 291, 292, 293, 294, 296, 297, 298, 303, 305, 307, 308, 309, 311, 318, 320, 324], "1256637": 46, "061435814": 46, "forc": [47, 211, 240, 242, 324], "tip_m": [48, 54, 241], "qualiti": [48, 54, 241], "650": [48, 54, 241], "tip_q": [48, 54, 241], "fwhm": [48, 54, 58, 64, 241, 247], "tip": 48, "oscil": [48, 241], "cantilev": [48, 241], "strai": [48, 241, 289], "As": [48, 67, 68, 70, 94, 104, 166, 206, 217, 219, 221, 223, 227, 231, 235, 236, 238, 240, 241, 243, 244, 246, 247, 249, 253, 254, 262, 272, 274, 291, 292, 298, 299, 301, 302, 304, 309, 312, 316, 317, 318, 319, 320, 324], "airbox": [48, 241, 289], "satur": [48, 112, 206, 241, 261, 263, 264, 267, 269, 272, 290, 291, 292, 293, 295, 296, 298, 303, 309, 310, 312, 316, 317, 318, 319, 320, 321], "wish": [48, 241, 246], "driven": [48, 69, 86, 150, 257], "reson": [48, 241, 272], "frequenc": [48, 94, 177, 240, 241, 243, 244, 254, 307, 308, 311, 312], "presenc": [48, 204, 244, 247], "sz": [48, 241], "_t": [48, 241], "spring": [48, 241], "monopol": [48, 241], "dipol": [48, 239, 241], "due": [48, 241, 242, 243, 244, 247, 293, 301], "ms_fun": [48, 296, 302, 310, 317, 319], "po": [48, 218, 219, 220, 221, 222, 224, 239, 240, 241, 242, 243, 244, 247, 261, 263, 264, 267, 269, 290, 292, 295, 296, 297, 303, 305, 309, 312, 316, 317, 319, 321], "384e3": 48, "16": [48, 206, 216, 217, 218, 219, 221, 223, 224, 225, 226, 227, 231, 235, 240, 241, 246, 248, 249, 253, 254, 260, 261, 262, 264, 265, 267, 269, 272, 274, 290, 291, 296, 297, 298, 299, 302, 308, 309, 312, 319, 320, 321, 322], "40e": [48, 231, 312, 316, 317], "quickplot": [50, 51, 52, 53, 54, 55, 56, 57, 58], "ltem": [50, 51, 52, 53, 54, 58, 324], "integrated_magnetic_flux_dens": [52, 240], "z0": [54, 241], "mfm": [54, 324], "phase_shift": [54, 241], "polaris": [55, 56, 60, 61, 204, 243, 244, 247, 316, 317, 318], "neutron": [55, 56, 59, 61, 211, 324], "scatter": [55, 56, 57, 59, 61, 65, 211, 239, 245, 247, 324], "chiral": [55, 60, 243], "san": [55, 56, 324], "chiral_funct": [55, 243], "pattern": [56, 57, 64, 65, 240, 241, 242, 243, 245], "cross_sect": [56, 243, 244, 290], "rai": [57, 63, 64, 65, 211, 324], "x_rai": [57, 58, 244, 247], "chi": [60, 243], "omega": [60, 61, 95, 243, 244, 312], "flip": [60, 61, 243], "section": [60, 61, 223, 235, 238, 249, 289, 310, 312, 323], "turpl": [60, 61, 177], "incom": [60, 61, 243], "reutron": [60, 61], "frame": [60, 61, 64, 65], "co": [60, 61, 65, 219, 242, 245, 290, 312, 322], "1e5": [60, 61, 75, 77, 89, 93, 95, 241, 254, 258, 261, 265, 266, 267, 299, 303, 305, 306], "cf": 60, "sim": [61, 243, 246], "pauli": [61, 243], "bmatrix": [61, 243], "sigma_x": [61, 243], "sigma_i": [61, 243], "sigma_z": [61, 243], "pmatrix": [61, 240, 243], "hat": [61, 76, 243, 254, 263, 317], "geometri": [61, 206, 238, 239, 240, 241, 242, 243, 244, 245, 247, 290, 291, 292, 293, 296, 297, 299, 300, 307, 308, 310, 317, 321], "half": [61, 64, 231, 241, 243, 247], "further": [61, 94, 217, 218, 238, 247, 258, 260, 297], "unpolaris": [61, 243], "pp": [61, 243, 324], "nn": [61, 243], "pn": [61, 243], "negit": 61, "unpol": [61, 243], "arbitari": 61, "circular": [64, 65, 244, 247], "dichroism": [64, 65, 244, 247], "holograph": [64, 247], "convolut": [64, 247], "gaussian": [64, 241, 247], "full": [64, 94, 150, 204, 219, 221, 224, 238, 241, 245, 247, 249, 251, 252, 272, 306, 315, 325], "3e6": [64, 65, 94, 284, 311], "xrh": 64, "xrh2": 64, "m_i": 65, "propto": [65, 244], "qx": 65, "analys": [66, 212, 221, 265, 274, 302], "micromagneticdata": [67, 68, 69, 70, 71, 72, 204, 206, 210, 248, 249, 270, 312, 316, 317, 324, 325], "drive": [67, 68, 69, 71, 72, 79, 86, 87, 150, 161, 162, 163, 204, 206, 239, 240, 241, 242, 243, 244, 245, 247, 255, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 272, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 316, 317, 318, 319, 324], "md": [67, 68, 69, 70, 71, 72, 152, 153, 171, 172, 206, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 261, 262, 263, 264, 265, 267, 268, 269, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 309, 310, 312, 316, 317, 319, 320], "system_nam": [67, 68, 69, 70, 71, 72, 248, 249], "concaten": [67, 68, 70, 177, 248], "timedriv": [67, 68, 70, 162, 204, 206, 208, 248, 249, 265, 266, 271, 272, 291, 292, 293, 300, 307, 308, 311, 312, 316, 317, 318], "tabl": [67, 68, 70, 71, 72, 178, 181, 182, 183, 206, 208, 246, 248, 249, 262, 265, 287, 290, 291, 292, 293, 300, 302, 303, 307, 308, 311, 312, 318], "combineddr": [67, 70, 204], "append": [67, 68, 70, 86, 161, 204, 219, 239, 248, 274, 290, 303, 322], "drive_0": [67, 68, 70], "drive_1": [67, 68, 70], "register_callback": [67, 68, 70, 249], "regist": [67, 68, 70, 204, 249], "export": [67, 150, 204, 209, 325], "driver": [67, 70, 71, 72, 86, 97, 152, 153, 157, 204, 206, 213, 248, 249, 257, 260, 265, 271, 272, 290, 291, 299, 300, 302, 319, 320], "mai": [67, 240, 290, 322, 323], "extra": [67, 322], "proper": [67, 204, 238], "hysteresisdriv": [67, 204, 239, 249, 302], "b_hysteresi": [67, 68, 71, 72, 177, 204, 249, 302], "bx_hysteresi": [67, 68, 71, 72, 302], "by_hysteresi": [67, 302], "bz_hysteresi": [67, 249, 302], "hysteresi": [67, 68, 71, 72, 152, 186, 204, 288, 289], "while": [67, 150, 238, 243, 246, 293, 319], "rest": [67, 221, 320], "besid": 67, "xr_drive": 67, "isel": 67, "m0": [67, 248, 249], "init": [67, 223], "row": [67, 206, 271, 272, 274, 291, 302, 311, 318], "ubermagt": [67, 68, 70, 177, 204, 210, 248, 270, 271, 272, 273, 274, 275, 276, 324, 325], "abstractdr": 68, "oommfdriv": [68, 69, 70, 204, 248], "directori": [69, 70, 71, 72, 86, 150, 161, 162, 164, 185, 204, 222, 231, 232, 237, 248, 249, 251, 252, 255, 259, 260, 275, 285, 290, 291, 292, 297, 315, 325], "defult": [69, 70, 71, 72], "ioerror": [69, 70, 71, 72], "0th": 69, "1th": 69, "mumax3dr": [69, 70, 204, 248], "6th": 69, "boundedinttext": 69, "mismatch": 69, "nan": [69, 177, 204, 206, 245, 248, 249, 265, 274], "drive_numb": [69, 206, 248, 249, 265, 302], "use_cach": [70, 71, 72], "tabular": [70, 71, 72, 176, 177], "onc": [70, 71, 72, 167, 315], "prevent": [70, 71, 72, 223], "detect": [70, 71, 72, 217], "look": [70, 71, 72, 206, 210, 217, 219, 221, 223, 224, 227, 228, 232, 235, 237, 241, 243, 247, 249, 263, 265, 272, 289, 299, 302, 303, 308, 312, 318, 319, 320, 321, 323, 324, 325], "objet": 70, "subpart": 70, "static": [70, 219, 232, 237, 312], "__new__": 70, "cl": [70, 187], "structur": [70, 206, 218, 239, 240, 241, 242, 243, 244, 245, 246, 247, 324], "subdirectori": [70, 86, 161, 315], "ovf2vtk": [70, 204, 209, 248], "intslid": 70, "calculator_script": [70, 71, 72, 248], "mif": [70, 71, 72, 91, 94, 95, 150, 204, 248, 260, 300, 312, 323], "content": [70, 71, 72, 164, 165, 166, 168, 222, 259], "mx3": [70, 71, 72], "todo": [70, 71, 72, 217, 225, 249], "mumax3": [70, 71, 72, 86, 177, 181, 182, 183, 210, 215, 270, 271, 324, 325], "pre": [70, 71, 72, 91, 94, 95, 255, 272], "cach": [70, 167, 170, 260], "clear": [70, 223], "sub": [71, 72, 204, 205, 322, 323, 324], "languag": [74, 322, 323, 324], "anisotropi": [75, 93, 245, 258, 263, 264, 285, 290, 298, 303, 306, 312, 316, 317], "w": [75, 76, 78, 85, 88, 93, 94, 219, 240, 283, 293, 294, 298, 299, 312, 316, 318], "5e5": [75, 77, 89, 93, 258], "per": [75, 76, 77, 85, 88, 89, 91, 93, 94, 188, 246, 249, 281], "u1": [75, 238, 248, 254, 261], "u2": [75, 254, 261], "ca": [75, 261], "1e4": [75, 206, 299, 304, 312, 322], "4e5": [75, 302], "dzyaloshinskii": [76, 246, 285, 310, 316, 317], "moriya": [76, 246, 285, 310, 312, 316, 317, 325], "w_x": 76, "cnv": [76, 204, 208, 254, 305, 319], "m_": [76, 78, 88, 94, 206, 219, 246, 254, 257, 261, 263, 264, 267, 269, 290, 291, 292, 293, 294, 298, 299, 303, 305, 309, 310, 318, 319, 320], "w_y": 76, "w_z": 76, "d2d": [76, 204, 254, 319], "unsign": [76, 85, 89, 195, 198, 227, 251, 252, 279], "incompat": 76, "crystalclass": [76, 208, 239, 240, 241, 242, 243, 244, 247, 254, 263, 296, 297, 299, 302, 305, 310, 312, 316, 317, 319], "crystalograph": [76, 319, 325], "cnv_x": [76, 254], "cnv_y": [76, 254], "cnv_z": [76, 242, 254, 263, 296, 297, 305, 312, 316, 317, 319], "d2d_x": [76, 254], "d2d_y": [76, 254], "d2d_z": [76, 254], "sensit": [76, 240, 312], "7e": [76, 227, 229], "gamma_": [77, 89, 206, 253, 257, 291, 292, 299, 300, 318, 320], "alpha": [77, 80, 89, 91, 92, 95, 97, 98, 99, 112, 206, 253, 257, 266, 272, 291, 292, 293, 295, 299, 300, 307, 308, 311, 312, 316, 317, 318, 320], "eff": [77, 89, 206, 253, 257, 291, 292, 299, 300, 318, 320], "01": [77, 95, 97, 99, 152, 153, 206, 208, 265, 285, 297, 312], "005": [77, 253, 254, 318], "012": [77, 95], "mu_": [78, 91, 94, 206, 246, 254, 257, 269, 290, 291, 292, 294, 298, 299, 305, 318, 319, 320], "asymptotic_radiu": 78, "asymptot": 78, "precess": [80, 92, 98, 99, 104, 112, 206, 208, 249, 257, 266, 272, 291, 292, 293, 295, 300, 307, 308, 311, 312, 316, 317, 318, 320, 324], "gamma0": [80, 89, 92, 98, 99, 112, 206, 250, 253, 257, 266, 272, 291, 292, 293, 295, 299, 300, 307, 308, 311, 312, 316, 317, 318, 320], "const": [80, 89, 92, 98, 99, 112, 191, 192, 193, 194, 195, 196, 197, 198, 199, 206, 246, 250, 257, 266, 277, 283, 290, 291, 294, 295, 298, 299, 300, 302, 307, 308, 311], "damp": [80, 92, 97, 98, 99, 112, 206, 249, 257, 266, 272, 291, 292, 293, 295, 299, 300, 307, 308, 311, 312, 316, 317, 318, 320, 324], "exchang": [82, 90, 92, 97, 98, 99, 204, 206, 208, 222, 239, 240, 241, 242, 243, 244, 245, 247, 248, 257, 258, 263, 266, 271, 285, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 305, 306, 310, 311, 312, 316, 317, 320, 324], "123": [85, 204], "runner": [86, 87, 161, 164, 165, 166, 168, 204, 281, 285, 289, 325], "ovf_format": [86, 150, 161, 204], "verbos": [86, 87, 161, 204, 206, 239, 241, 245, 285], "director": 86, "alreadi": [86, 87, 98, 161, 204, 219, 223, 227, 231, 246, 268, 271, 272, 303, 312, 323, 324, 325], "could": [86, 150, 216, 217, 219, 221, 227, 235, 271, 281, 306, 312], "drive_kwargs_setup": [86, 150], "workinng": [86, 150, 161], "externalrunn": 86, "tool": [86, 114, 180, 204, 206, 209, 221, 249, 271, 293, 305, 324], "doubl": [86, 150, 161, 204, 319, 322], "runtim": [86, 87, 161, 204, 312], "stdout": [86, 87, 161, 188, 260, 281], "progress": [86, 87, 204], "bar": [86, 87, 204, 219, 241, 243, 244], "snapshot": [86, 87, 204, 324], "disk": [86, 87, 204, 223, 268, 272, 289, 310, 321], "give": [86, 87, 150, 170, 204, 206, 210, 216, 219, 221, 223, 227, 229, 231, 235, 240, 243, 246, 249, 268, 272, 289, 290, 303, 312, 315, 320, 324], "rough": [86, 87, 94, 204, 268], "fileexistserror": 86, "schedul": [86, 150, 204, 248, 255], "cmd": [86, 273], "header": [86, 150, 204], "script_nam": [86, 91, 94, 95, 312], "job": [86, 150, 204, 255], "sh": 86, "submit": [86, 204, 255], "machin": [86, 260, 297, 324, 325], "slurm": [86, 204], "resourc": [86, 204], "respons": [86, 150, 204, 231], "ensur": [86, 150, 204, 223, 286, 293, 301, 306, 325], "execut": [86, 150, 164, 165, 167, 204, 260, 266, 297, 324, 325], "submiss": [86, 204], "program": [86, 204, 205, 323], "sbatch": 86, "cpu": [86, 150], "memori": [86, 204], "script": [86, 91, 94, 95, 312, 325], "schedule_kwargs_setup": [86, 150], "argstr": 87, "need_stderr": 87, "glob_nam": 87, "dry_run": [87, 204], "captur": 87, "updat": [87, 204, 219, 255, 298, 299], "glob": 87, "express": [87, 235, 246, 251, 252, 290], "runtimeerror": 87, "occur": [87, 290, 306, 319], "success": [87, 177, 325], "package_nam": [87, 166], "magneto": [88, 204], "elast": [88, 204], "b_": 88, "sum_": [88, 246], "epsilon_": 88, "ne": 88, "ij": [88, 246], "b1": 88, "1e7": [88, 94, 219, 310, 321], "5e7": 88, "b2": 88, "e_diag": 88, "e_offdiag": 88, "strain": 88, "matrix": [88, 94, 223, 312], "assembl": [88, 257, 261, 263, 264, 267, 269, 309, 319], "eps11": 88, "eps22": 88, "eps33": 88, "eps23": 88, "eps32": 88, "eps13": 88, "eps31": 88, "eps12": 88, "eps21": 88, "mel": [88, 204], "2e7": 88, "gamma": [89, 91, 104, 253, 316, 317, 318], "2e6": [89, 246, 272, 305, 311, 318], "closest": [90, 306], "mutual": [90, 254, 304, 306], "bilinear": [90, 219], "interfaci": [90, 208, 296, 305, 319], "sigma2": [90, 306], "biquadrat": 90, "torqu": [91, 95, 204, 211, 246, 316], "beta": [91, 95, 253, 292, 312, 316, 317], "epsilon": [91, 246], "hbar": [91, 250], "tm_": 91, "evalu": [91, 94, 95, 206, 312], "dt": [91, 94, 95, 271, 272, 291, 299, 300, 311, 312, 318], "tcl_string": [91, 94, 95, 312], "tcl": [91, 94, 95, 167, 168, 254, 260, 281, 297, 325], "5e12": 91, "3e12": 91, "mp": [91, 312], "35": [91, 204, 217, 219, 221, 224, 227, 254, 271, 274, 291, 292, 302, 303, 312, 322], "eps_prim": 91, "script_arg": [91, 94, 95, 312], "nist": [91, 94, 95, 149, 151, 152, 153, 154, 156, 157, 290, 291, 292, 312, 325], "gov": [91, 94, 95, 149, 151, 152, 153, 154, 156, 157, 290, 291, 292, 312], "doc": [91, 94, 95, 164, 238, 280, 281, 312], "userguide20a3": [91, 94, 95, 312], "userguid": [91, 94, 95, 312], "standard_oxs_ext_child_cla": [91, 94, 95, 312], "sx": [91, 95], "1e12": 91, "exponenti": [91, 94, 312], "decai": [91, 94, 95, 312], "t_0": [91, 94], "exp": [91, 94, 221, 242, 312], "unnam": 92, "uniqu": [92, 177, 224, 249, 261, 263, 264, 267, 269, 274, 303], "temperatur": [92, 158, 160, 204, 246, 283, 289], "my_cool_system": 92, "dynamicsterm": [92, 251], "yet": 92, "001": [92, 246, 284], "21e5": 92, "221000": 92, "energyterm": [92, 252], "uniaxi": [93, 245, 258, 261, 285, 290, 298, 306, 312, 316, 317], "k1": [93, 254, 267], "k2": [93, 254, 267], "ua": [93, 97, 267], "2e3": 93, "sine": [94, 254, 289, 308, 311, 312], "wave": [94, 240, 243, 244, 254, 307, 308, 311, 312], "puls": [94, 254, 311], "built": [94, 216, 219, 240, 243, 244, 247, 273], "t0": [94, 254, 307, 308, 311, 312], "t_": [94, 246, 254, 311], "off": [94, 177, 206, 240, 241, 293, 311, 312], "separ": [94, 217, 219, 221, 223, 253, 254, 312], "up": [94, 188, 204, 220, 223, 235, 236, 239, 240, 241, 243, 244, 245, 247, 256, 296, 299, 304, 305, 306, 312, 323], "desir": [94, 238, 240, 241, 243, 247, 322, 325], "stabl": [94, 238, 310], "reason": [94, 204, 221, 223, 245, 302, 304, 325], "guidelin": [94, 325], "nine": [94, 312], "m11": 94, "m12": 94, "m13": 94, "m21": 94, "m22": 94, "m23": 94, "m31": 94, "m32": 94, "m33": 94, "complic": [94, 217, 241, 320], "tz": [94, 312], "flexibl": [94, 150, 223], "sever": [94, 205, 217, 218, 219, 221, 223, 224, 233, 253, 254, 276, 281, 283, 312, 321, 324], "time_depend": [94, 312], "tstep": [94, 312], "easier": [94, 231, 324], "hz": [94, 312], "predefin": [94, 196, 206, 250, 254], "su": [94, 312], "websit": [94, 204, 219, 312, 325], "zhang": [95, 155, 204, 293, 316], "li": [95, 155, 204, 316], "behav": [95, 217, 248, 312], "similar": [95, 204, 217, 219, 224, 225, 226, 229, 231, 232, 233, 237, 248, 249, 264, 265, 267, 276, 283, 291, 292, 312, 315], "slonczewski": [95, 156, 160, 204], "oxs_spinxferevolv": [95, 156], "5e6": [95, 97, 312, 316, 317, 320], "sinusoid": [95, 312], "sin_wav": 95, "evolv": [97, 149, 151, 154, 155, 156, 158, 159, 160, 213, 248, 271, 272, 291, 300, 317], "_allowed_attribut": [97, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 251, 252, 255], "lowercas": [97, 98, 256], "uniaxialanisotropi": [97, 240, 241, 245, 247, 254, 267, 271, 290, 294, 296, 297, 298, 299, 302, 304, 305, 306, 312, 316, 317, 319], "my_damp": 97, "termscontain": 98, "present": [98, 204, 244, 247, 276, 312, 317, 319, 321, 322], "termcontain": 98, "my_exchang": 98, "energy1": 98, "energy2": 98, "dmi": [98, 204, 208, 239, 240, 241, 242, 243, 244, 247, 254, 263, 271, 296, 297, 302, 305, 310, 312, 316, 317, 324], "stt": [98, 292, 312, 316, 317], "indexerror": 98, "6021766208e": [101, 250], "19": [101, 216, 217, 219, 221, 223, 224, 226, 227, 228, 231, 246, 248, 249, 250, 253, 254, 261, 262, 265, 267, 271, 274, 281, 291, 294, 298, 299, 302, 309, 311, 312, 319, 321, 322], "elementari": 101, "00231930436182": [102, 250], "land": 102, "176085964286": [103, 250], "56906": [103, 250], "gyrotrop": [103, 253, 316, 317, 320], "kg": [103, 108], "221276": [104, 250], "14872118403": [104, 250], "llg": [104, 206, 208, 291, 292, 293, 318, 319], "62607004081e": [105, 250], "34": [105, 106, 206, 217, 219, 221, 224, 250, 254, 260, 274, 281, 297, 302, 303, 311, 312, 322], "planck": [105, 106, 324], "0545718002680283e": [106, 250], "3806485279e": [107, 250], "23": [107, 110, 206, 216, 217, 219, 221, 224, 226, 227, 235, 242, 246, 248, 249, 250, 253, 254, 271, 274, 282, 302, 303, 312, 321, 322], "boltzmann": [107, 246], "1093835611e": [108, 250], "31": [108, 204, 217, 219, 221, 224, 238, 246, 248, 250, 254, 274, 293, 302, 312, 322], "2566370614359173e": [109, 250], "06": [109, 201, 202, 206, 208, 240, 248, 250, 270, 284, 293, 295, 297, 298, 303, 312, 322], "8569529235961887e": [110, 250], "bohr": [110, 246], "magneton": [110, 246], "micromagnetictest": [116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 210, 259, 270, 324, 325], "calculatortest": [116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 259], "tmp_path": 141, "mt": [146, 147, 291, 302], "oommfc": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 165, 166, 167, 168, 188, 204, 206, 208, 210, 215, 239, 240, 241, 242, 243, 244, 245, 247, 248, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 281, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 318, 319, 320, 324, 325], "oxs_cgevolv": [149, 248], "oc": [149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 166, 167, 169, 208, 215, 239, 240, 241, 242, 243, 244, 245, 247, 261, 263, 264, 267, 268, 269, 290, 291, 292, 293, 294, 295, 296, 317, 319], "polak": 149, "ribier": 149, "myarg": [149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "fixed_subregion": [150, 301], "output_step": [150, 265], "n_thread": [150, 161, 266], "thread": [150, 161, 266], "environ": [150, 161, 167, 204, 281, 315], "oommf_thread": [150, 161], "instal": [150, 161, 204, 246, 260, 270, 281, 286, 297, 315, 324], "impli": 150, "activ": [150, 217, 315, 325, 326], "conda": [150, 204, 246, 270, 281, 315, 325], "request": 150, "node": 150, "write_mif": [150, 204], "subdirectiori": 150, "encourag": [150, 323], "advanc": [150, 217, 227, 312], "euler": [151, 223], "oxs_eulerevolv": 151, "min_timestep": 151, "oxs_mindriv": [152, 153, 248], "mc": [152, 162, 206, 208, 215, 262, 265, 266, 272, 279, 294, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 318, 320], "hd": [152, 302], "stopping_mxhxm": [152, 153, 248], "minimis": [153, 208, 261, 263, 264, 265, 267, 269, 291, 292, 296, 303, 304, 305, 309, 310, 319, 320], "rung": [154, 159], "kutta": [154, 159], "oxs_rungekuttaevolv": 154, "rk4": [154, 155, 156, 159, 160], "anv_spintevolv": 155, "www": [155, 158, 260, 290, 291, 292, 297, 300], "zurich": 155, "ibm": 155, "com": [155, 159, 160, 164, 260, 297, 300, 325], "st": [155, 312], "nanomagnet": 155, "oxs_timedriv": 157, "td": [157, 162, 206, 266, 268, 272, 291, 292, 293, 300, 307, 308, 311, 312, 316, 317, 318], "total_iteration_limit": 157, "langevin": 158, "thetaevolv": [158, 300], "nanosci": [158, 300], "de": [158, 271, 272, 291, 300, 311, 318], "group_r": [158, 300], "stm": [158, 300], "spstm": [158, 300], "download": [158, 260, 297, 300, 324, 325], "shtml": [158, 300], "fixed_timestep": [158, 300], "60": [158, 208, 219, 221, 223, 300], "xf_thermheun": 159, "uhh_thetaevolv": [159, 204], "kelvinxyfong": [159, 160], "wordpress": [159, 160], "research": [159, 160, 324], "interest": [159, 160, 219, 221, 290], "effective_field": [161, 252, 294, 295, 298, 299], "macrospin": [161, 162, 166, 169, 260, 268, 272, 312], "22": [161, 208, 217, 219, 221, 224, 226, 227, 231, 246, 248, 249, 253, 254, 261, 263, 264, 267, 269, 271, 272, 274, 302, 311, 312, 318, 321, 322], "silent": [162, 204], "filenotfounderror": 162, "docker_ex": [164, 167, 260, 281], "docker": [164, 167, 172, 204, 208, 260, 281, 297, 325], "20a3": [164, 208], "selinux": [164, 204], "dockerhub": 164, "flag": 164, "mount": 164, "caution": 164, "storag": 164, "bind": 164, "configur": [164, 206, 239, 240, 241, 242, 243, 244, 245, 247, 257, 281, 290, 291, 293, 296, 297, 305, 313, 318, 319, 320], "you": [164, 204, 205, 210, 217, 218, 221, 246, 249, 259, 260, 289, 297, 312, 314, 315, 317, 318, 320, 323, 324, 325], "permiss": 164, "boxsii": [164, 165, 166, 168], "oommf_ex": [165, 167, 260, 281, 297], "__del__": 166, "kill": [166, 261, 263, 264, 267, 269, 281], "applic": [166, 225], "goe": 166, "scope": [166, 259], "window": [166, 204, 260, 273, 297, 315, 325], "ownership": 166, "consequ": [166, 223, 325], "platform": [166, 204, 270], "seen": [166, 217, 219, 223, 224, 240, 242], "statu": [166, 167, 204, 260, 268, 325], "cache_runn": [167, 260, 281], "subsequ": [167, 204, 219, 260, 291, 325], "oommfrunn": [167, 170, 204, 260], "caus": [167, 204, 223, 240, 279, 322], "again": [167, 219, 223, 228, 249, 251, 252, 265, 312, 319, 324, 325], "envvar": [167, 260, 281], "oommftcl": [167, 260, 281, 325], "autoselect_runn": [167, 170, 260, 281], "suitabl": [167, 325], "ooommf_ex": 167, "docker_runn": [167, 297], "environmenterror": 167, "long": [167, 204, 231, 232, 237, 273, 275, 316], "reset": [167, 170, 217, 312], "host": [167, 204], "isinst": [167, 169, 191, 221, 303], "dockeroommfrunn": [167, 204, 242, 243, 244, 247, 297], "oommf_tcl": [168, 260, 297], "though": 169, "exeoommfrunn": [170, 204, 206, 239, 240, 245, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 318, 319, 320], "usr": 170, "share": [170, 324], "miniconda": 170, "env": [170, 246, 260, 270, 281, 296, 305, 322], "unset": [170, 260], "let": [170, 206, 216, 218, 219, 220, 221, 222, 223, 224, 227, 228, 229, 230, 231, 232, 235, 236, 237, 251, 252, 253, 254, 255, 258, 261, 262, 263, 264, 265, 267, 269, 273, 274, 275, 278, 280, 282, 283, 297, 301, 302, 303, 305, 309, 312, 316, 318, 319, 320, 321], "overwrit": [170, 260, 290], "meta": [173, 286, 315, 324, 325], "inforamt": 174, "subpackag": [174, 188, 204, 207, 281, 286, 314, 315, 324, 325], "build": [177, 210, 218, 222, 226, 255, 302, 325], "make": [177, 218, 219, 223, 231, 232, 237, 238, 242, 243, 244, 246, 247, 251, 252, 261, 263, 264, 267, 269, 270, 279, 280, 291, 299, 303, 304, 309, 320, 324, 325], "recommend": [177, 207, 219, 312, 315], "odt": [177, 178, 181, 182, 183, 204, 271, 272, 273, 274, 275, 276, 324], "map": [177, 223, 240, 241, 243, 244], "ut": [177, 178, 179, 271, 273, 274, 275, 276], "odtfil": [177, 178, 181, 182, 183, 271, 272, 273, 275, 276], "file1": [177, 178, 181, 182, 183, 234, 274], "merg": [177, 287], "xmax": [177, 245, 271, 274], "odtfile1": [177, 274], "odtfile2": [177, 274], "file2": [177, 183, 234, 271, 273, 274, 275, 276], "table1": [177, 274], "table2": [177, 274], "merged_t": [177, 274], "picosecond": [177, 275, 276], "24": [177, 204, 206, 217, 219, 221, 224, 226, 227, 246, 248, 249, 253, 254, 271, 274, 284, 291, 302, 312, 321, 322], "999": 177, "39": [177, 216, 218, 219, 221, 224, 226, 228, 231, 232, 235, 236, 237, 248, 251, 252, 253, 254, 255, 256, 257, 260, 270, 271, 274, 275, 280, 281, 282, 283, 284, 292, 294, 297, 302, 303, 312, 322], "99": [177, 272], "file3": [177, 182, 234], "fuction": [177, 295], "new_tabl": 177, "shorter": [177, 181, 183, 312, 320, 321], "hysteresis1": 177, "irfft": [177, 272], "fast": [177, 238], "file5": 177, "ifft_tabl": [177, 272], "rfft": [177, 272], "nanosecond": [177, 312], "fft_tabl": [177, 272], "uu": [181, 182, 183, 186, 189, 201, 202, 239, 240, 241, 243, 244, 245, 247, 278, 284], "across": [184, 204, 241], "ubermag": [184, 188, 204, 205, 206, 207, 210, 215, 217, 218, 219, 221, 228, 239, 240, 241, 243, 244, 245, 246, 247, 260, 262, 270, 272, 281, 289, 297, 299, 302, 303, 306, 314, 315, 319, 321, 322, 323, 326], "context": [185, 204, 225, 227], "manag": [185, 204, 325], "vmin": [186, 243, 244, 278], "vmax": [186, 243, 244, 278], "loop": [186, 227, 229, 239, 249, 278, 290], "copi": 187, "docstr": [187, 322], "__init__": [187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 219, 277, 279, 280, 282, 283], "squar": [187, 206, 217, 279, 300, 322], "__doc__": [187, 280], "package_level": [188, 281], "log": [188, 204, 288, 322], "logger": [188, 281], "fine": [188, 249, 281, 291], "grain": [188, 204, 281], "debug": [188, 281], "ubermagutil": [191, 192, 193, 194, 195, 196, 197, 198, 204, 210, 239, 240, 241, 243, 244, 245, 247, 251, 252, 254, 270, 277, 278, 280, 281, 282, 283, 284, 324, 325], "typesystem": [191, 192, 193, 194, 195, 196, 197, 198, 251, 252, 254, 277, 282, 283, 288, 324, 326], "__set__": [191, 192, 193, 194, 195, 196, 197, 198], "instanti": [191, 216, 251, 252, 279, 282, 283], "never": [191, 260, 279], "positiveint": 191, "super": 191, "myattribut": [191, 192, 193, 194, 195, 196, 197, 198], "decoratedclass": [191, 192, 193, 194, 195, 196, 197, 198, 199, 282], "dc": [191, 192, 193, 194, 195, 196, 197, 198, 199, 211, 282], "beed": 191, "affect": [191, 192, 193, 194, 195, 198, 216, 249, 282, 319], "__delete__": 191, "nikola": [191, 193, 197, 199, 277, 279], "tesla": [191, 193, 197, 199, 277, 279], "del": [191, 279], "john": [191, 192, 193, 194, 195, 196, 197, 198], "jane": [191, 192, 193, 194, 195, 196, 197, 198], "descriptor": [192, 193, 194, 195, 196, 197, 198, 199, 251, 252, 254, 277, 288, 324], "key_descriptor": 192, "value_descriptor": 192, "allow_empti": 192, "prioriti": [192, 194, 195, 198], "inherit": [192, 193, 194, 195, 196, 197, 198, 280], "identifi": [193, 236, 303, 306, 320], "allowed_char": 193, "split": 193, "object_nam": 193, "newnam": 193, "123newnam": 193, "describ": [194, 217, 219, 225, 246, 324], "abc": [194, 279], "expected_typ": [195, 197, 198, 199, 277, 279], "subset": [195, 198, 254, 279], "neither": [195, 198, 261, 267], "nor": [195, 198, 261, 267], "sample_set": [196, 279], "unpack": [196, 227, 279, 321], "yx": [196, 312], "zyyyyx": 196, "allow_non": 197, "mihajlo": [197, 199, 282], "pupin": [197, 199, 282], "component_typ": 198, "impos": [199, 251, 252, 282, 283, 288], "si": [200, 201, 202, 231, 232, 235, 237, 275, 288], "si_multipli": [201, 284], "largest": [201, 284], "500e": [201, 202, 291, 312, 316], "5000e": 201, "microscal": 202, "picoscal": 202, "si_max_multipli": [202, 240, 284], "219": 204, "exceed": 204, "000": 204, "337": 204, "furthermor": [204, 217, 219, 249, 255], "reorganis": 204, "invis": 204, "io": [204, 234, 323], "158": [204, 281], "163": 204, "getitem": 204, "116": [204, 303], "mpl_subregion": [204, 231], "replac": [204, 215, 240, 315, 320, 325, 326], "164": 204, "improv": [204, 218, 312, 326], "194": [204, 281], "greatli": [204, 323], "render": [204, 238, 324], "avoid": [204, 217, 225, 240, 293, 325], "problem": [204, 218, 289, 312, 323, 324], "slow": 204, "might": [204, 207, 217, 315], "commit": 204, "4a8fca4": 204, "159": [204, 281], "rewrit": 204, "consumpt": 204, "roughli": 204, "had": [204, 299], "peak": [204, 243, 244], "33": [204, 206, 217, 219, 221, 224, 248, 254, 271, 274, 302, 303, 312, 322], "latex": [204, 253, 254], "landau": [204, 206, 291, 318], "lifshitz": [204, 206, 291, 318], "gilbert": [204, 206, 253, 272, 291, 292, 293, 312, 316, 317, 318, 320], "mumax3c": [204, 208, 210, 270, 324, 325], "mumax": [204, 208, 210, 271, 325], "140": 204, "26": [204, 217, 219, 221, 224, 227, 246, 248, 249, 253, 254, 271, 274, 302, 312, 321, 322], "jupyt": [204, 205, 218, 219, 235, 314, 320, 322, 323, 324, 325], "dynacm": 204, "104": 204, "sent": 204, "subprocess": 204, "don": [204, 219, 221], "rescal": 204, "149": [204, 243, 324], "mag2exp": [204, 210, 223, 239, 240, 241, 243, 244, 245, 247, 270, 324], "previous": [204, 221, 227, 279, 299, 300, 304, 325], "46": [204, 219, 221, 254, 293, 312, 322], "overhead": 204, "temporari": 204, "cover": [204, 231, 289], "2de6360": 204, "despit": [204, 217], "153": [204, 300], "stop": [204, 312], "keyboardinterrupt": 204, "103": 204, "upon": 204, "complet": [204, 291, 302, 325], "interrupt": 204, "counter": 204, "openh264": 204, "146": 204, "speedup": 204, "135": 204, "stabil": 204, "inaccuraci": [204, 223], "introduc": [204, 207, 223, 231, 293, 311, 314, 322], "refactor": [204, 326], "133": 204, "overlap": [204, 219, 231, 236], "tick": 204, "dealt": 204, "easili": [204, 223, 241, 246], "fashion": [204, 324], "134": 204, "textual": 204, "isosurfac": 204, "huge": 204, "200": [204, 217, 240, 241, 265, 266, 271, 272, 281, 283, 291, 302, 311, 312, 317, 318], "129": [204, 271], "mathemat": [204, 207, 216, 324], "141": 204, "144": 204, "18": [204, 206, 216, 217, 219, 221, 223, 224, 225, 226, 227, 231, 246, 247, 248, 249, 253, 254, 261, 262, 264, 265, 266, 267, 270, 271, 272, 274, 284, 291, 294, 295, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 319, 320, 321, 322], "drive1": 204, "drive2": 204, "hint": 204, "27": [204, 217, 219, 221, 224, 227, 246, 248, 249, 254, 271, 274, 302, 303, 312, 321, 322], "137": 204, "directiori": 204, "readabl": [204, 320], "writabl": 204, "95": 204, "0a2": [204, 208], "84": 204, "198": [204, 271, 272, 281, 291, 311, 318], "crystallograph": [204, 254, 263, 319], "maco": [204, 273, 315, 325], "linux": [204, 260, 270, 273, 297, 315, 325], "ligh": [204, 219], "fieldrot": [204, 242, 247], "105": [204, 311], "datatyp": 204, "114": [204, 303], "118": 204, "significantli": 204, "10_000": 204, "117": 204, "million": 204, "files": 204, "9m": 204, "1730": 204, "63000": 204, "56": [204, 219, 221, 254, 265, 311, 319], "1125": 204, "8m": 204, "1860": 204, "64000": 204, "762": 204, "15m": 204, "4920": 204, "401": 204, "69000": 204, "4510": 204, "represen": 204, "121": 204, "need": [204, 206, 217, 218, 219, 221, 223, 225, 227, 229, 230, 231, 233, 235, 246, 248, 249, 254, 260, 261, 263, 264, 267, 269, 276, 278, 283, 291, 292, 296, 297, 303, 305, 309, 310, 311, 312, 316, 318, 320, 321, 324, 325], "77": [204, 221], "anyth": [204, 324], "summari": [204, 325], "80": [204, 221, 240, 293], "108": 204, "simultan": [204, 260], "106": 204, "broke": 204, "191": 204, "solv": [204, 207, 227, 289, 324], "issu": [204, 205, 322, 323], "unifi": 204, "github": [204, 205, 323, 325], "sync": 204, "switch": [204, 312], "lab": [204, 219, 314, 325], "situat": [204, 217], "generalis": [204, 221, 326], "dmi_cnv": [204, 271], "dmi_d2d": 204, "dmi_cnv_z": [204, 254], "zhangli": [204, 253, 292, 312, 316, 317], "xf_thermheunevolv": 204, "xf_thermspinxferevolv": 204, "setup_log": [204, 281], "colourbar": [204, 219], "twice": [204, 241], "139": 204, "pyenv": 204, "172": [204, 271], "magnetoelast": 204, "syntax": [204, 322], "highli": 205, "welcom": [205, 323, 326], "mani": [205, 219, 221, 229, 235, 239, 266, 306, 320], "skill": 205, "few": [205, 221, 223, 320], "answer": [205, 207, 323], "question": [205, 207, 289, 319, 322, 323, 324], "help": [205, 218, 234, 238, 260, 297, 324, 325], "repositori": [205, 323, 325], "mail": [205, 323, 324], "encount": [205, 296, 305, 323], "reproduc": [205, 306, 324], "pull": [205, 260, 297], "someth": [205, 219], "why": [205, 221, 241], "want": [205, 206, 216, 217, 219, 220, 221, 223, 224, 226, 227, 229, 230, 231, 232, 233, 235, 237, 247, 251, 252, 253, 254, 259, 260, 262, 265, 269, 273, 274, 275, 278, 279, 291, 293, 294, 297, 298, 299, 301, 302, 306, 309, 312, 316, 317, 319, 320, 321, 322, 323, 324, 325], "yourself": 205, "touch": 205, "beforehand": [205, 217], "core": [206, 217, 322], "develop": [206, 323, 326], "abl": [206, 224, 244, 246, 247, 249, 282, 283, 316, 323], "permalloi": [206, 291, 292, 293], "thick": [206, 229, 240, 291, 292, 293, 299, 310, 319, 321], "Its": [206, 216, 224, 231, 232, 237, 261, 263, 264, 267, 269, 286, 309, 319], "ferromagnet": [206, 272], "w_": [206, 261, 263, 264, 267, 269, 319], "pj": [206, 316, 317, 319, 320], "govern": [206, 291, 318], "211": [206, 291, 292, 316, 317, 318], "state": [206, 219, 240, 272, 291, 292, 293, 294, 298, 304, 306, 312, 319, 320], "config": 206, "inlinebackend": 206, "figure_format": 206, "svg": 206, "pd": 206, "max_row": 206, "float_format": 206, "materi": [206, 231, 246, 290, 291, 292, 293, 296, 299, 305, 316, 321, 324], "8e5": [206, 261, 263, 264, 267, 269, 291, 292, 293, 294, 295, 298, 303, 309, 312, 316, 317], "gyromagnet": [206, 272, 291, 292, 312, 316, 317, 318], "vortex_dynam": [206, 249], "omit": [206, 217, 224, 234, 323], "m_init": [206, 290, 296, 297, 305, 317], "place": [206, 262, 307, 314, 322], "investig": [206, 216, 243, 244, 319], "carri": [206, 238, 239, 317, 325], "calul": 206, "mindriv": [206, 208, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 261, 262, 263, 264, 267, 268, 269, 285, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 303, 304, 305, 306, 309, 310, 312, 316, 317, 319, 320], "2022": [206, 208, 239, 240, 245, 248, 249, 260, 262, 265, 266, 268, 270, 281, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 316, 317, 318, 319, 320, 324], "next": [206, 218, 222, 227, 249, 257, 293, 295, 299, 312, 318, 320, 325], "back": [206, 217, 221, 223], "00e": 206, "52e": 206, "35e": [206, 317, 321], "04": [206, 248, 249, 265, 270, 285, 311], "32e": 206, "85e": 206, "36e": 206, "31e": 206, "498": 206, "99e": 206, "90e": 206, "33e": 206, "29e": 206, "77e": 206, "499": 206, "83e": 206, "26e": 206, "idea": [206, 221, 290], "date": [206, 208, 248, 249, 265, 302, 326], "inspect": [206, 218, 224, 262, 291, 310, 318, 319, 321], "viridi": 206, "wind": 206, "iint": 206, "400369334831906": 206, "wing": 206, "commonli": [206, 241, 312], "naiv": 206, "5005803208541971": 206, "17": [206, 208, 216, 217, 219, 221, 223, 224, 225, 226, 227, 231, 235, 241, 246, 248, 249, 253, 254, 261, 264, 265, 267, 268, 269, 274, 290, 291, 296, 299, 302, 309, 311, 312, 316, 317, 318, 319, 320, 321, 322], "tutori": [207, 219, 223, 226, 227, 235, 237, 239, 240, 242, 245, 247, 255, 257, 260, 265, 266, 273, 285, 289, 290, 294, 296, 297, 300, 302, 304, 305, 306, 308, 309, 311, 314, 315, 316, 318, 319, 320, 322], "concept": [207, 210, 289, 312, 314], "technic": [207, 210, 289, 324], "api": [207, 221, 224, 231, 232, 237, 238, 255, 275, 289, 324], "faq": 207, "short": [207, 249, 253, 254, 319, 325], "difficult": [207, 218, 243, 244, 249], "summaris": [208, 248, 302], "abbrevi": 208, "partli": 208, "Not": [208, 219], "bulk": 208, "rkky": [208, 289], "relax": [208, 239, 240, 241, 242, 243, 244, 245, 247, 291, 292, 295, 296, 297, 298, 301, 302, 305, 306, 310, 312, 316, 317, 319, 320], "relaxdriv": [208, 248, 249], "evolut": [208, 272, 291, 293, 312, 318], "releas": [208, 210, 228, 323, 325], "66": [208, 221, 270], "0b0": 208, "65": [208, 219, 221, 270, 272, 318], "07": [208, 221, 227, 228, 229, 230, 231, 235, 236, 246, 248, 249, 291, 302, 321], "0a3": [208, 270, 281], "64": [208, 219, 221, 270, 302, 325], "63": [208, 219, 221, 270], "29": [208, 217, 219, 221, 224, 227, 246, 248, 249, 254, 260, 271, 274, 291, 302, 312, 321, 322], "62": [208, 219, 221, 270, 302], "61": [208, 219, 221, 270, 271], "2021": [208, 242, 243, 244, 247, 261, 263, 264, 267, 269, 324], "20a2": 208, "51": [208, 219, 221, 254, 264, 272, 281, 300, 316, 317, 318, 322], "0a1": 208, "featur": [210, 217, 219, 223, 240, 243, 244, 268, 289, 312, 323], "gentl": [210, 289, 324], "introduct": [210, 223, 289, 315, 324], "compat": [210, 215, 223], "page": [210, 312, 324], "overview": 210, "licens": 210, "under": [210, 240, 241, 247, 272, 324, 325], "latest": [210, 325], "coverag": 210, "binder": [210, 324], "magnetometri": [211, 246], "top": [215, 217, 231, 232, 237, 241, 306, 310], "your": [215, 217, 231, 259, 297, 312, 315, 324, 325], "everyth": [215, 299, 322, 325], "main": [216, 219, 222, 224, 227, 232, 234, 237, 248, 253, 254, 255, 257, 286, 297, 312, 321, 326], "achiev": [216, 220, 223, 263, 264, 274, 279, 283, 290, 295, 323], "simpli": [216, 219, 227, 229, 231, 241, 246, 290], "far": [216, 219, 265, 302, 319, 323], "serv": [216, 293], "distinguish": 216, "lost": [216, 223], "librari": [217, 218, 219], "pyvista": [217, 218, 219], "studi": [217, 318, 319, 324], "elipt": 217, "cylind": [217, 218, 219, 222, 296, 305], "vortex": [217, 219, 249, 290, 292, 324], "swap": [217, 219], "sign": [217, 225, 310, 323], "web": 217, "session": [217, 299, 320, 324], "colourmap": 217, "symmetri": [217, 242, 293, 296, 305], "explain": [217, 223, 312, 315, 318, 323, 325], "discuss": [217, 221, 223, 227, 235], "come": [217, 239, 270, 325], "plasma": [217, 219, 249], "rare": [217, 230], "clabel": 217, "our": [217, 221, 224, 227, 228, 230, 231, 232, 235, 236, 237, 241, 242, 245, 247, 249, 260, 262, 273, 275, 282, 295, 297, 299, 303, 304, 306, 310, 311, 312, 314, 315, 318, 319, 321, 323, 325], "accomplish": 217, "potenti": [217, 241, 312], "care": [217, 223, 224, 323], "know": [217, 227, 232, 237, 278, 324, 325], "field_2d": 217, "confus": [217, 322], "40": [217, 219, 221, 224, 242, 254, 302, 303, 312, 321, 322], "fourierspac": [217, 220, 221, 223, 224, 225, 227, 228, 229, 231, 238, 248, 265], "isplan": [217, 219, 220, 221, 223, 224, 225, 227, 228, 229, 231, 238, 248, 265], "wouldn": 217, "field_4d": [217, 221], "home": [217, 219, 270, 281, 325], "mlang": [217, 219, 270], "repo": [217, 218, 219, 221, 260, 281, 303], "devtool": [217, 218, 219, 221, 260, 281, 303, 325], "367": 217, "userwarn": [217, 219], "coolwarm": [217, 249, 296], "28": [217, 219, 221, 224, 227, 246, 248, 249, 254, 271, 274, 302, 312, 319, 321, 322], "32": [217, 219, 221, 224, 243, 246, 248, 254, 274, 302, 312, 322, 325], "36": [217, 219, 221, 224, 254, 274, 302, 312, 322], "layout": 217, "37": [217, 219, 221, 224, 254, 265, 272, 274, 302, 305, 312, 318, 322], "widget_loc": [217, 249], "bottom": [217, 249, 306, 310], "locat": [217, 319, 321, 325, 326], "bokeh": [217, 249], "38": [217, 219, 221, 224, 254, 265, 268, 274, 302, 312, 322], "scalar_z": 217, "contour_z": 217, "plasma_r": 217, "show_legend": 217, "vector_z": 217, "turbo": [217, 219], "frame_height": 217, "experi": [218, 223, 240, 247, 323], "sure": [218, 237, 251, 252, 270, 280, 304, 320, 325], "googl": 218, "chrome": 218, "sai": [218, 219, 220, 221, 222, 227, 229, 230, 231, 235, 251, 252, 253, 254, 258, 261, 262, 263, 264, 267, 269, 273, 278, 280, 282, 283, 302, 303, 309, 321], "ellipsoid": 218, "cz": [218, 219, 222], "norm_fun": [218, 219, 222, 295], "mous": 218, "0x27ae60": 218, "lt": [218, 219, 221, 224, 227, 229, 238, 248, 249, 260, 261, 263, 264, 267, 269, 281, 292, 303, 312, 322], "gt": [218, 219, 221, 224, 227, 229, 238, 246, 248, 249, 260, 261, 263, 264, 267, 269, 281, 292, 303, 312, 322], "phd": [218, 221, 260, 281], "k3d_field": 218, "233": 218, "k3dfield": 218, "231": 218, "232": 218, "msg": [218, 219, 221, 303], "235": 218, "236": 218, "norm_field": 218, "cascad": 218, "factori": 218, "pleaas": 218, "deactiv": 218, "plese": [218, 258], "plot1": 218, "continuous_upd": [218, 219, 226, 265, 302, 310, 317], "getattr": [218, 219, 298, 303], "firstli": [219, 222, 241, 242, 246, 247, 257, 290, 292, 293, 325], "nanocylind": 219, "diametr": 219, "secondli": [219, 292], "vortex_field": 219, "discertisedfield": 219, "3024": 219, "2992": 219, "2993": 219, "2994": 219, "2995": 219, "2996": 219, "3022": 219, "3023": 219, "mplfield": 219, "mpl_field": 219, "43": [219, 221, 254, 312, 322], "41": [219, 221, 224, 227, 254, 302, 312, 322], "42": [219, 221, 224, 254, 265, 312, 322], "47": [219, 221, 254, 302, 312, 322], "planeaxi": [219, 221, 229], "probabl": [219, 234, 320], "lose": 219, "notic": [219, 238, 316], "decreas": [219, 294, 298, 312], "simplifi": [219, 224, 240, 246, 312, 325], "plane_xi": 219, "plane_yz": 219, "got": [219, 227, 235, 317], "reconstruct": [219, 238, 247], "arround": 219, "asign": 219, "red": [219, 223, 240], "magma": [219, 291], "style": 219, "headwidth": 219, "plane_2d": 219, "606": 219, "491": 219, "492": 219, "493": 219, "603": 219, "604": 219, "605": 219, "607": 219, "_setup_ax": 219, "609": 219, "_setup_multipli": 219, "646": [219, 272, 318], "henc": [219, 223, 238, 240, 241, 243, 245, 312, 313], "demonstr": [219, 223, 228, 230, 246, 248, 249, 255, 260, 268, 273, 275, 289, 294, 300, 303, 306, 312, 319], "sens": [219, 231], "scheme": 219, "m_x": [219, 240, 318], "m_y": [219, 240, 318], "lighness_field": 219, "44": [219, 221, 254, 269, 272, 312, 318, 322], "draw": 219, "separatli": 219, "add_colorwheel": 219, "axeshostax": 219, "widht": 219, "center": [219, 324], "briefli": [219, 312], "respectivli": 219, "mplplot": 219, "48": [219, 221, 254, 302, 311, 322], "49": [219, 221, 254, 322], "Then": [219, 223, 231, 312, 321], "nrow": 219, "ncol": 219, "white": 219, "set_titl": 219, "suptitl": 219, "fontsiz": 219, "xx": [219, 312], "tight_layout": 219, "53": [219, 221, 242, 254, 267, 320, 322], "init_m": 219, "54": [219, 221, 254], "dpi": [219, 240, 245], "spline16": [219, 240, 241, 243, 244, 247], "75": [219, 221, 240, 290], "bfbfbf": 219, "ipython": 219, "57": [219, 221, 240, 254, 265, 290], "58": [219, 221, 254, 261, 272, 290, 318, 324], "correctli": [219, 322], "59": [219, 221, 254], "nbval_ignore_output": [219, 223, 227, 229, 231, 235, 239, 240, 241, 242, 243, 244, 245, 246, 247, 257, 261, 263, 264, 267, 269, 272, 273, 290], "explor": [219, 232, 237, 253, 254, 309, 318, 319, 320], "field_valu": 219, "rememb": [219, 241, 324, 325], "zip": [219, 323, 325], "m_z": [219, 239, 244, 247, 318], "xlabel": [219, 239, 290, 292, 293], "ylabel": [219, 239, 290, 293], "legend": [219, 240, 290], "0x7f3685f9f190": 219, "apart": [220, 271, 325], "7320508075688772": 220, "5773502691896258": 220, "099504938362077": 220, "pyhton": [220, 227], "sphere": [220, 321], "norm_funct": 220, "sphere_field": 220, "625": [221, 224], "1250": 221, "15625": [221, 224], "x_compon": 221, "overrid": 221, "c1": 221, "c2": 221, "c3": 221, "c4": 221, "portion": 221, "mesh4": 221, "although": 221, "dimes": 221, "extact": 221, "resampl": [221, 224, 249], "faster": [221, 299], "That": [221, 279, 322], "cartesian": [221, 235], "intesect": 221, "axis1": [221, 229], "axis2": [221, 229], "5j": 221, "3j": 221, "0j": 221, "982793723247329": 221, "5707963267948966": 221, "later": [221, 229, 231, 232, 237, 260, 261, 263, 264, 267, 269, 309, 320], "1331": 221, "1328": 221, "1329": 221, "1330": 221, "1332": 221, "1333": 221, "1334": 221, "1424": 221, "1359": 221, "1360": 221, "1361": 221, "1362": 221, "1422": 221, "1423": [221, 272, 318], "1102": 221, "1100": 221, "1101": 221, "1103": 221, "1104": 221, "1105": 221, "titl": [221, 324], "accomod": 221, "theori": 221, "behind": 221, "hopefulli": 221, "000000000017728e": 221, "00000000001152e": 221, "000000000000003e": 221, "999999999999996e": 221, "67": 221, "999999999999999e": [221, 274], "68": 221, "9999999999999975e": 221, "69": 221, "8999999999999995e": 221, "y_": 221, "70": [221, 246], "71": [221, 245], "integrand": 221, "mind": [221, 320], "72": [221, 292], "73": 221, "skyrmion": [221, 242, 289, 297, 299, 305, 317, 324], "dxdy": [221, 305], "74": 221, "Or": 221, "76": 221, "78": [221, 302], "79": 221, "2246467991473532e": 221, "81": [221, 302], "141592653589793": [221, 322], "718281828459045": 221, "83": 221, "nanospher": 222, "vtkfilenam": 222, "my_vtk_fil": 222, "omffilenam": 222, "my_omf_fil": 222, "ascii": 222, "hdf5filenam": 222, "read_field": 222, "previouli": [222, 224, 324], "periodict": 223, "predominantli": 223, "own": [223, 324], "mayb": 223, "systemat": 223, "accumult": 223, "special": [223, 224, 260, 297], "handl": [223, 238, 246, 312], "rotation_quaternion": 223, "ident": [223, 304], "transfom": 223, "from_mrp": 223, "slightli": [223, 293], "000000000000007": 223, "000000000000004": 223, "purpos": [223, 233, 235, 255, 276, 286, 322], "jag": 223, "maximis": 223, "mention": [223, 304, 312], "illustr": [223, 316], "rfield": 223, "stripe": 223, "inner": 223, "subsect": 223, "procc": 223, "fulli": [223, 291], "enclos": [223, 323], "quadrat": 223, "grow": [223, 279], "accumul": [223, 322], "clearer": 223, "princibl": 223, "theoret": 223, "known": [223, 240, 260, 297], "nx": 223, "ny": 223, "nz": 223, "resiz": 223, "round": [223, 322], "aproxim": 223, "linearli": 223, "satisfi": [224, 246, 283], "criteria": 224, "discertis": 224, "my_value_funct": 224, "__main__": [224, 249], "sourc": [224, 325], "getsourc": 224, "violent": 224, "vector_value_funct": 224, "emploi": [224, 290, 293], "regions_funct": 224, "And": [224, 296, 306, 312, 316], "region_valu": 224, "explicit": [224, 297, 300], "new_mesh": 224, "new_field": 224, "coord_field": 224, "specialis": 225, "convenic": 225, "usecas": 225, "focus": 225, "triangul": 225, "contribut": [225, 243, 319, 323, 325, 326], "triangl": 225, "everywher": 225, "useful": [225, 231], "cancel": 225, "angles_x": 225, "neigbouring_cell_angl": 225, "angles_i": 225, "treat": [225, 321], "angle_max": 225, "max_neigbouring_cell_angl": 225, "threashold": 225, "connect": 225, "count_large_cell_angle_region": 225, "180": 225, "000000e": [226, 248, 249, 265, 271, 272, 274, 291, 300, 311, 318], "00": [226, 265, 272], "982466": 226, "610991": 226, "103417": 226, "537999": 226, "155126": 226, "306999": 226, "041667e": 226, "958333e": 226, "978240": 226, "074002": 226, "115087": 226, "067530": 226, "172630": 226, "601295": 226, "083333e": 226, "916667e": 226, "972305": 226, "585328": 226, "129640": 226, "744710": 226, "194461": 226, "117066": 226, "125000e": 226, "875000e": 226, "963624": 226, "111659": 226, "148249": 226, "863332": 226, "222374": 226, "794998": 226, "166667e": 226, "833333e": 226, "950255": 226, "268139": 226, "172773": 226, "685116": 226, "259160": 226, "527674": 226, "208333e": 226, "791667e": 226, "928279": 226, "121633": 226, "206284": 226, "249252": 226, "309426": 226, "373878": 226, "250000e": [226, 311], "750000e": 226, "889000": 226, "889001": 226, "254000": 226, "381000": 226, "381001": 226, "291667e": 226, "708333e": 226, "811107": 226, "105654": 226, "324442": 226, "842262": 226, "486664": 226, "263392": 226, "333333e": 226, "666667e": 226, "639602": 226, "149067": 226, "426401": 226, "432711": 226, "375000e": 226, "267261": 226, "241912": 226, "534522": 226, "483825": 226, "801783": 226, "725737": 226, "145833e": 226, "458333e": 226, "500000e": [226, 248, 249, 272, 274, 311, 318], "354167e": 226, "541667e": 226, "583333e": 226, "562500e": 226, "625000e": 226, "770833e": 226, "979167e": 226, "985578": 226, "834374": 226, "93864": 226, "650893": 226, "140796": 226, "976339": 226, "187500e": 226, "987934": 226, "593051": 226, "85907": 226, "355918": 226, "128861": 226, "033876": 226, "989759": 226, "478081": 226, "79180": 226, "758246": 226, "118771": 226, "137370": 226, "395833e": 226, "991201": 226, "182589": 226, "73422": 226, "309821": 226, "110133": 226, "464732": 226, "992359": 226, "570702": 226, "68438": 226, "591083": 226, "102657": 226, "886624": 226, "xval": 226, "yval": 226, "zval": 226, "marker": [226, 231, 232, 237, 275, 302, 319], "deal": 227, "chunk": 227, "cube": [227, 242, 290, 294, 295, 298, 320], "previou": [227, 237, 260, 264, 267, 273, 316, 320, 321], "piec": [227, 274], "decid": [227, 260], "exactli": [227, 278, 299], "whatsoev": 227, "saw": [227, 299], "lenght": [227, 232, 275], "conclud": 227, "0x7f8d19a7df90": 227, "fifth": 227, "thing": [227, 251, 252, 255, 274, 306, 320], "75e": [227, 248], "0000000000000004e": [227, 229], "6e": [227, 229, 239, 240, 241, 242, 243, 244, 246, 247, 284, 291, 296, 297, 305, 311], "71e": 227, "000000000000001e": [227, 229], "8e": [227, 229, 248, 292, 319], "mesh_sam": 227, "mesh_differ": 227, "earlier": [227, 235, 318, 320], "boudari": 228, "neigbour": 228, "neghbour": 228, "At": [228, 272, 320], "futur": [228, 326], "0x7fa939edc040": 229, "2000000000000002e": 229, "4000000000000001e": 229, "8000000000000002e": 229, "usual": [229, 232, 234, 235, 237, 241, 242, 254, 262, 265, 292, 294, 298, 302, 312], "layer": [229, 304, 306, 310], "disctionari": 230, "05e": 230, "4999999999999996e": 230, "life": 231, "dash": [231, 232, 237, 302], "bottom_subregion": 231, "top_subregion": 231, "lx": [231, 291, 292, 293], "ly": [231, 291, 292, 293], "lz": [231, 291, 292, 293], "bottom_region": 231, "top_region": 231, "lot": [231, 279], "freedom": [231, 325], "regard": 231, "800": [231, 291, 302], "400": [231, 271, 272, 302, 312, 316, 317, 318], "k3d_subregion": 231, "rgb": [231, 232, 237], "hex": [231, 232, 237], "onlin": [231, 232, 237, 315, 324], "cycl": 231, "f33f00": 231, "0000cf": 231, "prefix": [231, 232, 235, 237, 275, 288], "micro": [231, 232, 237, 275, 284], "mu": [231, 232, 237, 246], "_as_gen": [231, 232, 237, 275], "__": [231, 232, 237, 238, 275], "customis": [231, 232, 237, 273, 275], "ourselv": [231, 232, 237, 275, 320], "set_xlabel": [231, 232, 237, 245, 275], "set_ylabel": [231, 232, 237, 245, 275], "set_zlabel": [231, 232, 237], "alltogeth": 231, "80e": 231, "12345": 231, "54321": 231, "trick": [232, 237], "matploltlib": [232, 237], "good": [232, 237, 238, 312], "proport": [232, 237], "thinner": [232, 237, 240], "impress": [232, 237], "disadvatag": [232, 237], "zoom": [232, 237], "contol": [232, 237], "pair": [232, 312, 314], "9400d3": [232, 237], "0000ff": 232, "754321": 232, "123456": 232, "opac": [232, 237], "slide": 233, "picomet": 233, "menu": 233, "radio": 233, "button": 233, "python3": [234, 246, 296, 305, 322, 325], "messag": [234, 281], "exit": [234, 240], "simplest": [234, 240, 318, 319], "fie": 234, "infil": 234, "simplic": [235, 241], "alia": [235, 236, 237, 322], "choic": [235, 293], "obvious": 235, "999999999999998e": 235, "lazi": 235, "think": 235, "807246802450429e": 235, "9394886042542286e": 235, "683419701051645e": 235, "unlik": [235, 263, 264], "parenthesi": 235, "region_sam": 235, "region_differ": 235, "pretier": 235, "thought": 237, "654321": 237, "dev": [238, 325], "en": 238, "multi": [238, 323], "visual": 238, "candid": 238, "metadata": 238, "utilis": 238, "x27": [238, 248], "2z": 238, "2comp": 238, "0arrai": 238, "float642": [238, 248], "09unit": 238, "marrai": [238, 248], "nonecel": 238, "prove": 238, "xarray_2": 238, "field_new": 238, "xdr": 238, "09arrai": 238, "field_xdr": 238, "lastli": 238, "advis": 238, "softwar": [239, 240, 245, 323], "magnetomet": 239, "varieti": [239, 246], "vibrat": 239, "superconduct": 239, "quantum": [239, 240], "interfer": [239, 240, 247], "devic": 239, "abil": [239, 243, 247], "congruent": [239, 243, 245], "inlin": [239, 240, 244, 247, 323], "seed": [239, 240, 241, 243, 244, 245, 247, 303, 304, 306, 312], "150e": [239, 240, 244, 245, 247, 310, 317], "m_fun": [239, 240, 241, 243, 244, 247, 261, 263, 264, 267, 269, 303, 309], "rand": [239, 240, 241, 243, 244, 247], "minim": [239, 240, 241, 242, 243, 244, 245, 247, 293, 296, 305, 315, 319], "net": 239, "3518": 239, "084594232684": 239, "8389": 239, "317283463413": 239, "25604": 239, "572753826702": 239, "mimic": 239, "procedur": 239, "mag_arr": 239, "h_arr": 239, "linspac": [239, 245, 290], "recov": 240, "incid": [240, 243, 247], "particl": [240, 290], "deflect": [240, 242], "specimen": 240, "travel": 240, "excess": 240, "defici": 240, "blank": 240, "longer": [240, 243, 248], "variat": [240, 293], "wire": 240, "biprism": 240, "bring": 240, "worth": 240, "veloc": [240, 253, 292, 312, 316, 317], "magntic": [240, 241, 243], "51e6": [240, 247, 296, 297], "2e5": [240, 241, 242, 243, 244, 247, 296, 297], "ref": [240, 244, 247, 290, 291, 292, 293, 322], "beleggia": 240, "2010": 240, "singular": 240, "view": [240, 242, 243, 244, 247, 302, 312], "grai": [240, 243, 244], "quick_plot": [240, 241, 242, 247], "design": [240, 241, 247, 324], "textur": [240, 241, 242, 243, 244, 247], "intermediari": [240, 241, 247], "hood": [240, 241, 247], "theme": [240, 241, 247], "ltem_phas": 240, "circl": 240, "high": [240, 243, 244, 245], "obliter": 240, "signific": 240, "NOT": [240, 243, 244], "angular": [240, 243, 244], "neq": [240, 243, 244, 246], "patch": 240, "ellips": 240, "centre_region": 240, "30e6": 240, "add_patch": 240, "edgecolor": 240, "facecolor": 240, "frameon": 240, "ltem_ft_phas": 240, "free": [240, 301, 312, 324], "bonevich": 240, "1994": 240, "electromagnet": 240, "featureless": 240, "ltem_defocus_imag": 240, "ltem_defocu": [240, 242], "rule": [240, 283], "thumb": 240, "rm": [240, 245], "1f": 240, "tanas": 240, "2009": 240, "ltem_integrated_mfd": 240, "resembl": 240, "examin": [241, 243, 272], "role": 241, "flat": 241, "dual": 241, "raster": 241, "scan": 241, "topographi": 241, "tap": 241, "omega_0": 241, "kazakova": 241, "lift": 241, "z_0": 241, "probe": 241, "characteris": 241, "ten": 241, "nanometr": 241, "diment": [241, 243], "put": [241, 273, 304], "m_field": 241, "harmon": 241, "motion": [241, 312, 314], "sub_region": 241, "phase_shift_2": 241, "phase_shift_3": 241, "recreat": [241, 243], "convolv": 241, "conv_phas": 241, "gaussian_filt": 241, "mfm_phase_shift": 241, "boundarynorm": 241, "sub_phas": 241, "conv_mag2exp": 241, "ncolor": 241, "256": 241, "n\u00e9el": 242, "magentis": [242, 320], "knowledg": [242, 247], "topic": [242, 247], "rho_func": 242, "s_size": 242, "differnt": 242, "phi_func": 242, "n_top": 242, "m_fun_2": 242, "theta": [242, 322], "arctan2": 242, "rho": 242, "box": [242, 295], "rather": 242, "overal": 242, "break": [242, 293, 296, 305], "thu": [242, 293], "reciproc": [243, 244], "mesoscop": [243, 244], "atom": [243, 246], "impact": 243, "approxim": [243, 244, 247], "m\u00fchlbauer": 243, "predict": 243, "160e": 243, "logarithm": [243, 244], "reveal": [243, 244, 245], "diffract": [243, 244], "lognorm": [243, 244], "sans_region": 243, "40e6": [243, 244], "arb": 243, "2i": 243, "asymmetri": 243, "circularli": [244, 247], "absorb": [244, 247], "tune": [244, 247, 291], "absorpt": [244, 247], "van": 244, "der": 244, "laan": 244, "300e": 244, "145": 244, "1e40": 244, "saxs_region": 244, "characterist": [245, 291, 295], "aris": 245, "rewritten": 245, "65e5": 245, "h_mag": 245, "38e6": 245, "78e": [245, 299, 310, 319], "18e6": 245, "3803181647963356e": 245, "1670664434859646e": 245, "4494604241106688e": 245, "torque_val_x": 245, "full_lik": 245, "torque_val_i": 245, "torque_val_z": 245, "enumer": 245, "hline": 245, "xmin": 245, "set_xlim": 245, "mixtur": 246, "convin": 246, "astropi": 246, "aim": [246, 319], "astrophys": 246, "commun": [246, 317, 323, 324, 325], "pip": [246, 315, 325], "sake": 246, "miniconda3": [246, 260, 270, 281, 296, 305, 322], "ubermagdev": [246, 260, 270, 281, 296, 305, 322], "lib": [246, 296, 305, 322], "site": [246, 290, 291, 292, 296, 305, 322], "pyerfa": 246, "initalis": 246, "gauss": 246, "throughout": [246, 249], "field2": 246, "magnetic_mo": 246, "erg": 246, "detach": 246, "numerv": 246, "t_k": 246, "temperature_energi": 246, "7296934": 246, "induct": 246, "strength": [246, 319], "induction_field": 246, "mu0": [246, 250, 290, 291, 294, 298, 299, 302], "7957": 246, "7472": 246, "hamiltonian": [246, 253, 254, 257, 261, 263, 264, 267, 269, 291, 292, 293, 294, 296, 305, 318, 319], "lead": 246, "cal": 246, "ex": [246, 260, 290, 297, 319, 325], "j_": 246, "_j": 246, "lvert": 246, "rvert": 246, "normais": 246, "curi": 246, "3k_": 246, "garanin": 246, "1996": 246, "tc_to_j": 246, "tc": 246, "t_c": 246, "fcc": 246, "808": 246, "271810024752475e": 246, "correl": 246, "zjl": 246, "12v": 246, "heisenberg": 246, "neighbor": 246, "crystal": 246, "j_to_a": 246, "84e": 246, "24e": 246, "922285495270508e": 246, "tc_to_a": 246, "922285495270509e": 246, "zdl": 246, "d_to_d": 246, "01e": 246, "137678571428571e": 246, "helic": 246, "p_to_d": 246, "d_to_p": 246, "jm": [246, 261, 263, 264, 267], "7699111843077517e": 246, "converst": 246, "mu_b": 246, "formula": 246, "ms_mub_to_am": 246, "24375e": 246, "33066": 246, "10835716991": 246, "ms_to_mu": 246, "6e5": 246, "3440000000000002e": 246, "weight": [246, 322], "k_to_k": 246, "fege": 246, "ge": [246, 251, 252], "fe": 246, "6995": 246, "\u00e5": 246, "881": 246, "wilhelm": 246, "2007": 246, "yamada": 246, "2003": 246, "278": 246, "lebech": 246, "1989": 246, "yu": 246, "2011": [246, 247], "6995e": 246, "881e": 246, "ms_orig": 246, "70e": 246, "594746713121875e": 246, "382433": 246, "88973569183": 246, "644": 246, "76621650209023e": 246, "000855629185622006": 246, "coher": 247, "slit": 247, "hologram": 247, "detector": 247, "duckworth": 247, "turnbul": 247, "holo": 247, "rdbu": 247, "meter": 247, "holo2": 247, "x_ray_holographi": 247, "With": [248, 291, 322, 324], "creata": [248, 249], "250": [248, 249, 283], "setopt": 248, "basenam": 248, "scalar_output_format": 248, "12g": 248, "scalar_field_output_format": 248, "vector_field_output_format": 248, "boxatla": 248, "main_atla": 248, "oxs_boxatla": 248, "xrang": 248, "yrang": 248, "zrang": 248, "rectangularmesh": 248, "oxs_rectangularmesh": 248, "cellsiz": [248, 290], "atla": 248, "uniformexchang": [248, 271], "oxs_uniformexchang": 248, "fixedzeeman": 248, "oxs_fixedzeeman": 248, "oxs_filevectorfield": 248, "m0_norm": 248, "oxs_vecmagscalarfield": 248, "cgevolv": 248, "destin": 248, "mmarchiv": [248, 261, 263, 264, 267, 269], "datat": [248, 291, 318], "drive_select": 248, "50067876e": 248, "98022376e": 248, "73831082e": 248, "41540277e": 248, "81017399e": 248, "00000000e": 248, "mindriverxarrai": 248, "14x": 248, "20y": 248, "10z": 248, "4comp": 248, "501e": 248, "98e": 248, "738e": 248, "415e": 248, "81e": 248, "05arrai": 248, "08unit": 248, "float640": 248, "0unit": 248, "6date": 248, "11time": 248, "17driver": 248, "side": 248, "290": 248, "27584": 248, "49540021": 248, "658579": 248, "77501927": 248, "453334": 248, "06616874": 248, "797212": 248, "875": 248, "51317": 248, "65625": 248, "42639": 248, "36328125": 248, "423e": 248, "445e": 248, "466e": 248, "timedriverxarrai": 248, "290x": 248, "758e": 248, "586e": 248, "533e": 248, "972e": 248, "132e": 248, "264e": 248, "04arrai": 248, "float641": 248, "10unit": 248, "sarrai": 248, "423237e": 248, "444648e": 248, "466095e": 248, "logo": 249, "time_dr": 249, "colorlimit": 249, "800000": 249, "full_time_dr": 249, "resulut": 249, "coarser": 249, "seri": 249, "notat": 249, "5th": 249, "familiar": [249, 314], "afterward": [249, 312], "time_drive_tcd_1": 249, "repeat": [249, 312, 318], "select_plan": 249, "time_drive_tcd_2": 249, "funtion": 249, "explanatori": 249, "hmin": [249, 302], "hmax": [249, 302], "795774": [249, 302], "7154594767": [249, 302], "stage": [249, 262, 265, 271, 272, 292, 300, 302, 303, 311, 318], "fundament": 250, "me": 250, "kb": 250, "mub": 250, "specialdynam": 251, "xi": 251, "sd": 251, "_reprlatex": [251, 252], "dmdt": 251, "specialenergi": 252, "se": 252, "valid_nam": 252, "211e5": [253, 272, 291, 292, 293, 312, 316, 317, 318, 320], "221100": 253, "adiabat": [253, 292, 312, 316, 317], "mydynamicsterm": 253, "nydynamicsterm": 253, "arbitratri": 254, "ghz": [254, 293, 307, 308, 312], "zeeman_sin": 254, "1000000000": [254, 284], "zeeman_sinc": 254, "100000": [254, 303], "1e3": [254, 267, 294, 298], "dm": [254, 263, 271, 319], "mandatori": [254, 321], "dmi_cnv_x": 254, "dmi_cnv_i": 254, "dmi_t": 254, "dmi_d2d_x": 254, "dmi_d2d_i": 254, "dmi_d2d_z": 254, "cubicanisotropi": [254, 261], "sigma_": 254, "subregion1": [254, 309], "subregion2": [254, 309], "0001": 254, "dzyaloshinkii": [254, 312, 316, 317, 325], "myenergi": 254, "myexchang": 254, "Their": 255, "mydriv": 255, "_x": 255, "arg1": 255, "arg2": 255, "_allowed_kwarg": 255, "rase": 255, "arg3": 255, "externaldriv": 255, "zeeman1": [256, 303], "zeeman2": [256, 303], "my_zeeman_term": 256, "entiti": 257, "discretisationfield": 257, "mysystem": 257, "times10": [258, 261, 263, 264, 267, 269, 303, 309, 319], "3e5": 258, "colon": [258, 304], "ot": [258, 265], "trivial": 258, "manner": 258, "testdmi": 259, "testexchang": 259, "conftest": 259, "fixtur": 259, "pytest": 259, "member": 260, "cloud": [260, 297], "destroi": [260, 297], "happen": [260, 262, 297, 318], "background": [260, 262, 272, 297], "assist": [260, 297], "desktop": [260, 297], "delai": [260, 297], "tcloommfrunn": [260, 297], "couldn": [260, 297], "tclsh": 260, "boxsi": [260, 281], "fg": [260, 281], "exitondon": [260, 281], "stderr": [260, 281], "432": 260, "429": 260, "setter": [260, 279], "430": 260, "431": 260, "433": 260, "_runner": 260, "expectedli": 260, "paragraph": 260, "choosen": [260, 312], "search": 260, "sucessfulli": 260, "tend": [261, 263, 264, 267, 269, 319], "antiparallel": [261, 267, 303, 319], "chain": [261, 263, 264, 267, 269, 303, 309, 311, 319], "cubicanisotropy_constant_k_u": 261, "made": [261, 263, 264, 267, 269, 272, 309], "cubicanisotropy_dict_k": 261, "spatailli": [261, 267], "nbsphinx": [261, 264, 267], "k_fun": 261, "cubicanisotropy_field_u": 261, "organis": 262, "my_simul": 262, "instruct": [262, 315, 325], "my_project": 262, "isdir": 262, "max_mxhxm": [262, 265, 302, 303], "delta_": [262, 265, 271, 272, 291, 300, 302, 303, 311, 318], "bracket_count": [262, 265, 302, 303], "line_min_count": [262, 265, 302, 303], "conjugate_cycle_count": [262, 265, 302, 303], "cycle_count": [262, 265, 302, 303], "cycle_sub_count": [262, 265, 302, 303], "energy_calc_count": [262, 265, 302, 303], "e_zeeman": [262, 265, 272, 291, 308, 311, 318], "stage_iter": [262, 265, 271, 272, 291, 300, 302, 303, 311, 318], "503365e": 262, "785840e": 262, "350143e": 262, "ll": 263, "nv": [263, 319], "dzyaloshinksii": 263, "dmi_constant_d": 263, "orthogon": 263, "dmi_dict_d": 263, "exchange_constant_a": 264, "exchange_dict_a": 264, "allign": 264, "a_fun": 264, "exchange_field_a": 264, "mindriver_step": [265, 266], "relex": 265, "000000": 265, "999996e": 265, "206285e": 265, "000873": 265, "848078e": 265, "400340e": 265, "388277e": 265, "173648": 265, "396926e": 265, "727747e": 265, "327407e": 265, "342020": 265, "660254e": 265, "911504e": 265, "183757e": 265, "500000": 265, "660444e": 265, "885258e": 265, "973754e": 265, "642788": 265, "427876e": 265, "058904e": 265, "703780e": 265, "766044": 265, "197108e": 265, "382038e": 265, "866025": 265, "464669e": 265, "296684e": 265, "957653e": 265, "938062": 265, "420201e": 265, "298938e": 265, "253721e": 265, "939693": 265, "981052e": 265, "354905e": 265, "596679e": 265, "980181": 265, "736482e": 265, "361301e": 265, "395896e": 265, "984808": 265, "305027e": 265, "379550e": 265, "824996e": 265, "998010": 265, "366695e": 265, "382301e": 265, "750291e": 265, "fecault": 265, "creationg": 265, "my_plot": [265, 302, 310, 312, 316], "uniaxialanisotropy_constant_k_u": 267, "uniaxialanisotropy_dict_k": 267, "u_fun": 267, "uniaxialanisotropy_field_u": 267, "uniaxialanisotropy_higher_ord": 267, "screen": [268, 281], "sole": 268, "cleanup": 268, "zeeman_constant_h": [269, 309], "zeeman_dict_h": [269, 309], "h_fun": [269, 309], "zeeman_field_h": [269, 309], "__version__": [270, 323], "debug_info": 270, "forg": [270, 325], "mar": 270, "gcc": 270, "e_calc_count": [271, 272, 291, 300, 311, 318], "max_dmdt": [271, 300], "average_u": [271, 312], "e_exchang": [271, 291, 302, 311], "max_spin_ang_exchang": [271, 291, 311], "stage_max_spin_ang_exchang": [271, 291, 311], "run_max_spin_ang_exchang": [271, 291, 311], "e_dmi": 271, "e_uniaxialanisotropi": 271, "last_time_step": [271, 272, 291, 300, 311, 318], "138757e": 271, "5105": 271, "786662": 271, "131548e": 271, "234439e": 271, "819720e": 271, "981919": 271, "791404e": 271, "955566e": 271, "004356": 271, "001711": 271, "779309": 271, "146802e": 271, "123365e": 271, "92": 271, "5393": 271, "820357": 271, "881778e": 271, "714936e": 271, "859070e": 271, "999114": 271, "795166e": 271, "969222e": 271, "007399": 271, "002527": 271, "779212": 271, "481817e": 271, "101629e": 271, "5478": 271, "105937": 271, "410525e": 271, "525909e": 271, "908188e": 271, "839540": 271, "800156e": 271, "991741e": 271, "010058": 271, "002596": 271, "779103": 271, "371456e": 271, "075651e": 271, "5775": 271, "596117": 271, "750961e": 271, "026333e": 271, "963184e": 271, "523018": 271, "806035e": 271, "021517e": 271, "012243": 271, "002078": 271, "779037": 271, "397143e": 271, "046980e": 271, "209": 271, "6099": 271, "408455": 271, "938665e": 271, "417659e": 271, "020796e": 271, "968494": 271, "812650e": 271, "058726e": 271, "013915": 271, "001139": 271, "779058": 271, "838847e": 271, "195": [271, 272, 291, 311, 318], "666219e": 271, "7786": 271, "6419": 271, "713717": 271, "798949e": 271, "373560e": 271, "222876e": 271, "279242": 271, "396487": 271, "740702": 271, "937412e": 271, "678731e": 271, "1372": 271, "007893": 271, "008017": 271, "899229": 271, "094469e": 271, "960000e": 271, "634379e": 271, "7829": 271, "6444": 271, "188876": 271, "763562e": 271, "564748e": 271, "222846e": 271, "358338": 271, "936677e": 271, "674871e": 271, "1379": 271, "007885": 271, "008007": 271, "899298": 271, "044352e": 271, "970000e": 271, "197": [271, 272, 281, 291, 311, 318], "601751e": 271, "7866": 271, "6397": 271, "295744": 271, "905618e": 271, "926693e": 271, "222790e": 271, "418283": 271, "935846e": 271, "670387e": 271, "1386": 271, "007876": 271, "007998": 271, "899383": 271, "101084e": 271, "980000e": 271, "568193e": 271, "7909": 271, "6374": 271, "587944": 271, "124776e": 271, "795553e": 271, "222710e": 271, "397007": 271, "419861": 271, "934920e": 271, "665281e": 271, "1393": 271, "007866": 271, "007989": 271, "899482": 271, "961504e": 271, "990000e": 271, "199": [271, 272, 291, 311, 318], "533615e": 271, "7946": 271, "6479": 271, "674566": 271, "377564e": 271, "490729e": 271, "222607e": 271, "301311": 271, "933899e": 271, "659556e": 271, "1400": 271, "007854": 271, "007981": 271, "899595": 271, "547542e": 271, "shorten": 271, "table_not_renam": 271, "spintevolv": 271, "calc": 271, "ang": 271, "knew": 271, "phenomena": 272, "8e6": [272, 304, 306, 318, 319, 320, 321], "indepent": 272, "max_dm": [272, 291, 311, 318], "400762e": [272, 318], "25204": [272, 318], "415522": [272, 318], "798712e": [272, 318], "269612e": [272, 318], "975901": [272, 318], "217115": [272, 318], "021888": [272, 318], "715017e": [272, 318], "797309e": [272, 318], "25186": [272, 318], "311578": [272, 318], "786077e": [272, 318], "396547e": [272, 318], "904810": [272, 318], "423562": [272, 318], "043754": [272, 318], "318544e": [272, 318], "25156": [272, 318], "186455": [272, 318], "765071e": [272, 318], "388134e": [272, 318], "790286": [272, 318], "609218": [272, 318], "065579": [272, 318], "756100e": [272, 318], "25114": [272, 318], "112032": [272, 318], "735776e": [272, 318], "375555e": [272, 318], "638055": [272, 318], "765021": [272, 318], "087341": [272, 318], "191985e": [272, 318], "25060": [272, 318], "188355": [272, 318], "698302e": [272, 318], "358857e": [272, 318], "455710": [272, 318], "883427": [272, 318], "109020": [272, 318], "009865e": [272, 318], "1402": [272, 318], "690": [272, 318], "438568": [272, 318], "602614e": [272, 318], "374608e": [272, 318], "396": [272, 318], "013011": [272, 318], "024099": [272, 318], "999625": [272, 318], "800000e": [272, 274, 291, 318], "009897e": [272, 318], "1409": [272, 318], "675": [272, 318], "493807": [272, 318], "319876e": [272, 318], "230101e": [272, 318], "398": [272, 318], "017545": [272, 318], "020251": [272, 318], "999641": [272, 318], "850000e": [272, 291, 318], "009928e": [272, 318], "1416": [272, 318], "660": [272, 318], "872303": [272, 318], "049242e": [272, 318], "091780e": [272, 318], "021059": [272, 318], "015612": [272, 318], "999656": [272, 318], "900000e": [272, 274, 291, 311, 318], "009958e": [272, 318], "567078": [272, 318], "790193e": [272, 318], "959381e": [272, 318], "402": [272, 318], "023428": [272, 318], "010435": [272, 318], "999671": [272, 318], "950000e": [272, 291, 311, 318], "009986e": [272, 318], "1430": [272, 318], "632": [272, 318], "571305": [272, 318], "542233e": [272, 318], "832649e": [272, 318], "404": [272, 318], "024591": [272, 318], "004988": [272, 318], "999685": [272, 318], "ft_mx": 272, "ft_my": 272, "521315": 272, "000000j": 272, "487159": 272, "543484": 272, "663425j": 272, "585720": 272, "150552j": 272, "616125": 272, "426352j": 272, "912330": 272, "322464j": 272, "759313": 272, "452269j": 272, "590649": 272, "544779j": 272, "989438": 272, "140613j": 272, "995293": 272, "839505j": 272, "96": 272, "600000e": [272, 274], "487614": 272, "030294j": 272, "055860": 272, "006899j": 272, "97": 272, "700000e": [272, 274], "487593": 272, "022707j": 272, "055952": 272, "005171j": 272, "98": 272, "487579": 272, "015131j": 272, "056017": 272, "003446j": 272, "487570": 272, "007564j": 272, "056056": 272, "001722j": 272, "487567": 272, "056069": 272, "ft_mz": 272, "168": 272, "841749": 272, "166086": 272, "032844j": 272, "088546": 272, "908290j": 272, "313478": 272, "167120j": 272, "9890680": 272, "7393600j": 272, "4943940": 272, "0307590j": 272, "4943850": 272, "0230560j": 272, "4943780": 272, "0153640j": 272, "4943740": 272, "0076800j": 272, "4943730": 272, "0000000j": 272, "my_interactive_plot": 273, "hold": 273, "ctrl": 273, "interv": 274, "4999999999999994e": 274, "monoton": 274, "100000e": 274, "200000e": 274, "300000e": 274, "400000e": 274, "restrict": [275, 276], "12e": [275, 306], "forbid": [277, 283], "person": 277, "clerk": 277, "maxwel": 277, "fuinction": 278, "hysteresis_valu": 278, "_a": 279, "repetit": 279, "myclass": 279, "reject": [279, 283], "challeng": 280, "overwritten": 280, "ihnerit": 280, "unless": [280, 312], "method1": 280, "method2": 280, "blass": 280, "howto": 281, "metapackag": 281, "setup": [281, 324], "wanr": 281, "martin": [281, 324], "510": 281, "523": 281, "548": 281, "554": 281, "ouput": 281, "201": 281, "573": 281, "279": 281, "575": 281, "completedprocess": 281, "returncod": 281, "51622": 281, "noommf": 281, "lookup": 281, "failur": [281, 312], "156": 281, "157": 281, "244": 281, "51659": 281, "otheriws": 282, "variou": [283, 291], "satisi": 283, "weather": 283, "pico": 284, "mega": 284, "si_prefix": 284, "ordereddict": 284, "1000000000000": 284, "1000000000000000": 284, "intend": [286, 320, 325], "inherit_doc": 288, "tailor": 289, "concis": 289, "fmr": 289, "flower": 290, "splai": 290, "intrins": 290, "magnetostat": 290, "princip": 290, "initiais": 290, "m_init_flow": 290, "norm_squar": 290, "m_init_vortex": 290, "minimise_system_energi": 290, "__name__": 290, "cubes": 290, "lex": 290, "km": 290, "stdprob3": 290, "transit": 290, "occurr": 290, "l_arrai": 290, "vortex_energi": 290, "flower_energi": 290, "4l_": 290, "6l_": 290, "root": [290, 325], "bisect": 290, "algorithm": 290, "energy_differ": 290, "xtol": 290, "nthe": 290, "425": 290, "4375": 290, "\u00b5mag": [290, 291, 292], "ctcm": [290, 291, 292], "rdm": [290, 291, 292], "mumag": [290, 291, 292], "underbrac": [291, 318], "equlibrium": [291, 320], "125e": 291, "stdprob4": 291, "littl": 291, "bit": [291, 312, 325], "resulot": 291, "ni": 291, "773766": 291, "2113000217": 291, "99856": 291, "85902016422": 291, "0031607521877565227": 291, "799979": 291, "2760196766": 291, "5758": 291, "293066036878": 291, "005025602440378236": 291, "h1": [291, 303], "drove": 291, "e_demag": 291, "676342e": 291, "3736": 291, "1162": 291, "551057": 291, "697359e": 291, "278388e": 291, "548545e": 291, "913555": 291, "281298": 291, "612838": 291, "530166e": 291, "624844e": 291, "784": 291, "984260": 291, "010971": 291, "033987": 291, "374338e": 291, "685463e": 291, "3755": 291, "1260": 291, "313987": 291, "935225e": 291, "621609e": 291, "637446e": 291, "157990": 291, "844369e": 291, "656275e": 291, "788": 291, "987086": 291, "021592": 291, "039286": 291, "373844e": 291, "695498e": 291, "3774": 291, "1384": 291, "782639": 291, "057789e": 291, "813911e": 291, "039753e": 291, "727732": 291, "074607e": 291, "683357e": 291, "792": 291, "988092": 291, "057824": 291, "042604": 291, "373936e": 291, "705827e": 291, "3793": 291, "1351": 291, "611579": 291, "053171e": 291, "832074e": 291, "586011e": 291, "669397": 291, "772022": 291, "220444e": 291, "703732e": 291, "796": 291, "986964": 291, "095870": 291, "043794": 291, "374355e": 291, "715833e": 291, "3812": 291, "1191": 291, "084437": 291, "931645e": 291, "687310e": 291, "141300e": 291, "354487": 291, "291427e": 291, "716389e": 291, "983765": 291, "133793": 291, "042832": 291, "375196e": 291, "snap": 291, "shot": 291, "fluctuat": 291, "pydata": 291, "u_": 292, "ux": [292, 312, 316, 317], "stdprob5": 292, "m_vortex": 292, "displac": 292, "axessubplot": 292, "irregular": 293, "discret": 293, "enough": [293, 312, 322], "neglect": [293, 312], "008": 293, "bia": 293, "ka": 293, "715": 293, "degener": 293, "eigenmod": 293, "suffici": 293, "converg": 293, "equilibrium": 293, "quasistat": 293, "alter": 293, "record": [293, 324], "120e": [293, 321], "8e4": 293, "81345856316858023": 293, "58162287266553481": 293, "stdprobfmr": 293, "81923192051904048": 293, "57346234436332832": 293, "4000": 293, "psd": 293, "log10": [293, 322], "f_axi": 293, "fftfreq": 293, "psa": 293, "baker": 293, "beg": [293, 310, 324], "ashton": 293, "chernyshenko": 293, "wang": 293, "bisotti": 293, "franchin": 293, "hu": 293, "stamp": 293, "hesjed": 293, "fangohr": [293, 323, 324, 325, 326], "magn": 293, "mater": 293, "421": 293, "428": 293, "2017": 293, "afetr": 294, "intialis": [294, 298], "hex_eff": [294, 298], "3470795322e": [294, 298], "35285533145e": [294, 298], "1217018942e": 294, "chack": 294, "total_energi": [294, 298], "352855331441701e": 294, "edgl": 295, "airbox_method": 295, "confirm": 295, "stray_field": 295, "confin": 296, "cylindr": 296, "50nm": 296, "definr": 296, "10nm": [296, 305], "magnets": [296, 305], "689": [296, 305], "runtimewarn": [296, 305], "double_scalar": [296, 305], "widthu_per_lenu": [296, 305], "49e": [296, 305], "tcl_runner": 297, "exe_runn": 297, "tell": 297, "energy_comput": 298, "m3": 298, "heff": [298, 299], "12170206653e": 298, "simpler": [298, 312], "3528553314865004e": 298, "84e5": [299, 310, 319], "58e": [299, 310, 319], "m_initi": [299, 319], "volume_integr": 299, "wdf": 299, "wmc": 299, "edf": 299, "emc": 299, "rerr": 299, "0347218596939451e": 299, "03472185969e": 299, "8126911702142893e": 299, "hdf": 299, "hmc": 299, "2k": 299, "043355901311158e": 299, "04335590131e": 299, "668156582818925e": 299, "2a": 299, "7438374238126347e": 299, "74383742381e": 299, "510847357640387e": 299, "350588324058675e": 299, "35058832406e": 299, "045656594100094e": 299, "heff_funct": 299, "dmdt_function": 299, "soon": 300, "publish": 300, "60k": 300, "uniformli": [300, 304], "1700e3": 300, "timestep": [300, 312], "offici": [300, 325], "68871": 300, "265081": 300, "842372": 300, "002361": 300, "003408": 300, "102": 300, "69924": 300, "226300": 300, "710945": 300, "001004": 300, "001404": 300, "78886": 300, "820644": 300, "152": 300, "600855": 300, "002175": 300, "005869": 300, "204": 300, "67798": 300, "361453": 300, "203": 300, "502902": 300, "003426": 300, "002623": 300, "255": 300, "75905": 300, "774117": 300, "254": 300, "425940": 300, "003645": 300, "007141": 300, "somethom": 301, "fixed1": 301, "27e": 301, "fixed2": 301, "fixed_spin": 301, "duri": 301, "anf": 301, "neel": 301, "wall": [301, 312, 314], "offer": 302, "arhument": 302, "081201": 302, "296243e": 302, "958228e": 302, "178506e": 302, "550275e": 302, "411539e": 302, "998400": 302, "079326": 302, "769135e": 302, "874685e": 302, "301416e": 302, "900": 302, "481374e": 302, "722528e": 302, "998216": 302, "056126": 302, "242133e": 302, "479114e": 302, "445097e": 302, "100550e": 302, "791429e": 302, "997999": 302, "086456": 302, "715256e": 302, "465190e": 302, "614662e": 302, "700": 302, "752309e": 302, "515825e": 302, "997739": 302, "053076": 302, "188531e": 302, "451266e": 302, "816966e": 302, "600": 302, "854727e": 302, "997422": 302, "bz": 302, "h2": 303, "multiple_term": 303, "115": 303, "113": 303, "_container_class": 303, "378": 303, "369": 303, "370": 303, "__class__": 303, "371": 303, "_term": 303, "372": 303, "373": 303, "374": 303, "375": 303, "376": 303, "377": 303, "379": 303, "380": 303, "e_zeeman_zeeman1": 303, "e_zeeman_zeeman2": 303, "002808": 303, "843445e": 303, "222237e": 303, "421723e": 303, "707107": 303, "862214e": 303, "mark": [303, 322], "gave": 303, "plan": [304, 325, 326], "coupl": [304, 306], "antiferomagnet": 304, "60e": [304, 306], "r3": 304, "negative_a": 304, "adict": 304, "m_random": 304, "antiferromagnet": [304, 306], "infinit": 305, "9249451991543435": 305, "9244762913568568": 305, "9244762913568569": 305, "9997455664839123": 305, "spacer": 306, "22e": 306, "sine_hysteresi": 307, "1e2": 307, "2e9": [307, 308], "bz_zeeman": [307, 311, 312], "space_time_varying_field": 308, "hspace": 308, "scientif": [310, 324], "7959": 310, "150": 310, "hb": 310, "ht": 310, "bloch_point": 310, "vortic": 310, "closer": 310, "amp": 311, "time_dependent_field": 311, "by_zeeman": [311, 312], "297563e": 311, "434031e": 311, "147568e": 311, "812700e": 311, "931627e": 311, "897440e": 311, "758989": 311, "183653": 311, "624666": 311, "515634e": 311, "562001e": 311, "766104e": 311, "954602e": 311, "204656e": 311, "766444e": 311, "164967e": 311, "090633": 311, "038564": 311, "995137": 311, "425770e": 311, "759093e": 311, "290846e": 311, "636140e": 311, "221901e": 311, "141003e": 311, "711504e": 311, "784284": 311, "261449": 311, "562622": 311, "631440e": 311, "863542e": 311, "184": 311, "673341e": 311, "207088e": 311, "112468e": 311, "477265e": 311, "215898e": 311, "015202": 311, "010857": 311, "999825": 311, "449728e": 311, "848036e": 311, "299": 311, "014752e": 311, "675974e": 311, "915541e": 311, "777153e": 311, "665730e": 311, "497085": 311, "051994": 311, "866143": 311, "913664e": 311, "436379e": 311, "20614": 311, "906705e": 311, "837992e": 311, "268306e": 311, "3450": 311, "020176": 311, "114665": 311, "993199": 311, "918021e": 311, "422674e": 311, "20687": 311, "474584e": 311, "221479e": 311, "046823e": 311, "3463": 311, "848044": 311, "209072": 311, "486939": 311, "197700e": 311, "925000e": 311, "328011e": 311, "20742": 311, "004530e": 311, "502211e": 311, "083878e": 311, "3473": 311, "063640": 311, "149399": 311, "986727": 311, "412896e": 311, "178128e": 311, "20779": 311, "087140e": 311, "673789e": 311, "358762e": 311, "3480": 311, "822805": 311, "116178": 311, "556322": 311, "059389e": 311, "975000e": 311, "088592e": 311, "20804": 311, "629445e": 311, "731610e": 311, "217703e": 311, "032019e": 311, "048028e": 311, "3485": 311, "041748": 311, "107200": 311, "993361": 311, "687671e": 311, "bx_zeeman": [311, 312], "cardin": 311, "prefactor": 312, "mechan": 312, "nevertheless": 312, "micromagnetimodel": 312, "correstpond": 312, "coars": 312, "somewher": 312, "userguide12b3": 312, "stem": 312, "differen": 312, "amplitud": 312, "toi": 312, "exter": 312, "observ": 312, "durat": 312, "particularli": 312, "5e4": 312, "almost": 312, "ninti": 312, "t_func": 312, "macrospin_puls": 312, "ax1": 312, "ax2": 312, "macrospin_pulse_dr": 312, "tion": 312, "offset": 312, "macrospin_sin": 312, "macrospin_sinc": 312, "profil": 312, "artif": 312, "nois": 312, "smooth": 312, "t_sampl": 312, "1001": 312, "10n": 312, "10p": 312, "measured_time_depend": 312, "randn": 312, "26263374": 312, "32470813": 312, "18966045": 312, "19483294": 312, "line2d": 312, "0x7fa269d430a0": 312, "wrap": 312, "accuraci": 312, "interp": 312, "macrospin_measur": 312, "userguide20a2": 312, "r_": 312, "yy": 312, "zx": 312, "zy": 312, "zz": 312, "h_field": 312, "system_tcl": 312, "custom_tcl": 312, "oxs_transformzeeman": 312, "easiest": 312, "proc": 312, "timefunct": 312, "total_tim": 312, "expr": 312, "atan": 312, "ct": 312, "mct": 312, "cosin": 312, "mst": 312, "domain_wal": [312, 316], "dw": [312, 316], "m_valu": [312, 316, 321], "time_func": 312, "5t": 312, "movement": 312, "2e12": 312, "average_j": 312, "influenc": 313, "learn": [314, 315, 324], "exercis": 314, "induc": 314, "newer": 315, "anaconda": [315, 325], "prompt": [315, 325], "termin": [315, 325], "venv": [315, 325], "ubermag_env": [315, 325], "browser": [315, 324], "tab": [315, 325], "ui": 315, "click": 315, "screenshot": 315, "mj": [316, 317], "domain_wall_pair": 316, "solut": [316, 318, 321], "narrow": 317, "constrain": 317, "zhou": 317, "ezawa": 317, "2014": 317, "revers": 317, "junction": 317, "natur": [317, 322], "1038": 317, "ncomms5652": 317, "dw_pair_convers": 317, "wider": 317, "excit": 318, "initial_m": 318, "41e6": 318, "intuit": 318, "uniaxial_anisotropi": 319, "6e6": 319, "aniostropi": 319, "preferenti": 319, "hamiltoninan": 319, "exchange_and_zeeman": 319, "plu": 319, "approx": 319, "exchange_and_dmi": 319, "28e": 319, "diamet": [319, 321], "goal": [320, 326], "comfort": 320, "eventu": 320, "skeleton": 320, "worri": 320, "difer": 320, "first_ubermag_simul": 320, "simulaton": 320, "mistak": 320, "human": 320, "sligtli": 320, "workshop": [320, 323, 324], "7860158": 320, "235916737": 320, "007325129149015993": 320, "0489096641540526e": 320, "9825197794895917": 320, "156411379107609e": 320, "498001805406602e": 320, "quantitit": 321, "8000000": 321, "disrectis": 321, "ms_valu": 321, "decim": 322, "bracket": 322, "3333333333333335": 322, "live": 322, "14159": 322, "65358979335273e": 322, "9999999999964793": 322, "51000": 322, "mutabl": 322, "new_el": 322, "region797": 322, "quot": 322, "branch": 322, "sum_of_el": 322, "syntaxerror": 322, "indentationerror": 322, "block": [322, 323], "my_var": 322, "nameerror": 322, "scp": 322, "typo": 322, "scpy": 322, "my_object": 322, "signatur": 322, "keepdim": 322, "arithmet": 322, "flatten": 322, "intermedi": 322, "versionad": 322, "cast": 322, "against": 322, "std": 322, "var": 322, "nanmean": 322, "nanstd": 322, "nanvar": 322, "inaccur": 322, "especi": 322, "float32": 322, "allevi": 322, "float16": 322, "512": 322, "54999924": 322, "55000000074505806": 322, "fromnumer": 322, "bug": 323, "public": [323, 324], "zulip": [323, 324], "chat": [323, 324], "everyon": 323, "subscrib": [323, 324], "announc": [323, 324], "archiv": 323, "perhap": 323, "ideal": 323, "upload": [323, 324], "confidenti": 323, "backtick": 323, "inline_cod": 323, "excerpt": 323, "enhanc": 323, "chanc": 323, "who": 323, "patient": 323, "repli": 323, "immedi": 323, "suggest": 323, "phrase": 323, "smartquest": 323, "anyon": 323, "fellow": 323, "buid": 323, "task": [323, 324], "micromagnetic simul": 324, "finite differ": 324, "lorentz transmission electron microscopi": 324, "small-angle neutron scatt": 324, "small angle x-ray scatt": 324, "sax": 324, "magnetic force microscopi": 324, "torque magnetometri": 324, "dc magnetometry x-ray holographi": 324, "taylor": 324, "fluid": 324, "framework": 324, "sit": 324, "\u00fcber": 324, "backend": [324, 325], "ecosystem": 324, "popular": 324, "becom": 324, "readili": 324, "deleg": 324, "toward": 324, "spacif": 324, "blender": 324, "june": 324, "spintalk": 324, "ieee": 324, "societi": 324, "ieeemagnet": 324, "youtub": 324, "badg": 324, "scratch": 324, "prepar": 324, "marijan": 324, "lang": 324, "samuel": 324, "holt": 324, "ryan": 324, "pepper": 324, "thoma": 324, "kluyver": 324, "loudon": 324, "hicken": 324, "david": 324, "cort\u00e9": 324, "ortu\u00f1o": 324, "jeroen": 324, "jonathan": 324, "leliaert": 324, "han": 324, "depart": 324, "earth": 324, "scienc": 324, "engin": 324, "imperi": 324, "colleg": 324, "london": 324, "sw7": 324, "2az": 324, "kingdom": 324, "faculti": 324, "univers": [324, 326], "southampton": [324, 326], "so17": 324, "1bj": 324, "institut": 324, "matter": 324, "lurup": 324, "chausse": 324, "22761": 324, "hamburg": [324, 326], "germani": [324, 326], "warwick": 324, "coventri": 324, "cv4": 324, "7al": 324, "european": 324, "xfel": 324, "gmbh": 324, "holzkoppel": 324, "22869": 324, "schenefeld": 324, "metallurgi": 324, "cambridg": 324, "cb3": 324, "0f": 324, "durham": 324, "dh1": 324, "3le": 324, "ghent": 324, "krijgslaan": 324, "281": 324, "s12": 324, "9000": 324, "belgium": 324, "laser": 324, "workflow": 324, "transact": 324, "vol": 324, "feb": 324, "art": 324, "7300205": 324, "1109": 324, "tmag": 324, "3078896": 324, "articl": 324, "beg2022": 324, "journal": 324, "year": 324, "bsd": 324, "claus": 324, "revis": 324, "horizon": 324, "infrastructur": 324, "opendreamkit": 324, "id": 324, "676541": 324, "fond": 324, "wetenschappelijk": 324, "onderzoek": 324, "fwo": 324, "vlaanderen": 324, "g098917n": 324, "postdoctor": 324, "fellowship": 324, "pypi": 325, "ubermagdata": 325, "virtual": 325, "ubermag_venv": 325, "folder": 325, "bat": 325, "channel": 325, "mumax3_ex": 325, "raw": 325, "backslash": 325, "escap": 325, "sequenc": 325, "upgrad": 325, "unzip": 325, "among": 325, "step2": 325, "compil": 325, "xcode": 325, "appstor": 325, "git": 325, "clone": 325, "cd": 325, "bash_profil": 325, "edit": 325, "refresh": 325, "bashrc": 325, "reopen": 325, "ubuntu": 325, "privileg": 325, "sudo": 325, "apt": 325, "tk": 325, "reporsitori": 325, "emd": 325, "until": 325, "deamon": 325, "helper": 325, "feasibl": 325, "peopl": 325, "dissemin": 326, "decemb": 326, "8th": 326, "15th": 326, "uk": 326, "contact": 326, "soton": 326, "ac": 326, "port": 326, "dataclass": 326, "brainstorm": 326, "august": 326, "22nd": 326, "27th": 326, "mpsd": 326}, "objects": {"": [[0, 0, 0, "-", "discretisedfield"], [38, 0, 0, "-", "mag2exp"], [66, 0, 0, "-", "micromagneticdata"], [74, 0, 0, "-", "micromagneticmodel"], [114, 0, 0, "-", "micromagnetictests"], [148, 0, 0, "-", "oommfc"], [173, 0, 0, "-", "ubermag"], [176, 0, 0, "-", "ubermagtable"], [184, 0, 0, "-", "ubermagutil"]], "discretisedfield": [[1, 1, 1, "", "DValue"], [2, 1, 1, "", "Field"], [3, 1, 1, "", "FieldRotator"], [4, 1, 1, "", "Line"], [5, 1, 1, "", "Mesh"], [6, 1, 1, "", "Region"], [7, 5, 1, "", "integral"], [8, 5, 1, "", "interact"], [9, 0, 0, "-", "io"], [18, 0, 0, "-", "plotting"], [27, 5, 1, "", "test"], [28, 0, 0, "-", "tools"]], "discretisedfield.DValue": [[1, 2, 1, "", "__abs__"], [1, 2, 1, "", "__call__"], [1, 2, 1, "", "__matmul__"], [1, 2, 1, "", "__mul__"]], "discretisedfield.Field": [[2, 2, 1, "", "__abs__"], [2, 2, 1, "", "__add__"], [2, 2, 1, "", "__and__"], [2, 2, 1, "", "__array_ufunc__"], [2, 2, 1, "", "__call__"], [2, 2, 1, "", "__dir__"], [2, 2, 1, "", "__eq__"], [2, 2, 1, "", "__getattr__"], [2, 2, 1, "", "__getitem__"], [2, 3, 1, "", "__hash__"], [2, 2, 1, "", "__iter__"], [2, 2, 1, "", "__lshift__"], [2, 2, 1, "", "__matmul__"], [2, 2, 1, "", "__mul__"], [2, 2, 1, "", "__neg__"], [2, 2, 1, "", "__pos__"], [2, 2, 1, "", "__pow__"], [2, 2, 1, "", "__repr__"], [2, 2, 1, "", "__sub__"], [2, 2, 1, "", "__truediv__"], [2, 2, 1, "", "allclose"], [2, 4, 1, "", "angle"], [2, 4, 1, "", "array"], [2, 4, 1, "", "average"], [2, 4, 1, "", "components"], [2, 4, 1, "", "conjugate"], [2, 2, 1, "", "coordinate_field"], [2, 4, 1, "", "curl"], [2, 2, 1, "", "derivative"], [2, 4, 1, "", "div"], [2, 4, 1, "", "fftn"], [2, 2, 1, "", "from_xarray"], [2, 2, 1, "", "fromfile"], [2, 4, 1, "", "grad"], [2, 4, 1, "", "hv"], [2, 4, 1, "", "ifftn"], [2, 4, 1, "", "imag"], [2, 2, 1, "", "integral"], [2, 4, 1, "", "irfftn"], [2, 4, 1, "", "k3d"], [2, 4, 1, "", "laplace"], [2, 2, 1, "", "line"], [2, 4, 1, "", "mpl"], [2, 4, 1, "", "norm"], [2, 4, 1, "", "orientation"], [2, 2, 1, "", "pad"], [2, 4, 1, "", "phase"], [2, 2, 1, "", "plane"], [2, 2, 1, "", "project"], [2, 4, 1, "", "real"], [2, 4, 1, "", "rfftn"], [2, 2, 1, "", "to_vtk"], [2, 2, 1, "", "to_xarray"], [2, 4, 1, "", "value"], [2, 2, 1, "", "write"], [2, 4, 1, "", "zero"]], "discretisedfield.FieldRotator": [[3, 2, 1, "", "__repr__"], [3, 2, 1, "", "clear_rotation"], [3, 4, 1, "", "field"], [3, 2, 1, "", "rotate"]], "discretisedfield.Line": [[4, 2, 1, "", "__repr__"], [4, 4, 1, "", "length"], [4, 2, 1, "", "mpl"], [4, 4, 1, "", "point_columns"], [4, 2, 1, "", "selector"], [4, 2, 1, "", "slider"], [4, 4, 1, "", "value_columns"]], "discretisedfield.Mesh": [[5, 2, 1, "", "__dir__"], [5, 2, 1, "", "__eq__"], [5, 2, 1, "", "__getattr__"], [5, 2, 1, "", "__getitem__"], [5, 3, 1, "", "__hash__"], [5, 2, 1, "", "__iter__"], [5, 2, 1, "", "__len__"], [5, 2, 1, "", "__or__"], [5, 2, 1, "", "__repr__"], [5, 2, 1, "", "axis_selector"], [5, 4, 1, "", "dS"], [5, 4, 1, "", "dV"], [5, 2, 1, "", "index2point"], [5, 4, 1, "", "indices"], [5, 4, 1, "", "k3d"], [5, 2, 1, "", "line"], [5, 2, 1, "", "load_subregions"], [5, 4, 1, "", "midpoints"], [5, 4, 1, "", "mpl"], [5, 2, 1, "", "neighbours"], [5, 2, 1, "", "pad"], [5, 2, 1, "", "plane"], [5, 2, 1, "", "point2index"], [5, 2, 1, "", "region2slices"], [5, 2, 1, "", "save_subregions"], [5, 2, 1, "", "slider"], [5, 4, 1, "", "subregions"], [5, 4, 1, "", "vertices"]], "discretisedfield.Region": [[6, 2, 1, "", "__contains__"], [6, 2, 1, "", "__eq__"], [6, 3, 1, "", "__hash__"], [6, 2, 1, "", "__mul__"], [6, 2, 1, "", "__or__"], [6, 2, 1, "", "__repr__"], [6, 2, 1, "", "__truediv__"], [6, 4, 1, "", "centre"], [6, 4, 1, "", "edges"], [6, 4, 1, "", "k3d"], [6, 4, 1, "", "mpl"], [6, 4, 1, "", "multiplier"], [6, 4, 1, "", "pmax"], [6, 4, 1, "", "pmin"], [6, 2, 1, "", "random_point"], [6, 2, 1, "", "to_dict"], [6, 4, 1, "", "volume"]], "discretisedfield.io": [[10, 5, 1, "", "field_from_hdf5"], [11, 5, 1, "", "field_from_ovf"], [12, 5, 1, "", "field_from_vtk"], [13, 5, 1, "", "field_to_hdf5"], [14, 5, 1, "", "field_to_ovf"], [15, 5, 1, "", "field_to_vtk"], [16, 0, 0, "-", "ovf2vtk"]], "discretisedfield.io.ovf2vtk": [[17, 5, 1, "", "ovf2vtk"]], "discretisedfield.plotting": [[19, 1, 1, "", "Hv"], [20, 1, 1, "", "K3dField"], [21, 1, 1, "", "K3dMesh"], [22, 1, 1, "", "K3dRegion"], [23, 1, 1, "", "MplField"], [24, 1, 1, "", "MplMesh"], [25, 1, 1, "", "MplRegion"], [26, 5, 1, "", "add_colorwheel"]], "discretisedfield.plotting.Hv": [[19, 2, 1, "", "__call__"], [19, 2, 1, "", "contour"], [19, 2, 1, "", "scalar"], [19, 2, 1, "", "vector"]], "discretisedfield.plotting.K3dField": [[20, 2, 1, "", "__dir__"], [20, 2, 1, "", "nonzero"], [20, 2, 1, "", "scalar"], [20, 2, 1, "", "vector"]], "discretisedfield.plotting.K3dMesh": [[21, 2, 1, "", "__call__"], [21, 2, 1, "", "subregions"]], "discretisedfield.plotting.K3dRegion": [[22, 2, 1, "", "__call__"]], "discretisedfield.plotting.MplField": [[23, 2, 1, "", "__call__"], [23, 2, 1, "", "__dir__"], [23, 2, 1, "", "contour"], [23, 2, 1, "", "lightness"], [23, 2, 1, "", "scalar"], [23, 2, 1, "", "vector"]], "discretisedfield.plotting.MplMesh": [[24, 2, 1, "", "__call__"], [24, 2, 1, "", "subregions"]], "discretisedfield.plotting.MplRegion": [[25, 2, 1, "", "__call__"]], "discretisedfield.tools": [[29, 5, 1, "", "count_bps"], [30, 5, 1, "", "count_large_cell_angle_regions"], [31, 5, 1, "", "demag_field"], [32, 5, 1, "", "demag_tensor"], [33, 5, 1, "", "emergent_magnetic_field"], [34, 5, 1, "", "max_neigbouring_cell_angle"], [35, 5, 1, "", "neigbouring_cell_angle"], [36, 5, 1, "", "topological_charge"], [37, 5, 1, "", "topological_charge_density"]], "mag2exp": [[39, 0, 0, "-", "ltem"], [44, 0, 0, "-", "magnetometry"], [47, 0, 0, "-", "mfm"], [49, 0, 0, "-", "quick_plots"], [59, 0, 0, "-", "sans"], [62, 5, 1, "", "test"], [63, 0, 0, "-", "x_ray"]], "mag2exp.ltem": [[40, 5, 1, "", "defocus_image"], [41, 5, 1, "", "integrated_magnetic_flux_density"], [42, 5, 1, "", "phase"], [43, 5, 1, "", "relativistic_wavelength"]], "mag2exp.magnetometry": [[45, 5, 1, "", "magnetisation"], [46, 5, 1, "", "torque"]], "mag2exp.mfm": [[48, 5, 1, "", "phase_shift"]], "mag2exp.quick_plots": [[50, 5, 1, "", "ltem_defocus"], [51, 5, 1, "", "ltem_ft_phase"], [52, 5, 1, "", "ltem_integrated_mfd"], [53, 5, 1, "", "ltem_phase"], [54, 5, 1, "", "mfm_phase_shift"], [55, 5, 1, "", "sans_chiral_function"], [56, 5, 1, "", "sans_cross_section"], [57, 5, 1, "", "saxs"], [58, 5, 1, "", "x_ray_holography"]], "mag2exp.sans": [[60, 5, 1, "", "chiral_function"], [61, 5, 1, "", "cross_section"]], "mag2exp.x_ray": [[64, 5, 1, "", "holography"], [65, 5, 1, "", "saxs"]], "micromagneticdata": [[67, 1, 1, "", "AbstractDrive"], [68, 1, 1, "", "CombinedDrive"], [69, 1, 1, "", "Data"], [70, 1, 1, "", "Drive"], [71, 1, 1, "", "Mumax3Drive"], [72, 1, 1, "", "OOMMFDrive"], [73, 5, 1, "", "test"]], "micromagneticdata.AbstractDrive": [[67, 2, 1, "", "__getitem__"], [67, 2, 1, "", "__iter__"], [67, 2, 1, "", "__lshift__"], [67, 2, 1, "", "__repr__"], [67, 4, 1, "", "callbacks"], [67, 4, 1, "", "hv"], [67, 4, 1, "", "info"], [67, 4, 1, "", "m0"], [67, 4, 1, "", "n"], [67, 2, 1, "", "register_callback"], [67, 4, 1, "", "table"], [67, 2, 1, "", "to_xarray"], [67, 4, 1, "", "x"]], "micromagneticdata.CombinedDrive": [[68, 2, 1, "", "__lshift__"], [68, 2, 1, "", "__repr__"], [68, 4, 1, "", "info"], [68, 2, 1, "", "register_callback"], [68, 4, 1, "", "table"], [68, 4, 1, "", "x"]], "micromagneticdata.Data": [[69, 2, 1, "", "__getitem__"], [69, 2, 1, "", "__iter__"], [69, 2, 1, "", "__repr__"], [69, 4, 1, "", "info"], [69, 4, 1, "", "n"], [69, 2, 1, "", "selector"]], "micromagneticdata.Drive": [[70, 2, 1, "", "__getitem__"], [70, 2, 1, "", "__lshift__"], [70, 2, 1, "", "__new__"], [70, 4, 1, "", "calculator_script"], [70, 4, 1, "", "info"], [70, 2, 1, "", "ovf2vtk"], [70, 2, 1, "", "register_callback"], [70, 2, 1, "", "slider"], [70, 4, 1, "", "table"], [70, 4, 1, "", "use_cache"]], "micromagneticdata.Mumax3Drive": [[71, 2, 1, "", "__repr__"], [71, 4, 1, "", "calculator_script"], [71, 4, 1, "", "x"]], "micromagneticdata.OOMMFDrive": [[72, 2, 1, "", "__repr__"], [72, 4, 1, "", "calculator_script"], [72, 4, 1, "", "x"]], "micromagneticmodel": [[75, 1, 1, "", "CubicAnisotropy"], [76, 1, 1, "", "DMI"], [77, 1, 1, "", "Damping"], [78, 1, 1, "", "Demag"], [79, 1, 1, "", "Driver"], [80, 1, 1, "", "Dynamics"], [81, 1, 1, "", "DynamicsTerm"], [82, 1, 1, "", "Energy"], [83, 1, 1, "", "EnergyTerm"], [84, 1, 1, "", "Evolver"], [85, 1, 1, "", "Exchange"], [86, 1, 1, "", "ExternalDriver"], [87, 1, 1, "", "ExternalRunner"], [88, 1, 1, "", "MagnetoElastic"], [89, 1, 1, "", "Precession"], [90, 1, 1, "", "RKKY"], [91, 1, 1, "", "Slonczewski"], [92, 1, 1, "", "System"], [93, 1, 1, "", "UniaxialAnisotropy"], [94, 1, 1, "", "Zeeman"], [95, 1, 1, "", "ZhangLi"], [96, 0, 0, "-", "abstract"], [100, 0, 0, "-", "consts"], [111, 0, 0, "-", "examples"], [113, 5, 1, "", "test"]], "micromagneticmodel.Driver": [[79, 2, 1, "", "drive"]], "micromagneticmodel.ExternalDriver": [[86, 2, 1, "", "drive"], [86, 2, 1, "", "drive_kwargs_setup"], [86, 2, 1, "", "schedule"], [86, 2, 1, "", "schedule_kwargs_setup"]], "micromagneticmodel.ExternalRunner": [[87, 2, 1, "", "call"], [87, 4, 1, "", "package_name"]], "micromagneticmodel.System": [[92, 2, 1, "", "__repr__"], [92, 4, 1, "", "dynamics"], [92, 4, 1, "", "energy"]], "micromagneticmodel.abstract": [[97, 1, 1, "", "Abstract"], [98, 1, 1, "", "Container"], [99, 1, 1, "", "Term"]], "micromagneticmodel.abstract.Abstract": [[97, 2, 1, "", "__iter__"], [97, 2, 1, "", "__repr__"], [97, 4, 1, "", "name"]], "micromagneticmodel.abstract.Container": [[98, 2, 1, "", "__add__"], [98, 2, 1, "", "__contains__"], [98, 2, 1, "", "__dir__"], [98, 2, 1, "", "__eq__"], [98, 2, 1, "", "__getattr__"], [98, 2, 1, "", "__getitem__"], [98, 3, 1, "", "__hash__"], [98, 2, 1, "", "__iter__"], [98, 2, 1, "", "__len__"], [98, 2, 1, "", "__repr__"], [98, 2, 1, "", "__sub__"], [98, 2, 1, "", "get"]], "micromagneticmodel.abstract.Term": [[99, 2, 1, "", "__add__"], [99, 2, 1, "", "__eq__"], [99, 3, 1, "", "__hash__"]], "micromagneticmodel.consts": [[101, 6, 1, "", "e"], [102, 6, 1, "", "g"], [103, 6, 1, "", "gamma"], [104, 6, 1, "", "gamma0"], [105, 6, 1, "", "h"], [106, 6, 1, "", "hbar"], [107, 6, 1, "", "kB"], [108, 6, 1, "", "me"], [109, 6, 1, "", "mu0"], [110, 6, 1, "", "muB"]], "micromagneticmodel.examples": [[112, 5, 1, "", "macrospin"]], "micromagnetictests": [[115, 0, 0, "-", "calculatortests"], [146, 5, 1, "", "get_tests"], [147, 5, 1, "", "test"]], "micromagnetictests.calculatortests": [[116, 1, 1, "", "TestCompute"], [117, 1, 1, "", "TestCubicAnisotropy"], [118, 1, 1, "", "TestDMI"], [119, 1, 1, "", "TestDamping"], [120, 1, 1, "", "TestDemag"], [121, 1, 1, "", "TestDynamics"], [122, 1, 1, "", "TestEnergy"], [123, 1, 1, "", "TestExchange"], [124, 1, 1, "", "TestFixedSubregions"], [125, 1, 1, "", "TestHysteresisDriver"], [126, 1, 1, "", "TestMesh"], [127, 1, 1, "", "TestMinDriver"], [128, 1, 1, "", "TestPrecession"], [129, 1, 1, "", "TestRKKY"], [130, 1, 1, "", "TestSlonczewski"], [131, 1, 1, "", "TestThreads"], [132, 1, 1, "", "TestTimeDriver"], [133, 1, 1, "", "TestUniaxialAnisotropy"], [134, 1, 1, "", "TestZeeman"], [135, 1, 1, "", "TestZhangLi"], [136, 5, 1, "", "test_dirname"], [137, 5, 1, "", "test_format"], [138, 5, 1, "", "test_info_file"], [139, 5, 1, "", "test_multiple_drives"], [140, 5, 1, "", "test_outputstep"], [141, 5, 1, "", "test_schedule"], [142, 5, 1, "", "test_skyrmion"], [143, 5, 1, "", "test_stdprob3"], [144, 5, 1, "", "test_stdprob4"], [145, 5, 1, "", "test_stdprob5"]], "oommfc": [[149, 1, 1, "", "CGEvolver"], [150, 1, 1, "", "Driver"], [151, 1, 1, "", "EulerEvolver"], [152, 1, 1, "", "HysteresisDriver"], [153, 1, 1, "", "MinDriver"], [154, 1, 1, "", "RungeKuttaEvolver"], [155, 1, 1, "", "SpinTEvolver"], [156, 1, 1, "", "SpinXferEvolver"], [157, 1, 1, "", "TimeDriver"], [158, 1, 1, "", "UHH_ThetaEvolver"], [159, 1, 1, "", "Xf_ThermHeunEvolver"], [160, 1, 1, "", "Xf_ThermSpinXferEvolver"], [161, 5, 1, "", "compute"], [162, 5, 1, "", "delete"], [163, 0, 0, "-", "oommf"], [170, 6, 1, "", "runner"], [171, 5, 1, "", "test"], [172, 5, 1, "", "test_docker"]], "oommfc.Driver": [[150, 2, 1, "", "drive_kwargs_setup"], [150, 2, 1, "", "schedule_kwargs_setup"], [150, 2, 1, "", "write_mif"]], "oommfc.oommf": [[164, 1, 1, "", "DockerOOMMFRunner"], [165, 1, 1, "", "ExeOOMMFRunner"], [166, 1, 1, "", "OOMMFRunner"], [167, 1, 1, "", "Runner"], [168, 1, 1, "", "TclOOMMFRunner"], [169, 5, 1, "", "overhead"]], "oommfc.oommf.DockerOOMMFRunner": [[164, 2, 1, "", "__repr__"], [164, 2, 1, "", "errors"]], "oommfc.oommf.ExeOOMMFRunner": [[165, 2, 1, "", "__repr__"], [165, 2, 1, "", "errors"]], "oommfc.oommf.OOMMFRunner": [[166, 2, 1, "", "__del__"], [166, 2, 1, "", "__repr__"], [166, 2, 1, "", "errors"], [166, 4, 1, "", "package_name"], [166, 4, 1, "", "platform"], [166, 4, 1, "", "status"], [166, 4, 1, "", "version"]], "oommfc.oommf.Runner": [[167, 2, 1, "", "__repr__"], [167, 2, 1, "", "autoselect_runner"], [167, 4, 1, "", "runner"]], "oommfc.oommf.TclOOMMFRunner": [[168, 2, 1, "", "__repr__"], [168, 2, 1, "", "errors"]], "ubermag": [[174, 5, 1, "", "debug_info"], [175, 5, 1, "", "test"]], "ubermagtable": [[177, 1, 1, "", "Table"], [178, 5, 1, "", "interact"], [179, 5, 1, "", "test"], [180, 0, 0, "-", "util"]], "ubermagtable.Table": [[177, 2, 1, "", "__lshift__"], [177, 2, 1, "", "__repr__"], [177, 2, 1, "", "apply"], [177, 4, 1, "", "dx"], [177, 2, 1, "", "fromfile"], [177, 2, 1, "", "irfft"], [177, 2, 1, "", "mpl"], [177, 2, 1, "", "rfft"], [177, 2, 1, "", "selector"], [177, 2, 1, "", "slider"], [177, 4, 1, "", "x"], [177, 4, 1, "", "xmax"], [177, 4, 1, "", "y"]], "ubermagtable.util": [[181, 5, 1, "", "columns"], [182, 5, 1, "", "data"], [183, 5, 1, "", "units"]], "ubermagutil": [[185, 5, 1, "", "changedir"], [186, 5, 1, "", "hysteresis_values"], [187, 5, 1, "", "inherit_docs"], [188, 5, 1, "", "setup_logging"], [189, 5, 1, "", "test"], [190, 0, 0, "-", "typesystem"], [200, 0, 0, "-", "units"]], "ubermagutil.typesystem": [[191, 1, 1, "", "Descriptor"], [192, 1, 1, "", "Dictionary"], [193, 1, 1, "", "Name"], [194, 1, 1, "", "Parameter"], [195, 1, 1, "", "Scalar"], [196, 1, 1, "", "Subset"], [197, 1, 1, "", "Typed"], [198, 1, 1, "", "Vector"], [199, 5, 1, "", "typesystem"]], "ubermagutil.typesystem.Descriptor": [[191, 2, 1, "", "__delete__"], [191, 2, 1, "", "__set__"]], "ubermagutil.typesystem.Dictionary": [[192, 2, 1, "", "__set__"]], "ubermagutil.typesystem.Name": [[193, 2, 1, "", "__set__"]], "ubermagutil.typesystem.Parameter": [[194, 2, 1, "", "__set__"]], "ubermagutil.typesystem.Scalar": [[195, 2, 1, "", "__set__"]], "ubermagutil.typesystem.Subset": [[196, 2, 1, "", "__set__"]], "ubermagutil.typesystem.Typed": [[197, 2, 1, "", "__set__"]], "ubermagutil.typesystem.Vector": [[198, 2, 1, "", "__set__"]], "ubermagutil.units": [[201, 5, 1, "", "si_max_multiplier"], [202, 5, 1, "", "si_multiplier"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function", "6": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "data", "Python data"]}, "titleterms": {"discretisedfield": [0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 209, 238, 258, 261, 264, 267, 269], "dvalu": 1, "field": [2, 206, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 238, 258, 261, 264, 267, 269, 291, 294, 295, 299, 308, 311, 312, 321], "fieldrot": [3, 223], "line": [4, 217, 219, 221, 226, 229, 268], "mesh": [5, 221, 223, 224, 227, 228, 229, 230, 231, 232, 233, 321], "region": [6, 221, 223, 224, 235, 236, 237, 258, 321], "integr": [7, 221, 240], "interact": [8, 178, 218, 219, 249, 273], "io": [9, 10, 11, 12, 13, 14, 15, 16, 17], "field_from_hdf5": 10, "field_from_ovf": 11, "field_from_vtk": 12, "field_to_hdf5": 13, "field_to_ovf": 14, "field_to_vtk": 15, "ovf2vtk": [16, 17, 234], "plot": [18, 26, 217, 218, 219, 232, 237, 241, 247, 249, 273, 302], "hv": 19, "k3dfield": 20, "k3dmesh": 21, "k3dregion": 22, "mplfield": 23, "mplmesh": 24, "mplregion": 25, "add_colorwheel": 26, "test": [27, 62, 73, 113, 147, 171, 175, 179, 189, 325], "tool": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 225, 234], "count_bp": 29, "count_large_cell_angle_region": 30, "demag_field": 31, "demag_tensor": 32, "emergent_magnetic_field": 33, "max_neigbouring_cell_angl": 34, "neigbouring_cell_angl": 35, "topological_charg": 36, "topological_charge_dens": 37, "mag2exp": [38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 211, 242], "ltem": [39, 40, 41, 42, 43, 240, 242], "defocus_imag": 40, "integrated_magnetic_flux_dens": 41, "phase": 42, "relativistic_wavelength": 43, "magnetometri": [44, 45, 46, 239, 245], "magnetis": [45, 239, 246, 249, 290, 299, 320, 321], "torqu": [46, 245], "mfm": [47, 48, 241], "phase_shift": 48, "quick_plot": [49, 50, 51, 52, 53, 54, 55, 56, 57, 58], "ltem_defocu": 50, "ltem_ft_phas": 51, "ltem_integrated_mfd": 52, "ltem_phas": 53, "mfm_phase_shift": 54, "sans_chiral_funct": 55, "sans_cross_sect": 56, "sax": [57, 65, 244], "x_ray_holographi": 58, "san": [59, 60, 61, 243], "chiral_funct": 60, "cross_sect": 61, "x_rai": [63, 64, 65], "holographi": [64, 247], "micromagneticdata": [66, 73, 212, 265, 302], "abstractdr": 67, "combineddr": [68, 248], "data": [69, 182, 206, 248, 249], "drive": [70, 248, 249, 320], "mumax3dr": 71, "oommfdriv": 72, "micromagneticmodel": [74, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 213], "cubicanisotropi": 75, "dmi": [76, 246, 299, 319], "damp": [77, 253], "demag": [78, 225], "driver": [79, 150, 255], "dynam": [80, 206, 251, 253, 293, 318, 320], "dynamicsterm": 81, "energi": [82, 206, 252, 254, 256, 261, 263, 264, 267, 269, 290, 294, 298, 299, 303, 304, 306, 319, 320], "energyterm": 83, "evolv": [84, 255], "exchang": [85, 246, 254, 264, 299, 304, 319], "externaldriv": 86, "externalrunn": 87, "magnetoelast": 88, "precess": [89, 250, 253], "rkky": [90, 254, 306], "slonczewski": [91, 312], "system": [92, 206, 257, 294, 320], "uniaxialanisotropi": 93, "zeeman": [94, 254, 269, 299, 312, 319], "zhangli": 95, "abstract": [96, 97], "contain": 98, "term": [99, 250, 251, 252, 253, 254, 256, 258, 261, 263, 264, 267, 269, 294, 298, 303, 306], "const": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110], "e": [101, 322], "g": [102, 250, 322], "gamma": [103, 250], "gamma0": 104, "h": [105, 269, 309], "hbar": 106, "kb": 107, "me": 108, "mu0": 109, "mub": 110, "exampl": [111, 112, 221, 246, 249, 289, 321], "macrospin": [112, 318], "micromagnetictest": [114, 115, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 214], "calculatortest": [115, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "testcomput": 116, "testcubicanisotropi": 117, "testdmi": 118, "testdamp": 119, "testdemag": 120, "testdynam": 121, "testenergi": 122, "testexchang": 123, "testfixedsubregion": 124, "testhysteresisdriv": 125, "testmesh": 126, "testmindriv": 127, "testprecess": 128, "testrkki": 129, "testslonczewski": 130, "testthread": 131, "testtimedriv": 132, "testuniaxialanisotropi": 133, "testzeeman": 134, "testzhangli": 135, "test_dirnam": 136, "test_format": 137, "test_info_fil": 138, "test_multiple_dr": 139, "test_outputstep": 140, "test_schedul": 141, "test_skyrmion": 142, "test_stdprob3": 143, "test_stdprob4": 144, "test_stdprob5": 145, "get_test": 146, "oommfc": [148, 161, 162, 163, 169, 170, 171, 172, 285], "cgevolv": 149, "eulerevolv": 151, "hysteresisdriv": 152, "mindriv": [153, 265], "rungekuttaevolv": 154, "spintevolv": 155, "spinxferevolv": 156, "timedriv": [157, 268, 313], "uhh_thetaevolv": [158, 300], "xf_thermheunevolv": [159, 300], "xf_thermspinxferevolv": [160, 300], "comput": [161, 221, 240, 241, 242, 243, 244, 245, 247, 249, 294, 298], "delet": [162, 279], "oommf": [163, 169, 208, 325], "dockeroommfrunn": 164, "exeoommfrunn": 165, "oommfrunn": 166, "runner": [167, 170, 260, 297], "tcloommfrunn": 168, "overhead": 169, "test_dock": 172, "ubermag": [173, 174, 175, 208, 286, 320, 324, 325], "debug_info": 174, "ubermagt": [176, 178, 179, 180, 181, 182, 183, 287], "tabl": [177, 271, 272, 273, 274, 275, 276], "util": [180, 181, 182, 183], "column": 181, "unit": [183, 200, 201, 202, 216, 246], "ubermagutil": [184, 185, 186, 187, 188, 189, 190, 199, 200, 201, 202, 279, 288], "changedir": 185, "hysteresis_valu": 186, "inherit_doc": [187, 280], "setup_log": 188, "typesystem": [190, 199, 279], "descriptor": [191, 283], "dictionari": [192, 261, 264, 267, 269, 322], "name": [193, 262], "paramet": [194, 246, 258, 283, 309, 310], "scalar": [195, 216, 217, 219, 312], "subset": 196, "type": [197, 260, 282, 322], "vector": [198, 216, 217, 219, 221, 223, 312], "si_max_multipli": 201, "si_multipli": 202, "api": 203, "refer": [203, 239, 240, 241, 243, 244, 245, 247, 290, 291, 292, 293, 317], "changelog": 204, "0": 204, "66": 204, "1": [204, 223, 225, 234, 249, 250, 253, 254, 258, 261, 291, 309, 318, 320, 322], "feb": 204, "3": [204, 223, 225, 234, 250, 253, 254, 258, 290, 318, 320, 322], "2023": 204, "fix": [204, 205, 301], "oct": 204, "20": 204, "2022": [204, 326], "ad": 204, "chang": [204, 260], "65": 204, "jul": 204, "17": 204, "64": 204, "03": [204, 267], "63": 204, "jun": 204, "29": 204, "62": 204, "09": 204, "mai": 204, "22": 204, "remov": 204, "61": 204, "2": [204, 221, 223, 225, 234, 249, 250, 253, 254, 258, 299, 310, 318, 320, 322], "mar": 204, "gener": 204, "60": 204, "2021": 204, "51": 204, "10": [204, 250, 322], "contribut": 205, "bug": 205, "featur": [205, 208, 324], "request": [205, 323], "document": [205, 207, 210, 324], "demo": 206, "vortex": 206, "initialis": 206, "minimis": 206, "displac": 206, "magnet": [206, 225, 240, 241, 250], "free": 206, "relax": [206, 290, 293, 294], "analysi": [206, 265, 302], "compat": 208, "mumax3": 208, "support": 208, "version": 208, "packag": [210, 324], "mumax3c": 215, "defin": [216, 257, 258, 282, 312], "uniform": 216, "visualis": [217, 218, 219, 226, 231, 232, 237, 249, 275], "us": [217, 218, 219, 224, 238, 242, 258, 279, 295, 322], "holoview": 217, "contour": [217, 219], "combin": [217, 219, 249], "multipl": [217, 218, 223, 234, 249, 256, 303, 322], "k3d": [218, 231, 232, 237], "same": [218, 256, 303], "matplotlib": 219, "mpl": [219, 231, 232, 237], "avail": 219, "function": [219, 221, 224, 312, 322], "2d": 219, "hsl": 219, "light": 219, "colorwheel": 219, "build": 219, "custom": [219, 262], "deprec": 219, "valu": [219, 223, 224, 276, 278, 294, 321, 322], "along": [219, 221], "normalis": [220, 249], "oper": [221, 299, 322], "sampl": 221, "extract": [221, 284], "compon": 221, "smaller": 221, "subfield": 221, "align": 221, "ani": 221, "averag": 221, "iter": [221, 322], "through": 221, "intersect": 221, "plane": [221, 229], "cascad": 221, "complex": 221, "algebra": 221, "compund": 221, "product": 221, "dot": 221, "cross": [221, 243, 244, 290], "calculu": 221, "gradient": 221, "nabla": 221, "f": 221, "diverg": 221, "cdot": 221, "curl": 221, "time": [221, 249, 254, 308, 311, 312, 322], "laplac": 221, "volum": 221, "surfac": [221, 236], "improp": 221, "pipelin": 221, "appli": 221, "numpi": 221, "univers": 221, "other": [221, 224, 323], "read": 222, "write": 222, "file": [222, 234, 313], "rotat": [223, 242, 247], "origin": 223, "method": [223, 238, 295], "90": 223, "about": 223, "arbitrari": 223, "angl": [223, 225, 243, 244], "point": 223, "certain": 223, "direct": 223, "detail": 223, "process": 223, "spatial": [224, 261, 263, 264, 267, 269, 308, 309, 310, 321], "vari": [224, 261, 263, 264, 267, 269, 308, 309, 310, 311, 321], "python": [224, 312, 322], "properti": [224, 238, 279], "anoth": 224, "object": [224, 226, 258, 320, 322], "creat": 224, "coordin": 224, "topolog": [225, 249], "charg": [225, 249, 250], "densiti": [225, 240, 249, 299], "between": 225, "cell": 225, "emerg": 225, "count": 225, "bp": 225, "4": [225, 250, 254, 291, 322], "tensor": 225, "basic": [227, 232, 235, 237, 271, 322], "boundari": [228, 305], "condit": [228, 305], "period": [228, 305], "experiment": [228, 312], "neumann": 228, "dirichet": 228, "pad": 230, "subregion": [231, 301], "advanc": [232, 237, 325], "widget": [233, 248, 276], "slider": [233, 276], "axi": 233, "selector": [233, 276], "singl": [234, 316], "wildcard": 234, "face": 236, "import": [238, 322], "export": 238, "from": [238, 253, 254], "xarrai": 238, "dataarrai": 238, "few": 238, "to_xarrai": 238, "except": 238, "from_xarrai": 238, "expect": 238, "input": 238, "dc": 239, "frame": [239, 240, 241, 243, 244, 245, 247], "The": [239, 240, 241, 243, 244, 245, 247, 260, 320], "micromagnet": [239, 240, 241, 243, 244, 245, 246, 247, 257, 299], "simul": [239, 240, 241, 243, 244, 245, 247, 248, 249, 266, 290, 291, 292, 294, 300, 302, 312, 318, 320], "lorentz": 240, "transmiss": 240, "electron": [240, 250], "microscopi": [240, 241], "imag": [240, 241, 242, 247], "defocus": 240, "flux": 240, "forc": 241, "finit": [241, 300], "size": 241, "tip": 241, "quick": [241, 247], "small": [243, 244, 322], "neutron": 243, "scatter": [243, 244], "section": [243, 244], "x": [244, 247], "rai": [244, 247], "recreat": 245, "experi": 245, "convers": [246, 317], "cg": 246, "si": [246, 284], "equival": 246, "atomist": 246, "micromagent": 246, "satur": 246, "anisotropi": [246, 254, 261, 267, 299, 319], "work": 246, "analys": 248, "result": [248, 318], "evolut": 249, "deriv": [249, 251, 252, 255, 294], "quantiti": 249, "select": [249, 322], "onli": [249, 268], "part": 249, "hysteresi": [249, 278, 302, 307], "constant": [250, 258, 261, 263, 264, 267, 269, 277, 304, 309], "elementari": 250, "": [250, 321], "mass": 250, "boltzmann": 250, "5": [250, 254, 292, 322], "planck": 250, "6": [250, 254, 322], "land": 250, "factor": 250, "7": [250, 254], "reduc": 250, "8": 250, "gyrotrop": 250, "ratio": 250, "9": 250, "bohr": 250, "magneton": 250, "llg": 250, "an": [252, 279, 295, 322], "equat": [253, 254, 318, 319, 320], "zhang": [253, 312], "li": [253, 312], "acces": [253, 254], "individu": [253, 254, 294], "independ": 254, "depend": [254, 312], "uniaxi": [254, 267, 299, 319], "demagnetis": 254, "dzyaloshinskii": [254, 263, 319], "moriya": [254, 263, 319], "cubic": [254, 261], "class": [255, 256, 279, 303], "per": 258, "usag": 259, "control": [260, 281], "default": [260, 268], "differ": 260, "go": 260, "back": 260, "tutori": [261, 263, 264, 267, 269, 324], "05": 261, "k_": 261, "mathbf": [261, 267, 269, 291, 309], "u": [261, 267], "k": [261, 267], "_": [261, 291], "directori": 262, "04": 263, "d": 263, "02": 264, "A": 264, "step": 265, "run": [266, 268], "parallel": 266, "higher": 267, "order": 267, "verbos": 268, "level": 268, "One": 268, "summari": 268, "silent": 268, "progress": 268, "bar": 268, "01": 269, "fft": 272, "merg": 274, "attribut": [277, 279], "impos": 279, "decor": 280, "log": 281, "otherwis": 282, "prefix": 284, "standard": [290, 291, 292, 293, 325], "problem": [290, 291, 292, 293, 316, 317], "specif": [290, 291, 292, 293], "state": 290, "first": [291, 320], "stage": [291, 293], "second": 291, "b": [291, 322], "postprocess": [291, 293], "spin": 292, "polaris": 292, "current": [292, 312, 316], "fmr": 293, "effect": [294, 299], "calcul": [295, 299, 325], "strai": 295, "airbox": 295, "skyrmion": [296, 319], "disk": [296, 313, 319], "choos": 297, "t": 299, "oversimplifi": 299, "temperatur": 300, "loop": 302, "neg": 304, "sine": 307, "both": 308, "how": [312, 323, 324, 325], "properli": 312, "thi": 312, "puls": 312, "pre": 312, "measur": 312, "tcl": 312, "faq": 313, "number": [313, 322], "written": 313, "get": [314, 322], "start": 314, "jupyt": 315, "lab": 315, "exercis": [316, 317, 318, 321], "induc": 316, "domain": [316, 317], "wall": [316, 317], "motion": 316, "descript": [316, 317], "pair": [316, 317], "solut": 317, "competit": 319, "our": 320, "main": 320, "initi": 320, "inspect": 320, "m_": 321, "mathrm": 321, "variabl": 322, "larg": 322, "addit": 322, "c": 322, "subtract": 322, "divis": 322, "power": 322, "more": 322, "complic": 322, "list": 322, "tupl": 322, "index": 322, "length": 322, "element": 322, "unpack": 322, "keyword": 322, "argument": 322, "common": 322, "mistak": 322, "No": 322, "colon": 322, "indent": 322, "mix": 322, "undefin": 322, "modul": 322, "i": [322, 323, 324], "orient": 322, "program": 322, "help": [322, 323], "prepar": 323, "your": 323, "render": 323, "output": 323, "similar": 323, "what": 324, "cloud": 324, "author": 324, "cite": 324, "licens": 324, "acknowledg": 324, "instal": 325, "recommend": 325, "environ": 325, "updat": 325, "check": 325, "doe": 325, "find": 325, "develop": 325, "new": 326, "winter": 326, "workshop": 326, "summer": 326, "code": 326, "sprint": 326}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"discretisedfield": [[0, "module-discretisedfield"], [209, "discretisedfield"], [209, null]], "DValue": [[1, "dvalue"]], "Field": [[2, "field"], [321, "Field"]], "FieldRotator": [[3, "fieldrotator"], [223, "FieldRotator"]], "Line": [[4, "line"]], "Mesh": [[5, "mesh"], [321, "Mesh"]], "Region": [[6, "region"], [321, "Region"]], "discretisedfield.integral": [[7, "discretisedfield-integral"]], "discretisedfield.interact": [[8, "discretisedfield-interact"]], "discretisedfield.io": [[9, "module-discretisedfield.io"]], "discretisedfield.io.field_from_hdf5": [[10, "discretisedfield-io-field-from-hdf5"]], "discretisedfield.io.field_from_ovf": [[11, "discretisedfield-io-field-from-ovf"]], "discretisedfield.io.field_from_vtk": [[12, "discretisedfield-io-field-from-vtk"]], "discretisedfield.io.field_to_hdf5": [[13, "discretisedfield-io-field-to-hdf5"]], "discretisedfield.io.field_to_ovf": [[14, "discretisedfield-io-field-to-ovf"]], "discretisedfield.io.field_to_vtk": [[15, "discretisedfield-io-field-to-vtk"]], "discretisedfield.io.ovf2vtk": [[16, "module-discretisedfield.io.ovf2vtk"]], "discretisedfield.io.ovf2vtk.ovf2vtk": [[17, "discretisedfield-io-ovf2vtk-ovf2vtk"]], "discretisedfield.plotting": [[18, "module-discretisedfield.plotting"]], "Hv": [[19, "hv"]], "K3dField": [[20, "k3dfield"]], "K3dMesh": [[21, "k3dmesh"]], "K3dRegion": [[22, "k3dregion"]], "MplField": [[23, "mplfield"]], "MplMesh": [[24, "mplmesh"]], "MplRegion": [[25, "mplregion"]], "discretisedfield.plotting.add_colorwheel": [[26, "discretisedfield-plotting-add-colorwheel"]], "discretisedfield.test": [[27, "discretisedfield-test"]], "discretisedfield.tools": [[28, "module-discretisedfield.tools"]], "discretisedfield.tools.count_bps": [[29, "discretisedfield-tools-count-bps"]], "discretisedfield.tools.count_large_cell_angle_regions": [[30, "discretisedfield-tools-count-large-cell-angle-regions"]], "discretisedfield.tools.demag_field": [[31, "discretisedfield-tools-demag-field"]], "discretisedfield.tools.demag_tensor": [[32, "discretisedfield-tools-demag-tensor"]], "discretisedfield.tools.emergent_magnetic_field": [[33, "discretisedfield-tools-emergent-magnetic-field"]], "discretisedfield.tools.max_neigbouring_cell_angle": [[34, "discretisedfield-tools-max-neigbouring-cell-angle"]], "discretisedfield.tools.neigbouring_cell_angle": [[35, "discretisedfield-tools-neigbouring-cell-angle"]], "discretisedfield.tools.topological_charge": [[36, "discretisedfield-tools-topological-charge"]], "discretisedfield.tools.topological_charge_density": [[37, "discretisedfield-tools-topological-charge-density"]], "mag2exp": [[38, "module-mag2exp"], [211, "mag2exp"], [211, null]], "mag2exp.ltem": [[39, "module-mag2exp.ltem"]], "mag2exp.ltem.defocus_image": [[40, "mag2exp-ltem-defocus-image"]], "mag2exp.ltem.integrated_magnetic_flux_density": [[41, "mag2exp-ltem-integrated-magnetic-flux-density"]], "mag2exp.ltem.phase": [[42, "mag2exp-ltem-phase"]], "mag2exp.ltem.relativistic_wavelength": [[43, "mag2exp-ltem-relativistic-wavelength"]], "mag2exp.magnetometry": [[44, "module-mag2exp.magnetometry"]], "mag2exp.magnetometry.magnetisation": [[45, "mag2exp-magnetometry-magnetisation"]], "mag2exp.magnetometry.torque": [[46, "mag2exp-magnetometry-torque"]], "mag2exp.mfm": [[47, "module-mag2exp.mfm"]], "mag2exp.mfm.phase_shift": [[48, "mag2exp-mfm-phase-shift"]], "mag2exp.quick_plots": [[49, "module-mag2exp.quick_plots"]], "mag2exp.quick_plots.ltem_defocus": [[50, "mag2exp-quick-plots-ltem-defocus"]], "mag2exp.quick_plots.ltem_ft_phase": [[51, "mag2exp-quick-plots-ltem-ft-phase"]], "mag2exp.quick_plots.ltem_integrated_mfd": [[52, "mag2exp-quick-plots-ltem-integrated-mfd"]], "mag2exp.quick_plots.ltem_phase": [[53, "mag2exp-quick-plots-ltem-phase"]], "mag2exp.quick_plots.mfm_phase_shift": [[54, "mag2exp-quick-plots-mfm-phase-shift"]], "mag2exp.quick_plots.sans_chiral_function": [[55, "mag2exp-quick-plots-sans-chiral-function"]], "mag2exp.quick_plots.sans_cross_section": [[56, "mag2exp-quick-plots-sans-cross-section"]], "mag2exp.quick_plots.saxs": [[57, "mag2exp-quick-plots-saxs"]], "mag2exp.quick_plots.x_ray_holography": [[58, "mag2exp-quick-plots-x-ray-holography"]], "mag2exp.sans": [[59, "module-mag2exp.sans"]], "mag2exp.sans.chiral_function": [[60, "mag2exp-sans-chiral-function"]], "mag2exp.sans.cross_section": [[61, "mag2exp-sans-cross-section"]], "mag2exp.test": [[62, "mag2exp-test"]], "mag2exp.x_ray": [[63, "module-mag2exp.x_ray"]], "mag2exp.x_ray.holography": [[64, "mag2exp-x-ray-holography"]], "mag2exp.x_ray.saxs": [[65, "mag2exp-x-ray-saxs"]], "micromagneticdata": [[66, "module-micromagneticdata"], [212, "micromagneticdata"], [212, null]], "AbstractDrive": [[67, "abstractdrive"]], "CombinedDrive": [[68, "combineddrive"], [248, "CombinedDrive"]], "Data": [[69, "data"], [248, "Data"]], "Drive": [[70, "drive"], [248, "Drive"]], "Mumax3Drive": [[71, "mumax3drive"]], "OOMMFDrive": [[72, "oommfdrive"]], "micromagneticdata.test": [[73, "micromagneticdata-test"]], "micromagneticmodel": [[74, "module-micromagneticmodel"], [213, "micromagneticmodel"], [213, null]], "CubicAnisotropy": [[75, "cubicanisotropy"]], "DMI": [[76, "dmi"], [246, "DMI"]], "Damping": [[77, "damping"]], "Demag": [[78, "demag"]], "Driver": [[79, "driver"], [150, "driver"]], "Dynamics": [[80, "dynamics"]], "DynamicsTerm": [[81, "dynamicsterm"]], "Energy": [[82, "energy"], [299, "Energy"], [299, "id2"], [299, "id5"], [299, "id8"]], "EnergyTerm": [[83, "energyterm"]], "Evolver": [[84, "evolver"]], "Exchange": [[85, "exchange"], [246, "Exchange"], [299, "Exchange"]], "ExternalDriver": [[86, "externaldriver"]], "ExternalRunner": [[87, "externalrunner"]], "MagnetoElastic": [[88, "magnetoelastic"]], "Precession": [[89, "precession"]], "RKKY": [[90, "rkky"]], "Slonczewski": [[91, "slonczewski"]], "System": [[92, "system"]], "UniaxialAnisotropy": [[93, "uniaxialanisotropy"]], "Zeeman": [[94, "zeeman"], [299, "Zeeman"]], "ZhangLi": [[95, "zhangli"]], "micromagneticmodel.abstract": [[96, "module-micromagneticmodel.abstract"]], "Abstract": [[97, "abstract"]], "Container": [[98, "container"]], "Term": [[99, "term"]], "micromagneticmodel.consts": [[100, "module-micromagneticmodel.consts"]], "micromagneticmodel.consts.e": [[101, "micromagneticmodel-consts-e"]], "micromagneticmodel.consts.g": [[102, "micromagneticmodel-consts-g"]], "micromagneticmodel.consts.gamma": [[103, "micromagneticmodel-consts-gamma"]], "micromagneticmodel.consts.gamma0": [[104, "micromagneticmodel-consts-gamma0"]], "micromagneticmodel.consts.h": [[105, "micromagneticmodel-consts-h"]], "micromagneticmodel.consts.hbar": [[106, "micromagneticmodel-consts-hbar"]], "micromagneticmodel.consts.kB": [[107, "micromagneticmodel-consts-kb"]], "micromagneticmodel.consts.me": [[108, "micromagneticmodel-consts-me"]], "micromagneticmodel.consts.mu0": [[109, "micromagneticmodel-consts-mu0"]], "micromagneticmodel.consts.muB": [[110, "micromagneticmodel-consts-mub"]], "micromagneticmodel.examples": [[111, "module-micromagneticmodel.examples"]], "micromagneticmodel.examples.macrospin": [[112, "micromagneticmodel-examples-macrospin"]], "micromagneticmodel.test": [[113, "micromagneticmodel-test"]], "micromagnetictests": [[114, "module-micromagnetictests"], [214, "micromagnetictests"], [214, null]], "micromagnetictests.calculatortests": [[115, "module-micromagnetictests.calculatortests"]], "TestCompute": [[116, "testcompute"]], "TestCubicAnisotropy": [[117, "testcubicanisotropy"]], "TestDMI": [[118, "testdmi"]], "TestDamping": [[119, "testdamping"]], "TestDemag": [[120, "testdemag"]], "TestDynamics": [[121, "testdynamics"]], "TestEnergy": [[122, "testenergy"]], "TestExchange": [[123, "testexchange"]], "TestFixedSubregions": [[124, "testfixedsubregions"]], "TestHysteresisDriver": [[125, "testhysteresisdriver"]], "TestMesh": [[126, "testmesh"]], "TestMinDriver": [[127, "testmindriver"]], "TestPrecession": [[128, "testprecession"]], "TestRKKY": [[129, "testrkky"]], "TestSlonczewski": [[130, "testslonczewski"]], "TestThreads": [[131, "testthreads"]], "TestTimeDriver": [[132, "testtimedriver"]], "TestUniaxialAnisotropy": [[133, "testuniaxialanisotropy"]], "TestZeeman": [[134, "testzeeman"]], "TestZhangLi": [[135, "testzhangli"]], "micromagnetictests.calculatortests.test_dirname": [[136, "micromagnetictests-calculatortests-test-dirname"]], "micromagnetictests.calculatortests.test_format": [[137, "micromagnetictests-calculatortests-test-format"]], "micromagnetictests.calculatortests.test_info_file": [[138, "micromagnetictests-calculatortests-test-info-file"]], "micromagnetictests.calculatortests.test_multiple_drives": [[139, "micromagnetictests-calculatortests-test-multiple-drives"]], "micromagnetictests.calculatortests.test_outputstep": [[140, "micromagnetictests-calculatortests-test-outputstep"]], "micromagnetictests.calculatortests.test_schedule": [[141, "micromagnetictests-calculatortests-test-schedule"]], "micromagnetictests.calculatortests.test_skyrmion": [[142, "micromagnetictests-calculatortests-test-skyrmion"]], "micromagnetictests.calculatortests.test_stdprob3": [[143, "micromagnetictests-calculatortests-test-stdprob3"]], "micromagnetictests.calculatortests.test_stdprob4": [[144, "micromagnetictests-calculatortests-test-stdprob4"]], "micromagnetictests.calculatortests.test_stdprob5": [[145, "micromagnetictests-calculatortests-test-stdprob5"]], "micromagnetictests.get_tests": [[146, "micromagnetictests-get-tests"]], "micromagnetictests.test": [[147, "micromagnetictests-test"]], "oommfc": [[148, "module-oommfc"], [285, "oommfc"], [285, null]], "CGEvolver": [[149, "cgevolver"]], "EulerEvolver": [[151, "eulerevolver"]], "HysteresisDriver": [[152, "hysteresisdriver"]], "MinDriver": [[153, "mindriver"]], "RungeKuttaEvolver": [[154, "rungekuttaevolver"]], "SpinTEvolver": [[155, "spintevolver"]], "SpinXferEvolver": [[156, "spinxferevolver"]], "TimeDriver": [[157, "timedriver"]], "UHH_ThetaEvolver": [[158, "uhh-thetaevolver"], [300, "UHH_ThetaEvolver"]], "Xf_ThermHeunEvolver": [[159, "xf-thermheunevolver"], [300, "Xf_ThermHeunEvolver"]], "Xf_ThermSpinXferEvolver": [[160, "xf-thermspinxferevolver"], [300, "Xf_ThermSpinXferEvolver"]], "oommfc.compute": [[161, "oommfc-compute"]], "oommfc.delete": [[162, "oommfc-delete"]], "oommfc.oommf": [[163, "module-oommfc.oommf"]], "DockerOOMMFRunner": [[164, "dockeroommfrunner"]], "ExeOOMMFRunner": [[165, "exeoommfrunner"]], "OOMMFRunner": [[166, "oommfrunner"]], "Runner": [[167, "runner"]], "TclOOMMFRunner": [[168, "tcloommfrunner"]], "oommfc.oommf.overhead": [[169, "oommfc-oommf-overhead"]], "oommfc.runner": [[170, "oommfc-runner"]], "oommfc.test": [[171, "oommfc-test"]], "oommfc.test_docker": [[172, "oommfc-test-docker"]], "ubermag": [[173, "module-ubermag"], [286, "ubermag"]], "ubermag.debug_info": [[174, "ubermag-debug-info"]], "ubermag.test": [[175, "ubermag-test"]], "ubermagtable": [[176, "module-ubermagtable"], [287, "ubermagtable"], [287, null]], "Table": [[177, "table"]], "ubermagtable.interact": [[178, "ubermagtable-interact"]], "ubermagtable.test": [[179, "ubermagtable-test"]], "ubermagtable.util": [[180, "module-ubermagtable.util"]], "ubermagtable.util.columns": [[181, "ubermagtable-util-columns"]], "ubermagtable.util.data": [[182, "ubermagtable-util-data"]], "ubermagtable.util.units": [[183, "ubermagtable-util-units"]], "ubermagutil": [[184, "module-ubermagutil"], [288, "ubermagutil"], [288, null]], "ubermagutil.changedir": [[185, "ubermagutil-changedir"]], "ubermagutil.hysteresis_values": [[186, "ubermagutil-hysteresis-values"]], "ubermagutil.inherit_docs": [[187, "ubermagutil-inherit-docs"]], "ubermagutil.setup_logging": [[188, "ubermagutil-setup-logging"]], "ubermagutil.test": [[189, "ubermagutil-test"]], "ubermagutil.typesystem": [[190, "module-ubermagutil.typesystem"]], "Descriptor": [[191, "descriptor"]], "Dictionary": [[192, "dictionary"], [261, "Dictionary"], [264, "Dictionary"], [267, "Dictionary"], [269, "Dictionary"]], "Name": [[193, "name"]], "Parameter": [[194, "parameter"]], "Scalar": [[195, "scalar"], [312, "Scalar"]], "Subset": [[196, "subset"]], "Typed": [[197, "typed"]], "Vector": [[198, "vector"], [312, "Vector"]], "ubermagutil.typesystem.typesystem": [[199, "ubermagutil-typesystem-typesystem"]], "ubermagutil.units": [[200, "module-ubermagutil.units"]], "ubermagutil.units.si_max_multiplier": [[201, "ubermagutil-units-si-max-multiplier"]], "ubermagutil.units.si_multiplier": [[202, "ubermagutil-units-si-multiplier"]], "API Reference": [[203, "api-reference"]], "Changelog": [[204, "changelog"]], "0.66.1 (Feb 3, 2023)": [[204, "feb-3-2023"]], "Fixed": [[204, "fixed"], [204, "id1"], [204, "id5"], [204, "id6"], [204, "id8"], [204, "id9"], [204, "id12"], [204, "id15"]], "0.66.0 (Oct 20, 2022)": [[204, "oct-20-2022"]], "Added": [[204, "added"], [204, "id3"], [204, "id7"], [204, "id10"], [204, "id14"]], "Changed": [[204, "changed"], [204, "id2"], [204, "id4"], [204, "id11"]], "0.65.0 (Jul 17, 2022)": [[204, "jul-17-2022"]], "0.64.0 (Jul 03, 2022)": [[204, "jul-03-2022"]], "0.63.0 (Jun 29, 2022)": [[204, "jun-29-2022"]], "0.62.1 (Jun 09, 2022)": [[204, "jun-09-2022"]], "0.62.0 (May 22, 2022)": [[204, "may-22-2022"]], "Removed": [[204, "removed"]], "0.61.2 (Mar 17, 2022)": [[204, "mar-17-2022"]], "0.61.0 (Feb 22, 2022)": [[204, "feb-22-2022"]], "General": [[204, "general"], [204, "id13"]], "0.60.0 (Oct 1, 2021)": [[204, "oct-1-2021"]], "0.51 (Feb 10, 2021)": [[204, "feb-10-2021"]], "Contributing": [[205, "contributing"]], "Bugs": [[205, "bugs"]], "Fixing a Bug": [[205, "fixing-a-bug"]], "Feature requests": [[205, "feature-requests"]], "Documentation": [[205, "documentation"], [207, "documentation"]], "Demo": [[206, "Demo"]], "Vortex dynamics": [[206, "Vortex-dynamics"]], "System initialisation": [[206, "System-initialisation"]], "Energy minimisation": [[206, "Energy-minimisation"]], "Displacement with magnetic field": [[206, "Displacement-with-magnetic-field"]], "Free relaxation": [[206, "Free-relaxation"]], "Data analysis": [[206, "Data-analysis"]], "Compatibility: Ubermag - OOMMF - mumax3": [[208, "compatibility-ubermag-oommf-mumax3"]], "Supported features": [[208, "supported-features"]], "Compatible versions": [[208, "compatible-versions"]], "Package documentation": [[210, "package-documentation"]], "mumax3c": [[215, "mumax3c"]], "Defining a uniform field": [[216, "Defining-a-uniform-field"]], "Scalar field": [[216, "Scalar-field"]], "Vector field": [[216, "Vector-field"]], "Field units": [[216, "Field-units"]], "Visualising field using holoviews": [[217, "Visualising-field-using-holoviews"]], "Scalar plot": [[217, "Scalar-plot"]], "Vector plot": [[217, "Vector-plot"]], "Contour lines": [[217, "Contour-lines"]], "Combining multiple plots": [[217, "Combining-multiple-plots"]], "Field visualisation using k3d": [[218, "Field-visualisation-using-k3d"]], "Multiple visualisation on the same plot": [[218, "Multiple-visualisation-on-the-same-plot"]], "k3d interactive plots": [[218, "k3d-interactive-plots"]], "Visualising field using matplotlib": [[219, "Visualising-field-using-matplotlib"]], "Plotting using Field.mpl()": [[219, "Plotting-using-Field.mpl()"]], "Available plotting functions": [[219, "Available-plotting-functions"]], "Scalar field visualisation \u2013 mpl.scalar": [[219, "Scalar-field-visualisation-\u2013-mpl.scalar"]], "Vector field visualisation \u2013 mpl.vector": [[219, "Vector-field-visualisation-\u2013-mpl.vector"]], "2d vector fields": [[219, "2d-vector-fields"]], "Contour line plots \u2013 mpl.contour": [[219, "Contour-line-plots-\u2013-mpl.contour"]], "HSL plots \u2013 mpl.lightness": [[219, "HSL-plots-\u2013-mpl.lightness"]], "colorwheel": [[219, "colorwheel"]], "Combining scalar and vector plots \u2013 mpl()": [[219, "Combining-scalar-and-vector-plots-\u2013-mpl()"]], "Building a custom plot": [[219, "Building-a-custom-plot"]], "[DEPRECATED] Interactive plots": [[219, "[DEPRECATED]-Interactive-plots"]], "Plotting field values along the line": [[219, "Plotting-field-values-along-the-line"]], "Field normalisation": [[220, "Field-normalisation"]], "Field operations": [[221, "Field-operations"]], "Sampling the field": [[221, "Sampling-the-field"]], "Extracting the component of a vector field": [[221, "Extracting-the-component-of-a-vector-field"]], "Extracting smaller region": [[221, "Extracting-smaller-region"]], "Extracting subfield on aligned mesh": [[221, "Extracting-subfield-on-aligned-mesh"]], "Extracting field on any mesh": [[221, "Extracting-field-on-any-mesh"]], "Computing the average": [[221, "Computing-the-average"]], "Iterating through the field": [[221, "Iterating-through-the-field"]], "Sampling the field along the line": [[221, "Sampling-the-field-along-the-line"]], "Intersecting the field with a plane": [[221, "Intersecting-the-field-with-a-plane"]], "Cascading the operations": [[221, "Cascading-the-operations"]], "Complex fields": [[221, "Complex-fields"]], "Algebra operations": [[221, "Algebra-operations"]], "+ operation": [[221, "+-operation"]], "- operation": [[221, "--operation"]], "* operation": [[221, "*-operation"]], "/ operation": [[221, "/-operation"]], "** operator": [[221, "**-operator"]], "Compund operations": [[221, "Compund-operations"]], "Vector products": [[221, "Vector-products"]], "Dot product": [[221, "Dot-product"]], "Cross product": [[221, "Cross-product"]], "Vector calculus": [[221, "Vector-calculus"]], "Gradient (\\nabla f)": [[221, "Gradient-(\\nabla-f)"]], "Divergence (\\nabla \\cdot f)": [[221, "Divergence-(\\nabla-\\cdot-f)"]], "Curl (\\nabla \\times f)": [[221, "Curl-(\\nabla-\\times-f)"]], "Laplace operator (\\nabla^{2} f)": [[221, "Laplace-operator-(\\nabla^{2}-f)"]], "Integrals": [[221, "Integrals"]], "Volume integral": [[221, "Volume-integral"]], "Surface integral": [[221, "Surface-integral"]], "Line integrals": [[221, "Line-integrals"]], "Improper integrals": [[221, "Improper-integrals"]], "Example": [[221, "Example"], [221, "id4"], [321, "Example"]], "Operation pipelines": [[221, "Operation-pipelines"]], "Applying numpys universal functions": [[221, "Applying-numpys-universal-functions"]], "Other": [[221, "Other"], [224, "Other"]], "Reading and writing fields": [[222, "Reading-and-writing-fields"]], "Writing the field to a file": [[222, "Writing-the-field-to-a-file"]], "Reading files": [[222, "Reading-files"]], "Field rotation": [[223, "Field-rotation"]], "Rotating a field": [[223, "Rotating-a-field"]], "Original field": [[223, "Original-field"]], "Rotation methods": [[223, "Rotation-methods"]], "Rotations by multiples of 90\u00b0": [[223, "Rotations-by-multiples-of-90\u00b0"]], "Rotations about arbitrary angles": [[223, "Rotations-about-arbitrary-angles"]], "Rotating a vector to point in a certain direction": [[223, "Rotating-a-vector-to-point-in-a-certain-direction"]], "Details of the rotation process": [[223, "Details-of-the-rotation-process"]], "1. Rotation of the region": [[223, "1.-Rotation-of-the-region"]], "2. Rotation of the mesh": [[223, "2.-Rotation-of-the-mesh"]], "3. Rotation of the field values": [[223, "3.-Rotation-of-the-field-values"]], "Spatially varying fields": [[224, "Spatially-varying-fields"]], "Using a Python function": [[224, "Using-a-Python-function"]], "Value property": [[224, "Value-property"]], "Using mesh regions": [[224, "Using-mesh-regions"]], "Using another Field object": [[224, "Using-another-Field-object"]], "Creating a field with coordinate values": [[224, "Creating-a-field-with-coordinate-values"]], "Field tools": [[225, "Field-tools"]], "1. Topological charge/topological charge density": [[225, "1.-Topological-charge/topological-charge-density"]], "2. Angles between cells": [[225, "2.-Angles-between-cells"]], "3. Emergent magnetic field and counting of BPs": [[225, "3.-Emergent-magnetic-field-and-counting-of-BPs"]], "4. Demag tensor": [[225, "4.-Demag-tensor"]], "Line object": [[226, "Line-object"]], "Line visualisation": [[226, "Line-visualisation"]], "Mesh basics": [[227, "Mesh-basics"]], "Mesh boundary conditions": [[228, "Mesh-boundary-conditions"]], "Periodic boundary conditions": [[228, "Periodic-boundary-conditions"], [305, "Periodic-boundary-conditions"]], "Experimental: Neumann and Dirichet boundary conditions": [[228, "Experimental:-Neumann-and-Dirichet-boundary-conditions"]], "Mesh plane and line": [[229, "Mesh-plane-and-line"]], "Plane mesh": [[229, "Plane-mesh"]], "Mesh pad": [[230, "Mesh-pad"]], "Mesh subregions": [[231, "Mesh-subregions"]], "Mesh subregions visualisation": [[231, "Mesh-subregions-visualisation"]], "mpl": [[231, "mpl"], [232, "mpl"], [237, "mpl"]], "k3d": [[231, "k3d"], [232, "k3d"], [237, "k3d"]], "Mesh visualisation": [[232, "Mesh-visualisation"]], "Basic plotting": [[232, "Basic-plotting"], [237, "Basic-plotting"]], "Advanced plotting": [[232, "Advanced-plotting"], [237, "Advanced-plotting"]], "Mesh widgets": [[233, "Mesh-widgets"]], "Slider": [[233, "Slider"], [276, "Slider"]], "Axis selector": [[233, "Axis-selector"]], "ovf2vtk tool": [[234, "ovf2vtk-tool"]], "1. Single file": [[234, "1.-Single-file"]], "2. Multiple files": [[234, "2.-Multiple-files"]], "3. Wildcard": [[234, "3.-Wildcard"]], "Region basics": [[235, "Region-basics"]], "Region facing surfaces": [[236, "Region-facing-surfaces"]], "Region visualisation": [[237, "Region-visualisation"]], "Importing/Exporting field from/to xarray.DataArray": [[238, "Importing/Exporting-field-from/to-xarray.DataArray"]], "Exporting discretisedfield.Field to xarray.DataArray": [[238, "Exporting-discretisedfield.Field-to-xarray.DataArray"]], "Few useful xarray.DataArray methods": [[238, "Few-useful-xarray.DataArray-methods"]], "to_xarray exceptions": [[238, "to_xarray-exceptions"]], "from_xarray exceptions and expected properties of input xarray.DataArray": [[238, "from_xarray-exceptions-and-expected-properties-of-input-xarray.DataArray"]], "DC magnetometry": [[239, "DC-magnetometry"]], "Magnetometry Reference frame": [[239, "Magnetometry-Reference-frame"], [245, "Magnetometry-Reference-frame"]], "The micromagnetic simulation": [[239, "The-micromagnetic-simulation"], [240, "The-micromagnetic-simulation"], [241, "The-micromagnetic-simulation"], [243, "The-micromagnetic-simulation"], [244, "The-micromagnetic-simulation"], [245, "The-micromagnetic-simulation"], [247, "The-micromagnetic-simulation"]], "DC Magnetisation": [[239, "DC-Magnetisation"]], "Lorentz Transmission Electron Microscopy": [[240, "Lorentz-Transmission-Electron-Microscopy"]], "LTEM Reference frame": [[240, "LTEM-Reference-frame"]], "Computing LTEM images": [[240, "Computing-LTEM-images"], [242, "Computing-LTEM-images"]], "Defocused Imaging": [[240, "Defocused-Imaging"]], "Integrated magnetic flux density": [[240, "Integrated-magnetic-flux-density"]], "Magnetic Force Microscopy": [[241, "Magnetic-Force-Microscopy"]], "MFM Reference frame": [[241, "MFM-Reference-frame"]], "Computing MFM images": [[241, "Computing-MFM-images"]], "The finite size of the tip": [[241, "The-finite-size-of-the-tip"]], "Quick plots": [[241, "Quick-plots"], [247, "Quick-plots"]], "Using Rotations with mag2exp": [[242, "Using-Rotations-with-mag2exp"]], "Small Angle Neutron Scattering": [[243, "Small-Angle-Neutron-Scattering"]], "SANS Reference frame": [[243, "SANS-Reference-frame"]], "Computing SANS Cross-sections": [[243, "Computing-SANS-Cross-sections"]], "Small Angle X-ray Scattering": [[244, "Small-Angle-X-ray-Scattering"]], "SAXS Reference frame": [[244, "SAXS-Reference-frame"]], "Computing SAXS Cross-sections": [[244, "Computing-SAXS-Cross-sections"]], "Torque magnetometry": [[245, "Torque-magnetometry"]], "Computing Torque Magnetometry": [[245, "Computing-Torque-Magnetometry"]], "Recreating experiments": [[245, "Recreating-experiments"]], "Unit Conversions": [[246, "Unit-Conversions"]], "CGS to SI": [[246, "CGS-to-SI"]], "Equivalencies": [[246, "Equivalencies"]], "Parameters": [[246, "Parameters"]], "Atomistic": [[246, "Atomistic"], [246, "id1"], [246, "id2"], [246, "id4"]], "Micromagnetic": [[246, "Micromagnetic"], [246, "id3"]], "Micromagentic": [[246, "Micromagentic"]], "Saturation Magnetisation": [[246, "Saturation-Magnetisation"]], "Micromagnetics": [[246, "Micromagnetics"]], "Anisotropy": [[246, "Anisotropy"]], "Worked Example": [[246, "Worked-Example"]], "X-ray Holography": [[247, "X-ray-Holography"]], "X-ray holography reference frame": [[247, "X-ray-holography-reference-frame"]], "Computing X-ray holography images": [[247, "Computing-X-ray-holography-images"]], "Rotations": [[247, "Rotations"]], "Analysing simulation results": [[248, "Analysing-simulation-results"]], "Widgets": [[248, "Widgets"]], "Interactive plots": [[249, "Interactive-plots"]], "Visualising computed magnetisation data": [[249, "Visualising-computed-magnetisation-data"]], "Time evolution of the magnetisation": [[249, "Time-evolution-of-the-magnetisation"], [249, "id1"], [249, "id2"]], "Combining multiple drives": [[249, "Combining-multiple-drives"]], "Computing derived quantities": [[249, "Computing-derived-quantities"]], "Selecting only a part of the drive": [[249, "Selecting-only-a-part-of-the-drive"]], "Normalised magnetisation": [[249, "Normalised-magnetisation"]], "Topological charge density - example 1": [[249, "Topological-charge-density---example-1"]], "Topological charge density - example 2": [[249, "Topological-charge-density---example-2"]], "Hysteresis simulation": [[249, "Hysteresis-simulation"]], "Constants": [[250, "Constants"]], "1. Magnetic constant": [[250, "1.-Magnetic-constant"]], "2. Elementary charge": [[250, "2.-Elementary-charge"]], "3. Electron\u2019s mass": [[250, "3.-Electron\u2019s-mass"]], "4. Boltzmann constant": [[250, "4.-Boltzmann-constant"]], "5. Planck\u2019s constant": [[250, "5.-Planck\u2019s-constant"]], "6. Lande g-factor": [[250, "6.-Lande-g-factor"]], "7. Reduced Planck constant": [[250, "7.-Reduced-Planck-constant"]], "8. Gyrotropic ratio": [[250, "8.-Gyrotropic-ratio"]], "9. Bohr magneton": [[250, "9.-Bohr-magneton"]], "10. LLG precession term gamma": [[250, "10.-LLG-precession-term-gamma"]], "Deriving a dynamics term": [[251, "Deriving-a-dynamics-term"]], "Deriving an energy term": [[252, "Deriving-an-energy-term"]], "Dynamics terms and dynamics equation": [[253, "Dynamics-terms-and-dynamics-equation"]], "Dynamics terms": [[253, "Dynamics-terms"]], "1. Precession": [[253, "1.-Precession"]], "2. Damping": [[253, "2.-Damping"]], "3. Zhang-Li term": [[253, "3.-Zhang-Li-term"]], "Dynamics equation": [[253, "Dynamics-equation"], [318, "Dynamics-equation"]], "Accesing individual dynamics terms from the dynamics equation": [[253, "Accesing-individual-dynamics-terms-from-the-dynamics-equation"]], "Energy terms and energy equation": [[254, "Energy-terms-and-energy-equation"]], "Energy terms": [[254, "Energy-terms"]], "1. Exchange energy": [[254, "1.-Exchange-energy"]], "2. Zeeman energy": [[254, "2.-Zeeman-energy"]], "Time-independent": [[254, "Time-independent"]], "Time-dependent": [[254, "Time-dependent"]], "3. Uniaxial anisotropy": [[254, "3.-Uniaxial-anisotropy"]], "4. Demagnetisation energy": [[254, "4.-Demagnetisation-energy"]], "5. Dzyaloshinskii-Moriya energy": [[254, "5.-Dzyaloshinskii-Moriya-energy"]], "6. Cubic anisotropy": [[254, "6.-Cubic-anisotropy"]], "7. RKKY": [[254, "7.-RKKY"]], "Energy equation": [[254, "Energy-equation"], [319, "Energy-equation"]], "Accesing the individual energy terms from the energy equation": [[254, "Accesing-the-individual-energy-terms-from-the-energy-equation"]], "Deriving evolver and driver classes": [[255, "Deriving-evolver-and-driver-classes"]], "Multiple energy terms of the same class": [[256, "Multiple-energy-terms-of-the-same-class"], [303, "Multiple-energy-terms-of-the-same-class"]], "Defining micromagnetic system": [[257, "Defining-micromagnetic-system"]], "Term parameters": [[258, "Term-parameters"]], "1. Constant parameters": [[258, "1.-Constant-parameters"]], "2. Parameters defined \u201cper region\u201d": [[258, "2.-Parameters-defined-\u201cper-region\u201d"]], "3. Parameters defined using discretisedfield.Field object": [[258, "3.-Parameters-defined-using-discretisedfield.Field-object"]], "Usage": [[259, "Usage"]], "Controlling the default runner": [[260, "Controlling-the-default-runner"]], "Different runners": [[260, "Different-runners"]], "The default runner": [[260, "The-default-runner"]], "Defaults for the different runner types": [[260, "Defaults-for-the-different-runner-types"]], "Changing the default runner": [[260, "Changing-the-default-runner"]], "Going back to the default runner": [[260, "Going-back-to-the-default-runner"]], "Tutorial 05: Cubic anisotropy energy term": [[261, "Tutorial-05:-Cubic-anisotropy-energy-term"]], "Spatially constant K_{1} and \\mathbf{u}": [[261, "Spatially-constant-K_{1}-and-\\mathbf{u}"]], "Spatially varying \\mathbf{K}_{1}": [[261, "Spatially-varying-\\mathbf{K}_{1}"]], "discretisedfield.Field": [[261, "discretisedfield.Field"], [264, "discretisedfield.Field"], [267, "discretisedfield.Field"], [269, "discretisedfield.Field"]], "Custom directory name": [[262, "Custom-directory-name"]], "Tutorial 04: Dzyaloshinskii-Moriya energy term": [[263, "Tutorial-04:-Dzyaloshinskii-Moriya-energy-term"]], "Spatially constant D": [[263, "Spatially-constant-D"]], "Spatially varying D": [[263, "Spatially-varying-D"]], "Tutorial 02: Exchange energy term": [[264, "Tutorial-02:-Exchange-energy-term"]], "Spatially constant A": [[264, "Spatially-constant-A"]], "Spatially varying A": [[264, "Spatially-varying-A"]], "MinDriver steps": [[265, "MinDriver-steps"]], "micromagneticdata analysis": [[265, "micromagneticdata-analysis"], [302, "micromagneticdata-analysis"]], "Running simulations in parallel": [[266, "Running-simulations-in-parallel"]], "Tutorial 03: Uniaxial anisotropy energy term": [[267, "Tutorial-03:-Uniaxial-anisotropy-energy-term"]], "Spatially constant K and \\mathbf{u}": [[267, "Spatially-constant-K-and-\\mathbf{u}"]], "Spatially varying \\mathbf{K}": [[267, "Spatially-varying-\\mathbf{K}"]], "Higher-order uniaxial anisotropy": [[267, "Higher-order-uniaxial-anisotropy"]], "Verbosity levels": [[268, "Verbosity-levels"]], "One summary line (default)": [[268, "One-summary-line-(default)"]], "Silent run": [[268, "Silent-run"]], "Progress bar (TimeDriver only)": [[268, "Progress-bar-(TimeDriver-only)"]], "Tutorial 01: Zeeman energy term": [[269, "Tutorial-01:-Zeeman-energy-term"]], "Spatially constant \\mathbf{H}": [[269, "Spatially-constant-\\mathbf{H}"], [309, "Spatially-constant-\\mathbf{H}"]], "Spatially varying \\mathbf{H}": [[269, "Spatially-varying-\\mathbf{H}"]], "Table basics": [[271, "Table-basics"]], "Table FFT": [[272, "Table-FFT"]], "Table interactive plot": [[273, "Table-interactive-plot"]], "Table merge": [[274, "Table-merge"]], "Table visualisation": [[275, "Table-visualisation"]], "Table widgets": [[276, "Table-widgets"]], "Value selector": [[276, "Value-selector"]], "Constant attributes": [[277, "Constant-attributes"]], "Hysteresis values": [[278, "Hysteresis-values"]], "Imposing typesystem on a class": [[279, "Imposing-typesystem-on-a-class"]], "Properties": [[279, "Properties"]], "Imposing typesystem using ubermagutil.typesystem": [[279, "Imposing-typesystem-using-ubermagutil.typesystem"]], "Deleting an attribute": [[279, "Deleting-an-attribute"]], "inherit_docs decorator": [[280, "inherit_docs-decorator"]], "Logging control": [[281, "Logging-control"]], "Defining otherwise type": [[282, "Defining-otherwise-type"]], "Parameter descriptor": [[283, "Parameter-descriptor"]], "Extracting the SI prefix": [[284, "Extracting-the-SI-prefix"]], "Examples": [[289, "examples"]], "Standard problem 3": [[290, "Standard-problem-3"]], "Problem specification": [[290, "Problem-specification"], [291, "Problem-specification"], [292, "Problem-specification"], [293, "Problem-specification"]], "Simulation": [[290, "Simulation"], [291, "Simulation"], [292, "Simulation"], [294, "Simulation"]], "Relaxed magnetisation states": [[290, "Relaxed-magnetisation-states"]], "Energy crossing": [[290, "Energy-crossing"]], "References": [[290, "References"], [291, "References"], [292, "References"], [293, "References"], [317, "References"]], "Standard problem 4": [[291, "Standard-problem-4"]], "First stage": [[291, "First-stage"]], "Second stage: field \\mathbf{B}_{1}": [[291, "Second-stage:-field-\\mathbf{B}_{1}"]], "Postprocessing": [[291, "Postprocessing"], [293, "Postprocessing"]], "Standard problem 5": [[292, "Standard-problem-5"]], "Spin-polarised current": [[292, "Spin-polarised-current"]], "FMR standard problem": [[293, "FMR-standard-problem"]], "Relaxation stage": [[293, "Relaxation-stage"]], "Dynamic stage": [[293, "Dynamic-stage"]], "Deriving energy values": [[294, "Deriving-energy-values"]], "Effective field": [[294, "Effective-field"], [299, "Effective-field"], [299, "id3"], [299, "id6"], [299, "id9"]], "Relax the system": [[294, "Relax-the-system"]], "Computing energies of individual term": [[294, "Computing-energies-of-individual-term"]], "Calculating a stray field using an airbox method": [[295, "Calculating-a-stray-field-using-an-airbox-method"]], "Skyrmion in a disk": [[296, "Skyrmion-in-a-disk"], [319, "Skyrmion-in-a-disk"]], "Choosing runner": [[297, "Choosing-runner"]], "Energy term computations": [[298, "Energy-term-computations"]], "Field operations 2": [[299, "Field-operations-2"]], "Magnetisation": [[299, "Magnetisation"]], "Energy density": [[299, "Energy-density"], [299, "id1"], [299, "id4"], [299, "id7"]], "Uniaxial anisotropy": [[299, "Uniaxial-anisotropy"], [319, "Uniaxial-anisotropy"]], "DMI (T)": [[299, "DMI-(T)"]], "(Oversimplified) micromagnetic calculator": [[299, "(Oversimplified)-micromagnetic-calculator"]], "Simulation at finite temperature": [[300, "Simulation-at-finite-temperature"]], "Fixed subregions": [[301, "Fixed-subregions"]], "Hysteresis simulations": [[302, "Hysteresis-simulations"]], "Plotting hysteresis loop": [[302, "Plotting-hysteresis-loop"]], "Negative exchange energy constant": [[304, "Negative-exchange-energy-constant"]], "RKKY energy term": [[306, "RKKY-energy-term"]], "Sine-hysteresis": [[307, "Sine-hysteresis"]], "Both spatially and time varying field": [[308, "Both-spatially-and-time-varying-field"]], "Spatially varying parameters 1": [[309, "Spatially-varying-parameters-1"]], "Spatially varying H": [[309, "Spatially-varying-H"]], "Spatially varying parameters 2": [[310, "Spatially-varying-parameters-2"]], "Time-varying field": [[311, "Time-varying-field"]], "Time-dependent fields and currents": [[312, "Time-dependent-fields-and-currents"]], "Zeeman field": [[312, "Zeeman-field"]], "Python function": [[312, "Python-function"], [312, "id1"]], "How to properly simulate this field pulse": [[312, "How-to-properly-simulate-this-field-pulse"]], "Pre-defined functions": [[312, "Pre-defined-functions"]], "Experimentally measured time-dependence": [[312, "Experimentally-measured-time-dependence"]], "Tcl": [[312, "Tcl"], [312, "id2"]], "Slonczewski and Zhang-Li currents": [[312, "Slonczewski-and-Zhang-Li-currents"]], "FAQ": [[313, "faq"]], "Number of files written to disk with TimeDriver": [[313, "number-of-files-written-to-disk-with-timedriver"]], "Getting started": [[314, "getting-started"]], "Jupyter lab": [[315, "jupyter-lab"]], "Exercise: Current induced domain wall motion": [[316, "Exercise:-Current-induced-domain-wall-motion"]], "Problem description": [[316, "Problem-description"], [317, "Problem-description"]], "Domain-wall pair": [[316, "Domain-wall-pair"]], "Single domain wall": [[316, "Single-domain-wall"]], "Exercise: Domain wall pair conversion": [[317, "Exercise:-Domain-wall-pair-conversion"]], "Solution": [[317, "Solution"]], "Macrospin": [[318, "Macrospin"]], "Dynamics simulation": [[318, "Dynamics-simulation"]], "Simulation results": [[318, "Simulation-results"]], "Exercise 1": [[318, "Exercise-1"]], "Exercise 2": [[318, "Exercise-2"]], "Exercise 3": [[318, "Exercise-3"]], "Zeeman energy": [[319, "Zeeman-energy"]], "Exchange energy": [[319, "Exchange-energy"]], "Dzyaloshinskii-Moriya energy": [[319, "Dzyaloshinskii-Moriya-energy"]], "Exchange and Zeeman energies": [[319, "Exchange-and-Zeeman-energies"]], "Competition of DMI and exchange": [[319, "Competition-of-DMI-and-exchange"]], "Our first ubermag simulation": [[320, "Our-first-ubermag-simulation"]], "The main object in Ubermag: System object": [[320, "The-main-object-in-Ubermag:-System-object"]], "1. Energy equation": [[320, "1.-Energy-equation"]], "2. Dynamics equation": [[320, "2.-Dynamics-equation"]], "3. Initial magnetisation": [[320, "3.-Initial-magnetisation"]], "Inspecting system object": [[320, "Inspecting-system-object"]], "Driving the system": [[320, "Driving-the-system"]], "Magnetisation field": [[321, "Magnetisation-field"]], "Spatially varying field value": [[321, "Spatially-varying-field-value"]], "Spatially varying M_\\mathrm{s}": [[321, "Spatially-varying-M_\\mathrm{s}"]], "Exercise": [[321, "Exercise"]], "Python basics": [[322, "Python-basics"]], "Variables": [[322, "Variables"]], "Large/small values, e.g.\u00a0a = 2.1 \\times 10^{6}": [[322, "Large/small-values,-e.g.\u00a0a-=-2.1-\\times-10^{6}"]], "Basic operations": [[322, "Basic-operations"]], "1. Addition c = a + b": [[322, "1.-Addition-c-=-a-+-b"]], "2. Subtraction: a - b": [[322, "2.-Subtraction:-a---b"]], "3. Multiplication: a \\times b": [[322, "3.-Multiplication:-a-\\times-b"]], "4. Division: a / b": [[322, "4.-Division:-a-/-b"]], "5. Power a^{b}": [[322, "5.-Power-a^{b}"]], "6. More complicated operations": [[322, "6.-More-complicated-operations"]], "Lists and tuples": [[322, "Lists-and-tuples"]], "Indexing": [[322, "Indexing"]], "Length (the number of elements)": [[322, "Length-(the-number-of-elements)"]], "Unpacking": [[322, "Unpacking"]], "Dictionaries": [[322, "Dictionaries"]], "Selection": [[322, "Selection"]], "Iteration": [[322, "Iteration"]], "Functions": [[322, "Functions"]], "Keyword arguments": [[322, "Keyword-arguments"]], "Imports": [[322, "Imports"]], "Common mistakes": [[322, "Common-mistakes"]], "1. No colon": [[322, "1.-No-colon"]], "2. No indentation": [[322, "2.-No-indentation"]], "3. Mixing types": [[322, "3.-Mixing-types"]], "4. Using an undefined variable": [[322, "4.-Using-an-undefined-variable"]], "5. Module is not imported": [[322, "5.-Module-is-not-imported"]], "Object oriented programming basics": [[322, "Object-oriented-programming-basics"]], "Getting help": [[322, "Getting-help"]], "Help": [[323, "help"]], "How to prepare your request for help": [[323, "how-to-prepare-your-request-for-help"]], "rendered output is similar to": [[323, null], [323, null], [323, null]], "Help others": [[323, "help-others"]], "Ubermag": [[324, "ubermag"]], "Features and packages": [[324, "features-and-packages"]], "What is ubermag?": [[324, "what-is-ubermag"]], "Documentation and tutorials": [[324, "documentation-and-tutorials"]], "ubermag in the cloud": [[324, "ubermag-in-the-cloud"]], "Authors": [[324, "authors"]], "How to cite": [[324, "how-to-cite"]], "License": [[324, "license"]], "Acknowledgements": [[324, "acknowledgements"]], "Installation": [[325, "installation"], [325, "id1"]], "Standard installation \u2013 recommended": [[325, "standard-installation-recommended"]], "Installation environment": [[325, "installation-environment"]], "Installing a calculator": [[325, "installing-a-calculator"]], "Testing": [[325, "testing"]], "Update": [[325, "update"]], "Advanced installation": [[325, "advanced-installation"]], "Check the installation": [[325, "check-the-installation"]], "How does Ubermag find OOMMF?": [[325, "how-does-ubermag-find-oommf"]], "Development installation": [[325, "development-installation"]], "News": [[326, "news"]], "2022 winter workshop": [[326, "winter-workshop"]], "2022 summer code sprint": [[326, "summer-code-sprint"]]}, "indexentries": {"discretisedfield": [[0, "module-discretisedfield"]], "module": [[0, "module-discretisedfield"], [9, "module-discretisedfield.io"], [16, "module-discretisedfield.io.ovf2vtk"], [18, "module-discretisedfield.plotting"], [28, "module-discretisedfield.tools"], [38, "module-mag2exp"], [39, "module-mag2exp.ltem"], [44, "module-mag2exp.magnetometry"], [47, "module-mag2exp.mfm"], [49, "module-mag2exp.quick_plots"], [59, "module-mag2exp.sans"], [63, "module-mag2exp.x_ray"], [66, "module-micromagneticdata"], [74, "module-micromagneticmodel"], [96, "module-micromagneticmodel.abstract"], [100, "module-micromagneticmodel.consts"], [111, "module-micromagneticmodel.examples"], [114, "module-micromagnetictests"], [115, "module-micromagnetictests.calculatortests"], [148, "module-oommfc"], [163, "module-oommfc.oommf"], [173, "module-ubermag"], [176, "module-ubermagtable"], [180, "module-ubermagtable.util"], [184, "module-ubermagutil"], [190, "module-ubermagutil.typesystem"], [200, "module-ubermagutil.units"]], "dvalue (class in discretisedfield)": [[1, "discretisedfield.DValue"]], "__abs__() (discretisedfield.dvalue method)": [[1, "discretisedfield.DValue.__abs__"]], "__call__() (discretisedfield.dvalue method)": [[1, "discretisedfield.DValue.__call__"]], "__matmul__() (discretisedfield.dvalue method)": [[1, "discretisedfield.DValue.__matmul__"]], "__mul__() (discretisedfield.dvalue method)": [[1, "discretisedfield.DValue.__mul__"]], "field (class in discretisedfield)": [[2, "discretisedfield.Field"]], "__abs__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__abs__"]], "__add__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__add__"]], "__and__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__and__"]], "__array_ufunc__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__array_ufunc__"]], "__call__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__call__"]], "__dir__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__dir__"]], "__eq__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__eq__"]], "__getattr__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__getattr__"]], "__getitem__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__getitem__"]], "__hash__ (discretisedfield.field attribute)": [[2, "discretisedfield.Field.__hash__"]], "__iter__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__iter__"]], "__lshift__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__lshift__"]], "__matmul__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__matmul__"]], "__mul__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__mul__"]], "__neg__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__neg__"]], "__pos__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__pos__"]], "__pow__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__pow__"]], "__repr__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__repr__"]], "__sub__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__sub__"]], "__truediv__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__truediv__"]], "allclose() (discretisedfield.field method)": [[2, "discretisedfield.Field.allclose"]], "angle (discretisedfield.field property)": [[2, "discretisedfield.Field.angle"]], "array (discretisedfield.field property)": [[2, "discretisedfield.Field.array"]], "average (discretisedfield.field property)": [[2, "discretisedfield.Field.average"]], "components (discretisedfield.field property)": [[2, "discretisedfield.Field.components"]], "conjugate (discretisedfield.field property)": [[2, "discretisedfield.Field.conjugate"]], "coordinate_field() (discretisedfield.field class method)": [[2, "discretisedfield.Field.coordinate_field"]], "curl (discretisedfield.field property)": [[2, "discretisedfield.Field.curl"]], "derivative() (discretisedfield.field method)": [[2, "discretisedfield.Field.derivative"]], "div (discretisedfield.field property)": [[2, "discretisedfield.Field.div"]], "fftn (discretisedfield.field property)": [[2, "discretisedfield.Field.fftn"]], "from_xarray() (discretisedfield.field class method)": [[2, "discretisedfield.Field.from_xarray"]], "fromfile() (discretisedfield.field class method)": [[2, "discretisedfield.Field.fromfile"]], "grad (discretisedfield.field property)": [[2, "discretisedfield.Field.grad"]], "hv (discretisedfield.field property)": [[2, "discretisedfield.Field.hv"]], "ifftn (discretisedfield.field property)": [[2, "discretisedfield.Field.ifftn"]], "imag (discretisedfield.field property)": [[2, "discretisedfield.Field.imag"]], "integral() (discretisedfield.field method)": [[2, "discretisedfield.Field.integral"]], "irfftn (discretisedfield.field property)": [[2, "discretisedfield.Field.irfftn"]], "k3d (discretisedfield.field property)": [[2, "discretisedfield.Field.k3d"]], "laplace (discretisedfield.field property)": [[2, "discretisedfield.Field.laplace"]], "line() (discretisedfield.field method)": [[2, "discretisedfield.Field.line"]], "mpl (discretisedfield.field property)": [[2, "discretisedfield.Field.mpl"]], "norm (discretisedfield.field property)": [[2, "discretisedfield.Field.norm"]], "orientation (discretisedfield.field property)": [[2, "discretisedfield.Field.orientation"]], "pad() (discretisedfield.field method)": [[2, "discretisedfield.Field.pad"]], "phase (discretisedfield.field property)": [[2, "discretisedfield.Field.phase"]], "plane() (discretisedfield.field method)": [[2, "discretisedfield.Field.plane"]], "project() (discretisedfield.field method)": [[2, "discretisedfield.Field.project"]], "real (discretisedfield.field property)": [[2, "discretisedfield.Field.real"]], "rfftn (discretisedfield.field property)": [[2, "discretisedfield.Field.rfftn"]], "to_vtk() (discretisedfield.field method)": [[2, "discretisedfield.Field.to_vtk"]], "to_xarray() (discretisedfield.field method)": [[2, "discretisedfield.Field.to_xarray"]], "value (discretisedfield.field property)": [[2, "discretisedfield.Field.value"]], "write() (discretisedfield.field method)": [[2, "discretisedfield.Field.write"]], "zero (discretisedfield.field property)": [[2, "discretisedfield.Field.zero"]], "fieldrotator (class in discretisedfield)": [[3, "discretisedfield.FieldRotator"]], "__repr__() (discretisedfield.fieldrotator method)": [[3, "discretisedfield.FieldRotator.__repr__"]], "clear_rotation() (discretisedfield.fieldrotator method)": [[3, "discretisedfield.FieldRotator.clear_rotation"]], "field (discretisedfield.fieldrotator property)": [[3, "discretisedfield.FieldRotator.field"]], "rotate() (discretisedfield.fieldrotator method)": [[3, "discretisedfield.FieldRotator.rotate"]], "line (class in discretisedfield)": [[4, "discretisedfield.Line"]], "__repr__() (discretisedfield.line method)": [[4, "discretisedfield.Line.__repr__"]], "length (discretisedfield.line property)": [[4, "discretisedfield.Line.length"]], "mpl() (discretisedfield.line method)": [[4, "discretisedfield.Line.mpl"]], "point_columns (discretisedfield.line property)": [[4, "discretisedfield.Line.point_columns"]], "selector() (discretisedfield.line method)": [[4, "discretisedfield.Line.selector"]], "slider() (discretisedfield.line method)": [[4, "discretisedfield.Line.slider"]], "value_columns (discretisedfield.line property)": [[4, "discretisedfield.Line.value_columns"]], "mesh (class in discretisedfield)": [[5, "discretisedfield.Mesh"]], "__dir__() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.__dir__"]], "__eq__() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.__eq__"]], "__getattr__() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.__getattr__"]], "__getitem__() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.__getitem__"]], "__hash__ (discretisedfield.mesh attribute)": [[5, "discretisedfield.Mesh.__hash__"]], "__iter__() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.__iter__"]], "__len__() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.__len__"]], "__or__() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.__or__"]], "__repr__() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.__repr__"]], "axis_selector() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.axis_selector"]], "ds (discretisedfield.mesh property)": [[5, "discretisedfield.Mesh.dS"]], "dv (discretisedfield.mesh property)": [[5, "discretisedfield.Mesh.dV"]], "index2point() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.index2point"]], "indices (discretisedfield.mesh property)": [[5, "discretisedfield.Mesh.indices"]], "k3d (discretisedfield.mesh property)": [[5, "discretisedfield.Mesh.k3d"]], "line() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.line"]], "load_subregions() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.load_subregions"]], "midpoints (discretisedfield.mesh property)": [[5, "discretisedfield.Mesh.midpoints"]], "mpl (discretisedfield.mesh property)": [[5, "discretisedfield.Mesh.mpl"]], "neighbours() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.neighbours"]], "pad() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.pad"]], "plane() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.plane"]], "point2index() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.point2index"]], "region2slices() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.region2slices"]], "save_subregions() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.save_subregions"]], "slider() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.slider"]], "subregions (discretisedfield.mesh property)": [[5, "discretisedfield.Mesh.subregions"]], "vertices (discretisedfield.mesh property)": [[5, "discretisedfield.Mesh.vertices"]], "region (class in discretisedfield)": [[6, "discretisedfield.Region"]], "__contains__() (discretisedfield.region method)": [[6, "discretisedfield.Region.__contains__"]], "__eq__() (discretisedfield.region method)": [[6, "discretisedfield.Region.__eq__"]], "__hash__ (discretisedfield.region attribute)": [[6, "discretisedfield.Region.__hash__"]], "__mul__() (discretisedfield.region method)": [[6, "discretisedfield.Region.__mul__"]], "__or__() (discretisedfield.region method)": [[6, "discretisedfield.Region.__or__"]], "__repr__() (discretisedfield.region method)": [[6, "discretisedfield.Region.__repr__"]], "__truediv__() (discretisedfield.region method)": [[6, "discretisedfield.Region.__truediv__"]], "centre (discretisedfield.region property)": [[6, "discretisedfield.Region.centre"]], "edges (discretisedfield.region property)": [[6, "discretisedfield.Region.edges"]], "k3d (discretisedfield.region property)": [[6, "discretisedfield.Region.k3d"]], "mpl (discretisedfield.region property)": [[6, "discretisedfield.Region.mpl"]], "multiplier (discretisedfield.region property)": [[6, "discretisedfield.Region.multiplier"]], "pmax (discretisedfield.region property)": [[6, "discretisedfield.Region.pmax"]], "pmin (discretisedfield.region property)": [[6, "discretisedfield.Region.pmin"]], "random_point() (discretisedfield.region method)": [[6, "discretisedfield.Region.random_point"]], "to_dict() (discretisedfield.region method)": [[6, "discretisedfield.Region.to_dict"]], "volume (discretisedfield.region property)": [[6, "discretisedfield.Region.volume"]], "integral() (in module discretisedfield)": [[7, "discretisedfield.integral"]], "interact() (in module discretisedfield)": [[8, "discretisedfield.interact"]], "discretisedfield.io": [[9, "module-discretisedfield.io"]], "field_from_hdf5() (in module discretisedfield.io)": [[10, "discretisedfield.io.field_from_hdf5"]], "field_from_ovf() (in module discretisedfield.io)": [[11, "discretisedfield.io.field_from_ovf"]], "field_from_vtk() (in module discretisedfield.io)": [[12, "discretisedfield.io.field_from_vtk"]], "field_to_hdf5() (in module discretisedfield.io)": [[13, "discretisedfield.io.field_to_hdf5"]], "field_to_ovf() (in module discretisedfield.io)": [[14, "discretisedfield.io.field_to_ovf"]], "field_to_vtk() (in module discretisedfield.io)": [[15, "discretisedfield.io.field_to_vtk"]], "discretisedfield.io.ovf2vtk": [[16, "module-discretisedfield.io.ovf2vtk"]], "ovf2vtk() (in module discretisedfield.io.ovf2vtk)": [[17, "discretisedfield.io.ovf2vtk.ovf2vtk"]], "discretisedfield.plotting": [[18, "module-discretisedfield.plotting"]], "hv (class in discretisedfield.plotting)": [[19, "discretisedfield.plotting.Hv"]], "__call__() (discretisedfield.plotting.hv method)": [[19, "discretisedfield.plotting.Hv.__call__"]], "contour() (discretisedfield.plotting.hv method)": [[19, "discretisedfield.plotting.Hv.contour"]], "scalar() (discretisedfield.plotting.hv method)": [[19, "discretisedfield.plotting.Hv.scalar"]], "vector() (discretisedfield.plotting.hv method)": [[19, "discretisedfield.plotting.Hv.vector"]], "k3dfield (class in discretisedfield.plotting)": [[20, "discretisedfield.plotting.K3dField"]], "__dir__() (discretisedfield.plotting.k3dfield method)": [[20, "discretisedfield.plotting.K3dField.__dir__"]], "nonzero() (discretisedfield.plotting.k3dfield method)": [[20, "discretisedfield.plotting.K3dField.nonzero"]], "scalar() (discretisedfield.plotting.k3dfield method)": [[20, "discretisedfield.plotting.K3dField.scalar"]], "vector() (discretisedfield.plotting.k3dfield method)": [[20, "discretisedfield.plotting.K3dField.vector"]], "k3dmesh (class in discretisedfield.plotting)": [[21, "discretisedfield.plotting.K3dMesh"]], "__call__() (discretisedfield.plotting.k3dmesh method)": [[21, "discretisedfield.plotting.K3dMesh.__call__"]], "subregions() (discretisedfield.plotting.k3dmesh method)": [[21, "discretisedfield.plotting.K3dMesh.subregions"]], "k3dregion (class in discretisedfield.plotting)": [[22, "discretisedfield.plotting.K3dRegion"]], "__call__() (discretisedfield.plotting.k3dregion method)": [[22, "discretisedfield.plotting.K3dRegion.__call__"]], "mplfield (class in discretisedfield.plotting)": [[23, "discretisedfield.plotting.MplField"]], "__call__() (discretisedfield.plotting.mplfield method)": [[23, "discretisedfield.plotting.MplField.__call__"]], "__dir__() (discretisedfield.plotting.mplfield method)": [[23, "discretisedfield.plotting.MplField.__dir__"]], "contour() (discretisedfield.plotting.mplfield method)": [[23, "discretisedfield.plotting.MplField.contour"]], "lightness() (discretisedfield.plotting.mplfield method)": [[23, "discretisedfield.plotting.MplField.lightness"]], "scalar() (discretisedfield.plotting.mplfield method)": [[23, "discretisedfield.plotting.MplField.scalar"]], "vector() (discretisedfield.plotting.mplfield method)": [[23, "discretisedfield.plotting.MplField.vector"]], "mplmesh (class in discretisedfield.plotting)": [[24, "discretisedfield.plotting.MplMesh"]], "__call__() (discretisedfield.plotting.mplmesh method)": [[24, "discretisedfield.plotting.MplMesh.__call__"]], "subregions() (discretisedfield.plotting.mplmesh method)": [[24, "discretisedfield.plotting.MplMesh.subregions"]], "mplregion (class in discretisedfield.plotting)": [[25, "discretisedfield.plotting.MplRegion"]], "__call__() (discretisedfield.plotting.mplregion method)": [[25, "discretisedfield.plotting.MplRegion.__call__"]], "add_colorwheel() (in module discretisedfield.plotting)": [[26, "discretisedfield.plotting.add_colorwheel"]], "test() (in module discretisedfield)": [[27, "discretisedfield.test"]], "discretisedfield.tools": [[28, "module-discretisedfield.tools"]], "count_bps() (in module discretisedfield.tools)": [[29, "discretisedfield.tools.count_bps"]], "count_large_cell_angle_regions() (in module discretisedfield.tools)": [[30, "discretisedfield.tools.count_large_cell_angle_regions"]], "demag_field() (in module discretisedfield.tools)": [[31, "discretisedfield.tools.demag_field"]], "demag_tensor() (in module discretisedfield.tools)": [[32, "discretisedfield.tools.demag_tensor"]], "emergent_magnetic_field() (in module discretisedfield.tools)": [[33, "discretisedfield.tools.emergent_magnetic_field"]], "max_neigbouring_cell_angle() (in module discretisedfield.tools)": [[34, "discretisedfield.tools.max_neigbouring_cell_angle"]], "neigbouring_cell_angle() (in module discretisedfield.tools)": [[35, "discretisedfield.tools.neigbouring_cell_angle"]], "topological_charge() (in module discretisedfield.tools)": [[36, "discretisedfield.tools.topological_charge"]], "topological_charge_density() (in module discretisedfield.tools)": [[37, "discretisedfield.tools.topological_charge_density"]], "mag2exp": [[38, "module-mag2exp"]], "mag2exp.ltem": [[39, "module-mag2exp.ltem"]], "defocus_image() (in module mag2exp.ltem)": [[40, "mag2exp.ltem.defocus_image"]], "integrated_magnetic_flux_density() (in module mag2exp.ltem)": [[41, "mag2exp.ltem.integrated_magnetic_flux_density"]], "phase() (in module mag2exp.ltem)": [[42, "mag2exp.ltem.phase"]], "relativistic_wavelength() (in module mag2exp.ltem)": [[43, "mag2exp.ltem.relativistic_wavelength"]], "mag2exp.magnetometry": [[44, "module-mag2exp.magnetometry"]], "magnetisation() (in module mag2exp.magnetometry)": [[45, "mag2exp.magnetometry.magnetisation"]], "torque() (in module mag2exp.magnetometry)": [[46, "mag2exp.magnetometry.torque"]], "mag2exp.mfm": [[47, "module-mag2exp.mfm"]], "phase_shift() (in module mag2exp.mfm)": [[48, "mag2exp.mfm.phase_shift"]], "mag2exp.quick_plots": [[49, "module-mag2exp.quick_plots"]], "ltem_defocus() (in module mag2exp.quick_plots)": [[50, "mag2exp.quick_plots.ltem_defocus"]], "ltem_ft_phase() (in module mag2exp.quick_plots)": [[51, "mag2exp.quick_plots.ltem_ft_phase"]], "ltem_integrated_mfd() (in module mag2exp.quick_plots)": [[52, "mag2exp.quick_plots.ltem_integrated_mfd"]], "ltem_phase() (in module mag2exp.quick_plots)": [[53, "mag2exp.quick_plots.ltem_phase"]], "mfm_phase_shift() (in module mag2exp.quick_plots)": [[54, "mag2exp.quick_plots.mfm_phase_shift"]], "sans_chiral_function() (in module mag2exp.quick_plots)": [[55, "mag2exp.quick_plots.sans_chiral_function"]], "sans_cross_section() (in module mag2exp.quick_plots)": [[56, "mag2exp.quick_plots.sans_cross_section"]], "saxs() (in module mag2exp.quick_plots)": [[57, "mag2exp.quick_plots.saxs"]], "x_ray_holography() (in module mag2exp.quick_plots)": [[58, "mag2exp.quick_plots.x_ray_holography"]], "mag2exp.sans": [[59, "module-mag2exp.sans"]], "chiral_function() (in module mag2exp.sans)": [[60, "mag2exp.sans.chiral_function"]], "cross_section() (in module mag2exp.sans)": [[61, "mag2exp.sans.cross_section"]], "test() (in module mag2exp)": [[62, "mag2exp.test"]], "mag2exp.x_ray": [[63, "module-mag2exp.x_ray"]], "holography() (in module mag2exp.x_ray)": [[64, "mag2exp.x_ray.holography"]], "saxs() (in module mag2exp.x_ray)": [[65, "mag2exp.x_ray.saxs"]], "micromagneticdata": [[66, "module-micromagneticdata"]], "abstractdrive (class in micromagneticdata)": [[67, "micromagneticdata.AbstractDrive"]], "__getitem__() (micromagneticdata.abstractdrive method)": [[67, "micromagneticdata.AbstractDrive.__getitem__"]], "__iter__() (micromagneticdata.abstractdrive method)": [[67, "micromagneticdata.AbstractDrive.__iter__"]], "__lshift__() (micromagneticdata.abstractdrive method)": [[67, "micromagneticdata.AbstractDrive.__lshift__"]], "__repr__() (micromagneticdata.abstractdrive method)": [[67, "micromagneticdata.AbstractDrive.__repr__"]], "callbacks (micromagneticdata.abstractdrive property)": [[67, "micromagneticdata.AbstractDrive.callbacks"]], "hv (micromagneticdata.abstractdrive property)": [[67, "micromagneticdata.AbstractDrive.hv"]], "info (micromagneticdata.abstractdrive property)": [[67, "micromagneticdata.AbstractDrive.info"]], "m0 (micromagneticdata.abstractdrive property)": [[67, "micromagneticdata.AbstractDrive.m0"]], "n (micromagneticdata.abstractdrive property)": [[67, "micromagneticdata.AbstractDrive.n"]], "register_callback() (micromagneticdata.abstractdrive method)": [[67, "micromagneticdata.AbstractDrive.register_callback"]], "table (micromagneticdata.abstractdrive property)": [[67, "micromagneticdata.AbstractDrive.table"]], "to_xarray() (micromagneticdata.abstractdrive method)": [[67, "micromagneticdata.AbstractDrive.to_xarray"]], "x (micromagneticdata.abstractdrive property)": [[67, "micromagneticdata.AbstractDrive.x"]], "combineddrive (class in micromagneticdata)": [[68, "micromagneticdata.CombinedDrive"]], "__lshift__() (micromagneticdata.combineddrive method)": [[68, "micromagneticdata.CombinedDrive.__lshift__"]], "__repr__() (micromagneticdata.combineddrive method)": [[68, "micromagneticdata.CombinedDrive.__repr__"]], "info (micromagneticdata.combineddrive property)": [[68, "micromagneticdata.CombinedDrive.info"]], "register_callback() (micromagneticdata.combineddrive method)": [[68, "micromagneticdata.CombinedDrive.register_callback"]], "table (micromagneticdata.combineddrive property)": [[68, "micromagneticdata.CombinedDrive.table"]], "x (micromagneticdata.combineddrive property)": [[68, "micromagneticdata.CombinedDrive.x"]], "data (class in micromagneticdata)": [[69, "micromagneticdata.Data"]], "__getitem__() (micromagneticdata.data method)": [[69, "micromagneticdata.Data.__getitem__"]], "__iter__() (micromagneticdata.data method)": [[69, "micromagneticdata.Data.__iter__"]], "__repr__() (micromagneticdata.data method)": [[69, "micromagneticdata.Data.__repr__"]], "info (micromagneticdata.data property)": [[69, "micromagneticdata.Data.info"]], "n (micromagneticdata.data property)": [[69, "micromagneticdata.Data.n"]], "selector() (micromagneticdata.data method)": [[69, "micromagneticdata.Data.selector"]], "drive (class in micromagneticdata)": [[70, "micromagneticdata.Drive"]], "__getitem__() (micromagneticdata.drive method)": [[70, "micromagneticdata.Drive.__getitem__"]], "__lshift__() (micromagneticdata.drive method)": [[70, "micromagneticdata.Drive.__lshift__"]], "__new__() (micromagneticdata.drive static method)": [[70, "micromagneticdata.Drive.__new__"]], "calculator_script (micromagneticdata.drive property)": [[70, "micromagneticdata.Drive.calculator_script"]], "info (micromagneticdata.drive property)": [[70, "micromagneticdata.Drive.info"]], "ovf2vtk() (micromagneticdata.drive method)": [[70, "micromagneticdata.Drive.ovf2vtk"]], "register_callback() (micromagneticdata.drive method)": [[70, "micromagneticdata.Drive.register_callback"]], "slider() (micromagneticdata.drive method)": [[70, "micromagneticdata.Drive.slider"]], "table (micromagneticdata.drive property)": [[70, "micromagneticdata.Drive.table"]], "use_cache (micromagneticdata.drive property)": [[70, "micromagneticdata.Drive.use_cache"]], "mumax3drive (class in micromagneticdata)": [[71, "micromagneticdata.Mumax3Drive"]], "__repr__() (micromagneticdata.mumax3drive method)": [[71, "micromagneticdata.Mumax3Drive.__repr__"]], "calculator_script (micromagneticdata.mumax3drive property)": [[71, "micromagneticdata.Mumax3Drive.calculator_script"]], "x (micromagneticdata.mumax3drive property)": [[71, "micromagneticdata.Mumax3Drive.x"]], "oommfdrive (class in micromagneticdata)": [[72, "micromagneticdata.OOMMFDrive"]], "__repr__() (micromagneticdata.oommfdrive method)": [[72, "micromagneticdata.OOMMFDrive.__repr__"]], "calculator_script (micromagneticdata.oommfdrive property)": [[72, "micromagneticdata.OOMMFDrive.calculator_script"]], "x (micromagneticdata.oommfdrive property)": [[72, "micromagneticdata.OOMMFDrive.x"]], "test() (in module micromagneticdata)": [[73, "micromagneticdata.test"]], "micromagneticmodel": [[74, "module-micromagneticmodel"]], "cubicanisotropy (class in micromagneticmodel)": [[75, "micromagneticmodel.CubicAnisotropy"]], "dmi (class in micromagneticmodel)": [[76, "micromagneticmodel.DMI"]], "damping (class in micromagneticmodel)": [[77, "micromagneticmodel.Damping"]], "demag (class in micromagneticmodel)": [[78, "micromagneticmodel.Demag"]], "driver (class in micromagneticmodel)": [[79, "micromagneticmodel.Driver"]], "drive() (micromagneticmodel.driver method)": [[79, "micromagneticmodel.Driver.drive"]], "dynamics (class in micromagneticmodel)": [[80, "micromagneticmodel.Dynamics"]], "dynamicsterm (class in micromagneticmodel)": [[81, "micromagneticmodel.DynamicsTerm"]], "energy (class in micromagneticmodel)": [[82, "micromagneticmodel.Energy"]], "energyterm (class in micromagneticmodel)": [[83, "micromagneticmodel.EnergyTerm"]], "evolver (class in micromagneticmodel)": [[84, "micromagneticmodel.Evolver"]], "exchange (class in micromagneticmodel)": [[85, "micromagneticmodel.Exchange"]], "externaldriver (class in micromagneticmodel)": [[86, "micromagneticmodel.ExternalDriver"]], "drive() (micromagneticmodel.externaldriver method)": [[86, "micromagneticmodel.ExternalDriver.drive"]], "drive_kwargs_setup() (micromagneticmodel.externaldriver method)": [[86, "micromagneticmodel.ExternalDriver.drive_kwargs_setup"]], "schedule() (micromagneticmodel.externaldriver method)": [[86, "micromagneticmodel.ExternalDriver.schedule"]], "schedule_kwargs_setup() (micromagneticmodel.externaldriver method)": [[86, "micromagneticmodel.ExternalDriver.schedule_kwargs_setup"]], "externalrunner (class in micromagneticmodel)": [[87, "micromagneticmodel.ExternalRunner"]], "call() (micromagneticmodel.externalrunner method)": [[87, "micromagneticmodel.ExternalRunner.call"]], "package_name (micromagneticmodel.externalrunner property)": [[87, "micromagneticmodel.ExternalRunner.package_name"]], "magnetoelastic (class in micromagneticmodel)": [[88, "micromagneticmodel.MagnetoElastic"]], "precession (class in micromagneticmodel)": [[89, "micromagneticmodel.Precession"]], "rkky (class in micromagneticmodel)": [[90, "micromagneticmodel.RKKY"]], "slonczewski (class in micromagneticmodel)": [[91, "micromagneticmodel.Slonczewski"]], "system (class in micromagneticmodel)": [[92, "micromagneticmodel.System"]], "__repr__() (micromagneticmodel.system method)": [[92, "micromagneticmodel.System.__repr__"]], "dynamics (micromagneticmodel.system property)": [[92, "micromagneticmodel.System.dynamics"]], "energy (micromagneticmodel.system property)": [[92, "micromagneticmodel.System.energy"]], "uniaxialanisotropy (class in micromagneticmodel)": [[93, "micromagneticmodel.UniaxialAnisotropy"]], "zeeman (class in micromagneticmodel)": [[94, "micromagneticmodel.Zeeman"]], "zhangli (class in micromagneticmodel)": [[95, "micromagneticmodel.ZhangLi"]], "micromagneticmodel.abstract": [[96, "module-micromagneticmodel.abstract"]], "abstract (class in micromagneticmodel.abstract)": [[97, "micromagneticmodel.abstract.Abstract"]], "__iter__() (micromagneticmodel.abstract.abstract method)": [[97, "micromagneticmodel.abstract.Abstract.__iter__"]], "__repr__() (micromagneticmodel.abstract.abstract method)": [[97, "micromagneticmodel.abstract.Abstract.__repr__"]], "name (micromagneticmodel.abstract.abstract property)": [[97, "micromagneticmodel.abstract.Abstract.name"]], "container (class in micromagneticmodel.abstract)": [[98, "micromagneticmodel.abstract.Container"]], "__add__() (micromagneticmodel.abstract.container method)": [[98, "micromagneticmodel.abstract.Container.__add__"]], "__contains__() (micromagneticmodel.abstract.container method)": [[98, "micromagneticmodel.abstract.Container.__contains__"]], "__dir__() (micromagneticmodel.abstract.container method)": [[98, "micromagneticmodel.abstract.Container.__dir__"]], "__eq__() (micromagneticmodel.abstract.container method)": [[98, "micromagneticmodel.abstract.Container.__eq__"]], "__getattr__() (micromagneticmodel.abstract.container method)": [[98, "micromagneticmodel.abstract.Container.__getattr__"]], "__getitem__() (micromagneticmodel.abstract.container method)": [[98, "micromagneticmodel.abstract.Container.__getitem__"]], "__hash__ (micromagneticmodel.abstract.container attribute)": [[98, "micromagneticmodel.abstract.Container.__hash__"]], "__iter__() (micromagneticmodel.abstract.container method)": [[98, "micromagneticmodel.abstract.Container.__iter__"]], "__len__() (micromagneticmodel.abstract.container method)": [[98, "micromagneticmodel.abstract.Container.__len__"]], "__repr__() (micromagneticmodel.abstract.container method)": [[98, "micromagneticmodel.abstract.Container.__repr__"]], "__sub__() (micromagneticmodel.abstract.container method)": [[98, "micromagneticmodel.abstract.Container.__sub__"]], "get() (micromagneticmodel.abstract.container method)": [[98, "micromagneticmodel.abstract.Container.get"]], "term (class in micromagneticmodel.abstract)": [[99, "micromagneticmodel.abstract.Term"]], "__add__() (micromagneticmodel.abstract.term method)": [[99, "micromagneticmodel.abstract.Term.__add__"]], "__eq__() (micromagneticmodel.abstract.term method)": [[99, "micromagneticmodel.abstract.Term.__eq__"]], "__hash__ (micromagneticmodel.abstract.term attribute)": [[99, "micromagneticmodel.abstract.Term.__hash__"]], "micromagneticmodel.consts": [[100, "module-micromagneticmodel.consts"]], "e (in module micromagneticmodel.consts)": [[101, "micromagneticmodel.consts.e"]], "g (in module micromagneticmodel.consts)": [[102, "micromagneticmodel.consts.g"]], "gamma (in module micromagneticmodel.consts)": [[103, "micromagneticmodel.consts.gamma"]], "gamma0 (in module micromagneticmodel.consts)": [[104, "micromagneticmodel.consts.gamma0"]], "h (in module micromagneticmodel.consts)": [[105, "micromagneticmodel.consts.h"]], "hbar (in module micromagneticmodel.consts)": [[106, "micromagneticmodel.consts.hbar"]], "kb (in module micromagneticmodel.consts)": [[107, "micromagneticmodel.consts.kB"]], "me (in module micromagneticmodel.consts)": [[108, "micromagneticmodel.consts.me"]], "mu0 (in module micromagneticmodel.consts)": [[109, "micromagneticmodel.consts.mu0"]], "mub (in module micromagneticmodel.consts)": [[110, "micromagneticmodel.consts.muB"]], "micromagneticmodel.examples": [[111, "module-micromagneticmodel.examples"]], "macrospin() (in module micromagneticmodel.examples)": [[112, "micromagneticmodel.examples.macrospin"]], "test() (in module micromagneticmodel)": [[113, "micromagneticmodel.test"]], "micromagnetictests": [[114, "module-micromagnetictests"]], "micromagnetictests.calculatortests": [[115, "module-micromagnetictests.calculatortests"]], "testcompute (class in micromagnetictests.calculatortests)": [[116, "micromagnetictests.calculatortests.TestCompute"]], "testcubicanisotropy (class in micromagnetictests.calculatortests)": [[117, "micromagnetictests.calculatortests.TestCubicAnisotropy"]], "testdmi (class in micromagnetictests.calculatortests)": [[118, "micromagnetictests.calculatortests.TestDMI"]], "testdamping (class in micromagnetictests.calculatortests)": [[119, "micromagnetictests.calculatortests.TestDamping"]], "testdemag (class in micromagnetictests.calculatortests)": [[120, "micromagnetictests.calculatortests.TestDemag"]], "testdynamics (class in micromagnetictests.calculatortests)": [[121, "micromagnetictests.calculatortests.TestDynamics"]], "testenergy (class in micromagnetictests.calculatortests)": [[122, "micromagnetictests.calculatortests.TestEnergy"]], "testexchange (class in micromagnetictests.calculatortests)": [[123, "micromagnetictests.calculatortests.TestExchange"]], "testfixedsubregions (class in micromagnetictests.calculatortests)": [[124, "micromagnetictests.calculatortests.TestFixedSubregions"]], "testhysteresisdriver (class in micromagnetictests.calculatortests)": [[125, "micromagnetictests.calculatortests.TestHysteresisDriver"]], "testmesh (class in micromagnetictests.calculatortests)": [[126, "micromagnetictests.calculatortests.TestMesh"]], "testmindriver (class in micromagnetictests.calculatortests)": [[127, "micromagnetictests.calculatortests.TestMinDriver"]], "testprecession (class in micromagnetictests.calculatortests)": [[128, "micromagnetictests.calculatortests.TestPrecession"]], "testrkky (class in micromagnetictests.calculatortests)": [[129, "micromagnetictests.calculatortests.TestRKKY"]], "testslonczewski (class in micromagnetictests.calculatortests)": [[130, "micromagnetictests.calculatortests.TestSlonczewski"]], "testthreads (class in micromagnetictests.calculatortests)": [[131, "micromagnetictests.calculatortests.TestThreads"]], "testtimedriver (class in micromagnetictests.calculatortests)": [[132, "micromagnetictests.calculatortests.TestTimeDriver"]], "testuniaxialanisotropy (class in micromagnetictests.calculatortests)": [[133, "micromagnetictests.calculatortests.TestUniaxialAnisotropy"]], "testzeeman (class in micromagnetictests.calculatortests)": [[134, "micromagnetictests.calculatortests.TestZeeman"]], "testzhangli (class in micromagnetictests.calculatortests)": [[135, "micromagnetictests.calculatortests.TestZhangLi"]], "test_dirname() (in module micromagnetictests.calculatortests)": [[136, "micromagnetictests.calculatortests.test_dirname"]], "test_format() (in module micromagnetictests.calculatortests)": [[137, "micromagnetictests.calculatortests.test_format"]], "test_info_file() (in module micromagnetictests.calculatortests)": [[138, "micromagnetictests.calculatortests.test_info_file"]], "test_multiple_drives() (in module micromagnetictests.calculatortests)": [[139, "micromagnetictests.calculatortests.test_multiple_drives"]], "test_outputstep() (in module micromagnetictests.calculatortests)": [[140, "micromagnetictests.calculatortests.test_outputstep"]], "test_schedule() (in module micromagnetictests.calculatortests)": [[141, "micromagnetictests.calculatortests.test_schedule"]], "test_skyrmion() (in module micromagnetictests.calculatortests)": [[142, "micromagnetictests.calculatortests.test_skyrmion"]], "test_stdprob3() (in module micromagnetictests.calculatortests)": [[143, "micromagnetictests.calculatortests.test_stdprob3"]], "test_stdprob4() (in module micromagnetictests.calculatortests)": [[144, "micromagnetictests.calculatortests.test_stdprob4"]], "test_stdprob5() (in module micromagnetictests.calculatortests)": [[145, "micromagnetictests.calculatortests.test_stdprob5"]], "get_tests() (in module micromagnetictests)": [[146, "micromagnetictests.get_tests"]], "test() (in module micromagnetictests)": [[147, "micromagnetictests.test"]], "oommfc": [[148, "module-oommfc"]], "cgevolver (class in oommfc)": [[149, "oommfc.CGEvolver"]], "driver (class in oommfc)": [[150, "oommfc.Driver"]], "drive_kwargs_setup() (oommfc.driver method)": [[150, "oommfc.Driver.drive_kwargs_setup"]], "schedule_kwargs_setup() (oommfc.driver method)": [[150, "oommfc.Driver.schedule_kwargs_setup"]], "write_mif() (oommfc.driver method)": [[150, "oommfc.Driver.write_mif"]], "eulerevolver (class in oommfc)": [[151, "oommfc.EulerEvolver"]], "hysteresisdriver (class in oommfc)": [[152, "oommfc.HysteresisDriver"]], "mindriver (class in oommfc)": [[153, "oommfc.MinDriver"]], "rungekuttaevolver (class in oommfc)": [[154, "oommfc.RungeKuttaEvolver"]], "spintevolver (class in oommfc)": [[155, "oommfc.SpinTEvolver"]], "spinxferevolver (class in oommfc)": [[156, "oommfc.SpinXferEvolver"]], "timedriver (class in oommfc)": [[157, "oommfc.TimeDriver"]], "uhh_thetaevolver (class in oommfc)": [[158, "oommfc.UHH_ThetaEvolver"]], "xf_thermheunevolver (class in oommfc)": [[159, "oommfc.Xf_ThermHeunEvolver"]], "xf_thermspinxferevolver (class in oommfc)": [[160, "oommfc.Xf_ThermSpinXferEvolver"]], "compute() (in module oommfc)": [[161, "oommfc.compute"]], "delete() (in module oommfc)": [[162, "oommfc.delete"]], "oommfc.oommf": [[163, "module-oommfc.oommf"]], "dockeroommfrunner (class in oommfc.oommf)": [[164, "oommfc.oommf.DockerOOMMFRunner"]], "__repr__() (oommfc.oommf.dockeroommfrunner method)": [[164, "oommfc.oommf.DockerOOMMFRunner.__repr__"]], "errors() (oommfc.oommf.dockeroommfrunner method)": [[164, "oommfc.oommf.DockerOOMMFRunner.errors"]], "exeoommfrunner (class in oommfc.oommf)": [[165, "oommfc.oommf.ExeOOMMFRunner"]], "__repr__() (oommfc.oommf.exeoommfrunner method)": [[165, "oommfc.oommf.ExeOOMMFRunner.__repr__"]], "errors() (oommfc.oommf.exeoommfrunner method)": [[165, "oommfc.oommf.ExeOOMMFRunner.errors"]], "oommfrunner (class in oommfc.oommf)": [[166, "oommfc.oommf.OOMMFRunner"]], "__del__() (oommfc.oommf.oommfrunner method)": [[166, "oommfc.oommf.OOMMFRunner.__del__"]], "__repr__() (oommfc.oommf.oommfrunner method)": [[166, "oommfc.oommf.OOMMFRunner.__repr__"]], "errors() (oommfc.oommf.oommfrunner method)": [[166, "oommfc.oommf.OOMMFRunner.errors"]], "package_name (oommfc.oommf.oommfrunner property)": [[166, "oommfc.oommf.OOMMFRunner.package_name"]], "platform (oommfc.oommf.oommfrunner property)": [[166, "oommfc.oommf.OOMMFRunner.platform"]], "status (oommfc.oommf.oommfrunner property)": [[166, "oommfc.oommf.OOMMFRunner.status"]], "version (oommfc.oommf.oommfrunner property)": [[166, "oommfc.oommf.OOMMFRunner.version"]], "runner (class in oommfc.oommf)": [[167, "oommfc.oommf.Runner"]], "__repr__() (oommfc.oommf.runner method)": [[167, "oommfc.oommf.Runner.__repr__"]], "autoselect_runner() (oommfc.oommf.runner method)": [[167, "oommfc.oommf.Runner.autoselect_runner"]], "runner (oommfc.oommf.runner property)": [[167, "oommfc.oommf.Runner.runner"]], "tcloommfrunner (class in oommfc.oommf)": [[168, "oommfc.oommf.TclOOMMFRunner"]], "__repr__() (oommfc.oommf.tcloommfrunner method)": [[168, "oommfc.oommf.TclOOMMFRunner.__repr__"]], "errors() (oommfc.oommf.tcloommfrunner method)": [[168, "oommfc.oommf.TclOOMMFRunner.errors"]], "overhead() (in module oommfc.oommf)": [[169, "oommfc.oommf.overhead"]], "runner (in module oommfc)": [[170, "oommfc.runner"]], "test() (in module oommfc)": [[171, "oommfc.test"]], "test_docker() (in module oommfc)": [[172, "oommfc.test_docker"]], "ubermag": [[173, "module-ubermag"]], "debug_info() (in module ubermag)": [[174, "ubermag.debug_info"]], "test() (in module ubermag)": [[175, "ubermag.test"]], "ubermagtable": [[176, "module-ubermagtable"]], "table (class in ubermagtable)": [[177, "ubermagtable.Table"]], "__lshift__() (ubermagtable.table method)": [[177, "ubermagtable.Table.__lshift__"]], "__repr__() (ubermagtable.table method)": [[177, "ubermagtable.Table.__repr__"]], "apply() (ubermagtable.table method)": [[177, "ubermagtable.Table.apply"]], "dx (ubermagtable.table property)": [[177, "ubermagtable.Table.dx"]], "fromfile() (ubermagtable.table class method)": [[177, "ubermagtable.Table.fromfile"]], "irfft() (ubermagtable.table method)": [[177, "ubermagtable.Table.irfft"]], "mpl() (ubermagtable.table method)": [[177, "ubermagtable.Table.mpl"]], "rfft() (ubermagtable.table method)": [[177, "ubermagtable.Table.rfft"]], "selector() (ubermagtable.table method)": [[177, "ubermagtable.Table.selector"]], "slider() (ubermagtable.table method)": [[177, "ubermagtable.Table.slider"]], "x (ubermagtable.table property)": [[177, "ubermagtable.Table.x"]], "xmax (ubermagtable.table property)": [[177, "ubermagtable.Table.xmax"]], "y (ubermagtable.table property)": [[177, "ubermagtable.Table.y"]], "interact() (in module ubermagtable)": [[178, "ubermagtable.interact"]], "test() (in module ubermagtable)": [[179, "ubermagtable.test"]], "ubermagtable.util": [[180, "module-ubermagtable.util"]], "columns() (in module ubermagtable.util)": [[181, "ubermagtable.util.columns"]], "data() (in module ubermagtable.util)": [[182, "ubermagtable.util.data"]], "units() (in module ubermagtable.util)": [[183, "ubermagtable.util.units"]], "ubermagutil": [[184, "module-ubermagutil"]], "changedir() (in module ubermagutil)": [[185, "ubermagutil.changedir"]], "hysteresis_values() (in module ubermagutil)": [[186, "ubermagutil.hysteresis_values"]], "inherit_docs() (in module ubermagutil)": [[187, "ubermagutil.inherit_docs"]], "setup_logging() (in module ubermagutil)": [[188, "ubermagutil.setup_logging"]], "test() (in module ubermagutil)": [[189, "ubermagutil.test"]], "ubermagutil.typesystem": [[190, "module-ubermagutil.typesystem"]], "descriptor (class in ubermagutil.typesystem)": [[191, "ubermagutil.typesystem.Descriptor"]], "__delete__() (ubermagutil.typesystem.descriptor method)": [[191, "ubermagutil.typesystem.Descriptor.__delete__"]], "__set__() (ubermagutil.typesystem.descriptor method)": [[191, "ubermagutil.typesystem.Descriptor.__set__"]], "dictionary (class in ubermagutil.typesystem)": [[192, "ubermagutil.typesystem.Dictionary"]], "__set__() (ubermagutil.typesystem.dictionary method)": [[192, "ubermagutil.typesystem.Dictionary.__set__"]], "name (class in ubermagutil.typesystem)": [[193, "ubermagutil.typesystem.Name"]], "__set__() (ubermagutil.typesystem.name method)": [[193, "ubermagutil.typesystem.Name.__set__"]], "parameter (class in ubermagutil.typesystem)": [[194, "ubermagutil.typesystem.Parameter"]], "__set__() (ubermagutil.typesystem.parameter method)": [[194, "ubermagutil.typesystem.Parameter.__set__"]], "scalar (class in ubermagutil.typesystem)": [[195, "ubermagutil.typesystem.Scalar"]], "__set__() (ubermagutil.typesystem.scalar method)": [[195, "ubermagutil.typesystem.Scalar.__set__"]], "subset (class in ubermagutil.typesystem)": [[196, "ubermagutil.typesystem.Subset"]], "__set__() (ubermagutil.typesystem.subset method)": [[196, "ubermagutil.typesystem.Subset.__set__"]], "typed (class in ubermagutil.typesystem)": [[197, "ubermagutil.typesystem.Typed"]], "__set__() (ubermagutil.typesystem.typed method)": [[197, "ubermagutil.typesystem.Typed.__set__"]], "vector (class in ubermagutil.typesystem)": [[198, "ubermagutil.typesystem.Vector"]], "__set__() (ubermagutil.typesystem.vector method)": [[198, "ubermagutil.typesystem.Vector.__set__"]], "typesystem() (in module ubermagutil.typesystem)": [[199, "ubermagutil.typesystem.typesystem"]], "ubermagutil.units": [[200, "module-ubermagutil.units"]], "si_max_multiplier() (in module ubermagutil.units)": [[201, "ubermagutil.units.si_max_multiplier"]], "si_multiplier() (in module ubermagutil.units)": [[202, "ubermagutil.units.si_multiplier"]]}})