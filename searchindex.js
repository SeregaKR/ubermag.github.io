Search.setIndex({"docnames": ["api/_autosummary/discretisedfield", "api/_autosummary/discretisedfield.DValue", "api/_autosummary/discretisedfield.Field", "api/_autosummary/discretisedfield.FieldRotator", "api/_autosummary/discretisedfield.Line", "api/_autosummary/discretisedfield.Mesh", "api/_autosummary/discretisedfield.Region", "api/_autosummary/discretisedfield.integral", "api/_autosummary/discretisedfield.interact", "api/_autosummary/discretisedfield.io", "api/_autosummary/discretisedfield.io.field_from_hdf5", "api/_autosummary/discretisedfield.io.field_from_ovf", "api/_autosummary/discretisedfield.io.field_from_vtk", "api/_autosummary/discretisedfield.io.field_to_hdf5", "api/_autosummary/discretisedfield.io.field_to_ovf", "api/_autosummary/discretisedfield.io.field_to_vtk", "api/_autosummary/discretisedfield.io.ovf2vtk", "api/_autosummary/discretisedfield.io.ovf2vtk.ovf2vtk", "api/_autosummary/discretisedfield.plotting", "api/_autosummary/discretisedfield.plotting.Hv", "api/_autosummary/discretisedfield.plotting.K3dField", "api/_autosummary/discretisedfield.plotting.K3dMesh", "api/_autosummary/discretisedfield.plotting.K3dRegion", "api/_autosummary/discretisedfield.plotting.MplField", "api/_autosummary/discretisedfield.plotting.MplMesh", "api/_autosummary/discretisedfield.plotting.MplRegion", "api/_autosummary/discretisedfield.plotting.add_colorwheel", "api/_autosummary/discretisedfield.test", "api/_autosummary/discretisedfield.tools", "api/_autosummary/discretisedfield.tools.count_bps", "api/_autosummary/discretisedfield.tools.count_large_cell_angle_regions", "api/_autosummary/discretisedfield.tools.demag_field", "api/_autosummary/discretisedfield.tools.demag_tensor", "api/_autosummary/discretisedfield.tools.emergent_magnetic_field", "api/_autosummary/discretisedfield.tools.max_neigbouring_cell_angle", "api/_autosummary/discretisedfield.tools.neigbouring_cell_angle", "api/_autosummary/discretisedfield.tools.topological_charge", "api/_autosummary/discretisedfield.tools.topological_charge_density", "api/_autosummary/mag2exp", "api/_autosummary/mag2exp.ltem", "api/_autosummary/mag2exp.ltem.defocus_image", "api/_autosummary/mag2exp.ltem.integrated_magnetic_flux_density", "api/_autosummary/mag2exp.ltem.phase", "api/_autosummary/mag2exp.ltem.relativistic_wavelength", "api/_autosummary/mag2exp.magnetometry", "api/_autosummary/mag2exp.magnetometry.magnetisation", "api/_autosummary/mag2exp.magnetometry.torque", "api/_autosummary/mag2exp.mfm", "api/_autosummary/mag2exp.mfm.phase_shift", "api/_autosummary/mag2exp.quick_plots", "api/_autosummary/mag2exp.quick_plots.ltem_defocus", "api/_autosummary/mag2exp.quick_plots.ltem_ft_phase", "api/_autosummary/mag2exp.quick_plots.ltem_integrated_mfd", "api/_autosummary/mag2exp.quick_plots.ltem_phase", "api/_autosummary/mag2exp.quick_plots.mfm_phase_shift", "api/_autosummary/mag2exp.quick_plots.sans_chiral_function", "api/_autosummary/mag2exp.quick_plots.sans_cross_section", "api/_autosummary/mag2exp.quick_plots.saxs", "api/_autosummary/mag2exp.quick_plots.x_ray_holography", "api/_autosummary/mag2exp.sans", "api/_autosummary/mag2exp.sans.chiral_function", "api/_autosummary/mag2exp.sans.cross_section", "api/_autosummary/mag2exp.test", "api/_autosummary/mag2exp.x_ray", "api/_autosummary/mag2exp.x_ray.holography", "api/_autosummary/mag2exp.x_ray.saxs", "api/_autosummary/micromagneticdata", "api/_autosummary/micromagneticdata.AbstractDrive", "api/_autosummary/micromagneticdata.CombinedDrive", "api/_autosummary/micromagneticdata.Data", "api/_autosummary/micromagneticdata.Drive", "api/_autosummary/micromagneticdata.Mumax3Drive", "api/_autosummary/micromagneticdata.OOMMFDrive", "api/_autosummary/micromagneticdata.test", "api/_autosummary/micromagneticmodel", "api/_autosummary/micromagneticmodel.CubicAnisotropy", "api/_autosummary/micromagneticmodel.DMI", "api/_autosummary/micromagneticmodel.Damping", "api/_autosummary/micromagneticmodel.Demag", "api/_autosummary/micromagneticmodel.Driver", "api/_autosummary/micromagneticmodel.Dynamics", "api/_autosummary/micromagneticmodel.DynamicsTerm", "api/_autosummary/micromagneticmodel.Energy", "api/_autosummary/micromagneticmodel.EnergyTerm", "api/_autosummary/micromagneticmodel.Evolver", "api/_autosummary/micromagneticmodel.Exchange", "api/_autosummary/micromagneticmodel.ExternalDriver", "api/_autosummary/micromagneticmodel.ExternalRunner", "api/_autosummary/micromagneticmodel.MagnetoElastic", "api/_autosummary/micromagneticmodel.Precession", "api/_autosummary/micromagneticmodel.RKKY", "api/_autosummary/micromagneticmodel.Slonczewski", "api/_autosummary/micromagneticmodel.System", "api/_autosummary/micromagneticmodel.UniaxialAnisotropy", "api/_autosummary/micromagneticmodel.Zeeman", "api/_autosummary/micromagneticmodel.ZhangLi", "api/_autosummary/micromagneticmodel.abstract", "api/_autosummary/micromagneticmodel.abstract.Abstract", "api/_autosummary/micromagneticmodel.abstract.Container", "api/_autosummary/micromagneticmodel.abstract.Term", "api/_autosummary/micromagneticmodel.consts", "api/_autosummary/micromagneticmodel.consts.e", "api/_autosummary/micromagneticmodel.consts.g", "api/_autosummary/micromagneticmodel.consts.gamma", "api/_autosummary/micromagneticmodel.consts.gamma0", "api/_autosummary/micromagneticmodel.consts.h", "api/_autosummary/micromagneticmodel.consts.hbar", "api/_autosummary/micromagneticmodel.consts.kB", "api/_autosummary/micromagneticmodel.consts.me", "api/_autosummary/micromagneticmodel.consts.mu0", "api/_autosummary/micromagneticmodel.consts.muB", "api/_autosummary/micromagneticmodel.examples", "api/_autosummary/micromagneticmodel.examples.macrospin", "api/_autosummary/micromagneticmodel.test", "api/_autosummary/micromagnetictests", "api/_autosummary/micromagnetictests.calculatortests", "api/_autosummary/micromagnetictests.calculatortests.TestCompute", "api/_autosummary/micromagnetictests.calculatortests.TestCubicAnisotropy", "api/_autosummary/micromagnetictests.calculatortests.TestDMI", "api/_autosummary/micromagnetictests.calculatortests.TestDamping", "api/_autosummary/micromagnetictests.calculatortests.TestDemag", "api/_autosummary/micromagnetictests.calculatortests.TestDynamics", "api/_autosummary/micromagnetictests.calculatortests.TestEnergy", "api/_autosummary/micromagnetictests.calculatortests.TestExchange", "api/_autosummary/micromagnetictests.calculatortests.TestFixedSubregions", "api/_autosummary/micromagnetictests.calculatortests.TestHysteresisDriver", "api/_autosummary/micromagnetictests.calculatortests.TestMesh", "api/_autosummary/micromagnetictests.calculatortests.TestMinDriver", "api/_autosummary/micromagnetictests.calculatortests.TestPrecession", "api/_autosummary/micromagnetictests.calculatortests.TestRKKY", "api/_autosummary/micromagnetictests.calculatortests.TestSlonczewski", "api/_autosummary/micromagnetictests.calculatortests.TestThreads", "api/_autosummary/micromagnetictests.calculatortests.TestTimeDriver", "api/_autosummary/micromagnetictests.calculatortests.TestUniaxialAnisotropy", "api/_autosummary/micromagnetictests.calculatortests.TestZeeman", "api/_autosummary/micromagnetictests.calculatortests.TestZhangLi", "api/_autosummary/micromagnetictests.calculatortests.test_dirname", "api/_autosummary/micromagnetictests.calculatortests.test_format", "api/_autosummary/micromagnetictests.calculatortests.test_info_file", "api/_autosummary/micromagnetictests.calculatortests.test_multiple_drives", "api/_autosummary/micromagnetictests.calculatortests.test_outputstep", "api/_autosummary/micromagnetictests.calculatortests.test_schedule", "api/_autosummary/micromagnetictests.calculatortests.test_skyrmion", "api/_autosummary/micromagnetictests.calculatortests.test_stdprob3", "api/_autosummary/micromagnetictests.calculatortests.test_stdprob4", "api/_autosummary/micromagnetictests.calculatortests.test_stdprob5", "api/_autosummary/micromagnetictests.get_tests", "api/_autosummary/micromagnetictests.test", "api/_autosummary/mumax3c", "api/_autosummary/mumax3c.MinDriver", "api/_autosummary/mumax3c.RelaxDriver", "api/_autosummary/mumax3c.TimeDriver", "api/_autosummary/mumax3c.delete", "api/_autosummary/mumax3c.mumax3", "api/_autosummary/mumax3c.mumax3.ExeMumax3Runner", "api/_autosummary/mumax3c.mumax3.Mumax3Runner", "api/_autosummary/mumax3c.mumax3.Runner", "api/_autosummary/mumax3c.mumax3.overhead", "api/_autosummary/mumax3c.runner", "api/_autosummary/mumax3c.test", "api/_autosummary/mumax3c.test_docker", "api/_autosummary/oommfc", "api/_autosummary/oommfc.CGEvolver", "api/_autosummary/oommfc.Driver", "api/_autosummary/oommfc.EulerEvolver", "api/_autosummary/oommfc.HysteresisDriver", "api/_autosummary/oommfc.MinDriver", "api/_autosummary/oommfc.RungeKuttaEvolver", "api/_autosummary/oommfc.SpinTEvolver", "api/_autosummary/oommfc.SpinXferEvolver", "api/_autosummary/oommfc.TimeDriver", "api/_autosummary/oommfc.UHH_ThetaEvolver", "api/_autosummary/oommfc.Xf_ThermHeunEvolver", "api/_autosummary/oommfc.Xf_ThermSpinXferEvolver", "api/_autosummary/oommfc.compute", "api/_autosummary/oommfc.delete", "api/_autosummary/oommfc.oommf", "api/_autosummary/oommfc.oommf.DockerOOMMFRunner", "api/_autosummary/oommfc.oommf.ExeOOMMFRunner", "api/_autosummary/oommfc.oommf.OOMMFRunner", "api/_autosummary/oommfc.oommf.Runner", "api/_autosummary/oommfc.oommf.TclOOMMFRunner", "api/_autosummary/oommfc.oommf.overhead", "api/_autosummary/oommfc.runner", "api/_autosummary/oommfc.test", "api/_autosummary/oommfc.test_docker", "api/_autosummary/ubermag", "api/_autosummary/ubermag.test", "api/_autosummary/ubermagtable", "api/_autosummary/ubermagtable.Table", "api/_autosummary/ubermagtable.interact", "api/_autosummary/ubermagtable.test", "api/_autosummary/ubermagtable.util", "api/_autosummary/ubermagtable.util.columns", "api/_autosummary/ubermagtable.util.data", "api/_autosummary/ubermagtable.util.units", "api/_autosummary/ubermagutil", "api/_autosummary/ubermagutil.changedir", "api/_autosummary/ubermagutil.hysteresis_values", "api/_autosummary/ubermagutil.inherit_docs", "api/_autosummary/ubermagutil.setup_logging", "api/_autosummary/ubermagutil.test", "api/_autosummary/ubermagutil.typesystem", "api/_autosummary/ubermagutil.typesystem.Descriptor", "api/_autosummary/ubermagutil.typesystem.Dictionary", "api/_autosummary/ubermagutil.typesystem.Name", "api/_autosummary/ubermagutil.typesystem.Parameter", "api/_autosummary/ubermagutil.typesystem.Scalar", "api/_autosummary/ubermagutil.typesystem.Subset", "api/_autosummary/ubermagutil.typesystem.Typed", "api/_autosummary/ubermagutil.typesystem.Vector", "api/_autosummary/ubermagutil.typesystem.typesystem", "api/_autosummary/ubermagutil.units", "api/_autosummary/ubermagutil.units.si_max_multiplier", "api/_autosummary/ubermagutil.units.si_multiplier", "api/index", "changelog", "contributing", "demo", "documentation", "documentation/compatibility", "documentation/discretisedfield", "documentation/index", "documentation/mag2exp", "documentation/micromagneticdata", "documentation/micromagneticmodel", "documentation/micromagnetictests", "documentation/mumax3c", "documentation/notebooks/discretisedfield/field-definition", "documentation/notebooks/discretisedfield/field-holoviews-visualisation", "documentation/notebooks/discretisedfield/field-k3d-visualisation", "documentation/notebooks/discretisedfield/field-matplotlib-visualisation", "documentation/notebooks/discretisedfield/field-normalisation", "documentation/notebooks/discretisedfield/field-operations", "documentation/notebooks/discretisedfield/field-read-write", "documentation/notebooks/discretisedfield/field-rotations", "documentation/notebooks/discretisedfield/field-spatially-varying", "documentation/notebooks/discretisedfield/field-tools", "documentation/notebooks/discretisedfield/line", "documentation/notebooks/discretisedfield/mesh-basics", "documentation/notebooks/discretisedfield/mesh-bc", "documentation/notebooks/discretisedfield/mesh-line-plane", "documentation/notebooks/discretisedfield/mesh-pad", "documentation/notebooks/discretisedfield/mesh-subregions", "documentation/notebooks/discretisedfield/mesh-visualisation", "documentation/notebooks/discretisedfield/mesh-widgets", "documentation/notebooks/discretisedfield/ovf2vtk", "documentation/notebooks/discretisedfield/region-basics", "documentation/notebooks/discretisedfield/region-facing-surfaces", "documentation/notebooks/discretisedfield/region-visualisation", "documentation/notebooks/discretisedfield/xarray-usage", "documentation/notebooks/mag2exp/DC_magnetometry", "documentation/notebooks/mag2exp/Lorentz_TEM", "documentation/notebooks/mag2exp/Magnetic_Force_Microscopy", "documentation/notebooks/mag2exp/Rotations_Lorentz_Microscopy", "documentation/notebooks/mag2exp/SANS", "documentation/notebooks/mag2exp/SAXS", "documentation/notebooks/mag2exp/Torque_magnetometry", "documentation/notebooks/mag2exp/Unit_converter", "documentation/notebooks/mag2exp/X_ray_Holography", "documentation/notebooks/micromagneticdata/documentation", "documentation/notebooks/micromagneticdata/interactive_plotting", "documentation/notebooks/micromagneticmodel/constants", "documentation/notebooks/micromagneticmodel/deriving-dynamics-term", "documentation/notebooks/micromagneticmodel/deriving-energy-term", "documentation/notebooks/micromagneticmodel/dynamics-terms", "documentation/notebooks/micromagneticmodel/energy-terms", "documentation/notebooks/micromagneticmodel/evolver-driver", "documentation/notebooks/micromagneticmodel/same-class-terms", "documentation/notebooks/micromagneticmodel/system", "documentation/notebooks/micromagneticmodel/term-parameters", "documentation/notebooks/micromagnetictests/usage", "documentation/notebooks/oommfc/controlling-default-runner", "documentation/notebooks/oommfc/cubicanisotropy", "documentation/notebooks/oommfc/dirname", "documentation/notebooks/oommfc/dmi", "documentation/notebooks/oommfc/exchange", "documentation/notebooks/oommfc/mindriver-steps", "documentation/notebooks/oommfc/parallel", "documentation/notebooks/oommfc/uniaxialanisotropy", "documentation/notebooks/oommfc/verbosity_levels", "documentation/notebooks/oommfc/zeeman", "documentation/notebooks/ubermag/ubermag-version", "documentation/notebooks/ubermagtable/table-basics", "documentation/notebooks/ubermagtable/table-fft", "documentation/notebooks/ubermagtable/table-interactive-plot", "documentation/notebooks/ubermagtable/table-merge", "documentation/notebooks/ubermagtable/table-visualisation", "documentation/notebooks/ubermagtable/table-widgets", "documentation/notebooks/ubermagutil/constant-attributes", "documentation/notebooks/ubermagutil/hysteresis", "documentation/notebooks/ubermagutil/imposing-typesystem", "documentation/notebooks/ubermagutil/inherit-docs", "documentation/notebooks/ubermagutil/logging", "documentation/notebooks/ubermagutil/otherwise-type", "documentation/notebooks/ubermagutil/parameter-descriptor", "documentation/notebooks/ubermagutil/si-prefix", "documentation/oommfc", "documentation/ubermag", "documentation/ubermagtable", "documentation/ubermagutil", "examples/index", "examples/notebooks/07-tutorial-standard-problem3", "examples/notebooks/08-tutorial-standard-problem4", "examples/notebooks/09-tutorial-standard-problem5", "examples/notebooks/10-tutorial-standard-problem-fmr", "examples/notebooks/11-tutorial-deriving-fields", "examples/notebooks/12-tutorial-stray-field", "examples/notebooks/13-tutorial-skyrmion", "examples/notebooks/choosing-runner", "examples/notebooks/energy-term-computations", "examples/notebooks/field-operations2", "examples/notebooks/finite-temperature", "examples/notebooks/fixed-subregions", "examples/notebooks/hysteresis", "examples/notebooks/multiple-terms", "examples/notebooks/negative-A", "examples/notebooks/periodic-boundary-conditions", "examples/notebooks/rkky", "examples/notebooks/sine-hysteresis", "examples/notebooks/space-time-field", "examples/notebooks/spatially-varying-parameters1", "examples/notebooks/spatially-varying-parameters2", "examples/notebooks/time-dependent-field", "examples/notebooks/time-dependent-field-current", "faq", "getting-started/index", "getting-started/jupyter-basics", "getting-started/notebooks/driving-dw", "getting-started/notebooks/dw-pair-conversion", "getting-started/notebooks/dynamics-equation", "getting-started/notebooks/energy-equation", "getting-started/notebooks/first-ubermag-simulation", "getting-started/notebooks/magnetisation-field", "getting-started/notebooks/python-basics", "help", "index", "installation", "news"], "filenames": ["api/_autosummary/discretisedfield.rst", "api/_autosummary/discretisedfield.DValue.rst", "api/_autosummary/discretisedfield.Field.rst", "api/_autosummary/discretisedfield.FieldRotator.rst", "api/_autosummary/discretisedfield.Line.rst", "api/_autosummary/discretisedfield.Mesh.rst", "api/_autosummary/discretisedfield.Region.rst", "api/_autosummary/discretisedfield.integral.rst", "api/_autosummary/discretisedfield.interact.rst", "api/_autosummary/discretisedfield.io.rst", "api/_autosummary/discretisedfield.io.field_from_hdf5.rst", "api/_autosummary/discretisedfield.io.field_from_ovf.rst", "api/_autosummary/discretisedfield.io.field_from_vtk.rst", "api/_autosummary/discretisedfield.io.field_to_hdf5.rst", "api/_autosummary/discretisedfield.io.field_to_ovf.rst", "api/_autosummary/discretisedfield.io.field_to_vtk.rst", "api/_autosummary/discretisedfield.io.ovf2vtk.rst", "api/_autosummary/discretisedfield.io.ovf2vtk.ovf2vtk.rst", "api/_autosummary/discretisedfield.plotting.rst", "api/_autosummary/discretisedfield.plotting.Hv.rst", "api/_autosummary/discretisedfield.plotting.K3dField.rst", "api/_autosummary/discretisedfield.plotting.K3dMesh.rst", "api/_autosummary/discretisedfield.plotting.K3dRegion.rst", "api/_autosummary/discretisedfield.plotting.MplField.rst", "api/_autosummary/discretisedfield.plotting.MplMesh.rst", "api/_autosummary/discretisedfield.plotting.MplRegion.rst", "api/_autosummary/discretisedfield.plotting.add_colorwheel.rst", "api/_autosummary/discretisedfield.test.rst", "api/_autosummary/discretisedfield.tools.rst", "api/_autosummary/discretisedfield.tools.count_bps.rst", "api/_autosummary/discretisedfield.tools.count_large_cell_angle_regions.rst", "api/_autosummary/discretisedfield.tools.demag_field.rst", "api/_autosummary/discretisedfield.tools.demag_tensor.rst", "api/_autosummary/discretisedfield.tools.emergent_magnetic_field.rst", "api/_autosummary/discretisedfield.tools.max_neigbouring_cell_angle.rst", "api/_autosummary/discretisedfield.tools.neigbouring_cell_angle.rst", "api/_autosummary/discretisedfield.tools.topological_charge.rst", "api/_autosummary/discretisedfield.tools.topological_charge_density.rst", "api/_autosummary/mag2exp.rst", "api/_autosummary/mag2exp.ltem.rst", "api/_autosummary/mag2exp.ltem.defocus_image.rst", "api/_autosummary/mag2exp.ltem.integrated_magnetic_flux_density.rst", "api/_autosummary/mag2exp.ltem.phase.rst", "api/_autosummary/mag2exp.ltem.relativistic_wavelength.rst", "api/_autosummary/mag2exp.magnetometry.rst", "api/_autosummary/mag2exp.magnetometry.magnetisation.rst", "api/_autosummary/mag2exp.magnetometry.torque.rst", "api/_autosummary/mag2exp.mfm.rst", "api/_autosummary/mag2exp.mfm.phase_shift.rst", "api/_autosummary/mag2exp.quick_plots.rst", "api/_autosummary/mag2exp.quick_plots.ltem_defocus.rst", "api/_autosummary/mag2exp.quick_plots.ltem_ft_phase.rst", "api/_autosummary/mag2exp.quick_plots.ltem_integrated_mfd.rst", "api/_autosummary/mag2exp.quick_plots.ltem_phase.rst", "api/_autosummary/mag2exp.quick_plots.mfm_phase_shift.rst", "api/_autosummary/mag2exp.quick_plots.sans_chiral_function.rst", "api/_autosummary/mag2exp.quick_plots.sans_cross_section.rst", "api/_autosummary/mag2exp.quick_plots.saxs.rst", "api/_autosummary/mag2exp.quick_plots.x_ray_holography.rst", "api/_autosummary/mag2exp.sans.rst", "api/_autosummary/mag2exp.sans.chiral_function.rst", "api/_autosummary/mag2exp.sans.cross_section.rst", "api/_autosummary/mag2exp.test.rst", "api/_autosummary/mag2exp.x_ray.rst", "api/_autosummary/mag2exp.x_ray.holography.rst", "api/_autosummary/mag2exp.x_ray.saxs.rst", "api/_autosummary/micromagneticdata.rst", "api/_autosummary/micromagneticdata.AbstractDrive.rst", "api/_autosummary/micromagneticdata.CombinedDrive.rst", "api/_autosummary/micromagneticdata.Data.rst", "api/_autosummary/micromagneticdata.Drive.rst", "api/_autosummary/micromagneticdata.Mumax3Drive.rst", "api/_autosummary/micromagneticdata.OOMMFDrive.rst", "api/_autosummary/micromagneticdata.test.rst", "api/_autosummary/micromagneticmodel.rst", "api/_autosummary/micromagneticmodel.CubicAnisotropy.rst", "api/_autosummary/micromagneticmodel.DMI.rst", "api/_autosummary/micromagneticmodel.Damping.rst", "api/_autosummary/micromagneticmodel.Demag.rst", "api/_autosummary/micromagneticmodel.Driver.rst", "api/_autosummary/micromagneticmodel.Dynamics.rst", "api/_autosummary/micromagneticmodel.DynamicsTerm.rst", "api/_autosummary/micromagneticmodel.Energy.rst", "api/_autosummary/micromagneticmodel.EnergyTerm.rst", "api/_autosummary/micromagneticmodel.Evolver.rst", "api/_autosummary/micromagneticmodel.Exchange.rst", "api/_autosummary/micromagneticmodel.ExternalDriver.rst", "api/_autosummary/micromagneticmodel.ExternalRunner.rst", "api/_autosummary/micromagneticmodel.MagnetoElastic.rst", "api/_autosummary/micromagneticmodel.Precession.rst", "api/_autosummary/micromagneticmodel.RKKY.rst", "api/_autosummary/micromagneticmodel.Slonczewski.rst", "api/_autosummary/micromagneticmodel.System.rst", "api/_autosummary/micromagneticmodel.UniaxialAnisotropy.rst", "api/_autosummary/micromagneticmodel.Zeeman.rst", "api/_autosummary/micromagneticmodel.ZhangLi.rst", "api/_autosummary/micromagneticmodel.abstract.rst", "api/_autosummary/micromagneticmodel.abstract.Abstract.rst", "api/_autosummary/micromagneticmodel.abstract.Container.rst", "api/_autosummary/micromagneticmodel.abstract.Term.rst", "api/_autosummary/micromagneticmodel.consts.rst", "api/_autosummary/micromagneticmodel.consts.e.rst", "api/_autosummary/micromagneticmodel.consts.g.rst", "api/_autosummary/micromagneticmodel.consts.gamma.rst", "api/_autosummary/micromagneticmodel.consts.gamma0.rst", "api/_autosummary/micromagneticmodel.consts.h.rst", "api/_autosummary/micromagneticmodel.consts.hbar.rst", "api/_autosummary/micromagneticmodel.consts.kB.rst", "api/_autosummary/micromagneticmodel.consts.me.rst", "api/_autosummary/micromagneticmodel.consts.mu0.rst", "api/_autosummary/micromagneticmodel.consts.muB.rst", "api/_autosummary/micromagneticmodel.examples.rst", "api/_autosummary/micromagneticmodel.examples.macrospin.rst", "api/_autosummary/micromagneticmodel.test.rst", "api/_autosummary/micromagnetictests.rst", "api/_autosummary/micromagnetictests.calculatortests.rst", "api/_autosummary/micromagnetictests.calculatortests.TestCompute.rst", "api/_autosummary/micromagnetictests.calculatortests.TestCubicAnisotropy.rst", "api/_autosummary/micromagnetictests.calculatortests.TestDMI.rst", "api/_autosummary/micromagnetictests.calculatortests.TestDamping.rst", "api/_autosummary/micromagnetictests.calculatortests.TestDemag.rst", "api/_autosummary/micromagnetictests.calculatortests.TestDynamics.rst", "api/_autosummary/micromagnetictests.calculatortests.TestEnergy.rst", "api/_autosummary/micromagnetictests.calculatortests.TestExchange.rst", "api/_autosummary/micromagnetictests.calculatortests.TestFixedSubregions.rst", "api/_autosummary/micromagnetictests.calculatortests.TestHysteresisDriver.rst", "api/_autosummary/micromagnetictests.calculatortests.TestMesh.rst", "api/_autosummary/micromagnetictests.calculatortests.TestMinDriver.rst", "api/_autosummary/micromagnetictests.calculatortests.TestPrecession.rst", "api/_autosummary/micromagnetictests.calculatortests.TestRKKY.rst", "api/_autosummary/micromagnetictests.calculatortests.TestSlonczewski.rst", "api/_autosummary/micromagnetictests.calculatortests.TestThreads.rst", "api/_autosummary/micromagnetictests.calculatortests.TestTimeDriver.rst", "api/_autosummary/micromagnetictests.calculatortests.TestUniaxialAnisotropy.rst", "api/_autosummary/micromagnetictests.calculatortests.TestZeeman.rst", "api/_autosummary/micromagnetictests.calculatortests.TestZhangLi.rst", "api/_autosummary/micromagnetictests.calculatortests.test_dirname.rst", "api/_autosummary/micromagnetictests.calculatortests.test_format.rst", "api/_autosummary/micromagnetictests.calculatortests.test_info_file.rst", "api/_autosummary/micromagnetictests.calculatortests.test_multiple_drives.rst", "api/_autosummary/micromagnetictests.calculatortests.test_outputstep.rst", "api/_autosummary/micromagnetictests.calculatortests.test_schedule.rst", "api/_autosummary/micromagnetictests.calculatortests.test_skyrmion.rst", "api/_autosummary/micromagnetictests.calculatortests.test_stdprob3.rst", "api/_autosummary/micromagnetictests.calculatortests.test_stdprob4.rst", "api/_autosummary/micromagnetictests.calculatortests.test_stdprob5.rst", "api/_autosummary/micromagnetictests.get_tests.rst", "api/_autosummary/micromagnetictests.test.rst", "api/_autosummary/mumax3c.rst", "api/_autosummary/mumax3c.MinDriver.rst", "api/_autosummary/mumax3c.RelaxDriver.rst", "api/_autosummary/mumax3c.TimeDriver.rst", "api/_autosummary/mumax3c.delete.rst", "api/_autosummary/mumax3c.mumax3.rst", "api/_autosummary/mumax3c.mumax3.ExeMumax3Runner.rst", "api/_autosummary/mumax3c.mumax3.Mumax3Runner.rst", "api/_autosummary/mumax3c.mumax3.Runner.rst", "api/_autosummary/mumax3c.mumax3.overhead.rst", "api/_autosummary/mumax3c.runner.rst", "api/_autosummary/mumax3c.test.rst", "api/_autosummary/mumax3c.test_docker.rst", "api/_autosummary/oommfc.rst", "api/_autosummary/oommfc.CGEvolver.rst", "api/_autosummary/oommfc.Driver.rst", "api/_autosummary/oommfc.EulerEvolver.rst", "api/_autosummary/oommfc.HysteresisDriver.rst", "api/_autosummary/oommfc.MinDriver.rst", "api/_autosummary/oommfc.RungeKuttaEvolver.rst", "api/_autosummary/oommfc.SpinTEvolver.rst", "api/_autosummary/oommfc.SpinXferEvolver.rst", "api/_autosummary/oommfc.TimeDriver.rst", "api/_autosummary/oommfc.UHH_ThetaEvolver.rst", "api/_autosummary/oommfc.Xf_ThermHeunEvolver.rst", "api/_autosummary/oommfc.Xf_ThermSpinXferEvolver.rst", "api/_autosummary/oommfc.compute.rst", "api/_autosummary/oommfc.delete.rst", "api/_autosummary/oommfc.oommf.rst", "api/_autosummary/oommfc.oommf.DockerOOMMFRunner.rst", "api/_autosummary/oommfc.oommf.ExeOOMMFRunner.rst", "api/_autosummary/oommfc.oommf.OOMMFRunner.rst", "api/_autosummary/oommfc.oommf.Runner.rst", "api/_autosummary/oommfc.oommf.TclOOMMFRunner.rst", "api/_autosummary/oommfc.oommf.overhead.rst", "api/_autosummary/oommfc.runner.rst", "api/_autosummary/oommfc.test.rst", "api/_autosummary/oommfc.test_docker.rst", "api/_autosummary/ubermag.rst", "api/_autosummary/ubermag.test.rst", "api/_autosummary/ubermagtable.rst", "api/_autosummary/ubermagtable.Table.rst", "api/_autosummary/ubermagtable.interact.rst", "api/_autosummary/ubermagtable.test.rst", "api/_autosummary/ubermagtable.util.rst", "api/_autosummary/ubermagtable.util.columns.rst", "api/_autosummary/ubermagtable.util.data.rst", "api/_autosummary/ubermagtable.util.units.rst", "api/_autosummary/ubermagutil.rst", "api/_autosummary/ubermagutil.changedir.rst", "api/_autosummary/ubermagutil.hysteresis_values.rst", "api/_autosummary/ubermagutil.inherit_docs.rst", "api/_autosummary/ubermagutil.setup_logging.rst", "api/_autosummary/ubermagutil.test.rst", "api/_autosummary/ubermagutil.typesystem.rst", "api/_autosummary/ubermagutil.typesystem.Descriptor.rst", "api/_autosummary/ubermagutil.typesystem.Dictionary.rst", "api/_autosummary/ubermagutil.typesystem.Name.rst", "api/_autosummary/ubermagutil.typesystem.Parameter.rst", "api/_autosummary/ubermagutil.typesystem.Scalar.rst", "api/_autosummary/ubermagutil.typesystem.Subset.rst", "api/_autosummary/ubermagutil.typesystem.Typed.rst", "api/_autosummary/ubermagutil.typesystem.Vector.rst", "api/_autosummary/ubermagutil.typesystem.typesystem.rst", "api/_autosummary/ubermagutil.units.rst", "api/_autosummary/ubermagutil.units.si_max_multiplier.rst", "api/_autosummary/ubermagutil.units.si_multiplier.rst", "api/index.rst", "changelog.rst", "contributing.rst", "demo.ipynb", "documentation.rst", "documentation/compatibility.rst", "documentation/discretisedfield.rst", "documentation/index.rst", "documentation/mag2exp.rst", "documentation/micromagneticdata.rst", "documentation/micromagneticmodel.rst", "documentation/micromagnetictests.rst", "documentation/mumax3c.rst", "documentation/notebooks/discretisedfield/field-definition.ipynb", "documentation/notebooks/discretisedfield/field-holoviews-visualisation.ipynb", "documentation/notebooks/discretisedfield/field-k3d-visualisation.ipynb", "documentation/notebooks/discretisedfield/field-matplotlib-visualisation.ipynb", "documentation/notebooks/discretisedfield/field-normalisation.ipynb", "documentation/notebooks/discretisedfield/field-operations.ipynb", "documentation/notebooks/discretisedfield/field-read-write.ipynb", "documentation/notebooks/discretisedfield/field-rotations.ipynb", "documentation/notebooks/discretisedfield/field-spatially-varying.ipynb", "documentation/notebooks/discretisedfield/field-tools.ipynb", "documentation/notebooks/discretisedfield/line.ipynb", "documentation/notebooks/discretisedfield/mesh-basics.ipynb", "documentation/notebooks/discretisedfield/mesh-bc.ipynb", "documentation/notebooks/discretisedfield/mesh-line-plane.ipynb", "documentation/notebooks/discretisedfield/mesh-pad.ipynb", "documentation/notebooks/discretisedfield/mesh-subregions.ipynb", "documentation/notebooks/discretisedfield/mesh-visualisation.ipynb", "documentation/notebooks/discretisedfield/mesh-widgets.ipynb", "documentation/notebooks/discretisedfield/ovf2vtk.ipynb", "documentation/notebooks/discretisedfield/region-basics.ipynb", "documentation/notebooks/discretisedfield/region-facing-surfaces.ipynb", "documentation/notebooks/discretisedfield/region-visualisation.ipynb", "documentation/notebooks/discretisedfield/xarray-usage.ipynb", "documentation/notebooks/mag2exp/DC_magnetometry.ipynb", "documentation/notebooks/mag2exp/Lorentz_TEM.ipynb", "documentation/notebooks/mag2exp/Magnetic_Force_Microscopy.ipynb", "documentation/notebooks/mag2exp/Rotations_Lorentz_Microscopy.ipynb", "documentation/notebooks/mag2exp/SANS.ipynb", "documentation/notebooks/mag2exp/SAXS.ipynb", "documentation/notebooks/mag2exp/Torque_magnetometry.ipynb", "documentation/notebooks/mag2exp/Unit_converter.ipynb", "documentation/notebooks/mag2exp/X_ray_Holography.ipynb", "documentation/notebooks/micromagneticdata/documentation.ipynb", "documentation/notebooks/micromagneticdata/interactive_plotting.ipynb", "documentation/notebooks/micromagneticmodel/constants.ipynb", "documentation/notebooks/micromagneticmodel/deriving-dynamics-term.ipynb", "documentation/notebooks/micromagneticmodel/deriving-energy-term.ipynb", "documentation/notebooks/micromagneticmodel/dynamics-terms.ipynb", "documentation/notebooks/micromagneticmodel/energy-terms.ipynb", "documentation/notebooks/micromagneticmodel/evolver-driver.ipynb", "documentation/notebooks/micromagneticmodel/same-class-terms.ipynb", "documentation/notebooks/micromagneticmodel/system.ipynb", "documentation/notebooks/micromagneticmodel/term-parameters.ipynb", "documentation/notebooks/micromagnetictests/usage.ipynb", "documentation/notebooks/oommfc/controlling-default-runner.ipynb", "documentation/notebooks/oommfc/cubicanisotropy.ipynb", "documentation/notebooks/oommfc/dirname.ipynb", "documentation/notebooks/oommfc/dmi.ipynb", "documentation/notebooks/oommfc/exchange.ipynb", "documentation/notebooks/oommfc/mindriver-steps.ipynb", "documentation/notebooks/oommfc/parallel.ipynb", "documentation/notebooks/oommfc/uniaxialanisotropy.ipynb", "documentation/notebooks/oommfc/verbosity_levels.ipynb", "documentation/notebooks/oommfc/zeeman.ipynb", "documentation/notebooks/ubermag/ubermag-version.ipynb", "documentation/notebooks/ubermagtable/table-basics.ipynb", "documentation/notebooks/ubermagtable/table-fft.ipynb", "documentation/notebooks/ubermagtable/table-interactive-plot.ipynb", "documentation/notebooks/ubermagtable/table-merge.ipynb", "documentation/notebooks/ubermagtable/table-visualisation.ipynb", "documentation/notebooks/ubermagtable/table-widgets.ipynb", "documentation/notebooks/ubermagutil/constant-attributes.ipynb", "documentation/notebooks/ubermagutil/hysteresis.ipynb", "documentation/notebooks/ubermagutil/imposing-typesystem.ipynb", "documentation/notebooks/ubermagutil/inherit-docs.ipynb", "documentation/notebooks/ubermagutil/logging.ipynb", "documentation/notebooks/ubermagutil/otherwise-type.ipynb", "documentation/notebooks/ubermagutil/parameter-descriptor.ipynb", "documentation/notebooks/ubermagutil/si-prefix.ipynb", "documentation/oommfc.rst", "documentation/ubermag.rst", "documentation/ubermagtable.rst", "documentation/ubermagutil.rst", "examples/index.rst", "examples/notebooks/07-tutorial-standard-problem3.ipynb", "examples/notebooks/08-tutorial-standard-problem4.ipynb", "examples/notebooks/09-tutorial-standard-problem5.ipynb", "examples/notebooks/10-tutorial-standard-problem-fmr.ipynb", "examples/notebooks/11-tutorial-deriving-fields.ipynb", "examples/notebooks/12-tutorial-stray-field.ipynb", "examples/notebooks/13-tutorial-skyrmion.ipynb", "examples/notebooks/choosing-runner.ipynb", "examples/notebooks/energy-term-computations.ipynb", "examples/notebooks/field-operations2.ipynb", "examples/notebooks/finite-temperature.ipynb", "examples/notebooks/fixed-subregions.ipynb", "examples/notebooks/hysteresis.ipynb", "examples/notebooks/multiple-terms.ipynb", "examples/notebooks/negative-A.ipynb", "examples/notebooks/periodic-boundary-conditions.ipynb", "examples/notebooks/rkky.ipynb", "examples/notebooks/sine-hysteresis.ipynb", "examples/notebooks/space-time-field.ipynb", "examples/notebooks/spatially-varying-parameters1.ipynb", "examples/notebooks/spatially-varying-parameters2.ipynb", "examples/notebooks/time-dependent-field.ipynb", "examples/notebooks/time-dependent-field-current.ipynb", "faq.rst", "getting-started/index.rst", "getting-started/jupyter-basics.rst", "getting-started/notebooks/driving-dw.ipynb", "getting-started/notebooks/dw-pair-conversion.ipynb", "getting-started/notebooks/dynamics-equation.ipynb", "getting-started/notebooks/energy-equation.ipynb", "getting-started/notebooks/first-ubermag-simulation.ipynb", "getting-started/notebooks/magnetisation-field.ipynb", "getting-started/notebooks/python-basics.ipynb", "help.rst", "index.rst", "installation.rst", "news.rst"], "titles": ["discretisedfield", "DValue", "Field", "FieldRotator", "Line", "Mesh", "Region", "discretisedfield.integral", "discretisedfield.interact", "discretisedfield.io", "discretisedfield.io.field_from_hdf5", "discretisedfield.io.field_from_ovf", "discretisedfield.io.field_from_vtk", "discretisedfield.io.field_to_hdf5", "discretisedfield.io.field_to_ovf", "discretisedfield.io.field_to_vtk", "discretisedfield.io.ovf2vtk", "discretisedfield.io.ovf2vtk.ovf2vtk", "discretisedfield.plotting", "Hv", "K3dField", "K3dMesh", "K3dRegion", "MplField", "MplMesh", "MplRegion", "discretisedfield.plotting.add_colorwheel", "discretisedfield.test", "discretisedfield.tools", "discretisedfield.tools.count_bps", "discretisedfield.tools.count_large_cell_angle_regions", "discretisedfield.tools.demag_field", "discretisedfield.tools.demag_tensor", "discretisedfield.tools.emergent_magnetic_field", "discretisedfield.tools.max_neigbouring_cell_angle", "discretisedfield.tools.neigbouring_cell_angle", "discretisedfield.tools.topological_charge", "discretisedfield.tools.topological_charge_density", "mag2exp", "mag2exp.ltem", "mag2exp.ltem.defocus_image", "mag2exp.ltem.integrated_magnetic_flux_density", "mag2exp.ltem.phase", "mag2exp.ltem.relativistic_wavelength", "mag2exp.magnetometry", "mag2exp.magnetometry.magnetisation", "mag2exp.magnetometry.torque", "mag2exp.mfm", "mag2exp.mfm.phase_shift", "mag2exp.quick_plots", "mag2exp.quick_plots.ltem_defocus", "mag2exp.quick_plots.ltem_ft_phase", "mag2exp.quick_plots.ltem_integrated_mfd", "mag2exp.quick_plots.ltem_phase", "mag2exp.quick_plots.mfm_phase_shift", "mag2exp.quick_plots.sans_chiral_function", "mag2exp.quick_plots.sans_cross_section", "mag2exp.quick_plots.saxs", "mag2exp.quick_plots.x_ray_holography", "mag2exp.sans", "mag2exp.sans.chiral_function", "mag2exp.sans.cross_section", "mag2exp.test", "mag2exp.x_ray", "mag2exp.x_ray.holography", "mag2exp.x_ray.saxs", "micromagneticdata", "AbstractDrive", "CombinedDrive", "Data", "Drive", "Mumax3Drive", "OOMMFDrive", "micromagneticdata.test", "micromagneticmodel", "CubicAnisotropy", "DMI", "Damping", "Demag", "Driver", "Dynamics", "DynamicsTerm", "Energy", "EnergyTerm", "Evolver", "Exchange", "ExternalDriver", "ExternalRunner", "MagnetoElastic", "Precession", "RKKY", "Slonczewski", "System", "UniaxialAnisotropy", "Zeeman", "ZhangLi", "micromagneticmodel.abstract", "Abstract", "Container", "Term", "micromagneticmodel.consts", "micromagneticmodel.consts.e", "micromagneticmodel.consts.g", "micromagneticmodel.consts.gamma", "micromagneticmodel.consts.gamma0", "micromagneticmodel.consts.h", "micromagneticmodel.consts.hbar", "micromagneticmodel.consts.kB", "micromagneticmodel.consts.me", "micromagneticmodel.consts.mu0", "micromagneticmodel.consts.muB", "micromagneticmodel.examples", "micromagneticmodel.examples.macrospin", "micromagneticmodel.test", "micromagnetictests", "micromagnetictests.calculatortests", "TestCompute", "TestCubicAnisotropy", "TestDMI", "TestDamping", "TestDemag", "TestDynamics", "TestEnergy", "TestExchange", "TestFixedSubregions", "TestHysteresisDriver", "TestMesh", "TestMinDriver", "TestPrecession", "TestRKKY", "TestSlonczewski", "TestThreads", "TestTimeDriver", "TestUniaxialAnisotropy", "TestZeeman", "TestZhangLi", "micromagnetictests.calculatortests.test_dirname", "micromagnetictests.calculatortests.test_format", "micromagnetictests.calculatortests.test_info_file", "micromagnetictests.calculatortests.test_multiple_drives", "micromagnetictests.calculatortests.test_outputstep", "micromagnetictests.calculatortests.test_schedule", "micromagnetictests.calculatortests.test_skyrmion", "micromagnetictests.calculatortests.test_stdprob3", "micromagnetictests.calculatortests.test_stdprob4", "micromagnetictests.calculatortests.test_stdprob5", "micromagnetictests.get_tests", "micromagnetictests.test", "mumax3c", "MinDriver", "RelaxDriver", "TimeDriver", "mumax3c.delete", "mumax3c.mumax3", "ExeMumax3Runner", "Mumax3Runner", "Runner", "mumax3c.mumax3.overhead", "mumax3c.runner", "mumax3c.test", "mumax3c.test_docker", "oommfc", "CGEvolver", "Driver", "EulerEvolver", "HysteresisDriver", "MinDriver", "RungeKuttaEvolver", "SpinTEvolver", "SpinXferEvolver", "TimeDriver", "UHH_ThetaEvolver", "Xf_ThermHeunEvolver", "Xf_ThermSpinXferEvolver", "oommfc.compute", "oommfc.delete", "oommfc.oommf", "DockerOOMMFRunner", "ExeOOMMFRunner", "OOMMFRunner", "Runner", "TclOOMMFRunner", "oommfc.oommf.overhead", "oommfc.runner", "oommfc.test", "oommfc.test_docker", "ubermag", "ubermag.test", "ubermagtable", "Table", "ubermagtable.interact", "ubermagtable.test", "ubermagtable.util", "ubermagtable.util.columns", "ubermagtable.util.data", "ubermagtable.util.units", "ubermagutil", "ubermagutil.changedir", "ubermagutil.hysteresis_values", "ubermagutil.inherit_docs", "ubermagutil.setup_logging", "ubermagutil.test", "ubermagutil.typesystem", "Descriptor", "Dictionary", "Name", "Parameter", "Scalar", "Subset", "Typed", "Vector", "ubermagutil.typesystem.typesystem", "ubermagutil.units", "ubermagutil.units.si_max_multiplier", "ubermagutil.units.si_multiplier", "API Reference", "Changelog", "Contributing", "Demo", "Documentation", "Compatibility: Ubermag - OOMMF - mumax<sup>3</sup>", "discretisedfield", "Package documentation", "mag2exp", "micromagneticdata", "micromagneticmodel", "micromagnetictests", "mumax3c", "Defining a uniform field", "Visualising field using <code class=\"docutils literal notranslate\"><span class=\"pre\">holoviews</span></code>", "Field visualisation using <code class=\"docutils literal notranslate\"><span class=\"pre\">k3d</span></code>", "Visualising field using <code class=\"docutils literal notranslate\"><span class=\"pre\">matplotlib</span></code>", "Field normalisation", "Field operations", "Reading and writing fields", "Field rotation", "Spatially varying fields", "Field tools", "Line object", "Mesh basics", "Mesh boundary conditions", "Mesh plane and line", "Mesh pad", "Mesh subregions", "Mesh visualisation", "Mesh widgets", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ovf2vtk</span></code> tool", "Region basics", "Region facing surfaces", "Region visualisation", "Importing/Exporting field from/to <code class=\"docutils literal notranslate\"><span class=\"pre\">xarray.DataArray</span></code>", "DC magnetometry", "Lorentz Transmission Electron Microscopy", "Magnetic Force Microscopy", "Using Rotations with <code class=\"docutils literal notranslate\"><span class=\"pre\">mag2exp</span></code>", "Small Angle Neutron Scattering", "Small Angle X-ray Scattering", "Torque magnetometry", "Unit Conversions", "X-ray Holography", "Analysing simulation results", "Interactive plots", "Constants", "Deriving a dynamics term", "Deriving an energy term", "Dynamics terms and dynamics equation", "Energy terms and energy equation", "Deriving evolver and driver classes", "Multiple energy terms of the same class", "Defining micromagnetic system", "Term parameters", "Usage", "Controlling the default runner", "Tutorial 05: Cubic anisotropy energy term", "Custom directory name", "Tutorial 04: Dzyaloshinskii-Moriya energy term", "Tutorial 02: Exchange energy term", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinDriver</span></code> steps", "Running simulations in parallel", "Tutorial 03: Uniaxial anisotropy energy term", "Verbosity levels", "Tutorial 01: Zeeman energy term", "&lt;no title&gt;", "Table basics", "Table FFT", "Table interactive plot", "Table merge", "Table visualisation", "Table widgets", "Constant attributes", "Hysteresis values", "Imposing <code class=\"docutils literal notranslate\"><span class=\"pre\">typesystem</span></code> on a class", "<code class=\"docutils literal notranslate\"><span class=\"pre\">inherit_docs</span></code> decorator", "Logging control", "Defining <code class=\"docutils literal notranslate\"><span class=\"pre\">otherwise</span></code> type", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Parameter</span></code> descriptor", "Extracting the SI prefix", "oommfc", "ubermag", "ubermagtable", "ubermagutil", "Examples", "Standard problem 3", "Standard problem 4", "Standard problem 5", "FMR standard problem", "Deriving energy values", "Calculating a stray field using an airbox method", "Skyrmion in a disk", "Choosing runner", "Energy term computations", "Field operations 2", "Simulation at finite temperature", "Fixed subregions", "Hysteresis simulations", "Multiple energy terms of the same class", "Negative exchange energy constant", "Periodic boundary conditions", "RKKY energy term", "Sine-hysteresis", "Both spatially and time varying field", "Spatially varying parameters 1", "Spatially varying parameters 2", "Time-varying field", "Time-dependent fields and currents", "FAQ", "Getting started", "Jupyter lab", "Exercise: Current induced domain wall motion", "Exercise: Domain wall pair conversion", "Dynamics equation", "Energy equation", "Our first ubermag simulation", "Magnetisation field", "Python basics", "Help", "Ubermag", "Installation", "News"], "terms": {"finit": [0, 2, 5, 171, 173, 216, 228, 235, 239, 247, 301, 305, 332, 333, 336], "differ": [0, 2, 3, 5, 6, 19, 23, 24, 25, 32, 37, 67, 68, 69, 94, 98, 157, 158, 180, 182, 183, 216, 218, 219, 222, 228, 229, 230, 231, 233, 234, 235, 236, 237, 239, 243, 244, 246, 247, 249, 253, 256, 258, 259, 261, 265, 266, 268, 269, 270, 273, 276, 279, 280, 281, 283, 293, 295, 305, 309, 314, 315, 316, 318, 321, 322, 324, 330, 331, 332, 333, 334, 336, 337], "field": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 23, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 64, 65, 67, 68, 70, 75, 76, 77, 85, 88, 89, 91, 92, 93, 94, 95, 112, 174, 189, 190, 216, 221, 238, 241, 242, 243, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 269, 274, 275, 277, 278, 284, 301, 302, 304, 305, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 326, 328, 329, 330, 331, 332, 336, 338], "class": [0, 1, 2, 3, 4, 5, 6, 18, 19, 20, 21, 22, 23, 24, 25, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 146, 148, 149, 150, 151, 153, 154, 155, 156, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 188, 189, 199, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 216, 219, 225, 228, 234, 236, 237, 250, 254, 263, 264, 266, 275, 283, 289, 292, 294, 295, 300, 301, 324, 330, 331, 333, 334, 337, 338], "function": [0, 1, 2, 3, 4, 6, 7, 8, 9, 12, 16, 17, 18, 19, 23, 28, 29, 34, 36, 38, 39, 40, 44, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 66, 67, 74, 86, 94, 111, 114, 115, 146, 148, 152, 153, 156, 161, 175, 176, 180, 186, 188, 189, 190, 192, 196, 200, 202, 204, 205, 206, 207, 208, 209, 210, 212, 216, 218, 219, 229, 230, 232, 235, 237, 239, 243, 244, 247, 249, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 266, 270, 273, 279, 281, 283, 284, 285, 287, 290, 293, 298, 302, 303, 304, 306, 308, 310, 311, 312, 314, 317, 318, 319, 321, 323, 333, 336], "submodul": [0, 9, 38, 39, 44, 47, 59, 63, 74, 114, 148, 161, 188, 196, 216], "discretisedfield": [1, 2, 3, 4, 5, 6, 19, 20, 21, 22, 23, 24, 25, 40, 41, 42, 45, 46, 48, 60, 61, 64, 65, 67, 70, 75, 76, 77, 85, 88, 89, 91, 92, 93, 94, 95, 174, 216, 218, 222, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 263, 264, 269, 274, 275, 277, 278, 284, 293, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 328, 329, 330, 331, 332, 333, 336, 337, 338], "infinitesimali": 1, "small": [1, 4, 5, 6, 20, 21, 23, 24, 25, 55, 56, 57, 59, 65, 94, 189, 223, 231, 235, 239, 244, 249, 272, 309, 324, 336, 337], "valu": [1, 2, 3, 4, 5, 6, 8, 13, 14, 15, 19, 20, 21, 23, 24, 25, 30, 33, 34, 35, 36, 37, 40, 41, 42, 45, 46, 48, 60, 61, 64, 65, 67, 68, 69, 70, 71, 72, 75, 76, 77, 85, 88, 89, 90, 91, 92, 93, 94, 95, 97, 149, 150, 151, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 189, 195, 198, 200, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 216, 218, 228, 229, 230, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 263, 264, 265, 266, 267, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 289, 291, 293, 294, 295, 296, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 328, 329, 330, 331, 332, 337], "differenti": [1, 94, 171, 255, 256, 259, 324], "thi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 17, 19, 20, 21, 22, 23, 24, 25, 30, 34, 35, 36, 37, 41, 48, 50, 52, 60, 67, 68, 69, 70, 71, 72, 76, 86, 87, 90, 92, 94, 99, 156, 163, 175, 177, 180, 189, 190, 195, 200, 204, 205, 206, 207, 208, 209, 210, 216, 218, 219, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 241, 242, 243, 244, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 275, 276, 277, 278, 280, 283, 284, 285, 287, 288, 290, 291, 292, 293, 295, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 321, 322, 323, 325, 326, 327, 328, 330, 331, 332, 333, 334, 336, 337], "i": [1, 2, 3, 4, 5, 6, 8, 9, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 64, 65, 67, 68, 69, 70, 71, 72, 75, 76, 77, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 97, 98, 99, 112, 146, 149, 150, 151, 152, 155, 156, 158, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 179, 180, 183, 189, 190, 198, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 298, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 337], "us": [1, 2, 3, 4, 5, 6, 9, 12, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 30, 36, 37, 40, 41, 42, 43, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 64, 65, 67, 69, 70, 71, 72, 75, 76, 77, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 154, 156, 158, 163, 174, 177, 178, 180, 181, 183, 189, 196, 200, 213, 216, 217, 218, 219, 221, 223, 227, 228, 232, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 269, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 293, 295, 296, 298, 301, 302, 303, 304, 305, 306, 309, 310, 311, 312, 314, 316, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 335, 336, 337, 338], "defin": [1, 2, 3, 4, 5, 6, 10, 12, 13, 14, 15, 19, 23, 24, 33, 36, 37, 42, 60, 61, 64, 65, 70, 75, 76, 77, 78, 80, 82, 85, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 149, 150, 151, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 189, 203, 204, 206, 207, 208, 210, 216, 218, 221, 225, 229, 231, 232, 233, 235, 236, 237, 239, 240, 241, 242, 243, 247, 249, 250, 251, 252, 253, 255, 256, 257, 259, 261, 266, 267, 273, 275, 276, 277, 278, 279, 280, 281, 284, 285, 287, 291, 295, 300, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 330, 331, 332, 333, 334, 336], "comput": [1, 2, 4, 5, 6, 20, 23, 29, 32, 33, 34, 35, 36, 37, 69, 70, 71, 72, 74, 86, 94, 114, 163, 189, 213, 214, 216, 218, 231, 235, 237, 242, 251, 273, 275, 276, 279, 281, 284, 301, 302, 303, 305, 307, 308, 311, 317, 324, 327, 331, 332, 334, 335, 336, 337], "integr": [1, 2, 29, 36, 41, 42, 52, 64, 65, 216, 218, 235, 237, 250, 253, 259, 305, 306, 310, 311, 317, 336], "For": [1, 2, 3, 4, 5, 6, 7, 8, 19, 20, 21, 22, 23, 24, 25, 36, 67, 69, 75, 76, 77, 85, 86, 87, 88, 89, 91, 93, 94, 98, 149, 150, 151, 158, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 183, 189, 190, 216, 228, 229, 230, 231, 233, 235, 236, 237, 239, 240, 241, 243, 244, 245, 247, 248, 249, 253, 255, 256, 258, 259, 261, 263, 264, 265, 266, 270, 271, 277, 285, 287, 291, 294, 301, 303, 306, 308, 309, 310, 312, 314, 315, 316, 319, 320, 323, 324, 327, 331, 332, 333, 334, 335, 336, 337], "instanc": [1, 2, 4, 5, 6, 20, 21, 23, 24, 25, 99, 189, 203, 204, 205, 206, 207, 208, 209, 210, 216, 228, 230, 233, 236, 239, 240, 241, 243, 244, 245, 247, 248, 249, 263, 264, 265, 266, 270, 271, 277, 285, 287, 291, 294, 303, 306, 310, 314, 316, 333, 334, 335], "dv": [1, 2, 5, 46, 233, 257, 311], "dx": [1, 2, 5, 189, 218, 233, 235, 304, 305, 317], "surfac": [1, 2, 5, 6, 90, 221, 253, 318], "vector": [1, 2, 3, 4, 5, 12, 14, 15, 19, 20, 23, 29, 30, 33, 34, 35, 36, 37, 42, 52, 61, 67, 75, 76, 88, 91, 93, 94, 95, 216, 230, 232, 234, 236, 237, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 265, 266, 269, 270, 273, 275, 276, 279, 281, 291, 294, 303, 305, 307, 308, 309, 317, 321, 322, 328, 330, 331, 332, 333, 336, 338], "d": [1, 2, 5, 46, 60, 61, 76, 77, 78, 89, 91, 95, 204, 218, 229, 233, 240, 251, 252, 253, 254, 255, 256, 257, 258, 259, 266, 291, 303, 304, 305, 306, 308, 309, 310, 311, 314, 317, 322, 324, 328, 329, 330, 331, 332, 333, 334], "etc": [1, 5, 6, 23, 24, 25, 243, 244, 249, 287, 296, 336], "paramet": [1, 2, 3, 4, 5, 6, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 45, 46, 48, 60, 61, 64, 65, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 80, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 152, 154, 156, 163, 174, 175, 177, 178, 180, 181, 189, 193, 194, 195, 198, 200, 203, 204, 205, 207, 208, 209, 210, 213, 214, 218, 225, 228, 229, 231, 237, 243, 244, 245, 249, 253, 263, 264, 265, 266, 267, 269, 273, 275, 276, 279, 281, 287, 288, 294, 300, 301, 302, 303, 304, 305, 311, 316, 318, 324, 325, 328, 329, 330, 332, 333, 334], "python": [1, 2, 5, 94, 203, 205, 216, 231, 233, 239, 243, 246, 263, 264, 270, 273, 279, 281, 291, 293, 295, 307, 318, 321, 326, 327, 332, 333, 335, 336, 337, 338], "A": [1, 2, 4, 5, 6, 12, 19, 23, 24, 25, 34, 35, 80, 81, 82, 83, 85, 91, 92, 95, 97, 98, 99, 109, 158, 174, 183, 189, 199, 211, 216, 217, 218, 228, 229, 231, 233, 235, 239, 245, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 266, 269, 270, 272, 273, 275, 277, 278, 279, 281, 284, 288, 292, 294, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 321, 322, 323, 324, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337], "which": [1, 2, 4, 5, 6, 19, 20, 21, 22, 23, 24, 25, 29, 35, 36, 37, 48, 67, 68, 69, 70, 71, 72, 75, 86, 88, 90, 93, 94, 97, 149, 150, 151, 154, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 178, 189, 203, 204, 205, 213, 214, 216, 222, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 259, 260, 266, 267, 269, 272, 273, 275, 276, 278, 279, 281, 283, 284, 285, 287, 288, 290, 293, 295, 301, 302, 303, 304, 305, 307, 308, 309, 311, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 330, 331, 332, 333, 334, 336, 337], "take": [1, 2, 19, 23, 61, 86, 163, 189, 216, 229, 233, 234, 235, 236, 239, 241, 242, 250, 252, 253, 255, 259, 266, 272, 273, 275, 276, 279, 281, 283, 284, 302, 306, 309, 310, 314, 321, 324, 331, 333], "object": [1, 2, 3, 4, 5, 6, 7, 9, 19, 20, 21, 22, 23, 24, 25, 67, 68, 69, 70, 71, 72, 86, 97, 98, 99, 146, 156, 158, 163, 175, 179, 180, 189, 216, 218, 221, 228, 229, 232, 233, 234, 235, 237, 239, 241, 243, 244, 245, 247, 249, 250, 252, 253, 254, 255, 256, 259, 260, 261, 263, 264, 267, 268, 269, 272, 273, 275, 276, 277, 278, 279, 281, 284, 285, 287, 288, 302, 303, 304, 305, 306, 308, 309, 310, 312, 314, 317, 320, 321, 322, 323, 324, 330, 331, 333, 336], "an": [1, 2, 5, 6, 10, 11, 13, 14, 15, 19, 20, 23, 26, 34, 37, 40, 43, 48, 67, 68, 70, 75, 76, 77, 79, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 98, 149, 150, 151, 156, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 180, 189, 193, 194, 195, 203, 204, 211, 216, 217, 218, 220, 222, 225, 229, 230, 231, 233, 234, 235, 236, 237, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 263, 265, 266, 267, 270, 272, 275, 276, 277, 281, 283, 284, 285, 286, 287, 288, 289, 293, 294, 295, 301, 302, 303, 305, 309, 310, 311, 313, 314, 315, 317, 319, 320, 321, 324, 328, 329, 330, 331, 333, 335, 336, 337], "input": [1, 2, 12, 86, 163, 189, 216, 230, 231, 233, 241, 246, 261, 263, 264, 266, 267, 270, 272, 273, 275, 276, 279, 281, 283, 291, 312, 314, 315, 321, 324, 333, 334], "extract": [1, 2, 5, 11, 12, 193, 194, 195, 229, 230, 231, 241, 243, 253, 300, 337], "requir": [1, 2, 3, 19, 23, 69, 86, 91, 94, 95, 163, 177, 216, 217, 229, 231, 232, 233, 234, 235, 237, 250, 257, 258, 265, 266, 267, 270, 272, 285, 293, 294, 303, 304, 305, 309, 324, 336, 337], "exampl": [1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 40, 41, 42, 43, 45, 46, 48, 60, 61, 62, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 80, 82, 85, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 113, 146, 147, 149, 150, 151, 152, 155, 156, 157, 158, 159, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 179, 180, 182, 183, 184, 185, 187, 189, 190, 191, 193, 194, 195, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 216, 217, 218, 219, 227, 229, 230, 231, 235, 239, 240, 241, 243, 245, 247, 248, 250, 252, 253, 254, 255, 259, 260, 267, 270, 272, 274, 276, 277, 279, 280, 284, 285, 286, 287, 288, 291, 293, 295, 307, 309, 311, 312, 313, 321, 324, 327, 331, 334, 335, 336], "import": [1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 33, 34, 35, 36, 37, 40, 41, 42, 43, 45, 46, 48, 60, 61, 62, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 80, 82, 85, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 112, 113, 146, 147, 149, 150, 151, 152, 155, 156, 157, 159, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 179, 180, 182, 184, 185, 187, 189, 190, 191, 193, 194, 195, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 216, 218, 221, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 328, 329, 330, 331, 332, 333, 335, 337], "df": [1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 27, 30, 33, 34, 35, 36, 37, 40, 41, 42, 45, 46, 48, 60, 61, 64, 65, 75, 76, 77, 85, 88, 89, 91, 92, 93, 94, 95, 216, 218, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 261, 263, 264, 269, 270, 273, 274, 275, 276, 277, 278, 279, 281, 284, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 328, 329, 330, 331, 332, 333], "lambda": [1, 2, 13, 14, 15, 30, 40, 43, 91, 216, 231, 252, 255, 256, 258, 261, 318, 324], "f": [1, 2, 33, 36, 37, 40, 94, 97, 230, 231, 234, 236, 237, 250, 252, 254, 258, 266, 272, 284, 296, 302, 305, 306, 310, 311, 315, 319, 320, 323, 324, 334], "mesh": [1, 2, 3, 4, 8, 13, 14, 15, 19, 20, 21, 23, 24, 30, 32, 33, 34, 35, 36, 37, 40, 41, 42, 45, 46, 48, 60, 61, 64, 65, 75, 76, 77, 85, 88, 89, 91, 92, 93, 94, 95, 163, 216, 218, 221, 228, 229, 230, 231, 232, 234, 237, 238, 247, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 266, 269, 270, 273, 274, 275, 276, 277, 278, 279, 281, 284, 287, 295, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 328, 329, 330, 331, 332], "p1": [1, 2, 3, 4, 5, 6, 8, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 30, 33, 34, 35, 36, 37, 40, 41, 42, 45, 46, 48, 60, 61, 64, 65, 75, 76, 77, 85, 88, 89, 91, 92, 93, 94, 95, 218, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 269, 270, 273, 274, 275, 276, 277, 278, 279, 281, 284, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 328, 329, 330, 331, 332, 333], "50": [1, 2, 5, 6, 20, 21, 23, 24, 30, 216, 228, 231, 232, 233, 235, 236, 239, 243, 247, 254, 266, 280, 293, 304, 307, 308, 312, 328, 332, 333, 334], "25": [1, 2, 5, 6, 67, 229, 231, 233, 236, 238, 239, 258, 260, 261, 265, 266, 283, 284, 286, 302, 303, 306, 307, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 328, 329, 330, 331, 332, 333, 334], "0": [1, 2, 3, 4, 5, 6, 8, 11, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 30, 33, 34, 35, 36, 37, 40, 41, 42, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 60, 61, 64, 65, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 80, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 97, 98, 99, 112, 155, 164, 165, 166, 174, 179, 189, 198, 203, 207, 210, 214, 218, 220, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 290, 291, 293, 294, 296, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 328, 329, 330, 331, 332, 333, 334], "p2": [1, 2, 3, 4, 5, 6, 8, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 30, 33, 34, 35, 36, 37, 40, 41, 42, 45, 46, 48, 60, 61, 64, 65, 75, 76, 77, 85, 88, 89, 91, 92, 93, 94, 95, 218, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 269, 270, 273, 274, 275, 276, 277, 278, 279, 281, 284, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 328, 329, 330, 331, 332, 333], "5": [1, 2, 5, 6, 13, 14, 15, 20, 23, 24, 42, 67, 70, 75, 76, 77, 85, 88, 89, 91, 92, 93, 94, 95, 152, 170, 175, 203, 207, 211, 216, 218, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 290, 291, 293, 294, 295, 301, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 328, 329, 330, 331, 332, 333, 336], "cell": [1, 2, 3, 5, 12, 14, 15, 19, 20, 21, 23, 24, 29, 30, 33, 34, 35, 36, 37, 40, 41, 42, 45, 46, 48, 60, 61, 64, 65, 67, 112, 216, 218, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 270, 273, 274, 275, 276, 277, 278, 279, 281, 284, 295, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 319, 320, 321, 322, 323, 324, 328, 329, 330, 331, 332, 333, 335], "region": [1, 2, 3, 5, 8, 20, 21, 22, 23, 24, 25, 30, 45, 48, 75, 76, 77, 85, 88, 89, 90, 91, 92, 93, 94, 95, 216, 218, 221, 229, 232, 237, 239, 240, 241, 242, 243, 244, 245, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 273, 274, 275, 276, 277, 278, 279, 281, 284, 287, 295, 303, 304, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 328, 329, 330, 331, 332], "dim": [1, 2, 3, 4, 8, 13, 14, 15, 19, 20, 23, 30, 33, 34, 35, 36, 37, 40, 41, 42, 45, 46, 48, 60, 61, 64, 65, 75, 76, 77, 85, 88, 89, 91, 92, 93, 94, 95, 218, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 269, 270, 273, 274, 275, 276, 277, 278, 279, 281, 284, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 328, 329, 330, 331, 332, 333], "1": [1, 2, 3, 4, 5, 6, 8, 13, 14, 15, 19, 20, 21, 23, 24, 25, 26, 30, 33, 34, 35, 36, 37, 40, 41, 42, 43, 45, 46, 48, 50, 51, 52, 53, 55, 56, 60, 61, 64, 65, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 80, 85, 86, 87, 88, 89, 91, 92, 93, 95, 97, 98, 99, 101, 106, 107, 109, 110, 112, 149, 150, 151, 155, 157, 165, 166, 170, 174, 179, 182, 189, 198, 203, 204, 205, 206, 210, 211, 213, 214, 218, 220, 228, 229, 230, 231, 232, 233, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 267, 269, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 328, 329, 331, 333, 336], "3": [1, 2, 3, 4, 5, 6, 8, 13, 14, 15, 19, 20, 21, 23, 24, 25, 30, 33, 34, 35, 36, 37, 40, 41, 42, 45, 46, 48, 54, 60, 61, 64, 65, 67, 75, 76, 88, 91, 92, 93, 94, 98, 162, 164, 167, 168, 169, 171, 172, 173, 189, 203, 204, 206, 207, 209, 210, 214, 216, 218, 220, 222, 228, 229, 230, 231, 232, 233, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 267, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 328, 329, 331, 333, 336, 337], "14": [1, 2, 203, 207, 209, 210, 216, 218, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 243, 244, 247, 249, 251, 252, 253, 255, 257, 258, 259, 260, 261, 265, 266, 273, 274, 275, 276, 277, 279, 281, 283, 284, 286, 291, 303, 310, 311, 314, 317, 319, 321, 324, 330, 331, 332, 333, 334], "125": [1, 303, 334], "method": [1, 2, 3, 4, 5, 6, 7, 10, 12, 17, 19, 20, 21, 22, 23, 24, 25, 30, 35, 36, 37, 48, 56, 61, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 149, 150, 151, 154, 155, 156, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 178, 179, 180, 181, 189, 195, 203, 204, 205, 206, 207, 208, 209, 210, 216, 218, 229, 230, 231, 233, 234, 236, 237, 241, 242, 244, 247, 249, 252, 253, 254, 255, 257, 258, 259, 261, 263, 264, 267, 272, 274, 277, 278, 283, 285, 287, 288, 292, 296, 301, 303, 305, 309, 313, 314, 317, 324, 334, 337], "__abs__": [1, 2], "absolut": [1, 2, 10, 11, 12, 19, 23, 36, 189, 216, 229, 237], "norm": [1, 2, 19, 20, 23, 45, 46, 48, 60, 61, 64, 65, 67, 92, 216, 218, 229, 230, 231, 232, 233, 234, 235, 238, 251, 252, 253, 254, 255, 256, 257, 259, 261, 269, 273, 274, 275, 276, 277, 278, 279, 281, 284, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 328, 329, 330, 331, 332, 333], "oper": [1, 2, 5, 6, 98, 99, 216, 218, 219, 221, 228, 230, 235, 239, 243, 247, 248, 258, 260, 261, 265, 266, 277, 286, 301, 307, 328, 331, 333, 336, 337], "return": [1, 2, 3, 4, 5, 6, 10, 11, 12, 19, 20, 23, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 45, 46, 48, 60, 61, 64, 65, 67, 68, 69, 70, 71, 72, 87, 91, 92, 94, 95, 97, 98, 99, 112, 146, 155, 156, 157, 158, 174, 177, 178, 179, 180, 181, 182, 183, 189, 193, 194, 195, 198, 199, 213, 214, 216, 218, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 241, 242, 243, 245, 247, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 267, 271, 273, 275, 276, 279, 281, 283, 284, 288, 291, 292, 302, 304, 307, 308, 309, 311, 314, 315, 316, 317, 320, 321, 322, 324, 328, 329, 331, 333, 334], "result": [1, 2, 5, 6, 19, 29, 34, 35, 64, 67, 68, 70, 86, 98, 99, 156, 174, 180, 189, 198, 216, 218, 224, 228, 233, 235, 239, 241, 247, 248, 258, 259, 267, 274, 284, 286, 303, 313, 315, 324, 325, 329, 334, 336], "type": [1, 2, 3, 4, 5, 6, 10, 11, 12, 19, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 45, 46, 48, 60, 61, 64, 65, 67, 68, 69, 70, 71, 72, 87, 92, 94, 97, 98, 99, 112, 146, 155, 157, 171, 174, 177, 178, 179, 181, 182, 189, 193, 194, 195, 198, 203, 204, 205, 206, 207, 208, 210, 211, 213, 214, 216, 229, 233, 237, 246, 252, 260, 265, 266, 289, 291, 300, 315, 324, 337], "9": [1, 2, 4, 5, 6, 8, 13, 14, 15, 20, 21, 22, 23, 24, 25, 40, 41, 45, 46, 48, 60, 61, 64, 65, 75, 76, 77, 85, 88, 89, 91, 92, 93, 94, 95, 108, 112, 189, 213, 214, 218, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 286, 287, 292, 295, 296, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 328, 329, 330, 331, 332, 333, 334, 336], "2": [1, 2, 3, 4, 5, 6, 8, 13, 14, 15, 19, 20, 21, 23, 24, 25, 33, 36, 37, 40, 42, 43, 46, 48, 60, 61, 64, 65, 67, 70, 71, 72, 75, 77, 78, 80, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 102, 109, 189, 199, 206, 210, 218, 220, 228, 229, 230, 231, 232, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 263, 264, 267, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 328, 329, 331, 333, 336], "ab": [1, 2, 189, 233, 258, 261, 284, 305, 311], "plane": [1, 2, 5, 8, 19, 20, 23, 36, 37, 40, 42, 48, 50, 60, 61, 216, 218, 221, 229, 230, 231, 234, 235, 237, 251, 252, 253, 254, 255, 256, 257, 259, 261, 274, 275, 277, 278, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 321, 322, 324, 328, 329, 331, 332, 333], "z": [1, 2, 3, 4, 5, 6, 19, 20, 23, 29, 30, 35, 36, 37, 40, 41, 42, 45, 48, 60, 61, 64, 65, 67, 76, 177, 216, 218, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 273, 275, 276, 277, 279, 281, 284, 296, 302, 303, 304, 305, 307, 308, 309, 311, 312, 314, 315, 317, 319, 320, 321, 322, 324, 328, 329, 330, 331, 332, 333, 334], "averag": [1, 2, 5, 218, 261, 276, 283, 285, 287, 303, 305, 306, 310, 312, 324, 332, 333, 334], "__call__": [1, 2, 19, 21, 22, 23, 24, 25, 67], "call": [1, 2, 3, 5, 6, 7, 19, 36, 37, 75, 76, 77, 85, 87, 88, 89, 90, 91, 93, 94, 95, 98, 149, 150, 151, 156, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 179, 180, 203, 204, 205, 206, 207, 208, 209, 210, 211, 216, 228, 229, 230, 231, 233, 234, 236, 244, 247, 249, 252, 260, 261, 267, 272, 280, 285, 287, 293, 302, 313, 315, 327, 334, 337], "self": [1, 2, 3, 5, 6, 98, 177, 178, 179, 180, 181, 189, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 229, 230, 231, 233, 263, 264, 267, 272, 289, 291, 292, 293, 294, 295, 308, 315, 317, 336], "inifinitesimali": 1, "number": [1, 2, 3, 4, 5, 6, 19, 20, 21, 22, 23, 24, 25, 29, 30, 35, 37, 40, 42, 43, 48, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 80, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 163, 174, 189, 198, 207, 210, 213, 214, 216, 218, 228, 229, 231, 233, 235, 236, 237, 238, 239, 241, 242, 243, 244, 246, 258, 260, 267, 277, 278, 280, 284, 291, 303, 311, 314, 317, 324, 333, 336], "real": [1, 2, 4, 5, 6, 20, 21, 22, 23, 24, 25, 30, 40, 42, 43, 48, 61, 64, 65, 75, 76, 77, 78, 85, 88, 89, 90, 91, 92, 93, 94, 95, 174, 189, 198, 207, 210, 213, 214, 233, 252, 255, 256, 258, 284], "__matmul__": [1, 2], "other": [1, 2, 4, 5, 6, 15, 19, 23, 26, 33, 67, 68, 70, 86, 98, 99, 163, 189, 204, 205, 206, 207, 210, 216, 228, 231, 238, 239, 240, 241, 242, 243, 247, 252, 258, 260, 266, 270, 271, 275, 276, 277, 284, 295, 302, 303, 312, 314, 315, 320, 327, 331, 334, 336], "binari": [1, 2, 6, 86, 98, 99, 163, 174, 216, 233, 234, 260, 286], "dot": [1, 2], "product": [1, 2, 3, 235, 257, 272, 309], "It": [1, 2, 4, 5, 6, 12, 19, 20, 21, 23, 24, 25, 36, 37, 67, 69, 71, 72, 86, 97, 98, 99, 163, 189, 200, 203, 204, 205, 206, 207, 210, 216, 222, 228, 229, 230, 231, 233, 234, 235, 236, 237, 239, 241, 242, 243, 244, 249, 250, 252, 253, 254, 255, 256, 259, 260, 261, 262, 267, 269, 283, 290, 291, 298, 302, 313, 324, 330], "can": [1, 2, 3, 4, 5, 6, 12, 15, 19, 20, 21, 22, 23, 24, 25, 29, 30, 35, 36, 37, 42, 46, 60, 61, 65, 67, 68, 69, 70, 86, 91, 92, 94, 95, 97, 98, 99, 146, 149, 150, 151, 154, 156, 158, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 180, 183, 189, 204, 209, 216, 217, 218, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337], "appli": [1, 2, 3, 6, 19, 23, 46, 67, 70, 98, 99, 189, 216, 218, 235, 251, 254, 255, 257, 261, 281, 284, 303, 304, 305, 314, 319, 321, 324, 329, 330, 331, 332], "between": [1, 2, 4, 5, 6, 19, 30, 34, 35, 48, 90, 98, 99, 157, 182, 216, 220, 229, 231, 233, 238, 241, 245, 253, 258, 270, 275, 276, 277, 302, 303, 304, 313, 314, 316, 318, 324, 329, 333, 334], "two": [1, 2, 3, 4, 5, 6, 19, 36, 37, 67, 68, 70, 90, 94, 98, 99, 189, 216, 218, 228, 229, 231, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 247, 248, 249, 252, 258, 261, 265, 266, 270, 273, 275, 276, 279, 281, 286, 291, 293, 302, 303, 304, 306, 310, 315, 318, 321, 322, 324, 325, 328, 329, 330, 333, 334, 337], "array_lik": [1, 2, 4, 5, 6, 19, 21, 24, 25, 48, 64, 75, 88, 91, 93, 94, 334], "length": [1, 2, 4, 5, 6, 19, 21, 24, 25, 40, 75, 88, 90, 93, 94, 189, 210, 216, 218, 228, 229, 233, 235, 236, 238, 239, 241, 242, 243, 244, 247, 248, 249, 253, 255, 256, 286, 291, 294, 302, 303, 304, 306, 307, 308, 310, 317, 324, 328, 331, 332, 333], "second": [1, 2, 3, 5, 6, 21, 24, 69, 91, 94, 95, 98, 99, 146, 189, 216, 229, 231, 233, 235, 237, 239, 242, 243, 244, 248, 249, 253, 260, 261, 270, 284, 286, 304, 308, 324, 330, 335], "operand": [1, 2, 5, 6, 98, 99, 189, 233, 286, 334], "rais": [1, 2, 4, 5, 6, 19, 20, 23, 33, 35, 36, 37, 67, 68, 69, 70, 71, 72, 86, 87, 97, 98, 152, 156, 175, 180, 189, 198, 203, 204, 205, 206, 207, 208, 209, 210, 230, 231, 233, 239, 241, 243, 248, 250, 263, 264, 267, 268, 272, 289, 291, 294, 295, 315, 334, 335], "typeerror": [1, 2, 6, 68, 76, 85, 90, 91, 95, 98, 203, 204, 205, 206, 207, 209, 210, 211, 216, 248, 250, 263, 264, 291, 294, 295, 334], "If": [1, 2, 3, 4, 5, 6, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 30, 33, 35, 36, 37, 64, 67, 68, 69, 70, 71, 72, 75, 76, 77, 85, 86, 87, 88, 89, 91, 93, 94, 97, 98, 152, 155, 156, 163, 174, 175, 177, 179, 180, 189, 193, 195, 198, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 217, 222, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 243, 244, 248, 249, 250, 257, 258, 261, 263, 264, 265, 266, 267, 270, 272, 274, 277, 283, 284, 286, 287, 289, 291, 295, 301, 303, 310, 324, 326, 334, 335, 336, 337], "cannot": [1, 2, 6, 19, 20, 23, 69, 70, 71, 72, 98, 156, 163, 198, 203, 213, 214, 216, 230, 231, 233, 239, 272, 305, 324, 337], "ds2": 1, "__mul__": [1, 2, 6, 233], "ani": [1, 2, 4, 5, 6, 19, 20, 21, 22, 23, 24, 25, 67, 69, 70, 86, 163, 189, 208, 216, 217, 228, 229, 230, 231, 236, 237, 239, 243, 244, 245, 246, 247, 248, 249, 254, 255, 257, 259, 266, 267, 272, 280, 285, 287, 288, 289, 298, 309, 314, 315, 324, 327, 331, 334, 335, 336, 337], "dimens": [1, 2, 4, 5, 19, 20, 23, 42, 67, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 241, 250, 251, 259, 260, 302, 303, 304, 305, 307, 333, 334, 338], "multipl": [1, 2, 3, 4, 5, 6, 20, 21, 23, 24, 25, 67, 68, 70, 91, 94, 95, 163, 189, 216, 225, 233, 243, 244, 249, 260, 272, 277, 285, 286, 287, 301, 305, 331, 336], "dy": [1, 2, 5, 218, 233, 304, 305, 317], "dz": [1, 2, 5, 41, 65, 233, 304, 305], "dxdydz": 1, "true": [1, 2, 5, 6, 13, 14, 15, 19, 20, 23, 24, 36, 40, 46, 70, 71, 72, 86, 87, 98, 99, 152, 156, 157, 163, 174, 175, 177, 180, 182, 183, 189, 193, 195, 203, 204, 205, 206, 207, 208, 209, 210, 211, 228, 229, 230, 231, 233, 234, 237, 239, 241, 243, 247, 252, 254, 263, 264, 266, 272, 274, 277, 289, 291, 293, 295, 302, 311, 312, 334], "int": [1, 2, 5, 6, 19, 20, 22, 25, 30, 65, 67, 69, 70, 71, 72, 86, 87, 98, 155, 163, 174, 179, 200, 203, 207, 210, 229, 233, 243, 249, 257, 278, 291, 317, 334], "none": [2, 3, 4, 5, 6, 19, 20, 21, 22, 23, 24, 25, 30, 40, 48, 50, 54, 58, 64, 67, 70, 71, 72, 80, 82, 86, 87, 92, 98, 99, 163, 174, 189, 200, 203, 204, 205, 206, 207, 208, 209, 210, 213, 214, 229, 230, 231, 235, 237, 250, 252, 260, 334], "compon": [2, 4, 6, 12, 15, 19, 23, 32, 46, 55, 67, 210, 216, 229, 230, 231, 235, 236, 237, 250, 252, 253, 256, 259, 260, 261, 269, 277, 284, 285, 287, 303, 305, 308, 317, 319, 320, 322, 328, 330, 333], "dtype": [2, 4, 250, 260, 286, 314, 334], "unit": [2, 4, 5, 6, 19, 20, 21, 23, 24, 25, 30, 33, 34, 35, 42, 48, 61, 65, 189, 216, 223, 229, 232, 233, 235, 236, 237, 239, 240, 241, 243, 244, 245, 247, 249, 250, 251, 252, 253, 255, 256, 257, 259, 260, 277, 283, 284, 287, 288, 296, 302, 314, 336], "specifi": [2, 3, 4, 5, 6, 12, 19, 20, 21, 22, 23, 24, 25, 30, 34, 35, 40, 64, 86, 91, 94, 95, 163, 174, 189, 204, 206, 207, 210, 216, 228, 229, 231, 233, 235, 236, 237, 241, 243, 246, 252, 253, 259, 260, 266, 278, 283, 292, 293, 303, 304, 305, 312, 313, 314, 319, 320, 324, 332, 333, 334, 335, 336], "its": [2, 5, 6, 23, 34, 46, 48, 65, 98, 189, 203, 204, 205, 206, 207, 208, 209, 210, 216, 217, 218, 228, 229, 230, 231, 233, 235, 236, 239, 243, 246, 247, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 265, 266, 270, 272, 273, 276, 279, 281, 283, 292, 293, 294, 295, 303, 305, 306, 307, 310, 316, 318, 321, 326, 327, 331, 332, 333, 334, 335, 336, 337], "analysi": [2, 67, 68, 70, 71, 72, 189, 336], "visualis": [2, 4, 5, 6, 15, 20, 21, 22, 23, 24, 25, 40, 41, 42, 48, 60, 61, 64, 65, 67, 189, 218, 221, 234, 235, 237, 259, 260, 283, 299, 303, 324, 328, 333, 336], "The": [2, 3, 4, 5, 6, 12, 15, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 32, 34, 35, 40, 42, 43, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 64, 65, 67, 68, 70, 86, 91, 94, 95, 98, 112, 146, 156, 157, 158, 163, 174, 180, 182, 183, 189, 198, 204, 206, 216, 218, 219, 220, 222, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 258, 260, 261, 263, 264, 265, 266, 267, 270, 271, 273, 275, 276, 277, 279, 280, 281, 283, 284, 285, 286, 288, 293, 295, 296, 298, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 321, 322, 323, 324, 326, 328, 330, 331, 333, 334, 336, 337], "pass": [2, 3, 4, 5, 6, 14, 19, 20, 21, 22, 23, 24, 25, 36, 67, 68, 69, 70, 75, 76, 77, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 149, 150, 151, 152, 158, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 183, 189, 200, 203, 204, 205, 206, 207, 210, 216, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 257, 260, 261, 263, 264, 265, 266, 267, 271, 272, 274, 277, 278, 279, 280, 283, 285, 287, 288, 289, 291, 293, 294, 295, 309, 313, 314, 318, 320, 323, 324, 325, 333, 334], "anoth": [2, 6, 228, 232, 239, 241, 254, 261, 265, 266, 275, 276, 285, 303, 322], "must": [2, 3, 4, 5, 6, 12, 19, 20, 23, 25, 36, 37, 40, 86, 91, 94, 95, 179, 200, 203, 207, 210, 216, 229, 231, 233, 235, 236, 237, 241, 243, 244, 249, 250, 253, 263, 264, 266, 267, 268, 269, 273, 275, 276, 279, 281, 291, 312, 315, 321, 324, 333, 334], "": [2, 5, 6, 19, 23, 48, 69, 70, 71, 72, 78, 86, 91, 92, 94, 163, 189, 216, 218, 231, 233, 244, 246, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 266, 269, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 291, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 328, 329, 330, 331, 332, 334], "scalar": [2, 4, 6, 14, 15, 19, 20, 23, 34, 35, 36, 37, 40, 42, 48, 50, 51, 53, 54, 55, 56, 57, 58, 60, 61, 64, 65, 67, 68, 70, 76, 77, 85, 89, 91, 95, 189, 204, 206, 211, 216, 218, 230, 232, 233, 235, 236, 250, 252, 253, 255, 256, 257, 259, 260, 261, 263, 264, 270, 283, 291, 295, 303, 308, 317, 322, 328, 329, 331, 333, 336], "three": [2, 3, 4, 5, 15, 33, 36, 37, 67, 94, 210, 218, 228, 229, 230, 233, 234, 235, 236, 239, 240, 246, 250, 255, 261, 263, 269, 270, 272, 273, 291, 302, 309, 316, 318, 330, 333, 335, 337], "dimension": [2, 19, 23, 33, 36, 37, 64, 210, 218, 228, 229, 230, 231, 233, 236, 237, 250, 251, 252, 256, 257, 259, 263, 273, 274, 275, 276, 279, 281, 291, 313, 315, 321, 323, 324, 328, 329, 330, 331, 333, 338], "set": [2, 4, 5, 6, 19, 24, 25, 48, 67, 68, 70, 71, 72, 90, 92, 156, 177, 180, 189, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 216, 219, 222, 228, 229, 232, 236, 240, 244, 248, 249, 250, 251, 252, 253, 255, 256, 257, 259, 260, 261, 268, 270, 271, 273, 275, 276, 279, 280, 281, 291, 293, 295, 298, 303, 304, 308, 316, 317, 318, 321, 322, 324, 326, 330, 333, 334, 336, 337], "detail": [2, 3, 6, 7, 8, 22, 23, 33, 36, 37, 67, 86, 91, 94, 95, 149, 150, 151, 158, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 183, 190, 216, 217, 219, 227, 229, 231, 237, 261, 267, 270, 277, 302, 303, 304, 305, 312, 314, 320, 324, 327, 332, 334, 335, 336, 337, 338], "how": [2, 19, 36, 37, 217, 219, 229, 230, 231, 233, 235, 236, 239, 241, 243, 244, 246, 247, 249, 253, 254, 258, 259, 261, 270, 272, 273, 275, 276, 277, 278, 279, 281, 285, 287, 301, 302, 306, 309, 312, 314, 315, 316, 318, 319, 321, 323, 328, 330, 331, 332, 333], "refer": [2, 3, 6, 7, 8, 19, 22, 23, 36, 60, 61, 64, 65, 67, 86, 91, 94, 95, 149, 150, 151, 158, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 183, 190, 216, 218, 219, 227, 229, 230, 231, 233, 235, 236, 239, 250, 261, 265, 266, 267, 270, 301, 312, 314, 320, 324, 327, 334, 335, 336, 337], "similarli": [2, 4, 6, 216, 230, 231, 233, 235, 238, 239, 247, 250, 258, 265, 266, 283, 291, 295, 296, 303, 306, 310, 314, 323, 330, 332, 333, 334], "ha": [2, 5, 15, 19, 23, 34, 35, 67, 68, 70, 94, 180, 203, 204, 206, 207, 210, 216, 218, 229, 231, 233, 235, 236, 237, 239, 241, 245, 249, 250, 252, 253, 255, 257, 258, 259, 260, 267, 272, 273, 275, 276, 279, 281, 284, 288, 293, 295, 313, 314, 315, 321, 322, 324, 328, 331, 334, 335, 336], "normalis": [2, 29, 216, 218, 221, 235, 273, 275, 276, 279, 281, 321], "pleas": [2, 3, 6, 7, 8, 19, 22, 23, 36, 76, 94, 149, 150, 151, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 190, 217, 228, 229, 230, 231, 233, 235, 239, 243, 247, 265, 266, 277, 301, 302, 303, 304, 312, 314, 315, 318, 320, 324, 327, 328, 329, 332, 335, 336, 337, 338], "rectangular": [2, 231, 235], "callabl": [2, 19, 67, 91, 94, 95, 174, 216, 324, 333], "dict": [2, 5, 6, 19, 23, 29, 68, 70, 75, 76, 77, 85, 88, 89, 91, 93, 94, 95, 189, 195, 200, 231, 250, 252], "option": [2, 3, 4, 5, 6, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 29, 30, 34, 35, 36, 37, 40, 42, 64, 67, 69, 70, 71, 72, 78, 86, 87, 90, 91, 92, 94, 95, 98, 163, 174, 175, 177, 189, 200, 203, 204, 207, 210, 216, 218, 228, 229, 233, 237, 244, 246, 260, 261, 265, 266, 280, 312, 324, 332, 334, 335, 337], "properti": [2, 3, 4, 5, 6, 19, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 149, 150, 151, 154, 155, 156, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 189, 206, 216, 218, 231, 233, 239, 244, 247, 249, 260, 263, 264, 265, 266, 267, 269, 274, 306, 310, 311, 330], "default": [2, 3, 4, 5, 6, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 29, 30, 34, 35, 36, 37, 69, 70, 71, 72, 86, 87, 91, 92, 98, 149, 150, 151, 154, 156, 158, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 180, 183, 189, 193, 195, 200, 203, 216, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 240, 243, 244, 245, 249, 250, 258, 261, 268, 277, 283, 285, 287, 288, 293, 297, 303, 314, 334, 337], "mean": [2, 19, 23, 26, 42, 48, 231, 232, 233, 239, 241, 254, 284, 332, 334], "provid": [2, 19, 67, 68, 70, 71, 72, 91, 92, 94, 95, 97, 163, 216, 228, 229, 230, 231, 233, 250, 258, 260, 265, 266, 267, 268, 272, 273, 275, 276, 279, 281, 283, 284, 287, 293, 295, 296, 298, 303, 304, 315, 327, 333, 334, 335, 337], "initialis": [2, 4, 76, 86, 97, 98, 216, 228, 229, 233, 235, 236, 266, 267, 268, 291, 302, 304, 306, 310, 312, 313, 316, 318, 324, 328, 329, 330, 331, 332], "zero": [2, 6, 19, 20, 23, 36, 40, 45, 48, 216, 228, 229, 230, 231, 232, 235, 236, 237, 240, 253, 303, 304, 306, 307, 308, 310, 317, 330, 334], "str": [2, 3, 4, 5, 6, 10, 11, 12, 13, 14, 15, 19, 20, 23, 24, 25, 29, 30, 34, 35, 36, 37, 61, 67, 68, 69, 70, 71, 72, 76, 86, 87, 92, 94, 97, 98, 154, 156, 163, 174, 177, 178, 179, 180, 181, 189, 193, 194, 195, 200, 203, 205, 209, 211, 250, 289, 294, 334], "np": [2, 40, 46, 60, 61, 65, 91, 94, 95, 189, 231, 233, 235, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 284, 302, 305, 324, 334, 338], "data": [2, 4, 11, 12, 14, 15, 19, 20, 66, 67, 68, 70, 71, 72, 86, 163, 175, 188, 189, 216, 229, 230, 231, 235, 238, 250, 274, 277, 283, 284, 285, 286, 287, 288, 302, 303, 304, 305, 312, 314, 315, 322, 323, 324, 328, 329, 330, 334, 336], "underli": [2, 228, 236, 250], "numpi": [2, 5, 40, 60, 61, 65, 75, 88, 93, 94, 95, 210, 216, 228, 231, 235, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 284, 302, 305, 324, 334], "arrai": [2, 3, 5, 19, 40, 41, 42, 228, 236, 237, 243, 250, 251, 252, 253, 255, 256, 260, 261, 274, 275, 305, 324, 331, 334, 338], "best": [2, 4, 5, 6, 20, 21, 23, 24, 25, 156, 158, 180, 183, 189, 231, 272], "automat": [2, 3, 4, 5, 6, 12, 19, 20, 21, 22, 23, 24, 25, 70, 71, 72, 86, 174, 189, 216, 229, 231, 235, 243, 244, 249, 272, 284, 287, 309, 318, 327, 336, 337], "determin": [2, 5, 6, 19, 20, 23, 24, 25, 98, 156, 180, 230, 235, 253, 296], "current": [2, 19, 67, 68, 70, 76, 86, 91, 95, 152, 163, 174, 216, 234, 235, 237, 243, 258, 265, 272, 301, 326, 329, 330, 335, 337, 338], "float64": [2, 250, 260, 286, 314, 334], "physic": [2, 6, 37, 100, 219, 237, 301, 336], "uniform": [2, 19, 23, 42, 45, 221, 229, 231, 237, 252, 261, 303, 305, 306, 310, 324, 331, 333], "nano": [2, 5, 6, 243, 244, 249, 287], "size": [2, 4, 5, 6, 20, 21, 23, 24, 25, 112, 189, 210, 216, 231, 233, 235, 238, 239, 241, 242, 243, 244, 249, 252, 263, 284, 291, 294, 302, 303, 304, 308, 309, 317, 324, 328, 329, 330, 331, 333, 334], "thin": [2, 5, 243, 244, 249, 252, 253, 303, 304, 305, 317, 329, 333], "film": [2, 5, 243, 244, 249, 253, 303, 304, 305, 317, 329, 333], "50e": [2, 5, 6, 8, 20, 22, 24, 25, 45, 46, 48, 61, 65, 213, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 260, 270, 277, 278, 307, 308, 309, 314, 317, 319, 320, 329, 332, 333], "25e": [2, 5, 6, 45, 46, 48, 60, 61, 231, 239, 259, 260, 303, 324], "5e": [2, 5, 6, 13, 14, 15, 40, 41, 64, 75, 76, 77, 85, 88, 89, 91, 93, 94, 95, 98, 99, 213, 214, 218, 229, 230, 231, 233, 234, 238, 239, 240, 241, 242, 243, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 264, 265, 266, 275, 276, 277, 278, 286, 296, 303, 304, 305, 307, 308, 309, 311, 312, 314, 317, 319, 320, 322, 323, 324, 328, 331, 333, 334], "1e": [2, 4, 5, 6, 20, 21, 23, 24, 25, 40, 41, 45, 46, 48, 60, 61, 64, 65, 76, 82, 85, 90, 91, 92, 94, 95, 97, 98, 99, 112, 152, 175, 189, 213, 214, 216, 229, 230, 231, 233, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 253, 255, 260, 266, 269, 270, 273, 275, 276, 277, 278, 279, 280, 281, 284, 287, 288, 296, 302, 303, 304, 306, 307, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 323, 324, 325, 328, 330, 331, 332, 333, 334], "10": [2, 3, 4, 5, 6, 8, 13, 14, 15, 19, 20, 21, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, 37, 42, 67, 91, 94, 189, 207, 210, 213, 214, 218, 220, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 252, 253, 254, 255, 258, 259, 260, 261, 263, 264, 265, 266, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 286, 287, 291, 303, 304, 305, 306, 307, 308, 310, 311, 312, 314, 315, 317, 321, 322, 323, 324, 328, 329, 330, 331, 332, 333, 336], "n": [2, 3, 4, 5, 6, 8, 13, 14, 15, 19, 20, 21, 23, 24, 25, 30, 34, 35, 37, 61, 67, 69, 70, 75, 76, 77, 85, 88, 89, 91, 92, 93, 94, 95, 109, 152, 175, 189, 213, 214, 216, 218, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 249, 250, 260, 261, 269, 277, 278, 280, 283, 284, 287, 293, 296, 302, 303, 304, 305, 308, 310, 311, 312, 314, 316, 317, 318, 319, 320, 322, 323, 324, 325, 328, 329, 330, 331, 332, 333, 337, 338], "50e9": 2, "25e9": 2, "5e9": [2, 324], "1e9": [2, 94, 218, 230, 231, 234, 238, 266, 281, 305, 321, 323, 324], "8": [2, 5, 70, 174, 218, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 263, 264, 265, 266, 268, 269, 272, 273, 275, 276, 277, 279, 280, 281, 283, 284, 286, 287, 295, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 314, 315, 317, 318, 321, 322, 323, 324, 328, 329, 330, 331, 332, 333, 334, 336, 337], "conveni": [2, 19, 23, 28, 152, 175, 189, 216, 229, 231, 233, 235, 250, 260, 261, 262, 283, 287, 290, 296, 302, 314, 334], "13": [2, 91, 94, 95, 171, 218, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 243, 244, 247, 249, 252, 253, 255, 257, 258, 260, 261, 262, 263, 265, 266, 268, 272, 273, 274, 275, 276, 277, 278, 279, 281, 283, 284, 286, 303, 305, 306, 308, 310, 311, 312, 314, 315, 317, 318, 321, 323, 324, 330, 331, 332, 333, 334], "__add__": [2, 98, 99, 315], "constant": [2, 3, 29, 33, 36, 37, 48, 75, 76, 77, 85, 88, 89, 90, 91, 93, 94, 98, 100, 105, 106, 107, 109, 203, 204, 205, 206, 207, 208, 209, 210, 211, 218, 225, 232, 235, 253, 258, 265, 266, 300, 301, 302, 303, 304, 305, 310, 322, 324, 328, 329, 330, 331, 332], "either": [2, 5, 6, 19, 20, 21, 24, 25, 30, 40, 75, 76, 77, 85, 88, 89, 91, 93, 94, 95, 98, 233, 235, 237, 239, 243, 247, 249, 250, 255, 258, 266, 324, 331, 333], "iter": [2, 5, 67, 68, 69, 70, 97, 98, 189, 216, 228, 239, 241, 260, 261, 274, 277, 283, 284, 303, 312, 314, 315, 323, 330, 333], "tupl": [2, 4, 5, 6, 19, 21, 23, 24, 25, 45, 46, 75, 88, 90, 93, 94, 146, 189, 210, 216, 228, 229, 233, 236, 239, 241, 242, 243, 244, 247, 248, 249, 261, 287, 291, 294, 295, 333], "list": [2, 4, 5, 19, 23, 24, 67, 68, 69, 70, 75, 80, 82, 88, 90, 93, 94, 97, 98, 146, 149, 150, 151, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 189, 193, 194, 198, 210, 211, 213, 217, 222, 228, 229, 231, 239, 241, 243, 246, 250, 260, 265, 266, 267, 284, 285, 287, 291, 296, 313, 324, 335, 336, 337], "ndarrai": [2, 75, 88, 93, 94, 210, 334], "both": [2, 4, 5, 6, 15, 19, 20, 23, 30, 195, 216, 228, 233, 239, 241, 242, 244, 249, 253, 254, 255, 259, 268, 279, 295, 301, 302, 324, 331, 337], "same": [2, 4, 5, 6, 19, 23, 67, 68, 70, 97, 98, 99, 152, 156, 163, 175, 180, 216, 225, 228, 229, 233, 234, 235, 236, 237, 239, 241, 243, 244, 246, 247, 249, 253, 255, 261, 267, 272, 274, 301, 306, 310, 311, 313, 316, 318, 324, 325, 328, 334, 335], "have": [2, 3, 4, 5, 6, 19, 23, 68, 94, 98, 163, 189, 216, 218, 228, 229, 230, 231, 233, 234, 235, 236, 237, 239, 240, 243, 244, 247, 248, 249, 250, 251, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 268, 270, 272, 273, 275, 276, 277, 279, 281, 283, 284, 285, 286, 291, 292, 293, 295, 303, 307, 309, 313, 314, 315, 316, 318, 320, 321, 324, 325, 327, 328, 330, 332, 333, 334, 335, 336, 337], "valueerror": [2, 4, 5, 6, 19, 20, 23, 33, 35, 36, 37, 67, 68, 71, 72, 75, 77, 88, 89, 93, 94, 98, 189, 198, 203, 204, 205, 206, 207, 208, 210, 216, 230, 231, 233, 239, 241, 248, 250, 263, 264, 268, 272, 291, 294, 295, 315], "add": [2, 4, 5, 23, 70, 71, 72, 98, 189, 218, 231, 242, 243, 244, 249, 265, 266, 268, 287, 303, 304, 315, 323, 324, 328, 331, 337], "f1": [2, 233], "f2": [2, 233], "re": [2, 6, 19, 229], "traceback": [2, 5, 6, 36, 37, 75, 76, 77, 85, 88, 89, 90, 91, 93, 94, 95, 98, 149, 150, 151, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 203, 204, 205, 206, 207, 208, 209, 210, 211, 230, 231, 233, 272, 315, 334], "most": [2, 5, 6, 23, 36, 37, 41, 75, 76, 77, 85, 88, 89, 90, 91, 93, 94, 95, 98, 149, 150, 151, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 203, 204, 205, 206, 207, 208, 209, 210, 211, 229, 230, 231, 233, 235, 237, 247, 252, 253, 272, 284, 295, 315, 324, 334], "recent": [2, 5, 6, 36, 37, 75, 76, 77, 85, 88, 89, 90, 91, 93, 94, 95, 98, 149, 150, 151, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 203, 204, 205, 206, 207, 208, 209, 210, 211, 230, 231, 233, 272, 315, 334], "last": [2, 4, 5, 6, 36, 37, 67, 69, 75, 76, 77, 85, 88, 89, 90, 91, 93, 94, 95, 98, 149, 150, 151, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 198, 203, 204, 205, 206, 207, 208, 209, 210, 211, 218, 228, 230, 231, 233, 235, 245, 250, 261, 263, 264, 272, 277, 283, 303, 313, 314, 315, 334], "__sub__": [2, 98], "__and__": 2, "cross": [2, 3, 60, 61, 235, 247, 250, 257, 322], "__array_ufunc__": 2, "ufunc": [2, 216, 334], "kwarg": [2, 3, 4, 5, 8, 19, 20, 21, 22, 23, 24, 25, 26, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 99, 149, 150, 151, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 189, 190, 203, 204, 205, 206, 207, 208, 209, 210, 211, 230, 231, 267], "support": [2, 189, 216, 222, 227, 228, 229, 231, 233, 235, 240, 243, 305, 309, 331, 334, 336], "point": [2, 4, 5, 6, 12, 13, 14, 15, 19, 20, 23, 29, 40, 41, 42, 45, 48, 60, 61, 64, 65, 189, 216, 218, 228, 229, 230, 231, 232, 233, 234, 236, 238, 239, 241, 243, 247, 255, 272, 273, 275, 276, 279, 281, 284, 293, 303, 304, 308, 309, 311, 312, 314, 316, 317, 318, 320, 321, 322, 324, 330, 331, 332, 333, 334, 336], "sampl": [2, 4, 19, 36, 37, 48, 60, 61, 112, 218, 228, 229, 230, 231, 232, 234, 236, 237, 238, 240, 241, 251, 252, 253, 254, 255, 256, 257, 259, 261, 273, 275, 276, 279, 281, 283, 285, 286, 287, 288, 302, 303, 304, 305, 307, 308, 309, 313, 315, 316, 317, 318, 321, 322, 323, 324, 328, 329, 331, 332, 333], "discretis": [2, 5, 20, 21, 23, 24, 34, 35, 112, 228, 230, 231, 233, 234, 235, 236, 239, 241, 242, 243, 244, 276, 284, 295, 302, 303, 304, 305, 306, 308, 309, 310, 313, 317, 322, 324, 328, 329, 330, 331, 332, 333], "belong": [2, 5, 6, 233, 236, 239, 241, 243, 247, 334], "whose": [2, 5, 6, 152, 163, 175, 210, 218, 228, 231, 233, 235, 236, 243, 273, 275, 276, 279, 281, 283, 292, 295, 313, 321, 334], "coordin": [2, 4, 5, 6, 19, 20, 67, 216, 228, 233, 235, 238, 239, 241, 245, 247, 248, 250, 252, 260, 302, 333], "mathbf": [2, 5, 6, 37, 42, 75, 76, 77, 78, 85, 89, 91, 93, 94, 95, 218, 233, 237, 239, 240, 243, 263, 264, 265, 266, 269, 270, 275, 276, 304, 306, 310, 311, 312, 317, 318, 323, 328, 329, 330, 331, 332, 333], "p": [2, 5, 6, 30, 48, 61, 91, 155, 157, 179, 182, 216, 229, 231, 237, 239, 243, 247, 254, 258, 266, 289, 296, 305, 324], "p_": [2, 5, 6, 247, 249, 333], "x": [2, 3, 4, 5, 6, 8, 14, 19, 20, 23, 29, 30, 35, 37, 40, 41, 42, 45, 48, 57, 60, 61, 63, 64, 65, 67, 68, 70, 71, 72, 76, 189, 190, 214, 216, 218, 223, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 249, 250, 252, 253, 254, 255, 257, 258, 260, 261, 266, 273, 275, 276, 277, 279, 281, 283, 284, 285, 286, 287, 288, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 317, 319, 320, 321, 322, 324, 328, 329, 330, 331, 332, 333, 334, 336], "y": [2, 4, 5, 6, 19, 20, 23, 29, 30, 35, 40, 41, 42, 45, 48, 60, 61, 64, 65, 67, 76, 189, 216, 218, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 249, 250, 252, 253, 254, 260, 261, 266, 273, 274, 275, 276, 277, 278, 279, 281, 283, 284, 285, 287, 296, 302, 303, 304, 305, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 328, 329, 330, 331, 332, 333, 334], "20": [2, 3, 6, 67, 218, 220, 229, 231, 232, 233, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 247, 251, 252, 253, 254, 258, 260, 261, 265, 266, 276, 277, 279, 283, 284, 286, 303, 304, 305, 306, 308, 310, 312, 314, 315, 316, 317, 318, 322, 323, 324, 328, 330, 331, 332, 333, 334], "4": [2, 4, 5, 37, 40, 42, 67, 70, 75, 88, 90, 91, 93, 163, 174, 218, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 328, 329, 330, 331, 332, 333, 336], "__dir__": [2, 5, 20, 23, 98], "extens": [2, 5, 13, 14, 15, 98, 172, 173, 216, 229, 234, 246, 261, 312, 337], "dir": [2, 5, 20, 23, 98], "label": [2, 4, 5, 6, 20, 21, 23, 24, 25, 177, 189, 216, 229, 231, 233, 243, 244, 249, 250, 252, 287, 302], "remov": [2, 3, 5, 6, 13, 14, 15, 20, 23, 98, 231, 234, 235, 324, 335], "grad": [2, 233], "div": [2, 233], "depend": [2, 19, 23, 30, 45, 61, 67, 70, 71, 72, 91, 94, 95, 163, 174, 189, 216, 218, 220, 229, 240, 245, 250, 252, 258, 260, 265, 275, 283, 284, 288, 301, 302, 323, 327, 331, 334], "avalil": [2, 5, 98], "attribut": [2, 5, 67, 97, 98, 100, 148, 149, 150, 151, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 189, 203, 204, 205, 206, 207, 208, 209, 210, 211, 216, 228, 229, 231, 232, 233, 235, 236, 237, 239, 240, 241, 243, 250, 260, 263, 264, 265, 266, 267, 277, 283, 294, 295, 300, 334], "__eq__": [2, 5, 6, 98, 99], "relat": [2, 5, 6, 39, 41, 46, 47, 59, 98, 99, 163, 216, 233, 235, 237, 239, 247, 258], "ar": [2, 3, 4, 5, 6, 11, 12, 13, 14, 15, 19, 20, 23, 24, 25, 29, 30, 32, 33, 34, 35, 36, 37, 42, 43, 48, 60, 67, 68, 70, 86, 90, 91, 94, 95, 98, 99, 152, 163, 174, 175, 179, 189, 193, 195, 198, 203, 206, 210, 216, 217, 218, 222, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 270, 272, 273, 274, 275, 276, 277, 278, 279, 281, 283, 284, 285, 287, 288, 292, 295, 296, 301, 302, 303, 304, 305, 306, 309, 310, 311, 313, 314, 315, 316, 318, 321, 322, 323, 324, 325, 326, 328, 331, 332, 333, 334, 336, 337, 338], "consid": [2, 5, 6, 98, 99, 214, 222, 228, 230, 301, 336], "equal": [2, 5, 6, 98, 99, 216, 228, 229, 233, 241, 250, 253, 293, 302, 324], "thei": [2, 5, 6, 12, 19, 20, 98, 99, 203, 230, 243, 246, 250, 252, 258, 261, 263, 264, 270, 272, 276, 313, 315, 331], "contain": [2, 4, 5, 9, 12, 19, 29, 67, 80, 82, 91, 92, 94, 95, 99, 112, 174, 180, 216, 219, 222, 231, 233, 235, 236, 237, 253, 260, 261, 272, 291, 293, 303, 304, 307, 309, 315, 324, 329, 332, 334, 335, 336, 337], "fals": [2, 5, 6, 7, 14, 19, 20, 23, 24, 36, 46, 70, 71, 72, 86, 87, 98, 99, 152, 156, 163, 175, 177, 180, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 247, 250, 252, 257, 260, 261, 277, 283, 291, 308, 314, 322, 329, 334], "otherwis": [2, 5, 6, 19, 23, 30, 86, 98, 99, 155, 179, 204, 206, 207, 210, 219, 229, 231, 236, 250, 263, 264, 267, 300, 334], "bool": [2, 5, 6, 13, 14, 15, 19, 20, 23, 24, 36, 70, 71, 72, 86, 87, 98, 99, 156, 163, 174, 175, 177, 180, 189, 193, 195, 203, 204, 207, 208, 209, 210, 247, 334], "check": [2, 5, 6, 86, 98, 155, 156, 177, 179, 180, 203, 205, 216, 228, 233, 234, 247, 252, 269, 286, 291, 293, 295, 303, 306, 310, 324, 327, 330, 332], "f3": [2, 233], "__getattr__": [2, 5, 98], "attr": [2, 5, 97, 98, 250], "access": [2, 3, 5, 19, 23, 67, 70, 71, 72, 98, 158, 177, 183, 216, 229, 231, 233, 235, 243, 246, 250, 259, 260, 265, 266, 274, 283, 327, 333, 334, 336], "individu": [2, 4, 5, 12, 19, 67, 68, 70, 71, 72, 98, 149, 150, 151, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 195, 200, 205, 216, 229, 233, 260, 267, 277, 283, 310, 311, 312, 314, 316, 331, 333, 336, 337], "custom": [2, 94, 216, 229, 233, 266, 277, 297, 324, 337, 338], "manual": [2, 19, 158, 183, 216, 229, 231, 235, 261, 293, 337], "get": [2, 3, 4, 5, 6, 61, 67, 68, 69, 70, 71, 72, 92, 97, 98, 112, 146, 149, 150, 151, 156, 157, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 179, 180, 182, 189, 216, 217, 218, 219, 222, 229, 231, 232, 233, 236, 239, 240, 241, 243, 244, 245, 247, 248, 249, 255, 260, 261, 265, 266, 272, 277, 280, 285, 288, 301, 314, 315, 324, 329, 335, 336, 337], "mx": [2, 218, 231, 233, 260, 261, 274, 277, 283, 284, 285, 287, 288, 302, 303, 304, 305, 312, 314, 315, 323, 324, 330], "my": [2, 218, 231, 233, 243, 244, 245, 246, 249, 260, 261, 274, 277, 283, 284, 285, 287, 288, 302, 303, 305, 309, 312, 314, 315, 323, 324, 330], "mz": [2, 218, 231, 233, 260, 261, 274, 277, 283, 284, 285, 287, 302, 303, 312, 314, 315, 319, 323, 324, 330], "__getitem__": [2, 5, 67, 69, 70, 98, 216], "item": [2, 5, 6, 67, 69, 70, 98, 270, 275, 276, 334], "subregion": [2, 5, 13, 14, 15, 21, 24, 90, 163, 216, 220, 221, 233, 236, 239, 266, 273, 275, 276, 279, 281, 301, 316, 318, 321, 322], "were": [2, 5, 216, 236, 337], "dictionari": [2, 5, 19, 23, 29, 68, 70, 75, 76, 77, 85, 88, 89, 91, 93, 94, 95, 189, 195, 200, 206, 216, 229, 236, 242, 243, 270, 275, 283, 293, 295, 316, 318, 321, 324], "when": [2, 4, 5, 6, 19, 20, 23, 48, 67, 69, 70, 71, 72, 87, 177, 179, 180, 189, 203, 216, 231, 233, 234, 241, 242, 243, 247, 248, 253, 254, 259, 261, 272, 274, 278, 280, 283, 284, 289, 294, 303, 309, 313, 315, 319, 320, 324, 329, 333, 334, 336, 337], "wa": [2, 4, 5, 69, 87, 97, 204, 205, 206, 207, 208, 209, 210, 216, 230, 231, 233, 234, 263, 264, 265, 266, 268, 283, 292, 305, 314, 336, 337], "creat": [2, 3, 4, 5, 6, 19, 20, 21, 22, 23, 24, 25, 26, 40, 69, 70, 71, 72, 86, 111, 163, 174, 189, 200, 216, 217, 218, 229, 230, 231, 233, 234, 238, 243, 244, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 267, 269, 271, 272, 274, 276, 277, 284, 286, 287, 302, 303, 304, 305, 308, 309, 313, 314, 319, 320, 322, 324, 329, 330, 331, 332, 333, 335, 336, 337], "altern": [2, 5, 95, 163, 174, 177, 252, 334, 337], "minimum": [2, 5, 6, 30, 198, 216, 233, 239, 245, 247, 252, 288, 290, 302, 331, 333], "origin": [2, 5, 48, 218, 229, 233, 241, 247, 253, 254, 333], "kei": [2, 5, 19, 91, 94, 95, 195, 200, 204, 206, 236, 242, 243, 253, 270, 273, 275, 276, 279, 281, 283, 295, 316, 321, 324], "disretisedfield": [2, 5, 92, 233], "100": [2, 5, 6, 19, 20, 21, 23, 24, 30, 34, 35, 216, 218, 233, 239, 241, 243, 247, 252, 253, 257, 258, 261, 284, 304, 307, 311, 314, 324, 328, 331, 333], "r1": [2, 5, 21, 24, 90, 316, 322], "r2": [2, 5, 21, 24, 90, 316, 322], "def": [2, 8, 20, 23, 40, 41, 42, 45, 48, 60, 61, 64, 65, 91, 94, 95, 190, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 218, 229, 230, 231, 232, 233, 234, 236, 237, 238, 251, 252, 253, 254, 255, 256, 258, 259, 261, 263, 264, 267, 271, 272, 273, 275, 276, 277, 279, 281, 285, 289, 291, 292, 294, 295, 302, 304, 307, 308, 309, 311, 314, 315, 316, 317, 320, 321, 322, 324, 328, 329, 331, 333, 334], "value_fun": [2, 13, 14, 15, 40, 41, 42, 64, 65, 230, 231, 234, 238], "els": [2, 20, 30, 40, 41, 42, 45, 48, 64, 70, 229, 230, 231, 232, 234, 236, 237, 247, 273, 276, 279, 291, 294, 302, 307, 308, 309, 311, 314, 315, 317, 320, 322, 324, 328, 329, 331, 333, 334], "subfield": 2, "9e": [2, 239, 241], "14e": [2, 5], "4e": [2, 40, 41, 64, 239, 241, 247, 251, 252, 253, 254, 255, 256, 259, 287, 308, 309, 317, 324, 333], "shape": [2, 216, 228, 235, 236, 237, 308, 323, 334], "__iter__": [2, 5, 67, 69, 97, 98], "gener": [2, 4, 5, 6, 9, 67, 70, 94, 98, 146, 163, 198, 229, 231, 235, 237, 239, 240, 241, 245, 247, 255, 258, 267, 284, 288, 290, 298, 316, 324, 334], "yield": [2, 5, 67, 69, 97, 98, 146], "all": [2, 3, 4, 5, 6, 15, 19, 20, 21, 23, 24, 25, 27, 30, 34, 35, 62, 67, 68, 69, 70, 73, 81, 83, 94, 97, 98, 113, 146, 147, 152, 159, 175, 179, 184, 187, 189, 191, 200, 201, 203, 210, 213, 216, 217, 218, 219, 222, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 242, 243, 244, 247, 249, 250, 251, 252, 253, 258, 259, 260, 261, 263, 264, 271, 272, 273, 274, 275, 276, 277, 279, 281, 283, 285, 286, 287, 288, 292, 293, 295, 298, 301, 302, 303, 304, 305, 306, 307, 309, 310, 314, 315, 316, 321, 324, 326, 327, 330, 331, 332, 333, 334, 336, 337, 338], "first": [2, 4, 5, 6, 15, 19, 21, 24, 67, 69, 146, 156, 158, 180, 183, 189, 198, 203, 205, 216, 218, 222, 228, 229, 230, 231, 233, 234, 235, 236, 237, 239, 242, 243, 244, 248, 249, 250, 252, 253, 260, 261, 272, 284, 286, 301, 304, 305, 306, 308, 309, 311, 313, 314, 317, 324, 326, 330, 334, 335, 336, 337], "wherea": [2, 4, 5, 23, 94, 146, 233, 243, 244, 245, 249, 273, 275, 276, 279, 283, 288, 316, 322], "one": [2, 4, 5, 6, 12, 15, 19, 20, 21, 23, 24, 25, 29, 30, 34, 35, 67, 68, 70, 71, 72, 86, 98, 163, 174, 189, 213, 216, 218, 228, 229, 231, 233, 234, 235, 236, 237, 239, 242, 243, 244, 247, 250, 258, 260, 261, 270, 273, 274, 275, 276, 277, 279, 280, 281, 284, 285, 286, 287, 291, 295, 301, 302, 313, 314, 315, 321, 322, 323, 324, 327, 328, 330, 331, 332, 334, 337], "through": [2, 40, 67, 70, 97, 155, 157, 179, 182, 239, 241, 245, 250, 252, 253, 259, 308, 309, 317, 333, 334, 336], "coord": [2, 250], "print": [2, 86, 87, 97, 98, 155, 174, 179, 200, 216, 231, 233, 236, 239, 241, 247, 248, 250, 252, 254, 258, 260, 263, 264, 267, 268, 280, 289, 291, 293, 294, 295, 302, 303, 306, 310, 311, 333, 334, 335], "indic": [2, 5, 86, 87, 239, 240, 252, 255, 280], "__lshift__": [2, 67, 68, 70, 189], "stack": [2, 68, 243, 248], "singl": [2, 19, 30, 67, 70, 75, 76, 77, 85, 86, 88, 89, 91, 93, 94, 95, 112, 163, 174, 189, 228, 229, 233, 235, 236, 239, 241, 252, 260, 261, 284, 286, 295, 296, 302, 324, 330, 334, 335, 336], "except": [2, 86, 230, 231, 233, 239, 241, 248, 263, 264, 267, 268, 289, 291, 294, 295, 315, 334], "disrectisedfield": 2, "10e": [2, 5, 6, 13, 14, 15, 22, 24, 25, 48, 60, 61, 65, 92, 94, 229, 231, 233, 238, 243, 247, 248, 250, 269, 273, 275, 276, 277, 278, 279, 281, 304, 305, 306, 308, 309, 310, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 331, 333], "2e": [2, 40, 41, 45, 46, 48, 61, 64, 85, 171, 218, 229, 230, 231, 233, 239, 240, 241, 242, 243, 247, 248, 250, 260, 266, 270, 278, 283, 296, 312, 329, 333], "6": [2, 4, 5, 6, 20, 21, 23, 24, 25, 68, 70, 71, 72, 105, 149, 150, 151, 189, 213, 214, 218, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 272, 273, 274, 275, 276, 277, 279, 280, 281, 283, 284, 285, 286, 287, 288, 291, 293, 294, 295, 296, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 328, 330, 331, 332, 333, 336], "abstract": [2, 67, 70, 79, 84, 86, 87, 98, 99, 155, 179, 267, 315], "variabl": [2, 5, 67, 68, 70, 71, 72, 163, 174, 180, 189, 203, 205, 216, 229, 243, 258, 261, 263, 264, 265, 266, 267, 277, 283, 284, 286, 287, 288, 291, 293, 295, 337], "e": [2, 3, 4, 5, 6, 19, 20, 21, 22, 23, 24, 25, 33, 40, 42, 43, 67, 68, 70, 75, 76, 77, 85, 86, 88, 89, 91, 93, 94, 98, 174, 189, 207, 216, 217, 218, 219, 229, 230, 231, 233, 234, 235, 242, 243, 244, 248, 249, 252, 255, 256, 258, 260, 262, 267, 274, 276, 277, 283, 284, 286, 293, 296, 302, 303, 305, 306, 310, 311, 312, 314, 315, 323, 324, 325, 330, 332, 333, 335, 336, 337], "g": [2, 4, 5, 6, 19, 20, 21, 22, 23, 24, 25, 33, 67, 68, 70, 75, 76, 77, 85, 86, 88, 89, 91, 93, 94, 98, 189, 207, 216, 217, 219, 229, 230, 231, 234, 242, 243, 244, 248, 249, 254, 258, 260, 267, 286, 293, 296, 302, 305, 324, 325, 330, 333, 335, 336], "multipli": [2, 4, 5, 6, 20, 21, 22, 23, 24, 25, 65, 91, 94, 95, 189, 212, 213, 214, 216, 230, 231, 243, 244, 245, 249, 252, 258, 266, 287, 288, 308, 317, 323, 324], "45": [2, 216, 231, 233, 235, 259, 266, 293, 302, 324, 334], "__rmul__": 2, "__truediv__": [2, 6, 233], "__neg__": 2, "unari": 2, "negat": 2, "each": [2, 6, 19, 29, 42, 70, 98, 163, 179, 218, 228, 233, 235, 237, 239, 243, 251, 253, 259, 261, 275, 276, 284, 285, 286, 287, 293, 311, 323, 331, 332, 333, 334], "equival": [2, 15, 216, 253, 255], "cdot": [2, 33, 37, 48, 61, 75, 76, 78, 85, 91, 93, 94, 95, 218, 237, 253, 255, 258, 264, 265, 266, 269, 273, 275, 279, 281, 303, 304, 306, 310, 311, 317, 318, 330, 331, 332], "3e": [2, 13, 14, 15, 230, 239, 242, 248, 260, 274, 303, 304, 305, 313, 324, 328, 329, 331], "1000": [2, 5, 216, 258, 296, 314, 324, 325, 332], "__pos__": 2, "itself": [2, 6, 11, 20, 230, 233, 239], "__pow__": [2, 233], "onli": [2, 3, 5, 6, 19, 20, 23, 24, 30, 32, 34, 35, 37, 70, 71, 72, 86, 87, 94, 98, 99, 112, 149, 150, 151, 156, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 180, 185, 203, 205, 207, 208, 209, 210, 216, 218, 228, 229, 231, 233, 235, 236, 237, 239, 240, 247, 250, 252, 253, 256, 259, 263, 264, 266, 267, 273, 275, 276, 277, 279, 281, 284, 285, 287, 291, 301, 303, 304, 308, 311, 313, 314, 317, 321, 324, 325, 330, 331, 332, 336, 337], "power": [2, 233, 253, 255], "attempt": [2, 5, 6, 36, 37, 75, 76, 77, 85, 88, 89, 90, 91, 93, 94, 95, 203, 204, 205, 206, 207, 208, 209, 210, 211, 230, 263, 264, 289, 291, 293, 294, 295, 334, 337], "__repr__": [2, 3, 4, 5, 6, 67, 68, 69, 71, 72, 92, 97, 98, 177, 178, 179, 180, 181, 189], "represent": [2, 3, 4, 5, 6, 11, 14, 15, 67, 68, 69, 71, 72, 92, 97, 98, 189, 216, 234, 236, 239, 247, 265, 266, 283, 332], "string": [2, 3, 4, 5, 6, 19, 23, 67, 68, 69, 70, 71, 72, 85, 87, 90, 91, 92, 94, 95, 97, 98, 163, 189, 205, 206, 228, 234, 239, 240, 241, 242, 243, 244, 245, 247, 249, 265, 266, 267, 273, 275, 276, 279, 281, 283, 285, 287, 291, 292, 294, 295, 321, 324, 334, 337], "intern": [2, 3, 4, 5, 6, 20, 21, 22, 23, 24, 25, 94, 189, 216, 229, 231, 235, 324, 325, 336, 338], "_repr_html_": [2, 3, 5, 6], "html": [2, 3, 5, 6, 91, 94, 95, 168, 216, 243, 244, 249, 287, 293, 302, 303, 304, 324, 335], "tag": [2, 3, 5, 6], "from": [2, 3, 4, 5, 6, 10, 11, 12, 19, 20, 23, 24, 25, 29, 40, 41, 48, 64, 65, 67, 69, 70, 86, 88, 98, 99, 146, 152, 156, 163, 180, 193, 194, 195, 199, 203, 204, 205, 206, 207, 208, 209, 210, 216, 218, 221, 229, 230, 231, 232, 233, 234, 235, 238, 239, 243, 244, 248, 249, 252, 253, 254, 255, 256, 257, 258, 259, 261, 263, 264, 267, 271, 272, 283, 284, 285, 286, 287, 288, 291, 292, 293, 296, 302, 303, 304, 305, 309, 312, 313, 314, 322, 324, 327, 330, 331, 332, 333, 336, 337], "subtract": 2, "divid": [2, 4, 5, 6, 20, 21, 23, 24, 25, 189, 198, 219, 233, 235, 239, 243, 244, 249, 287, 308, 317, 324, 334], "divis": [2, 216], "allow": [2, 19, 67, 68, 70, 76, 94, 149, 150, 151, 156, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 180, 189, 200, 203, 204, 205, 206, 207, 208, 209, 210, 216, 229, 231, 233, 235, 240, 241, 243, 244, 245, 249, 256, 259, 263, 264, 266, 267, 268, 272, 277, 285, 287, 288, 291, 294, 305, 309, 324, 336, 337, 338], "allclos": [2, 40, 46, 311], "rtol": 2, "05": [2, 218, 220, 251, 257, 258, 260, 261, 264, 277, 280, 293, 297, 302, 304, 306], "atol": 2, "08": [2, 229, 233, 238, 239, 240, 241, 242, 243, 247, 248, 250, 260, 277, 280, 303, 305, 309, 310, 311, 312, 315, 324, 333], "whether": [2, 23, 98, 234, 248, 250], "within": [2, 216, 236], "rel": [2, 216, 255, 257], "toler": [2, 6, 216, 327], "compar": [2, 35, 98, 99, 216, 235, 239, 247, 252, 259, 311, 336], "non": [2, 19, 20, 45, 48, 61, 189, 216, 229, 230, 235, 253, 255, 256, 259, 265, 270, 286, 304, 318, 324, 328, 329, 330, 331, 333, 334, 337], "classmethod": [2, 189], "coordinate_field": [2, 216, 236], "3d": [2, 19, 23, 216, 229, 231, 235, 236, 243, 244, 249, 259, 275, 308, 317, 332, 333], "midpoint": [2, 5, 216, 239, 250], "follow": [2, 3, 19, 23, 76, 91, 92, 94, 95, 216, 220, 227, 228, 229, 231, 233, 234, 235, 238, 239, 240, 241, 244, 250, 258, 261, 262, 263, 264, 267, 284, 291, 295, 302, 324, 326, 327, 328, 329, 332, 333, 335, 336, 337], "code": [2, 23, 94, 216, 217, 218, 236, 261, 266, 284, 291, 303, 328, 332, 335], "should": [2, 5, 12, 19, 23, 48, 71, 72, 94, 163, 189, 207, 210, 216, 222, 229, 231, 233, 236, 246, 250, 266, 267, 271, 273, 275, 276, 279, 281, 294, 301, 311, 314, 324, 331, 333, 334, 336, 337], "prefer": [2, 94, 331], "over": [2, 23, 29, 36, 67, 68, 70, 91, 94, 95, 200, 204, 206, 207, 210, 216, 222, 231, 260, 287, 293, 302, 303, 324, 327, 329, 334], "creation": [2, 19, 216, 233], "becaus": [2, 6, 19, 179, 189, 216, 218, 229, 230, 231, 233, 234, 240, 241, 247, 254, 263, 264, 266, 268, 270, 272, 286, 294, 305, 306, 310, 315, 316, 318, 324, 328, 332], "much": [2, 216, 217, 231, 233, 244, 249, 324, 330, 335], "better": [2, 216, 243, 261], "perform": [2, 48, 203, 216, 229, 233, 239, 243, 251, 252, 253, 257, 259, 287, 291, 306, 307, 310, 311, 334, 338], "cfield": [2, 233], "posit": [2, 3, 5, 48, 61, 77, 91, 189, 203, 207, 210, 216, 218, 228, 229, 231, 235, 236, 242, 247, 253, 254, 278, 291, 314, 324, 328, 329, 330, 331, 332, 333], "deriv": [2, 67, 79, 84, 86, 94, 97, 99, 203, 204, 205, 206, 207, 208, 209, 210, 218, 225, 233, 253, 262, 292, 301, 311, 317, 324], "direct": [2, 5, 6, 7, 9, 19, 23, 29, 30, 34, 35, 41, 42, 45, 46, 48, 60, 61, 64, 65, 216, 218, 228, 229, 231, 233, 237, 239, 240, 241, 242, 243, 244, 245, 248, 249, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 276, 279, 281, 284, 302, 303, 304, 305, 306, 308, 309, 310, 312, 314, 315, 317, 321, 324, 328, 329, 330, 331, 332, 333], "via": [2, 4, 5, 19, 23, 67, 68, 69, 70, 94, 163, 171, 174, 189, 216, 228, 230, 231, 234, 236, 247, 252, 260, 272, 276, 283, 288, 324, 336, 337], "argument": [2, 3, 4, 5, 6, 14, 19, 20, 21, 22, 23, 24, 25, 26, 67, 68, 69, 70, 76, 86, 87, 97, 149, 150, 151, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 189, 211, 216, 229, 230, 231, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 257, 259, 261, 263, 264, 265, 266, 267, 274, 278, 283, 285, 287, 288, 293, 295, 302, 306, 309, 310, 313, 314, 320, 324, 325], "order": [2, 5, 19, 20, 61, 92, 93, 94, 156, 180, 228, 231, 233, 235, 239, 245, 247, 250, 253, 254, 255, 256, 258, 259, 261, 266, 267, 270, 272, 273, 274, 275, 276, 281, 285, 288, 303, 305, 307, 309, 311, 313, 316, 318, 321, 324, 331, 332, 333, 337], "exist": [2, 67, 68, 70, 71, 72, 86, 152, 174, 175, 216, 233, 236, 267, 335, 336, 337], "In": [2, 5, 6, 20, 23, 35, 40, 48, 92, 94, 205, 216, 218, 228, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 255, 257, 258, 259, 261, 262, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 281, 284, 285, 287, 288, 291, 293, 294, 295, 303, 304, 305, 306, 307, 308, 309, 311, 313, 314, 315, 316, 317, 318, 321, 322, 323, 324, 328, 330, 331, 332, 333, 334, 335, 337], "case": [2, 4, 5, 6, 20, 21, 23, 24, 25, 67, 76, 189, 232, 233, 235, 236, 239, 241, 243, 244, 246, 247, 249, 266, 268, 275, 284, 287, 292, 294, 295, 301, 313, 324, 330, 331, 333], "more": [2, 3, 5, 6, 14, 20, 23, 67, 91, 94, 95, 152, 175, 200, 216, 218, 219, 229, 231, 235, 237, 239, 240, 242, 243, 244, 246, 247, 249, 255, 256, 263, 264, 267, 270, 293, 295, 301, 302, 303, 304, 312, 314, 318, 320, 324, 327, 330, 332, 333, 335, 336, 337], "precis": [2, 5, 14, 20, 23, 86, 152, 163, 174, 175, 216, 231, 243, 244, 246, 249, 263, 264, 293, 295, 318, 333, 334, 337], "assum": [2, 229, 231, 236, 247, 254, 259, 284, 309, 324, 326, 327, 330, 331, 333], "doe": [2, 19, 67, 68, 71, 72, 152, 175, 179, 189, 203, 204, 205, 206, 207, 208, 209, 210, 216, 227, 228, 231, 241, 243, 244, 249, 252, 258, 266, 267, 272, 275, 276, 281, 287, 290, 295, 298, 305, 309, 314, 321, 324, 325, 334, 336], "chang": [2, 4, 5, 19, 20, 23, 67, 94, 197, 203, 204, 205, 206, 207, 208, 209, 210, 211, 228, 229, 230, 231, 232, 233, 235, 236, 238, 241, 243, 244, 245, 249, 253, 254, 255, 256, 261, 265, 266, 274, 277, 283, 285, 288, 289, 292, 293, 295, 305, 309, 313, 314, 327, 330, 331, 334, 336, 337, 338], "strongli": [2, 231, 250], "boundari": [2, 3, 5, 216, 221, 235, 237, 253, 255, 256, 301, 305, 309], "condit": [2, 3, 5, 221, 235, 237, 247, 255, 256, 301, 309], "period": [2, 3, 5, 255, 256, 257, 258, 301, 309, 324], "neumann": [2, 5], "central": [2, 94, 231], "insid": [2, 6, 216, 222, 230, 231, 232, 233, 234, 235, 253, 258, 261, 267, 271, 272, 285, 301, 308, 309, 317, 332, 336], "forward": [2, 19, 229, 250, 324], "backward": 2, "notimplementederror": [2, 263, 264, 267], "higher": [2, 93, 200, 229, 233, 252, 255, 256, 266, 334], "than": [2, 19, 67, 68, 216, 218, 229, 235, 243, 252, 254, 293, 324], "ask": [2, 41, 232, 233, 238, 239, 240, 241, 243, 244, 245, 247, 249, 272, 293, 332, 333, 335, 336], "spatial": [2, 3, 5, 19, 23, 33, 36, 37, 45, 75, 76, 77, 85, 88, 89, 91, 93, 94, 216, 221, 229, 231, 235, 259, 263, 264, 295, 301, 305, 319, 336, 338], "vari": [2, 75, 76, 77, 85, 88, 89, 91, 93, 94, 221, 231, 245, 253, 263, 264, 270, 288, 295, 301, 319, 324, 330, 334], "we": [2, 6, 42, 48, 64, 65, 179, 216, 217, 218, 219, 220, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337], "choos": [2, 4, 189, 216, 235, 238, 243, 244, 247, 249, 275, 285, 287, 301, 303, 304, 305, 306, 310, 313, 315, 319, 320, 323, 331, 332, 337], "2x": 2, "3y": 2, "5z": 2, "accordingli": [2, 4, 5, 6, 20, 21, 23, 24, 25, 189, 242, 243, 247, 286, 295, 314, 323, 333], "expect": [2, 3, 12, 36, 240, 243, 244, 249, 273, 275, 276, 279, 281, 286, 287, 291, 306, 310, 314, 315, 321, 331, 332, 334], "100e": [2, 6, 218, 233, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 253, 254, 280, 302, 304, 307, 311, 331, 333], "try": [2, 231, 233, 239, 241, 248, 263, 264, 267, 268, 284, 289, 291, 294, 295, 301, 311, 315, 328, 332, 336, 337, 338], "howev": [2, 20, 189, 229, 230, 231, 233, 235, 236, 239, 240, 243, 244, 249, 253, 256, 258, 259, 261, 268, 277, 284, 292, 294, 295, 309, 319, 330, 333, 334, 337], "calcul": [2, 4, 5, 6, 20, 21, 23, 24, 25, 29, 31, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 86, 115, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 161, 174, 189, 216, 218, 220, 222, 227, 233, 237, 247, 252, 253, 255, 256, 257, 258, 259, 267, 271, 301, 302, 306, 310, 325, 332, 336], "from_xarrai": [2, 216], "xa": 2, "xarrai": [2, 19, 67, 216, 221, 228, 229, 260, 338], "dataarrai": [2, 19, 67, 216, 221, 229, 260, 338], "accept": [2, 4, 5, 6, 19, 20, 21, 22, 23, 24, 25, 69, 70, 86, 163, 189, 204, 206, 207, 210, 230, 231, 243, 244, 245, 249, 263, 264, 287, 288, 295, 314, 324], "four": [2, 67, 229, 250, 258], "addition": [2, 94, 229, 231, 267, 336, 337], "comp": [2, 19, 67, 250, 260], "correspond": [2, 5, 19, 20, 218, 229, 236, 244, 245, 247, 252, 288, 333], "geometr": [2, 250], "ax": [2, 4, 5, 6, 20, 21, 22, 23, 24, 25, 26, 67, 189, 216, 231, 233, 235, 242, 243, 244, 249, 250, 252, 257, 266, 273, 285, 287, 303, 324, 334], "respect": [2, 4, 42, 43, 48, 60, 61, 67, 216, 231, 235, 240, 244, 250, 252, 255, 258, 324], "repres": [2, 4, 67, 205, 216, 218, 235, 250, 331, 334], "along": [2, 5, 6, 41, 42, 46, 64, 65, 67, 189, 216, 229, 235, 239, 245, 248, 250, 251, 252, 253, 255, 259, 284, 305, 308, 314, 317, 331, 332, 334], "axi": [2, 4, 5, 6, 20, 21, 23, 24, 25, 26, 189, 216, 229, 230, 231, 233, 235, 238, 239, 241, 243, 244, 248, 249, 250, 252, 254, 255, 256, 257, 266, 270, 273, 277, 279, 285, 287, 302, 310, 314, 315, 319, 324, 328, 329, 331, 334], "space": [2, 19, 32, 40, 42, 51, 64, 65, 79, 86, 163, 189, 230, 233, 234, 239, 241, 243, 250, 252, 253, 254, 255, 256, 270, 273, 275, 276, 279, 281, 291, 320, 321, 324], "absenc": [2, 218], "util": [2, 19, 67, 68, 70, 71, 72, 176, 196, 202, 212, 216, 253, 277, 336], "note": [2, 19, 23, 60, 70, 71, 72, 76, 86, 87, 163, 216, 227, 228, 229, 230, 231, 235, 239, 243, 247, 252, 255, 256, 258, 261, 303, 304, 318, 324, 327, 334, 335, 336, 337], "keyerror": 2, "least": 2, "miss": [2, 189, 199, 216, 217, 220, 237, 239, 286], "ndim": 2, "xr": [2, 65, 250, 338], "ones": [2, 19, 67, 243, 250, 332], "float": [2, 4, 5, 6, 36, 157, 182, 203, 207, 210, 211, 213, 214, 216, 250, 291, 334], "arang": [2, 29, 243, 250, 324], "name": [2, 4, 5, 10, 11, 12, 13, 14, 15, 19, 23, 46, 48, 67, 68, 69, 70, 71, 72, 86, 87, 90, 92, 97, 98, 112, 146, 152, 154, 155, 156, 163, 174, 175, 178, 179, 180, 189, 193, 195, 200, 203, 204, 206, 207, 208, 209, 210, 216, 218, 228, 229, 231, 233, 236, 243, 244, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 263, 264, 265, 266, 268, 269, 273, 275, 276, 277, 278, 279, 281, 283, 284, 286, 289, 291, 293, 295, 297, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 328, 329, 330, 331, 332, 333, 334, 337], "mag": [2, 67, 250, 260], "21": [2, 216, 229, 231, 233, 235, 236, 238, 239, 242, 243, 250, 251, 258, 260, 261, 265, 266, 274, 283, 284, 286, 296, 303, 306, 310, 314, 315, 323, 324, 330, 333, 334], "fromfil": [2, 9, 10, 11, 12, 13, 14, 189, 190, 234, 283, 284, 285, 286, 287, 288], "filenam": [2, 4, 5, 6, 10, 11, 12, 13, 14, 15, 23, 24, 25, 86, 189, 193, 194, 195, 231, 234, 243, 244, 246, 249, 283, 287], "read": [2, 10, 11, 12, 13, 14, 70, 71, 72, 177, 189, 194, 216, 221, 261, 267, 272, 283, 309, 336], "ovf": [2, 11, 14, 16, 17, 70, 216, 234, 246, 336], "vtk": [2, 12, 15, 16, 17, 70, 216, 229, 230, 231, 234, 246, 260, 336], "hdf5": [2, 10, 13, 234, 336], "file": [2, 5, 10, 11, 12, 13, 14, 15, 16, 17, 67, 68, 70, 71, 72, 86, 91, 94, 95, 152, 163, 174, 175, 177, 178, 179, 181, 189, 193, 194, 195, 216, 218, 230, 231, 233, 260, 267, 271, 272, 274, 276, 280, 283, 284, 285, 286, 287, 288, 303, 309, 312, 315, 324, 327, 334, 335, 336, 337], "omf": [2, 11, 216, 234, 246, 260], "ohf": [2, 14, 234], "oef": 2, "h5": [2, 13, 234], "base": [2, 3, 4, 5, 6, 18, 19, 20, 21, 22, 23, 24, 25, 29, 31, 32, 37, 44, 48, 61, 63, 67, 69, 70, 86, 163, 174, 189, 203, 216, 229, 230, 231, 237, 239, 243, 244, 245, 247, 249, 253, 260, 261, 263, 264, 267, 287, 288, 305, 312, 314, 338], "o": [2, 13, 14, 15, 37, 67, 68, 69, 70, 71, 72, 76, 152, 175, 189, 190, 193, 194, 195, 216, 231, 234, 237, 238, 243, 244, 246, 249, 260, 261, 266, 274, 275, 283, 284, 285, 286, 287, 288, 302, 314, 331, 337], "dirnam": [2, 67, 68, 69, 70, 71, 72, 86, 163, 174, 189, 190, 193, 194, 195, 197, 260, 261, 274, 283, 285, 286, 287, 288], "path": [2, 10, 11, 12, 13, 14, 15, 42, 67, 68, 69, 70, 71, 72, 152, 154, 156, 175, 178, 180, 181, 189, 190, 193, 194, 195, 216, 234, 252, 260, 261, 272, 274, 283, 284, 285, 286, 287, 288, 293, 309, 337], "join": [2, 67, 68, 69, 70, 71, 72, 189, 190, 193, 194, 195, 260, 261, 274, 283, 284, 285, 286, 287, 288], "__file__": [2, 10, 11, 12, 67, 68, 69, 70, 71, 72, 189, 190, 193, 194, 195], "test": [2, 6, 10, 11, 12, 67, 68, 69, 70, 71, 72, 114, 115, 146, 158, 183, 185, 189, 190, 193, 194, 195, 247, 260, 261, 271, 283, 285, 286, 287, 288, 298, 336], "test_sampl": [2, 10, 11, 12, 67, 68, 69, 70, 71, 72, 189, 190, 193, 194, 195, 260, 261, 283, 285, 286, 287, 288], "oommf": [2, 11, 72, 76, 86, 91, 94, 95, 161, 162, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 181, 183, 189, 190, 193, 194, 195, 216, 218, 222, 227, 234, 251, 252, 254, 255, 256, 257, 259, 266, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 285, 286, 287, 288, 293, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 328, 329, 330, 331, 332, 336], "ovf2": [2, 11, 14], "bin4": [2, 11, 14, 86, 163, 174, 216, 234], "write": [2, 6, 9, 12, 13, 14, 15, 86, 87, 163, 177, 216, 217, 221, 232, 233, 267, 318, 324, 334, 336], "field_from_ovf": [2, 14], "field_from_vtk": [2, 15], "field_from_hdf5": [2, 13], "xyz": [2, 5, 7, 208, 233, 240, 255], "improp": [2, 7], "ce": 2, "explicitli": [2, 71, 72, 180, 229, 231, 243, 244, 249, 268, 272, 287, 292], "infinitesim": 2, "dvalu": 2, "befor": [2, 20, 23, 67, 68, 70, 156, 180, 203, 216, 231, 233, 237, 239, 243, 247, 261, 265, 266, 324, 328, 330, 331, 332, 333, 334, 337], "cumul": 2, "volum": [2, 3, 5, 6, 29, 46, 65, 235, 247, 257, 258, 306, 310, 334, 336], "int_": [2, 41, 218, 233, 311], "mathrm": [2, 231, 258, 324, 331], "v": [2, 4, 6, 33, 37, 40, 43, 65, 218, 233, 237, 238, 247, 252, 257, 258, 263, 290, 311], "r": [2, 4, 5, 6, 231, 233, 234, 238, 243, 244, 249, 251, 252, 253, 254, 255, 256, 257, 259, 263, 264, 305, 308, 317, 333, 337], "5000": 2, "2000": 2, "3000": 2, "f_plane": 2, "500": [2, 5, 98, 218, 252, 303, 314, 319, 320, 324, 328], "flux": [2, 41, 46, 52, 257], "300": [2, 43, 229, 252, 295, 314], "x_": [2, 233], "min": [2, 6, 247, 252, 257, 290], "max": [2, 6, 233, 247, 252, 253, 255, 256, 257, 261, 283, 290, 336], "30": [2, 20, 200, 211, 218, 229, 231, 233, 235, 236, 250, 253, 254, 258, 260, 261, 266, 286, 314, 315, 322, 323, 324, 333, 334], "line": [2, 5, 6, 15, 17, 19, 23, 24, 25, 163, 216, 221, 243, 244, 246, 249, 252, 253, 308, 315, 317, 324, 328, 331, 334, 335, 337], "given": [2, 3, 5, 19, 29, 30, 33, 35, 36, 40, 41, 48, 61, 198, 236, 237, 252, 253, 256, 258, 265, 266, 324, 331, 336, 337], "_": [2, 5, 6, 40, 41, 42, 46, 48, 75, 77, 78, 89, 91, 218, 229, 237, 239, 243, 252, 253, 257, 258, 265, 266, 269, 304, 306, 310, 311, 312, 323, 330, 332], "frac": [2, 5, 6, 37, 40, 41, 42, 43, 46, 48, 60, 61, 65, 76, 77, 78, 89, 91, 95, 218, 230, 233, 237, 240, 247, 252, 253, 255, 256, 257, 258, 265, 266, 269, 275, 302, 303, 304, 306, 310, 311, 312, 317, 323, 330, 332], "outsid": [2, 5, 48, 216, 230, 231, 232, 233, 247, 253, 261, 307, 308, 317], "domain": [2, 5, 74, 230, 284, 302, 303, 304, 313, 322, 324, 326, 330, 333, 336], "pad": [2, 5, 221, 253], "pad_width": [2, 5, 242], "mode": [2, 177, 216, 253], "ad": [2, 4, 5, 6, 20, 21, 22, 23, 24, 25, 26, 69, 94, 98, 99, 163, 189, 218, 231, 242, 260, 265, 266, 268, 270, 275, 276, 286, 303, 324, 328, 334, 337], "chosen": [2, 3, 5, 36, 67, 68, 70, 94, 189, 229, 244, 247, 248, 249, 272, 331], "assign": [2, 4, 19, 34, 203, 228, 231, 243, 265, 266, 267, 272, 285, 289, 291, 294, 334], "them": [2, 4, 67, 70, 98, 152, 229, 233, 235, 238, 239, 243, 244, 247, 249, 252, 255, 256, 265, 266, 277, 287, 291, 301, 302, 319, 331, 332, 335], "wai": [2, 5, 23, 156, 180, 189, 217, 229, 230, 231, 234, 236, 239, 240, 241, 243, 244, 249, 252, 258, 265, 266, 270, 273, 275, 276, 279, 281, 285, 287, 293, 295, 303, 310, 313, 318, 321, 324, 328, 333, 334, 337], "go": [2, 5, 6, 23, 86, 218, 228, 231, 233, 236, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 268, 273, 275, 276, 277, 278, 279, 281, 283, 287, 288, 303, 307, 308, 309, 310, 311, 313, 315, 316, 317, 318, 321, 323, 331, 332, 334, 337], "integ": [2, 5, 198, 203, 207, 210, 228, 233, 235, 239, 241, 242, 244, 291, 294, 334], "neg": [2, 5, 61, 69, 77, 89, 203, 236, 242, 253, 263, 264, 281, 301, 318, 321, 331, 333], "pf": 2, "arg": [2, 3, 5, 67, 189, 293], "perpendicular": [2, 5, 6, 46, 233, 241, 248, 255, 257, 266, 275, 331], "intersect": [2, 5, 229, 231, 241], "centr": [2, 5, 6, 218, 230, 236, 239, 241, 243, 247, 303, 304, 333], "keyword": [2, 3, 4, 5, 6, 19, 20, 21, 22, 23, 24, 25, 26, 68, 69, 70, 97, 149, 150, 151, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 189, 205, 216, 229, 230, 231, 245, 267, 288, 314], "parallel": [2, 5, 64, 65, 216, 233, 252, 255, 256, 258, 259, 272, 273, 276, 279, 281, 297, 302, 315, 321, 330, 331], "yz": [2, 5, 231, 233, 324], "15": [2, 5, 6, 189, 216, 218, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 243, 244, 247, 249, 252, 253, 257, 258, 260, 261, 265, 266, 273, 276, 279, 281, 286, 293, 296, 303, 304, 308, 311, 314, 317, 318, 321, 323, 324, 328, 329, 331, 332, 333, 334], "specif": [2, 5, 40, 61, 74, 86, 91, 94, 95, 156, 163, 180, 203, 204, 206, 207, 210, 211, 219, 222, 243, 252, 256, 259, 263, 264, 267, 271, 301, 313, 336, 337], "project": [2, 171, 186, 229, 231, 243, 244, 249, 291, 312, 335, 336, 338], "out": [2, 5, 19, 23, 42, 70, 179, 218, 229, 231, 247, 251, 252, 253, 254, 259, 287, 305, 322, 328, 329, 334, 337], "One": [2, 3, 76, 233, 236, 250, 325, 333], "would": [2, 69, 163, 204, 206, 207, 210, 229, 231, 235, 236, 239, 242, 243, 252, 263, 264, 286, 291, 294, 295, 311, 324, 335, 337], "certain": [2, 19, 23, 203, 209, 231, 232, 233, 237, 239, 242, 245, 270, 285, 287, 288, 291, 294, 310, 324, 334], "to_vtk": 2, "convert": [2, 5, 6, 15, 189, 216, 229, 243, 244, 246, 249, 250, 258, 260], "rectilinear": [2, 12], "grid": [2, 12, 231, 235, 302, 303, 305, 312], "conver": 2, "vtkrectilineargrid": 2, "store": [2, 4, 15, 67, 86, 163, 174, 189, 216, 238, 250, 260, 261, 283, 287, 288, 312], "cell_data": [2, 15], "rectilinear_grid": [2, 15], "attributeerror": [2, 97, 98, 149, 150, 151, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 203, 204, 205, 206, 207, 208, 209, 210, 211, 233, 267, 289, 291, 295], "f_vtk": 2, "getnumberofcel": 2, "to_xarrai": [2, 67, 216, 260], "addtion": 2, "select": [2, 4, 5, 19, 37, 61, 67, 68, 69, 70, 158, 183, 189, 218, 229, 237, 245, 250, 253, 255, 256, 258, 260, 285, 287, 288, 337], "sel": [2, 250], "bin8": [2, 11, 14, 15, 86, 163, 174, 216, 234], "extend_scalar": [2, 14], "save_subregion": [2, 5, 13, 14, 15], "written": [2, 10, 12, 13, 14, 42, 46, 86, 91, 95, 163, 174, 216, 233, 280], "field_to_vtk": [2, 12], "bin": [2, 15, 183, 216, 272, 293, 337], "txt": [2, 11, 14, 15, 86, 163, 174, 189, 193, 194, 195, 216, 234, 283, 336], "xml": [2, 15, 216], "save": [2, 4, 5, 6, 9, 13, 14, 15, 23, 24, 25, 69, 70, 71, 72, 86, 87, 152, 163, 175, 189, 216, 218, 229, 231, 234, 243, 244, 249, 267, 274, 277, 278, 283, 287, 303, 304, 305, 314, 330], "field_to_ovf": [2, 11], "final": [2, 3, 218, 233, 234, 235, 239, 243, 244, 247, 249, 254, 259, 269, 273, 275, 276, 278, 279, 281, 283, 286, 287, 302, 303, 305, 308, 311, 313, 315, 317, 321, 325, 331, 337], "field_to_hdf5": [2, 10], "interpret": [2, 229, 239, 337], "valid": [2, 5, 6, 24, 25, 203, 204, 205, 206, 207, 208, 209, 210, 211, 232, 243, 244, 249, 263, 264, 291, 295], "format": [2, 5, 6, 24, 25, 86, 163, 174, 216, 218, 234, 246, 302, 303, 306], "json": [2, 5, 13, 14, 15, 216], "15e": [2, 231, 238, 253, 324, 328, 329], "7": [2, 5, 6, 69, 91, 218, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 263, 264, 265, 269, 272, 273, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 291, 295, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 317, 318, 321, 322, 323, 324, 328, 329, 330, 331, 332, 333, 334, 336], "mytestfil": [2, 13, 14, 15], "isfil": [2, 13, 14, 15, 234], "field_read": [2, 13, 14], "delet": [2, 13, 14, 15, 179, 203, 218, 234, 276, 280], "__hash__": [2, 5, 6, 98, 99], "angl": [2, 3, 23, 30, 34, 35, 55, 56, 57, 59, 65, 216, 223, 231, 254, 257, 336], "slice": [2, 5, 19, 20, 23, 36, 37, 70, 216, 230, 231, 233, 237, 241, 253, 261, 305, 332, 333], "compoen": 2, "horizont": [2, 4, 189, 231, 243, 244, 249, 285, 287, 314, 319], "radian": [2, 30, 34, 35, 237, 252, 253], "pi": [2, 3, 37, 40, 41, 60, 61, 65, 94, 95, 218, 233, 235, 237, 251, 252, 254, 255, 256, 257, 258, 302, 317, 323, 324, 331, 334], "rang": [2, 4, 5, 23, 189, 198, 231, 254, 273, 276, 279, 281, 284, 285, 287, 311, 315, 316, 318, 321, 331, 334], "unsupport": [2, 233, 334], "ones_lik": 2, "entir": [2, 233, 239, 243, 281, 287, 321], "55": [2, 231, 233, 266, 275], "conjug": [2, 65, 162, 233, 252], "complex": [2, 65, 216, 247, 249, 284], "curl": [2, 302, 311], "nabla": [2, 76, 85, 95, 218, 265, 266, 269, 275, 276, 303, 304, 306, 310, 311, 317, 318, 331, 332], "time": [2, 6, 33, 37, 42, 46, 61, 67, 70, 71, 72, 76, 77, 86, 87, 89, 91, 94, 95, 151, 157, 170, 182, 189, 216, 218, 220, 236, 237, 252, 255, 257, 258, 260, 263, 265, 267, 269, 272, 275, 276, 277, 283, 284, 285, 286, 287, 288, 301, 303, 304, 305, 306, 309, 310, 311, 312, 314, 317, 319, 325, 327, 328, 329, 330, 331, 332, 333, 335], "left": [2, 37, 40, 41, 42, 43, 46, 48, 61, 65, 76, 91, 218, 233, 237, 247, 252, 253, 255, 256, 257, 258, 259, 260, 266, 273, 275, 276, 279, 291, 303, 317, 330, 334, 336], "partial": [2, 37, 41, 48, 76, 218, 233, 237, 252, 253, 266, 275, 317], "v_": [2, 290], "right": [2, 26, 37, 40, 41, 42, 43, 46, 48, 61, 65, 76, 91, 218, 233, 237, 244, 247, 249, 252, 253, 255, 256, 257, 258, 259, 260, 266, 273, 275, 276, 279, 291, 303, 317, 330, 336], "2xy": [2, 233], "2y": [2, 250], "5xz": 2, "diverg": [2, 23], "sum_i": 2, "fftn": 2, "fourier": [2, 32, 40, 42, 51, 61, 65, 189, 216, 252, 255, 256, 259, 284, 305], "transform": [2, 3, 32, 42, 51, 61, 65, 189, 216, 252, 255, 256, 259, 284, 305, 324], "fft": [2, 242, 299, 305, 334], "normal": [2, 229, 252, 260, 261, 266, 337], "2d": [2, 23, 229, 244, 249, 263, 275, 311, 332], "gradient": [2, 162], "contant": 2, "hv": [2, 67, 216, 218, 229, 253, 261], "plot": [2, 4, 5, 6, 8, 19, 20, 21, 22, 23, 24, 25, 50, 51, 52, 53, 54, 55, 56, 57, 58, 67, 189, 190, 216, 218, 219, 224, 228, 235, 237, 238, 243, 245, 250, 251, 252, 254, 255, 256, 257, 275, 277, 278, 284, 287, 288, 299, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 316, 317, 318, 319, 322, 324, 328, 329, 330, 332, 333, 338], "interfac": [2, 67, 216, 227, 229, 231, 261, 327, 336, 338], "holoview": [2, 19, 67, 216, 221, 230, 231, 261, 336], "hvplot": [2, 67, 229, 231, 253], "also": [2, 12, 24, 67, 94, 156, 163, 174, 180, 204, 205, 206, 207, 210, 216, 218, 222, 229, 230, 231, 232, 233, 235, 238, 239, 243, 244, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 266, 270, 272, 275, 276, 278, 284, 287, 292, 294, 295, 298, 302, 306, 310, 314, 324, 330, 331, 333, 334, 335, 337], "quickli": [2, 67, 229, 234], "avail": [2, 19, 37, 67, 94, 146, 156, 158, 180, 183, 216, 220, 229, 233, 235, 237, 254, 260, 262, 272, 280, 284, 293, 312, 324, 327, 336, 337], "document": [2, 3, 19, 23, 67, 91, 94, 95, 149, 150, 151, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 216, 229, 230, 231, 233, 235, 254, 259, 261, 263, 264, 270, 292, 301, 312, 324, 327, 335], "link": [2, 67, 337], "below": [2, 67, 229, 233, 235, 253, 259, 324, 334, 337], "contour": [2, 15, 19, 23, 67, 216, 252], "kdim": [2, 19, 67, 218, 229, 253, 261], "dynamicmap": [2, 19, 67], "ifftn": 2, "invers": [2, 189, 284], "imag": [2, 19, 40, 48, 50, 64, 177, 216, 220, 233, 272, 309, 337], "imaginari": [2, 55, 233], "part": [2, 19, 70, 205, 219, 229, 233, 235, 236, 239, 247, 252, 253, 257, 260, 273, 275, 276, 279, 281, 285, 304, 312, 317, 329, 332, 333, 336], "irfftn": 2, "k3d": [2, 5, 6, 20, 21, 22, 216, 218, 221, 229, 231, 235, 259, 269, 273, 275, 276, 279, 281, 303, 304, 306, 308, 310, 313, 315, 316, 317, 318, 321, 322, 323, 328, 329, 331, 332, 333, 336, 338], "laplac": [2, 311], "laplacian": 2, "f_": [2, 33, 233, 323], "assert": 2, "mpl": [2, 4, 5, 6, 8, 22, 23, 24, 25, 40, 42, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 64, 65, 189, 190, 216, 218, 234, 235, 237, 238, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 274, 275, 277, 278, 284, 285, 287, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 328, 329, 330, 331, 332, 333], "matplotlib": [2, 4, 5, 6, 18, 23, 24, 25, 26, 40, 41, 42, 48, 60, 61, 64, 65, 189, 216, 218, 221, 229, 230, 235, 243, 244, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 275, 285, 287, 302, 303, 305, 308, 314, 317, 324, 333, 336], "light": [2, 23, 43, 52, 64, 65, 216, 252, 256, 259], "obtain": [2, 6, 23, 29, 41, 64, 94, 152, 216, 231, 233, 235, 241, 245, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 272, 283, 284, 288, 303, 305, 328, 331, 336], "wrong": [2, 75, 76, 77, 85, 88, 89, 90, 91, 93, 94, 95, 216], "addit": [2, 3, 12, 19, 20, 23, 68, 70, 86, 163, 174, 177, 189, 200, 216, 228, 229, 231, 235, 236, 237, 244, 249, 250, 253, 254, 260, 261, 266, 267, 270, 293, 298, 303, 309, 318, 324, 331, 337], "manipul": [2, 188, 230, 250, 283, 322], "orient": [2, 37, 216, 218, 231, 233, 237, 245, 261, 288, 308, 311, 317, 322, 324, 331, 332, 336], "everi": [2, 70, 71, 72, 216, 228, 239, 260, 261, 270, 284, 293, 305, 337], "so": [2, 4, 5, 6, 20, 21, 22, 23, 24, 25, 69, 70, 88, 189, 216, 228, 229, 230, 231, 239, 243, 244, 245, 249, 252, 255, 256, 272, 273, 277, 279, 287, 288, 302, 305, 309, 311, 314, 315, 318, 319, 329, 331, 333, 335, 336, 337], "remain": [2, 19, 163, 229, 258, 275, 276, 313, 324], "unchang": 2, "phase": [2, 40, 41, 48, 50, 51, 52, 53, 54, 58, 79, 86, 94, 163, 233, 252, 253, 254], "rfftn": 2, "appropri": [2, 4, 5, 6, 20, 21, 23, 24, 25, 189, 303, 324, 328, 331, 337], "independ": [2, 23, 67, 68, 70, 71, 72, 94, 189, 216, 231, 233, 261, 267, 283, 284, 286, 287, 336, 337], "actual": [2, 216, 228, 235, 236, 272, 332, 337], "initi": [2, 3, 67, 94, 112, 203, 204, 205, 206, 207, 208, 209, 210, 216, 218, 229, 235, 251, 252, 253, 254, 255, 256, 257, 259, 260, 275, 284, 289, 304, 305, 308, 309, 313, 317, 318, 319, 320, 324, 330, 331], "anymor": [2, 228, 232, 233, 235], "value_funct": [2, 233], "now": [2, 216, 218, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 247, 248, 249, 251, 253, 255, 256, 258, 261, 263, 264, 265, 266, 268, 269, 272, 273, 274, 275, 276, 277, 278, 279, 281, 283, 285, 286, 288, 291, 292, 294, 295, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 328, 330, 331, 332, 333, 334, 337], "sub1": 2, "sub2": 2, "s1": 2, "s2": 2, "zero_field": 2, "rotat": [3, 94, 216, 221, 223, 244, 249, 255, 257, 324], "dure": [3, 4, 87, 97, 156, 163, 180, 216, 218, 228, 233, 235, 277, 303, 313, 332, 337], "new": [3, 12, 26, 67, 70, 71, 72, 156, 158, 180, 183, 189, 193, 194, 195, 216, 219, 222, 228, 229, 230, 231, 232, 233, 235, 236, 239, 241, 242, 250, 260, 261, 272, 283, 284, 288, 292, 294, 301, 326, 327, 332, 334, 335, 336, 337], "construct": 3, "interpol": [3, 19, 229, 231, 235, 252, 253, 255, 256, 259, 324], "onto": [3, 23, 235], "consecut": [3, 235, 260, 261], "possibl": [3, 26, 34, 35, 36, 94, 149, 150, 151, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 200, 216, 217, 229, 231, 233, 234, 235, 236, 237, 247, 250, 253, 255, 256, 260, 261, 270, 272, 276, 295, 324], "without": [3, 12, 19, 46, 87, 94, 179, 216, 220, 229, 231, 241, 244, 249, 272, 310, 324, 330, 331, 335, 336], "numer": [3, 194, 216, 218, 235, 239, 303, 324, 325, 336], "error": [3, 87, 175, 177, 178, 179, 181, 216, 235, 239, 243, 272, 305, 337], "alwai": [3, 19, 189, 228, 229, 231, 233, 235, 239, 247, 286, 287, 314, 316, 333], "start": [3, 6, 29, 69, 94, 216, 219, 222, 228, 231, 235, 238, 239, 243, 244, 248, 249, 273, 275, 276, 277, 278, 279, 281, 285, 293, 301, 303, 304, 305, 310, 311, 314, 316, 318, 320, 321, 322, 323, 324, 327, 330, 331, 336], "unrot": [3, 235], "effect": [3, 19, 48, 235, 253, 256, 259, 307, 310, 330, 331, 336], "math": [3, 23, 91, 94, 95, 162, 164, 165, 166, 167, 169, 170, 218, 233, 273, 276, 279, 317, 324, 334], "field_rot": [3, 235, 254, 259], "from_eul": [3, 235, 254], "seq": [3, 235, 254], "clear_rot": [3, 235, 254], "definit": [3, 37, 94, 228, 236, 237, 243, 247, 258, 270, 307, 324, 328, 333, 334, 336], "scipi": [3, 235, 258, 302, 305, 334], "These": [3, 46, 61, 216, 229, 247, 252, 253, 255, 258, 259, 260, 261, 270, 324], "directli": [3, 19, 23, 70, 94, 157, 163, 182, 216, 229, 235, 239, 252, 253, 258, 259, 261, 298, 324, 337], "relev": [3, 61, 235, 252, 253, 254, 255, 258, 259, 303, 312, 324, 335], "explan": [3, 94, 217, 219, 220, 229], "align_vector": [3, 235, 254, 259], "like": [3, 19, 229, 233, 234, 235, 243, 244, 247, 249, 257, 261, 275, 285, 287, 308, 314, 332, 335, 337], "kept": [3, 19, 229, 235], "fix": [3, 163, 235, 301, 324], "consist": [3, 5, 75, 88, 93, 94, 146, 216, 218, 229, 235, 240, 241, 243, 244, 265, 266, 267, 269, 273, 275, 276, 279, 281, 298, 311, 313, 315, 316, 318, 321, 322, 330, 331, 336], "step": [3, 67, 70, 91, 94, 95, 163, 198, 216, 218, 231, 235, 237, 245, 250, 260, 261, 267, 278, 280, 283, 288, 290, 293, 297, 303, 304, 305, 307, 311, 312, 313, 314, 323, 324, 325, 329, 330, 337], "remesh": [3, 235], "produc": [3, 252, 253, 255, 257, 280], "larger": [3, 19, 23, 216, 231, 235, 242, 244, 303], "done": [3, 19, 216, 230, 231, 235, 243, 260, 261, 263, 264, 283, 284, 290, 312, 318, 320, 324, 336], "mostli": [3, 6, 216], "linear": [3, 235, 255, 256], "process": [3, 94, 216, 253, 324], "notebook": [3, 216, 217, 222, 227, 229, 230, 231, 233, 247, 258, 260, 261, 265, 266, 274, 293, 301, 311, 322, 327, 334, 335, 336, 337], "from_quat": [3, 235], "from_matrix": [3, 235], "from_rotvec": [3, 235], "from_mpr": 3, "keep": [3, 228, 235, 241, 274, 313, 330], "point_column": [4, 238], "value_column": [4, 238], "panda": [4, 69, 189, 218, 250, 283, 303], "datafram": [4, 69, 189, 283, 303], "On": [4, 15, 37, 179, 216, 228, 237, 240, 242, 247, 270, 271, 272, 295, 309, 335, 336, 337], "hand": [4, 15, 228, 240, 242, 247, 260, 270, 271, 295, 302], "column": [4, 67, 68, 69, 70, 71, 72, 189, 195, 216, 218, 238, 283, 284, 285, 286, 287, 288, 314, 323, 330], "distanc": [4, 216, 245, 252, 258], "By": [4, 19, 20, 23, 216, 228, 229, 230, 231, 234, 235, 238, 239, 240, 245, 250, 268, 277, 280, 283, 285, 286, 287, 333, 334, 335, 336, 337], "where": [4, 5, 6, 19, 20, 21, 23, 24, 25, 30, 37, 40, 42, 43, 45, 46, 48, 60, 61, 65, 91, 95, 146, 163, 189, 195, 218, 229, 230, 231, 233, 235, 237, 242, 243, 244, 245, 247, 249, 252, 253, 255, 256, 257, 258, 271, 273, 274, 275, 276, 279, 281, 285, 287, 302, 303, 306, 310, 321, 327, 330, 331, 333, 334, 337], "px": [4, 238], "py": [4, 23, 229, 230, 231, 233, 238, 271, 272, 293, 308, 315, 317, 334], "pz": [4, 238], "vx": [4, 236, 238], "vy": [4, 236, 238], "vz": [4, 236, 238], "compos": 4, "retriev": [4, 234, 265, 266], "form": [4, 12, 217, 252, 255, 257, 259, 311, 313, 329], "expos": [4, 189, 230, 231, 243, 244, 249, 285, 287, 336], "repr": [4, 92, 97, 98, 177, 178, 179, 180, 181, 189, 247, 263, 264, 265, 266], "figsiz": [4, 5, 6, 23, 24, 25, 189, 231, 238, 243, 244, 249, 274, 278, 287, 302, 303, 305, 307, 311, 313, 315, 316, 318, 321, 322, 324, 329, 331], "yaxi": [4, 238, 285], "xlim": [4, 189, 190, 238, 285, 287, 305], "figur": [4, 5, 6, 23, 24, 25, 189, 216, 231, 235, 243, 244, 249, 252, 253, 259, 287, 302, 303, 305, 322, 333], "To": [4, 5, 6, 15, 19, 23, 24, 25, 94, 163, 189, 216, 218, 227, 229, 230, 231, 233, 235, 237, 240, 242, 244, 246, 248, 249, 252, 253, 254, 258, 260, 261, 265, 266, 267, 271, 284, 285, 287, 293, 309, 324, 327, 328, 330, 331, 334, 335, 336, 337], "particular": [4, 5, 19, 23, 67, 70, 174, 189, 216, 233, 250, 267, 272, 294, 303, 309, 336], "lenth": [4, 241, 243, 244, 249], "often": [4, 5, 6, 20, 21, 23, 24, 25, 189, 231, 239, 243, 247, 258, 259, 290, 291, 334], "nanoscal": [4, 5, 6, 20, 21, 23, 24, 25, 214], "veri": [4, 5, 6, 19, 20, 21, 23, 24, 25, 216, 217, 229, 236, 239, 246, 258, 260, 261, 324, 332, 335], "larg": [4, 5, 6, 20, 21, 23, 24, 25, 30, 67, 68, 70, 216, 231, 246, 260, 291, 305, 317, 324], "kilomet": [4, 5, 6, 20, 21, 23, 24, 25], "accord": [4, 5, 6, 19, 20, 21, 23, 24, 25, 189, 203, 230], "scale": [4, 5, 6, 20, 21, 23, 24, 25, 189, 216, 231, 253, 255, 256, 302, 307, 308, 317, 322], "shown": [4, 5, 6, 19, 20, 21, 23, 24, 25, 189, 216, 222, 229, 231, 233, 235, 243, 244, 245, 249, 252, 259, 266, 280, 284, 285, 287, 288, 291, 303, 324, 327, 333, 335], "text": [4, 5, 6, 20, 21, 23, 24, 25, 76, 77, 78, 86, 89, 91, 94, 95, 163, 174, 189, 216, 218, 230, 231, 233, 234, 236, 239, 241, 243, 244, 247, 249, 258, 265, 266, 269, 270, 273, 275, 276, 278, 279, 281, 287, 290, 302, 303, 304, 305, 306, 310, 311, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 328, 329, 330, 331, 332, 333], "nm": [4, 5, 6, 20, 21, 23, 24, 25, 46, 48, 218, 230, 231, 234, 239, 241, 243, 247, 252, 253, 257, 258, 303, 304, 305, 306, 307, 310, 322, 328, 329, 331, 332, 333], "pdf": [4, 5, 6, 23, 24, 25, 189, 231, 243, 244, 249, 287], "pyplot": [4, 5, 6, 23, 24, 25, 26, 189, 231, 243, 244, 249, 251, 252, 254, 257, 285, 287, 302, 303, 305, 314, 324], "limit": [4, 23, 189, 216, 231, 235, 238, 253, 259, 302, 324], "selector": [4, 5, 69, 189, 238, 260, 285], "interact": [4, 20, 48, 61, 90, 189, 216, 218, 220, 224, 229, 238, 244, 245, 249, 253, 255, 258, 277, 288, 299, 314, 318, 322, 324, 327, 328, 329, 330, 331, 333], "ipywidget": [4, 5, 8, 69, 70, 189, 190, 245, 288], "selectmultipl": [4, 189, 288], "widget": [4, 5, 19, 69, 70, 189, 221, 229, 231, 285, 299, 314], "slider": [4, 5, 8, 19, 70, 189, 190, 216, 229, 230, 231, 238, 253, 260, 261, 277, 285, 314, 322, 324, 328, 329], "selectionrangeslid": [4, 189], "navig": [4, 189, 245], "descript": [4, 5, 69, 70, 189, 231, 233, 236, 245, 288, 335, 336], "optimum": [4, 189], "denot": [4, 5, 242], "renam": [4, 189, 193, 195, 216, 229, 238, 283], "val": 4, "inappropri": 4, "p0": 4, "index": [4, 5, 98, 216, 239, 243, 260, 277, 314], "my_interesting_valu": 4, "bc": [5, 239, 240, 255, 256, 309, 311, 317], "m": [5, 6, 31, 33, 37, 40, 42, 43, 46, 48, 61, 65, 75, 76, 77, 78, 85, 89, 91, 92, 93, 94, 95, 104, 112, 214, 216, 218, 228, 229, 232, 233, 235, 236, 237, 239, 240, 241, 243, 244, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 269, 270, 273, 274, 275, 276, 277, 278, 279, 281, 283, 284, 296, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 328, 329, 330, 331, 332, 333, 334, 336, 337], "cubic": [5, 75, 239, 244, 247, 258, 297, 302, 332, 333], "regular": 5, "sinc": [5, 94, 233, 235, 239, 247, 266, 323, 324, 336], "span": [5, 6, 238, 241, 253, 303, 304, 333], "instead": [5, 6, 9, 12, 19, 23, 71, 72, 158, 163, 183, 216, 227, 228, 229, 231, 232, 233, 235, 245, 246, 280, 324, 327, 328, 334, 338], "charact": [5, 205, 240, 337], "dirichlet": [5, 240], "dirichlett": 5, "still": [5, 216, 229, 243, 272, 309, 324], "experiment": [5, 38, 64, 65, 216, 251, 252, 253, 255, 256, 257, 258, 259, 336], "necessari": [5, 19, 229, 230, 231, 232, 236, 241, 243, 248, 268, 275, 276, 286, 289, 291, 295, 302, 310, 313, 320, 322, 328, 330, 334, 337], "aggreg": 5, "align": [5, 61, 235, 252, 255, 257, 273, 275, 276, 279, 281, 315, 321, 324, 330, 331, 332], "properli": 5, "diagon": [5, 6, 239, 247, 305], "opposit": [5, 6, 237, 239, 247], "d_": [5, 275], "n_": [5, 239], "empti": [5, 19, 26, 98, 204, 240, 253, 295], "well": [5, 11, 15, 94, 235, 236, 238, 239, 241, 243, 244, 247, 249, 250, 252, 265, 266, 277, 285, 295, 305, 312, 314, 318, 333, 336, 337], "ii": [5, 88], "iii": 5, "xy": [5, 231, 233, 235, 240, 241, 252, 255, 256, 261, 309, 311, 317, 324], "52": [5, 216, 231, 233, 256, 266, 279, 330, 331, 334], "mesh1": [5, 233], "mesh2": [5, 233], "mesh3": [5, 233], "len": [5, 69, 80, 82, 98, 239, 243, 252, 253, 333, 334], "pmin": [5, 6, 239, 247, 331, 333], "pmax": [5, 6, 235, 247, 331, 333], "submesh": [5, 233], "newli": [5, 86], "09": [5, 214, 218, 220, 229, 233, 238, 241, 243, 247, 250, 254, 255, 256, 259, 260, 261, 273, 275, 276, 277, 279, 281, 283, 296, 303, 313, 314, 323, 333], "__len__": [5, 98], "element": [5, 6, 19, 21, 23, 24, 46, 94, 146, 210, 213, 229, 233, 239, 242, 243, 244, 248, 249, 256, 259, 260, 324], "total": [5, 29, 87, 216, 235, 239, 243, 280, 283, 306, 310, 324, 332, 333], "__or__": [5, 6], "common": [5, 219, 231, 255, 257, 295, 336], "region1": [5, 6, 75, 76, 77, 85, 88, 89, 91, 93, 94, 216, 236, 248, 270, 273, 275, 276, 279, 281, 295, 334], "45e": 5, "20e": [5, 6, 229, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 255, 257, 258, 259, 305, 316, 320, 322, 324, 328, 331, 333], "region2": [5, 6, 75, 76, 77, 85, 88, 89, 91, 93, 94, 216, 236, 248, 270, 273, 275, 276, 279, 281, 295], "42e": 5, "13e": [5, 218], "region3": [5, 6], "axis_selector": [5, 230, 231, 245], "dropdown": [5, 245], "radiobutton": [5, 231, 245], "show": [5, 15, 19, 23, 216, 218, 219, 229, 230, 231, 233, 235, 237, 238, 239, 243, 244, 246, 247, 249, 251, 252, 254, 257, 258, 261, 272, 277, 278, 280, 285, 287, 293, 301, 302, 303, 306, 307, 309, 310, 311, 316, 318, 319, 324, 328, 330, 331, 336, 337], "index2point": [5, 239], "i_": [5, 40, 252], "point2index": [5, 239], "load_subregion": 5, "field_filenam": 5, "load": [5, 9, 12, 216, 283, 284, 305], "neighbour": [5, 30, 34, 35, 237, 239, 240, 258, 275, 324, 331], "xz": [5, 324], "extend": [5, 217, 242, 263, 264, 333, 336], "edg": [5, 6, 24, 25, 216, 218, 235, 239, 241, 242, 247, 250, 252, 253, 254, 256, 259, 291, 302, 306, 310, 332, 333], "padded_mesh": [5, 242], "120": [5, 231, 305, 333], "110": [5, 216], "12": [5, 6, 36, 37, 43, 82, 85, 92, 97, 98, 99, 152, 175, 189, 210, 213, 214, 216, 218, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 241, 243, 244, 245, 247, 249, 252, 253, 255, 257, 258, 260, 261, 262, 263, 265, 266, 268, 270, 272, 273, 274, 275, 276, 277, 278, 279, 281, 283, 284, 286, 287, 288, 296, 303, 304, 305, 306, 307, 308, 310, 311, 313, 314, 316, 317, 318, 321, 322, 323, 324, 328, 329, 330, 331, 332, 333, 334], "11": [5, 85, 92, 98, 99, 210, 213, 218, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 269, 270, 272, 273, 275, 276, 277, 279, 281, 283, 284, 286, 291, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315, 317, 318, 321, 323, 324, 330, 331, 332, 333, 334], "info": [5, 67, 68, 69, 70, 218, 260, 261, 277, 293, 314], "basic": [5, 19, 200, 216, 219, 221, 228, 229, 230, 233, 235, 238, 265, 266, 267, 269, 293, 299, 311, 326, 330, 332, 333, 336], "inform": [5, 19, 23, 29, 67, 68, 69, 70, 86, 87, 174, 216, 228, 231, 236, 246, 250, 252, 257, 258, 259, 260, 261, 272, 280, 293, 312, 324, 330, 335, 337], "about": [5, 6, 22, 29, 68, 69, 70, 86, 87, 174, 216, 219, 228, 231, 239, 246, 247, 250, 254, 258, 260, 272, 302, 312, 324, 327], "plane_mesh": [5, 241], "region2slic": 5, "sr": 5, "selectionslid": [5, 245, 288], "magnitud": [5, 233, 253, 303, 305, 308, 314, 330], "color": [5, 6, 19, 20, 21, 22, 23, 24, 25, 229, 230, 231, 243, 244, 249, 252, 253, 255, 256, 257], "colour": [5, 6, 15, 20, 21, 22, 23, 24, 25, 229, 230, 231, 243, 244, 252, 253, 255, 256, 303], "voxel": [5, 6, 20, 21, 22, 230, 243, 244, 249], "wirefram": [5, 6, 20, 21, 22, 243], "palett": [5, 6, 20, 21, 22, 24, 25], "namedtupl": [5, 19], "collect": [5, 235, 334, 336, 337], "depict": [5, 6, 24, 25, 231, 243, 244, 249], "linewidth": [5, 6, 24, 25, 231, 252, 314], "linestyl": [5, 6, 24, 25, 243, 244, 249, 314], "box_aspect": [5, 6, 24, 25, 216], "aspect": [5, 6, 24, 25, 216, 235], "ratio": [5, 6, 24, 25, 103, 216, 218, 235, 265, 284, 303, 304, 324, 328, 329, 330, 332], "auto": [5, 6, 24, 25, 216], "vertic": [5, 231, 239, 243, 244, 245, 249, 288, 319], "tolerance_factor": [6, 216], "cuboid": [6, 303, 304, 305, 308, 309, 317], "corner": [6, 235, 239, 240, 244, 247, 249, 254, 273, 275, 276, 279, 281, 308, 309, 317, 321], "_1": [6, 61, 255], "_2": 6, "_i": [6, 42, 252, 258], "p_x": 6, "p_y": 6, "p_z": 6, "mainli": [6, 216], "factor": [6, 48, 91, 94, 95, 102, 252, 253, 255, 256, 258, 265], "comparison": [6, 216, 324], "adjust": [6, 20, 94, 216, 229, 231], "accur": [6, 218, 334], "__contains__": [6, 98, 216], "le": [6, 214, 331, 333], "maximum": [6, 30, 34, 64, 189, 198, 213, 216, 237, 245, 247, 252, 253, 259, 283, 286, 288, 290, 302, 333], "usag": [6, 189, 204, 205, 206, 207, 208, 209, 210, 226, 246, 291], "face": [6, 90, 221, 318], "move": [6, 216, 218, 248, 324, 328], "minu": [6, 248, 324], "infin": [6, 248], "enter": [6, 248], "leav": [6, 248], "third": [6, 229, 231, 237, 239, 248, 324], "find": [6, 23, 87, 156, 180, 213, 214, 219, 248, 272, 293, 302], "p11": [6, 248], "p12": [6, 248], "p21": [6, 248], "p22": [6, 248], "30e": [6, 248, 253, 254, 274, 313, 316, 329, 333], "random_point": [6, 232, 247], "random": [6, 247, 251, 252, 253, 255, 256, 257, 259, 273, 275, 276, 279, 281, 315, 316, 318, 321, 324], "200e": [6, 247], "ellipsi": 6, "exact": [6, 302, 324], "to_dict": 6, "middl": [6, 233, 240, 241, 333], "p_c": 6, "l": [6, 218, 258, 302, 305, 311, 324, 328, 331, 332], "p_2": 6, "p_1": 6, "l_": [6, 239, 243, 247, 249, 302, 303, 304], "th": 6, "l_x": 6, "l_y": 6, "l_z": 6, "discrteisedfield": 7, "decor": [8, 190, 203, 204, 205, 206, 207, 208, 209, 210, 211, 285, 300, 336], "wrapper": [8, 190], "around": [8, 23, 94, 189, 190, 235, 253], "packag": [8, 15, 27, 62, 73, 86, 87, 113, 147, 155, 159, 179, 184, 186, 187, 190, 191, 200, 201, 216, 217, 219, 252, 254, 255, 256, 258, 259, 262, 267, 271, 277, 284, 293, 298, 301, 308, 314, 317, 327, 329, 330, 333, 334, 335, 337], "myplot": [8, 190, 230, 231, 238, 303, 329], "modul": [9, 39, 44, 47, 59, 63, 100, 148, 161, 216, 230, 233, 257, 271, 272, 302, 303, 304, 305, 310, 316, 318, 322, 323, 324, 330, 332], "discourag": 9, "pathlib": [10, 11, 12, 13, 14, 15, 70, 216], "current_path": [10, 11, 12], "parent": [10, 11, 12, 81, 83, 199], "filepath": [10, 11, 12], "version": [11, 12, 179, 189, 193, 195, 216, 222, 233, 247, 293, 327, 335, 336, 337], "ovf1": 11, "do": [12, 19, 216, 217, 218, 228, 229, 231, 233, 243, 244, 247, 249, 252, 255, 256, 257, 258, 261, 270, 272, 273, 274, 275, 276, 277, 279, 280, 281, 287, 303, 304, 313, 314, 321, 324, 332, 335, 336, 337], "appear": [12, 23, 250, 252], "componentnam": 12, "older": 12, "did": [12, 216, 228, 235, 239, 277, 294, 314, 329, 332], "old": [12, 189, 190, 216, 233, 235, 285, 286, 287], "correct": [12, 19, 71, 72, 179, 216, 258, 284, 291, 312, 326], "user": [12, 20, 70, 71, 72, 86, 94, 163, 216, 219, 229, 235, 243, 272, 309, 324, 325, 335, 336, 337], "dataset": 15, "enabl": [15, 19, 216, 229, 251, 258], "easi": [15, 252, 253, 258, 259, 302, 324, 328, 329], "some": [15, 189, 216, 218, 229, 231, 233, 235, 236, 239, 243, 244, 247, 249, 255, 256, 258, 262, 263, 264, 265, 266, 267, 269, 272, 285, 303, 309, 311, 314, 316, 324, 330, 332, 333, 334, 335, 336, 337], "open": [15, 217, 240, 327, 335], "paraview": [15, 216, 234, 260], "mayavi": [15, 234], "filter": [15, 19, 23, 42, 216, 229, 231, 252, 259], "convers": [16, 17, 70, 216, 223, 246, 326, 334], "command": [17, 86, 87, 156, 180, 216, 229, 246, 258, 272, 293, 327, 332, 337], "key_dim": 19, "callback": [19, 67, 68, 70, 216, 261], "vdim_guess_callback": 19, "prior": 19, "norm_filt": [19, 229], "control": [19, 23, 91, 94, 95, 156, 158, 163, 174, 180, 183, 200, 216, 231, 245, 288, 297, 300, 325, 337], "behaviour": [19, 216, 231, 261, 267], "typic": [19, 67, 68, 70, 163, 174, 216, 228, 243, 252], "disabl": [19, 23, 229, 231], "global": [19, 272], "hv_key_dim": 19, "dynam": [19, 77, 81, 89, 91, 92, 95, 98, 99, 112, 216, 220, 225, 261, 269, 273, 275, 276, 278, 279, 281, 284, 303, 304, 307, 311, 312, 319, 320, 321, 323, 324, 326, 328, 329, 331, 334, 336], "arbitrari": [19, 65, 91, 94, 95, 216, 229, 255, 259, 324, 338], "vdims_guess_callback": 19, "guess": [19, 324, 332], "vdim": [19, 23, 218, 229, 231, 252], "roi": [19, 229], "scalar_kw": [19, 23, 216, 218, 229, 231, 261, 311, 315], "vector_kw": [19, 23, 216, 229, 231, 261, 307, 322], "optim": [19, 23, 302], "combin": [19, 23, 61, 67, 68, 70, 172, 216, 228, 235, 255, 259, 260, 324, 336], "quick": [19, 23, 244, 249, 332], "ignor": [19, 231, 235], "drop": [19, 229], "down": [19, 229, 291], "tri": [19, 156, 180, 216, 335], "match": [19, 98, 189, 250, 285, 286, 287], "work": [19, 86, 163, 179, 216, 231, 233, 235, 243, 244, 249, 261, 287, 335, 336], "exclud": 19, "area": [19, 233, 235, 237, 253, 255, 256, 334], "hide": [19, 229], "reli": [19, 86, 87, 272, 280], "broadcast": [19, 334], "been": [19, 23, 180, 216, 229, 233, 235, 258, 261, 272, 284, 335, 336], "subplot": [19, 23, 26, 216, 231, 252, 257, 303, 324], "understand": [19, 23, 230, 236, 261, 324, 330, 332, 334], "reduc": [19, 35, 106, 216, 229, 231, 235, 237, 334], "simpl": [19, 216, 229, 231, 235, 244, 245, 249, 253, 258, 261, 273, 274, 275, 276, 277, 278, 279, 281, 288, 303, 313, 314, 321, 324, 330, 332, 333], "sort": [19, 216, 217, 253, 324], "just": [19, 218, 229, 233, 240, 247, 253, 255, 256, 332, 333], "pick": [19, 229], "nearest": [19, 235, 250, 258], "extrem": [19, 229, 324], "equidist": 19, "directon": [19, 229], "arrow": [19, 23, 229], "associ": [19, 23, 175, 211, 231, 239, 334], "includ": [19, 91, 94, 95, 217, 236, 240, 252, 255, 256, 257, 284, 293, 328, 334, 337], "output": [19, 64, 67, 70, 71, 72, 86, 87, 163, 174, 216, 218, 229, 246, 252, 253, 259, 261, 267, 280, 303, 312, 330, 334], "level": [19, 23, 200, 229, 231, 252, 274, 293, 297, 336], "greater": [19, 235, 252], "panel": [19, 244, 249, 337], "cut": [19, 94, 233, 235, 255, 323], "No": [19, 163, 336], "opt": [19, 229, 258, 272, 293, 308, 317, 334], "modifi": [19, 229, 230, 235, 243, 244, 249, 302, 328, 330, 338], "after": [19, 67, 152, 158, 179, 183, 203, 204, 205, 206, 207, 208, 209, 210, 216, 218, 228, 233, 235, 236, 261, 271, 272, 273, 275, 276, 279, 281, 289, 304, 309, 312, 314, 321, 330, 331, 332, 333, 336, 337], "containt": 19, "standard": [19, 87, 216, 229, 255, 280, 301], "cdim": [19, 229], "use_color": [19, 23, 229, 231, 252], "vectorfield": 19, "encod": [19, 23], "vectorplot": 19, "warn": [19, 200, 229, 231, 236, 243, 293], "black": [19, 229], "blue": [19, 229, 235], "implement": [20, 23, 32, 216, 220, 233, 235, 261, 263, 264, 265, 266, 267, 284, 291, 292, 307, 311, 334, 338], "nonzero": [20, 230, 235, 259, 308, 322, 333], "5010096": [20, 21, 22], "interactive_field": [20, 230, 328], "being": [20, 67, 68, 70, 163, 216, 229, 243, 244, 249, 252, 253, 255, 259, 298, 331], "displai": [20, 23, 86, 87, 216, 218, 230, 231, 243, 244, 249, 250, 261, 322, 328], "extern": [20, 86, 87, 94, 112, 216, 218, 253, 257, 266, 267, 281, 284, 303, 304, 305, 310, 314, 319, 320, 321, 323, 324, 330, 331, 332], "whole": [20, 24, 243, 253, 261, 336], "normfun": 20, "filter_field": [20, 23, 216, 230, 231, 308, 322, 329, 331], "cmap": [20, 23, 218, 229, 230, 231, 252, 255, 256, 259, 261, 303, 308], "cividi": [20, 229, 231, 261], "colormap": [20, 23, 231, 261], "those": [20, 23, 228, 233, 236, 241, 243, 244, 249, 278, 283, 286, 287, 333], "color_field": [20, 23, 229, 230, 231, 273, 275, 276, 279, 281, 308, 321, 322, 331, 332], "head_siz": [20, 308, 322, 331, 332, 333], "point_siz": 20, "vector_multipli": 20, "head": [20, 29, 312, 314], "fit": 20, "togeth": [20, 230, 231, 252, 265, 266, 285, 324], "14517330": 21, "5613672": 21, "12865106": 21, "8483507": 21, "9664608": 21, "14322627": 21, "9211020": 21, "13416820": 21, "6600141": 21, "seealso": [23, 163], "func": [23, 91, 94, 95, 174, 189, 266, 319, 320, 323, 324], "what": [23, 94, 228, 233, 236, 238, 239, 244, 248, 249, 283, 287, 303, 314, 329, 330, 331, 332, 334, 335], "understood": [23, 86, 233], "snippet": [23, 335], "scalar_field": 23, "vector_field": 23, "fig": [23, 26, 231, 243, 244, 249, 252, 257, 287, 303, 324], "plt": [23, 26, 231, 243, 244, 249, 251, 252, 254, 257, 287, 302, 303, 305, 324], "add_subplot": [23, 243, 244, 249, 287], "111": [23, 243, 244, 249, 259, 287], "savefig": 23, "bbox_inch": 23, "tight": 23, "pad_inch": 23, "02": [23, 218, 220, 272, 274, 277, 278, 297, 302, 303, 304, 306, 307, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 328, 329, 330, 331, 332], "therefor": [23, 36, 37, 86, 87, 94, 216, 229, 230, 231, 235, 236, 237, 239, 241, 243, 244, 245, 247, 249, 261, 263, 264, 273, 275, 276, 279, 280, 281, 284, 287, 288, 303, 304, 321, 324, 331, 332, 337], "turn": [23, 218, 231], "colorbar": [23, 216, 229, 231, 252], "colorbar_label": [23, 231, 252, 253, 255, 256, 259], "pixel": 23, "hidden": 23, "init_valu": [23, 237], "sin": [23, 60, 61, 65, 94, 95, 231, 233, 254, 257, 266, 302, 319, 320, 323, 324, 334], "lightness_field": [23, 231], "clim": [23, 218, 229, 231, 252, 261, 311, 315], "colorwheel": [23, 26], "colorwheel_xlabel": [23, 231, 252], "colorwheel_ylabel": [23, 231, 252], "colorwheel_arg": [23, 231, 252], "hsv": [23, 26, 230, 231, 252], "1d": 23, "hue": 23, "see": [23, 26, 94, 218, 228, 229, 230, 231, 233, 235, 239, 242, 244, 249, 254, 255, 256, 261, 272, 274, 277, 293, 302, 303, 313, 314, 315, 316, 318, 322, 324, 327, 328, 330, 331, 332, 334], "mpl_toolkit": [23, 26, 231], "axes_grid1": [23, 26, 231], "inset_loc": [23, 26, 231], "inset_ax": [23, 26, 231], "symmetric_clim": [23, 216, 231], "symmetr": [23, 88, 231], "preced": 23, "imshow": [23, 231], "quiver": [23, 216, 231, 308, 317], "fail": [23, 216, 229], "sometim": [23, 229, 230, 231, 232, 235, 236, 241, 243, 244, 245, 247, 248, 249, 262, 268, 274, 286, 287, 288, 289, 292, 310], "too": [23, 231, 247, 252, 324], "resolv": [23, 305, 336], "word": [23, 205, 239, 241, 303], "smaller": [23, 235, 239, 243, 244], "vice": 23, "versa": 23, "1e20": 23, "mpl_scalar": [23, 231], "4c72b0": [24, 25], "dd8452": 24, "55a868": 24, "c44e52": 24, "8172b3": 24, "937860": 24, "da8bc3": 24, "8c8c8c": 24, "ccb974": 24, "64b5cd": 24, "show_region": [24, 243], "width": [26, 64, 229, 231, 243, 244, 249, 252, 253, 259, 303, 304, 308, 317, 324, 328], "height": [26, 229, 231, 243, 244, 249, 252, 253], "loc": [26, 231], "lower": [26, 29, 252, 293, 334], "inset": 26, "dfp": [26, 231], "doctest": 26, "skip": 26, "ins_ax": 26, "run": [27, 62, 70, 71, 72, 73, 86, 87, 94, 113, 147, 152, 155, 156, 157, 159, 163, 174, 175, 179, 180, 182, 184, 185, 187, 191, 201, 216, 218, 229, 230, 231, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 267, 272, 273, 274, 275, 276, 277, 279, 281, 283, 286, 297, 298, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 327, 328, 329, 330, 331, 332, 335, 337], "bloch": [29, 322, 336], "count": [29, 30, 69, 252, 283], "arrang": 29, "emerg": [29, 33, 322], "magnet": [29, 33, 35, 40, 41, 42, 46, 47, 48, 51, 52, 53, 54, 58, 61, 64, 65, 67, 69, 74, 94, 109, 112, 114, 216, 223, 251, 255, 256, 257, 258, 259, 260, 261, 266, 273, 275, 276, 279, 281, 284, 302, 303, 304, 305, 307, 310, 314, 315, 316, 318, 319, 320, 321, 323, 324, 330, 331, 332, 333, 336], "subvolum": 29, "increas": [29, 251, 286], "local": [29, 327, 331], "sum": [29, 60, 61, 99, 233, 235, 255, 265, 266, 286, 306, 310, 315, 332, 334], "jump": [29, 261], "tail": [29, 302, 303], "end": [29, 41, 61, 69, 216, 229, 231, 236, 252, 253, 255, 256, 257, 258, 272, 275, 302, 303, 309, 314, 324, 331, 333, 337], "stai": 29, "report": [29, 217, 322, 335, 337], "bp": 29, "min_angl": [30, 237], "rad": [30, 34, 35, 237, 257], "abov": [30, 229, 231, 237, 250, 251, 252, 253, 254, 255, 256, 257, 259, 284, 308, 309, 319, 320, 324, 330, 331, 334, 335, 336, 337], "threshold": 30, "taken": [30, 218, 235, 236, 237, 259, 324, 334], "account": [30, 216, 235, 237, 259, 293], "degre": [30, 34, 35, 237, 254, 324], "deg": [30, 34, 35, 237, 283], "dft": [30, 31, 33, 34, 35, 36, 37, 218, 233, 237, 261, 317], "90": [30, 237], "tensor": [31, 32, 216], "demagnetis": [31, 46, 78, 218, 242, 253, 257, 303, 304, 307, 332], "demag": [31, 32, 46, 48, 82, 92, 98, 99, 216, 218, 252, 253, 257, 259, 266, 278, 302, 303, 304, 305, 306, 307, 308, 310, 314, 322, 324, 331, 332], "albert": [31, 32, 305], "et": [31, 32, 322], "al": [31, 32, 322], "jmmm": [31, 32], "387": [31, 32], "2015": [31, 32], "http": [31, 32, 91, 94, 95, 149, 150, 151, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 216, 243, 244, 249, 250, 272, 287, 293, 302, 303, 304, 309, 312, 324, 327, 329, 335, 337], "doi": [31, 32, 329, 336], "org": [31, 32, 243, 244, 249, 287, 293, 302, 303, 304, 327, 329, 336], "1016": [31, 32], "j": [31, 32, 33, 37, 88, 91, 105, 106, 107, 110, 218, 237, 258, 270, 273, 275, 276, 279, 283, 302, 303, 304, 305, 306, 310, 324, 328, 329, 331, 332], "03": [31, 32, 218, 220, 277, 297, 308, 310, 323], "081": [31, 32], "magnetis": [31, 42, 46, 48, 60, 61, 64, 65, 67, 68, 70, 71, 72, 86, 87, 92, 112, 163, 174, 216, 218, 231, 237, 250, 252, 253, 254, 255, 256, 257, 259, 260, 269, 273, 275, 276, 277, 278, 279, 281, 284, 285, 287, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 328, 329, 330, 331, 336], "obatain": 31, "demag_tensor": 31, "six": [32, 34, 237], "nxx": 32, "nyi": 32, "nzz": 32, "nxy": 32, "nxz": 32, "nyz": 32, "boldsymbol": [33, 95, 265, 304], "kl": 33, "partial_k": 33, "partial_l": 33, "volovik": 33, "rysti": 33, "m\u00e4kinen": 33, "t": [33, 40, 41, 67, 71, 72, 76, 77, 89, 91, 92, 94, 95, 110, 152, 175, 189, 190, 203, 204, 205, 206, 207, 208, 209, 210, 211, 216, 218, 220, 229, 231, 233, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 263, 264, 266, 267, 272, 275, 277, 278, 280, 283, 284, 285, 286, 287, 288, 289, 291, 294, 295, 296, 303, 304, 305, 309, 312, 314, 319, 320, 322, 323, 324, 325, 328, 329, 330, 331, 333, 334], "eltsov": 33, "b": [33, 37, 41, 46, 199, 204, 206, 211, 229, 230, 231, 233, 237, 252, 257, 258, 291, 292, 293, 314], "spin": [33, 60, 61, 91, 95, 163, 216, 255, 258, 274, 283, 313, 324, 328, 329, 330, 331], "orbit": 33, "weyl": 33, "glass": 33, "topolog": [33, 36, 37, 216, 336], "superfluid": 33, "low": [33, 255, 256, 336], "temp": 33, "phy": 33, "196": [33, 216, 283, 284, 303, 323, 330], "82": [33, 216, 233], "101": [33, 203, 211, 216, 284, 312], "2019": [33, 253, 255, 322], "charg": [33, 36, 37, 43, 101, 216, 252, 336], "densiti": [33, 36, 37, 41, 46, 52, 94, 174, 216, 218, 229, 257, 273, 275, 276, 279, 281, 302, 306, 310, 331], "less": [34, 35, 68], "moment": [35, 46, 48, 239, 240, 251, 253, 257, 258, 273, 275, 276, 279, 281, 284, 315, 321, 323, 331], "invalid": [35, 203, 204, 205, 206, 207, 208, 209, 210, 211, 263, 264, 272, 291, 308, 317, 334], "continu": [36, 37, 237, 255, 303, 311], "There": [36, 94, 216, 217, 228, 229, 230, 231, 233, 234, 236, 237, 239, 246, 247, 249, 250, 255, 265, 266, 270, 272, 273, 276, 277, 279, 281, 284, 290, 309, 314, 315, 321, 324, 332, 333, 337], "topological_charge_dens": [36, 237, 261], "berg": [36, 37, 218, 233, 237, 317], "luescher": [36, 37, 218, 233, 237, 317], "q": [37, 48, 60, 61, 218, 237, 253, 255], "found": [37, 69, 70, 71, 72, 86, 154, 155, 156, 178, 179, 180, 213, 214, 216, 231, 233, 236, 237, 250, 254, 259, 263, 264, 302, 303, 304, 305, 337], "statist": [37, 237], "distribut": [37, 229, 237, 252, 337], "lattic": [37, 237, 258], "sigma": [37, 61, 90, 237, 255, 256, 266, 318], "model": [37, 171, 237, 239, 269, 303, 324, 332, 336], "nuclear": [37, 237], "190": [37, 237], "412": [37, 237], "424": [37, 237], "1981": [37, 237], "kim": [37, 237], "mulker": [37, 237, 336], "quantifi": [37, 237], "micromagnet": [37, 66, 92, 152, 174, 175, 216, 218, 225, 234, 237, 265, 266, 267, 283, 303, 306, 310, 324, 325, 328, 330, 331, 332, 333, 336, 337], "approach": [37, 231, 237], "iop": [37, 237], "scinot": [37, 237], "025211": [37, 237], "2020": [37, 237, 259, 336], "topological_charg": [37, 218, 233, 237, 317], "simul": [38, 70, 71, 72, 86, 87, 155, 163, 174, 179, 216, 218, 224, 234, 235, 258, 267, 272, 273, 274, 275, 276, 279, 280, 281, 283, 295, 297, 301, 305, 309, 311, 313, 318, 321, 322, 323, 325, 326, 327, 328, 329, 334, 336, 337], "measur": [38, 48, 64, 65, 216, 251, 252, 253, 256, 257, 258, 259, 305], "lorentz": [39, 223, 254, 336], "transmiss": [39, 223, 254, 336], "electron": [39, 40, 41, 42, 43, 108, 223, 254, 336], "microscopi": [39, 47, 223, 254, 336], "quantiti": [39, 41, 47, 59, 60, 63, 235, 252, 253, 258, 259, 324], "c": [40, 41, 43, 50, 61, 101, 103, 204, 206, 218, 229, 230, 231, 234, 238, 247, 252, 258, 281, 291, 305, 321, 323, 337], "df_length": [40, 41, 50, 252], "0002": [40, 50], "voltag": [40, 41, 43, 50, 252, 254], "wavelength": [40, 43, 50, 252, 255, 256, 259], "defocus": [40, 254], "wavefunct": [40, 252], "shift": [40, 42, 48, 51, 53, 54, 58, 94, 233, 252, 253, 266, 319, 320, 323], "phi_m": [40, 252], "psi_0": [40, 252], "propag": [40, 42, 50, 64, 65, 252, 255, 256, 259], "microscop": 40, "contrast": [40, 48, 252, 253, 254, 331], "transfer": [40, 91, 95, 252, 328], "defocu": [40, 50, 252], "delta": [40, 48, 252, 253, 283, 290, 305, 311, 330], "widetild": [40, 42, 61, 65, 252, 255, 256], "psi": [40, 252], "_0": [40, 61, 252, 255], "k": [40, 42, 48, 54, 61, 75, 93, 97, 107, 252, 253, 255, 256, 257, 258, 259, 266, 270, 296, 302, 306, 308, 309, 310, 311, 314, 316, 317, 318, 324, 328, 329, 331], "c_": [40, 252, 275, 331], "relativist": [40, 43, 252], "spheric": [40, 252], "aberr": [40, 252], "coeffici": 40, "wavevector": [40, 255], "intens": [40, 65, 252, 255, 256], "vert": [40, 65, 252, 256], "psi_": [40, 252], "focu": [40, 252, 335], "acceler": [40, 43, 252], "u": [40, 43, 75, 93, 95, 97, 218, 228, 229, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 252, 253, 257, 258, 259, 263, 264, 265, 266, 267, 270, 272, 274, 275, 276, 277, 281, 283, 285, 286, 287, 288, 290, 292, 294, 295, 296, 302, 304, 305, 306, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 321, 324, 328, 329, 330, 331, 332, 333], "ft_phase": [40, 41, 42, 252], "df_img": [40, 41], "300e3": [40, 41, 43, 252, 254], "8000": [40, 41, 252], "relativistic_wavelength": 40, "beam": [41, 42, 60, 61, 64, 65, 252, 255, 256, 259], "bf": [41, 42, 46, 48, 61, 252, 253, 255, 256, 257, 258], "perp": [41, 42, 252, 258], "phi_0": [41, 252], "begin": [41, 61, 229, 231, 236, 252, 253, 255, 256, 257, 258, 275, 331, 333], "jame": [41, 289, 336], "close": [41, 216], "holographi": [41, 58, 223, 252, 336], "defocus_imag": [41, 50, 252], "imf": [41, 252], "kcx": [42, 50, 51, 52, 53, 252], "kcy": [42, 50, 51, 52, 53, 252], "experienc": 42, "phi": [42, 48, 252, 253, 254], "_m": [42, 252], "k_x": [42, 252], "k_y": [42, 252], "mu_0": [42, 46, 48, 252, 253, 257], "k_": [42, 93, 252, 258, 266, 279, 302], "h": [42, 43, 46, 48, 77, 78, 89, 94, 98, 99, 112, 216, 218, 246, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 265, 266, 268, 269, 274, 277, 278, 284, 303, 304, 305, 306, 308, 309, 310, 311, 312, 315, 317, 319, 320, 323, 324, 330, 331, 332, 336], "_z": [42, 252], "k_c": [42, 252], "here": [42, 64, 65, 69, 91, 95, 217, 219, 222, 229, 231, 233, 237, 240, 244, 247, 248, 249, 252, 253, 254, 255, 257, 258, 261, 263, 264, 265, 266, 271, 272, 293, 301, 309, 311, 315, 318, 319, 324, 327, 331, 335, 337], "vacuum": [42, 252], "permeabl": [42, 252], "radiu": [42, 78, 232, 252, 308, 333], "cx": [42, 218, 230, 231, 234], "dk_x": 42, "cy": [42, 218, 230, 231, 234], "dk_y": 42, "resolut": [42, 253, 259, 261, 324], "radii": 42, "tikhonov": [42, 252], "m_e": 43, "sqrt": [43, 254, 302], "mass": [43, 108], "speed": [43, 216, 334], "kv": [43, 252], "9687489006848795e": 43, "techniqu": [44, 251, 252, 253, 255, 256, 257, 259, 336], "textrm": [45, 46, 48], "am": [45, 46, 48, 218, 273, 275, 276, 279, 281, 315, 321], "micromagneticmodel": [45, 46, 48, 60, 61, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 152, 163, 174, 175, 216, 218, 220, 222, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 328, 329, 330, 331, 332, 336, 337], "mm": [45, 46, 48, 60, 61, 75, 76, 77, 78, 80, 82, 85, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 112, 152, 174, 175, 218, 220, 251, 252, 253, 254, 255, 256, 257, 259, 262, 263, 264, 265, 266, 267, 268, 269, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 328, 329, 330, 331, 332], "1e6": [45, 46, 75, 88, 92, 93, 94, 99, 112, 230, 231, 233, 234, 238, 251, 252, 253, 254, 255, 256, 259, 265, 266, 268, 269, 274, 277, 278, 281, 302, 307, 308, 309, 313, 314, 315, 317, 319, 320, 321, 323, 331], "1000000": [45, 251, 260, 265, 266, 296], "v_fun": [45, 48, 60, 61], "elif": [45, 48, 64, 236, 334], "325269": 45, "1193457478": 45, "405269": 45, "1193455959": 45, "460000": 45, "use_demag": [46, 257], "tau": [46, 257], "equat": [46, 61, 92, 98, 112, 171, 216, 218, 220, 225, 252, 253, 255, 256, 257, 258, 268, 269, 273, 275, 276, 279, 281, 284, 303, 304, 305, 310, 311, 313, 315, 318, 321, 323, 324, 326, 328, 336], "term": [46, 75, 76, 77, 78, 80, 81, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 104, 112, 174, 216, 218, 225, 253, 257, 297, 301, 303, 304, 309, 311, 320, 321, 324, 328, 330, 331, 332], "constitu": 46, "app": [46, 257], "system": [46, 48, 69, 70, 71, 72, 79, 86, 112, 152, 163, 174, 175, 216, 225, 233, 235, 237, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 302, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 328, 329, 330, 331, 333, 336, 337], "box2": [46, 48, 251, 252, 253, 254, 255, 256, 257, 259], "energi": [46, 48, 75, 76, 78, 83, 85, 88, 90, 92, 93, 94, 98, 99, 112, 149, 150, 166, 174, 216, 220, 225, 251, 252, 253, 254, 255, 256, 257, 258, 259, 263, 269, 270, 274, 277, 278, 283, 284, 297, 301, 303, 304, 305, 307, 308, 309, 313, 314, 317, 319, 320, 321, 322, 323, 324, 326, 328, 329, 330, 336], "zeeman": [46, 98, 99, 112, 174, 216, 218, 220, 251, 252, 253, 254, 255, 256, 257, 259, 260, 268, 269, 274, 275, 276, 277, 278, 284, 297, 303, 304, 305, 306, 308, 309, 310, 315, 317, 319, 320, 321, 323, 330, 332, 336], "1256637": 46, "061435814": 46, "forc": [47, 223, 252, 254, 336], "tip_m": [48, 54, 253], "qualiti": [48, 54, 253], "650": [48, 54, 253], "tip_q": [48, 54, 253], "fwhm": [48, 54, 58, 64, 253, 259], "tip": 48, "oscil": [48, 253], "cantilev": [48, 253], "strai": [48, 253, 301], "As": [48, 67, 68, 70, 94, 104, 179, 218, 229, 231, 233, 235, 239, 243, 247, 248, 250, 252, 253, 255, 256, 258, 259, 261, 265, 266, 274, 284, 286, 303, 304, 310, 311, 313, 314, 316, 321, 324, 328, 329, 330, 331, 332, 336], "airbox": [48, 253, 301], "satur": [48, 112, 218, 253, 273, 275, 276, 279, 281, 284, 302, 303, 304, 305, 307, 308, 310, 315, 321, 322, 324, 328, 329, 330, 331, 332, 333], "wish": [48, 253, 258], "driven": [48, 69, 86, 152, 163, 269], "reson": [48, 253, 284], "frequenc": [48, 94, 189, 252, 253, 255, 256, 266, 319, 320, 323, 324], "presenc": [48, 216, 256, 259], "sz": [48, 253], "_t": [48, 253], "spring": [48, 253], "monopol": [48, 253], "dipol": [48, 251, 253], "due": [48, 253, 254, 255, 256, 259, 305, 313], "ms_fun": [48, 308, 314, 322, 329, 331], "po": [48, 230, 231, 232, 233, 234, 236, 251, 252, 253, 254, 255, 256, 259, 273, 275, 276, 279, 281, 302, 304, 307, 308, 309, 315, 317, 321, 324, 328, 329, 331, 333], "384e3": 48, "16": [48, 218, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 243, 247, 252, 253, 258, 260, 261, 265, 266, 272, 273, 274, 276, 277, 279, 281, 284, 286, 302, 303, 308, 309, 310, 311, 314, 320, 321, 324, 331, 332, 333, 334], "40e": [48, 243, 324, 328, 329], "quickplot": [50, 51, 52, 53, 54, 55, 56, 57, 58], "ltem": [50, 51, 52, 53, 54, 58, 336], "integrated_magnetic_flux_dens": [52, 252], "z0": [54, 253], "mfm": [54, 336], "phase_shift": [54, 253], "polaris": [55, 56, 60, 61, 216, 255, 256, 259, 328, 329, 330], "neutron": [55, 56, 59, 61, 223, 336], "scatter": [55, 56, 57, 59, 61, 65, 223, 251, 257, 259, 336], "chiral": [55, 60, 255], "san": [55, 56, 336], "chiral_funct": [55, 255], "pattern": [56, 57, 64, 65, 252, 253, 254, 255, 257], "cross_sect": [56, 255, 256, 302], "rai": [57, 63, 64, 65, 223, 336], "x_rai": [57, 58, 256, 259], "chi": [60, 255], "omega": [60, 61, 95, 255, 256, 324], "flip": [60, 61, 255], "section": [60, 61, 235, 247, 250, 261, 301, 322, 324, 335], "turpl": [60, 61, 189], "incom": [60, 61, 255], "reutron": [60, 61], "frame": [60, 61, 64, 65], "co": [60, 61, 65, 231, 254, 257, 302, 324, 334], "1e5": [60, 61, 75, 77, 89, 93, 95, 253, 266, 270, 273, 277, 278, 279, 311, 315, 317, 318], "cf": 60, "sim": [61, 255, 258], "pauli": [61, 255], "bmatrix": [61, 255], "sigma_x": [61, 255], "sigma_i": [61, 255], "sigma_z": [61, 255], "pmatrix": [61, 252, 255], "hat": [61, 76, 255, 266, 275, 329], "geometri": [61, 218, 250, 251, 252, 253, 254, 255, 256, 257, 259, 302, 303, 304, 305, 308, 309, 311, 312, 319, 320, 322, 329, 333], "half": [61, 64, 243, 253, 255, 259], "further": [61, 94, 229, 230, 250, 259, 270, 272, 309], "unpolaris": [61, 255], "pp": [61, 255, 336], "nn": [61, 255], "pn": [61, 255], "negit": 61, "unpol": [61, 255], "arbitari": 61, "circular": [64, 65, 256, 259], "dichroism": [64, 65, 256, 259], "holograph": [64, 259], "convolut": [64, 259], "gaussian": [64, 253, 259], "full": [64, 94, 163, 216, 231, 233, 236, 250, 253, 257, 259, 261, 263, 264, 284, 318, 327, 337], "3e6": [64, 65, 94, 296, 323], "xrh": 64, "xrh2": 64, "m_i": 65, "propto": [65, 256], "qx": 65, "analys": [66, 224, 233, 277, 286, 314], "micromagneticdata": [67, 68, 69, 70, 71, 72, 216, 218, 222, 260, 261, 324, 328, 329, 336, 337], "drive": [67, 68, 69, 71, 72, 79, 86, 87, 152, 163, 174, 175, 176, 216, 218, 251, 252, 253, 254, 255, 256, 257, 259, 267, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 328, 329, 330, 331, 336], "md": [67, 68, 69, 70, 71, 72, 149, 165, 166, 184, 185, 218, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 273, 274, 275, 276, 277, 279, 280, 281, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 321, 322, 324, 328, 329, 331, 332], "system_nam": [67, 68, 69, 70, 71, 72, 260, 261], "concaten": [67, 68, 70, 189, 260], "timedriv": [67, 68, 70, 152, 175, 216, 218, 220, 260, 261, 277, 278, 283, 284, 303, 304, 305, 312, 319, 320, 323, 324, 328, 329, 330], "tabl": [67, 68, 70, 71, 72, 190, 193, 194, 195, 218, 220, 258, 260, 261, 274, 277, 299, 302, 303, 304, 305, 312, 314, 315, 319, 320, 323, 324, 330], "combineddr": [67, 70, 216], "append": [67, 68, 70, 86, 174, 216, 231, 251, 260, 286, 302, 315, 334], "drive_0": [67, 68, 70], "drive_1": [67, 68, 70], "register_callback": [67, 68, 70, 261], "regist": [67, 68, 70, 216, 261], "export": [67, 163, 216, 221, 337], "driver": [67, 70, 71, 72, 86, 97, 149, 150, 151, 165, 166, 170, 216, 218, 225, 260, 261, 269, 272, 277, 283, 284, 302, 303, 311, 312, 314, 331, 332], "mai": [67, 252, 302, 334, 335], "extra": [67, 334], "proper": [67, 216, 250], "hysteresisdriv": [67, 216, 251, 261, 314], "b_hysteresi": [67, 68, 71, 72, 189, 216, 261, 314], "bx_hysteresi": [67, 68, 71, 72, 314], "by_hysteresi": [67, 314], "bz_hysteresi": [67, 261, 314], "hysteresi": [67, 68, 71, 72, 165, 198, 216, 300, 301], "while": [67, 163, 250, 255, 258, 305, 331], "rest": [67, 233, 332], "besid": 67, "xr_drive": 67, "isel": 67, "m0": [67, 260, 261], "init": [67, 235], "row": [67, 218, 283, 284, 286, 303, 314, 323, 330], "ubermagt": [67, 68, 70, 189, 216, 222, 260, 283, 284, 285, 286, 287, 288, 336, 337], "abstractdr": 68, "oommfdriv": [68, 69, 70, 216, 260], "directori": [69, 70, 71, 72, 86, 152, 163, 174, 175, 177, 197, 216, 234, 243, 244, 249, 260, 261, 263, 264, 267, 271, 272, 287, 297, 302, 303, 304, 309, 327, 337], "defult": [69, 70, 71, 72], "ioerror": [69, 70, 71, 72], "0th": 69, "1th": 69, "mumax3dr": [69, 70, 216, 260], "6th": 69, "boundedinttext": 69, "mismatch": 69, "nan": [69, 189, 216, 218, 257, 260, 261, 277, 286], "drive_numb": [69, 218, 260, 261, 277, 314], "use_cach": [70, 71, 72], "tabular": [70, 71, 72, 188, 189], "onc": [70, 71, 72, 156, 180, 327], "prevent": [70, 71, 72, 235], "detect": [70, 71, 72, 229], "look": [70, 71, 72, 218, 222, 229, 231, 233, 235, 236, 239, 240, 244, 247, 249, 253, 255, 259, 261, 275, 277, 284, 301, 311, 314, 315, 320, 324, 330, 331, 332, 333, 335, 336, 337], "objet": 70, "subpart": 70, "static": [70, 231, 244, 249, 324], "__new__": 70, "cl": [70, 199], "structur": [70, 218, 230, 251, 252, 253, 254, 255, 256, 257, 258, 259, 336], "subdirectori": [70, 86, 174, 327], "ovf2vtk": [70, 221, 260], "intslid": 70, "calculator_script": [70, 71, 72, 260], "mif": [70, 71, 72, 91, 94, 95, 163, 216, 260, 272, 312, 324, 335], "content": [70, 71, 72, 177, 178, 179, 181, 234, 271], "mx3": [70, 71, 72], "todo": [70, 71, 72, 229, 237, 261], "mumax3": [70, 71, 72, 86, 148, 149, 150, 151, 152, 154, 155, 156, 158, 189, 193, 194, 195, 222, 227, 283, 336, 337], "pre": [70, 71, 72, 91, 94, 95, 267, 284], "cach": [70, 156, 180, 183, 272], "clear": [70, 235], "sub": [71, 72, 216, 217, 334, 335, 336], "languag": [74, 334, 335, 336], "anisotropi": [75, 93, 257, 270, 275, 276, 297, 302, 310, 315, 318, 324, 328, 329], "w": [75, 76, 78, 85, 88, 93, 94, 231, 252, 295, 305, 306, 310, 311, 324, 328, 330], "5e5": [75, 77, 89, 93, 270], "per": [75, 76, 77, 85, 88, 89, 91, 93, 94, 200, 258, 261, 293], "u1": [75, 250, 260, 266, 273], "u2": [75, 266, 273], "ca": [75, 273], "1e4": [75, 218, 311, 316, 324, 334], "4e5": [75, 314], "dzyaloshinskii": [76, 258, 297, 322, 328, 329], "moriya": [76, 258, 297, 322, 324, 328, 329, 337], "w_x": 76, "cnv": [76, 216, 220, 266, 317, 331], "m_": [76, 78, 88, 94, 218, 231, 258, 266, 269, 273, 275, 276, 279, 281, 302, 303, 304, 305, 306, 310, 311, 315, 317, 321, 322, 330, 331, 332], "w_y": 76, "w_z": 76, "d2d": [76, 216, 266, 331], "unsign": [76, 85, 89, 207, 210, 239, 263, 264, 291], "incompat": 76, "crystalclass": [76, 220, 251, 252, 253, 254, 255, 256, 259, 266, 275, 308, 309, 311, 314, 317, 322, 324, 328, 329, 331], "crystalograph": [76, 331, 337], "cnv_x": [76, 266], "cnv_y": [76, 266], "cnv_z": [76, 254, 266, 275, 308, 309, 317, 324, 328, 329, 331], "d2d_x": [76, 266], "d2d_y": [76, 266], "d2d_z": [76, 266], "sensit": [76, 252, 324], "7e": [76, 239, 241], "gamma_": [77, 89, 218, 265, 269, 303, 304, 311, 312, 330, 332], "alpha": [77, 80, 89, 91, 92, 95, 97, 98, 99, 112, 218, 265, 269, 278, 284, 303, 304, 305, 307, 311, 312, 319, 320, 323, 324, 328, 329, 330, 332], "eff": [77, 89, 218, 265, 269, 303, 304, 311, 312, 330, 332], "01": [77, 95, 97, 99, 165, 166, 218, 220, 277, 297, 309, 324], "005": [77, 265, 266, 330], "012": [77, 95], "mu_": [78, 91, 94, 218, 258, 266, 269, 281, 302, 303, 304, 306, 310, 311, 317, 330, 331, 332], "asymptotic_radiu": 78, "asymptot": 78, "precess": [80, 92, 98, 99, 104, 112, 218, 220, 261, 269, 278, 284, 303, 304, 305, 307, 312, 319, 320, 323, 324, 328, 329, 330, 332, 336], "gamma0": [80, 89, 92, 98, 99, 112, 218, 262, 265, 269, 278, 284, 303, 304, 305, 307, 311, 312, 319, 320, 323, 324, 328, 329, 330, 332], "const": [80, 89, 92, 98, 99, 112, 203, 204, 205, 206, 207, 208, 209, 210, 211, 218, 258, 262, 269, 278, 289, 295, 302, 303, 306, 307, 310, 311, 312, 314, 319, 320, 323], "damp": [80, 92, 97, 98, 99, 112, 218, 261, 269, 278, 284, 303, 304, 305, 307, 311, 312, 319, 320, 323, 324, 328, 329, 330, 332, 336], "exchang": [82, 90, 92, 97, 98, 99, 216, 218, 220, 234, 251, 252, 253, 254, 255, 256, 257, 259, 260, 269, 270, 275, 278, 283, 297, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 313, 314, 317, 318, 322, 323, 324, 328, 329, 332, 336], "123": [85, 216], "runner": [86, 87, 154, 155, 174, 177, 178, 179, 181, 216, 293, 297, 301, 337], "ovf_format": [86, 163, 174, 216], "verbos": [86, 87, 174, 216, 218, 251, 253, 257, 297], "director": 86, "alreadi": [86, 87, 98, 174, 216, 231, 235, 239, 243, 258, 280, 283, 284, 315, 324, 335, 336, 337], "could": [86, 163, 228, 229, 231, 233, 239, 247, 283, 293, 318, 324], "drive_kwargs_setup": [86, 163], "workinng": [86, 163, 174], "externalrunn": 86, "tool": [86, 114, 192, 216, 218, 221, 233, 261, 283, 305, 317, 336], "doubl": [86, 163, 174, 216, 331, 334], "runtim": [86, 87, 174, 216, 324], "stdout": [86, 87, 174, 200, 272, 293], "progress": [86, 87, 216], "bar": [86, 87, 216, 231, 253, 255, 256], "snapshot": [86, 87, 216, 336], "disk": [86, 87, 216, 235, 280, 284, 301, 322, 333], "give": [86, 87, 158, 163, 183, 216, 218, 222, 228, 231, 233, 235, 239, 241, 243, 247, 252, 255, 258, 261, 280, 284, 301, 302, 315, 324, 327, 332, 336], "rough": [86, 87, 94, 216, 280], "fileexistserror": 86, "schedul": [86, 163, 216, 260, 267], "cmd": [86, 285], "header": [86, 163, 216], "script_nam": [86, 91, 94, 95, 324], "job": [86, 163, 216, 267], "sh": 86, "submit": [86, 216, 267], "machin": [86, 272, 309, 336, 337], "slurm": [86, 216], "resourc": [86, 216], "respons": [86, 163, 216, 243], "ensur": [86, 163, 216, 235, 298, 305, 313, 318, 337], "execut": [86, 154, 156, 163, 177, 178, 180, 216, 272, 278, 309, 336, 337], "submiss": [86, 216], "program": [86, 216, 217, 335], "sbatch": 86, "cpu": [86, 163], "memori": [86, 216], "script": [86, 91, 94, 95, 324, 337], "schedule_kwargs_setup": [86, 163], "argstr": 87, "need_stderr": 87, "glob_nam": 87, "dry_run": [87, 216], "captur": 87, "updat": [87, 216, 231, 267, 310, 311], "glob": 87, "express": [87, 247, 258, 263, 264, 302], "runtimeerror": 87, "occur": [87, 302, 318, 331], "success": [87, 189, 337], "package_nam": [87, 155, 179], "magneto": [88, 216], "elast": [88, 216], "b_": 88, "sum_": [88, 258], "epsilon_": 88, "ne": 88, "ij": [88, 258], "b1": 88, "1e7": [88, 94, 231, 322, 333], "5e7": 88, "b2": 88, "e_diag": 88, "e_offdiag": 88, "strain": 88, "matrix": [88, 94, 235, 324], "assembl": [88, 269, 273, 275, 276, 279, 281, 321, 331], "eps11": 88, "eps22": 88, "eps33": 88, "eps23": 88, "eps32": 88, "eps13": 88, "eps31": 88, "eps12": 88, "eps21": 88, "mel": [88, 216], "2e7": 88, "gamma": [89, 91, 104, 265, 328, 329, 330], "2e6": [89, 258, 284, 317, 323, 330], "closest": [90, 318], "mutual": [90, 266, 316, 318], "bilinear": [90, 231], "interfaci": [90, 220, 308, 317, 331], "sigma2": [90, 318], "biquadrat": 90, "torqu": [91, 95, 216, 223, 258, 328], "beta": [91, 95, 265, 304, 324, 328, 329], "epsilon": [91, 258], "hbar": [91, 262], "tm_": 91, "evalu": [91, 94, 95, 218, 324], "dt": [91, 94, 95, 283, 284, 303, 311, 312, 323, 324, 330], "tcl_string": [91, 94, 95, 324], "tcl": [91, 94, 95, 180, 181, 266, 272, 293, 309, 337], "5e12": 91, "3e12": 91, "mp": [91, 324], "35": [91, 216, 229, 231, 233, 236, 239, 266, 283, 286, 303, 304, 314, 315, 324, 334], "eps_prim": 91, "script_arg": [91, 94, 95, 324], "nist": [91, 94, 95, 162, 164, 165, 166, 167, 169, 170, 302, 303, 304, 324, 337], "gov": [91, 94, 95, 162, 164, 165, 166, 167, 169, 170, 302, 303, 304, 324], "doc": [91, 94, 95, 177, 250, 292, 293, 324], "userguide20a3": [91, 94, 95, 324], "userguid": [91, 94, 95, 324], "standard_oxs_ext_child_cla": [91, 94, 95, 324], "sx": [91, 95], "1e12": 91, "exponenti": [91, 94, 324], "decai": [91, 94, 95, 324], "t_0": [91, 94], "exp": [91, 94, 233, 254, 324], "unnam": 92, "uniqu": [92, 189, 236, 261, 273, 275, 276, 279, 281, 286, 315], "temperatur": [92, 171, 173, 216, 258, 295, 301], "my_cool_system": 92, "dynamicsterm": [92, 263], "yet": 92, "001": [92, 258, 296], "21e5": 92, "221000": 92, "energyterm": [92, 264], "uniaxi": [93, 257, 270, 273, 297, 302, 310, 318, 324, 328, 329], "k1": [93, 266, 279], "k2": [93, 266, 279], "ua": [93, 97, 279], "2e3": 93, "sine": [94, 266, 301, 320, 323, 324], "wave": [94, 252, 255, 256, 266, 319, 320, 323, 324], "puls": [94, 266, 323], "built": [94, 228, 231, 252, 255, 256, 259, 285], "t0": [94, 266, 319, 320, 323, 324], "t_": [94, 258, 266, 323], "off": [94, 189, 218, 252, 253, 305, 323, 324], "separ": [94, 229, 231, 233, 235, 265, 266, 324], "up": [94, 200, 216, 232, 235, 247, 248, 251, 252, 253, 255, 256, 257, 259, 268, 308, 311, 316, 317, 318, 324, 335], "desir": [94, 250, 252, 253, 255, 259, 334, 337], "stabl": [94, 250, 322], "reason": [94, 216, 233, 235, 257, 314, 316, 337], "guidelin": [94, 337], "nine": [94, 324], "m11": 94, "m12": 94, "m13": 94, "m21": 94, "m22": 94, "m23": 94, "m31": 94, "m32": 94, "m33": 94, "complic": [94, 229, 253, 332], "tz": [94, 324], "flexibl": [94, 163, 235], "sever": [94, 217, 229, 230, 231, 233, 235, 236, 245, 265, 266, 288, 293, 295, 324, 333, 336], "time_depend": [94, 324], "tstep": [94, 324], "easier": [94, 243, 336], "hz": [94, 324], "predefin": [94, 208, 218, 262, 266], "su": [94, 324], "websit": [94, 216, 231, 324, 337], "zhang": [95, 168, 216, 305, 328], "li": [95, 168, 216, 328], "behav": [95, 229, 260, 324], "similar": [95, 216, 229, 231, 236, 237, 238, 241, 243, 244, 245, 249, 260, 261, 276, 277, 279, 288, 295, 303, 304, 324, 327], "slonczewski": [95, 169, 173, 216], "oxs_spinxferevolv": [95, 169], "5e6": [95, 97, 324, 328, 329, 332], "sinusoid": [95, 324], "sin_wav": 95, "evolv": [97, 162, 164, 167, 168, 169, 171, 172, 173, 225, 260, 283, 284, 303, 312, 329], "_allowed_attribut": [97, 149, 150, 151, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 263, 264, 267], "lowercas": [97, 98, 268], "uniaxialanisotropi": [97, 252, 253, 257, 259, 266, 279, 283, 302, 306, 308, 309, 310, 311, 314, 316, 317, 318, 324, 328, 329, 331], "my_damp": 97, "termscontain": 98, "present": [98, 216, 256, 259, 288, 324, 329, 331, 333, 334], "termcontain": 98, "my_exchang": 98, "energy1": 98, "energy2": 98, "dmi": [98, 216, 220, 251, 252, 253, 254, 255, 256, 259, 266, 275, 283, 308, 309, 314, 317, 322, 324, 328, 329, 336], "stt": [98, 304, 324, 328, 329], "indexerror": 98, "6021766208e": [101, 262], "19": [101, 228, 229, 231, 233, 235, 236, 238, 239, 240, 243, 258, 260, 261, 262, 265, 266, 273, 274, 277, 279, 283, 286, 293, 303, 306, 310, 311, 314, 321, 323, 324, 331, 333, 334], "elementari": 101, "00231930436182": [102, 262], "land": 102, "176085964286": [103, 262], "56906": [103, 262], "gyrotrop": [103, 265, 328, 329, 332], "kg": [103, 108], "221276": [104, 262], "14872118403": [104, 262], "llg": [104, 218, 220, 303, 304, 305, 330, 331], "62607004081e": [105, 262], "34": [105, 106, 218, 229, 231, 233, 236, 262, 266, 272, 286, 293, 309, 314, 315, 323, 324, 334], "planck": [105, 106, 336], "0545718002680283e": [106, 262], "3806485279e": [107, 262], "23": [107, 110, 218, 228, 229, 231, 233, 236, 238, 239, 247, 254, 258, 260, 261, 262, 265, 266, 283, 286, 294, 314, 315, 324, 333, 334], "boltzmann": [107, 258], "1093835611e": [108, 262], "31": [108, 216, 229, 231, 233, 236, 250, 258, 260, 262, 266, 286, 305, 314, 324, 334], "2566370614359173e": [109, 262], "06": [109, 213, 214, 218, 220, 252, 260, 262, 296, 305, 307, 309, 310, 315, 324, 334], "8569529235961887e": [110, 262], "bohr": [110, 258], "magneton": [110, 258], "micromagnetictest": [116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 222, 271, 336, 337], "calculatortest": [116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 271], "tmp_path": 141, "mt": [146, 147, 303, 314], "mumax3c": [149, 150, 151, 154, 155, 156, 216, 220, 222, 336, 337], "minimis": [149, 150, 166, 220, 273, 275, 276, 277, 279, 281, 303, 304, 308, 315, 316, 317, 321, 322, 331, 332], "mumax": [149, 150, 151, 216, 220, 222, 283, 337], "github": [149, 150, 151, 216, 217, 335, 337], "io": [149, 150, 151, 216, 335], "mc": [149, 150, 151, 155, 156, 157, 159, 165, 175, 218, 220, 227, 274, 277, 278, 284, 291, 306, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 328, 330, 332], "demagaccuraci": [149, 150, 151], "myarg": [149, 150, 151, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "rd": 150, "td": [151, 152, 170, 175, 218, 278, 280, 284, 303, 304, 305, 312, 319, 320, 323, 324, 328, 329, 330], "oommfc": [152, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 177, 178, 179, 180, 181, 200, 216, 218, 220, 222, 227, 251, 252, 253, 254, 255, 256, 257, 259, 260, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 293, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 328, 329, 330, 331, 332, 336, 337], "filenotfounderror": [152, 175], "calc": [152, 283], "macrospin": [152, 155, 157, 174, 175, 179, 182, 272, 280, 284, 324], "mumax3_ex": [154, 156, 337], "statu": [155, 156, 179, 180, 216, 272, 280, 337], "cache_runn": [156, 180, 272, 293], "subsequ": [156, 180, 216, 231, 272, 303, 337], "mumax3runn": [156, 158], "caus": [156, 180, 216, 235, 252, 291, 334], "again": [156, 180, 231, 235, 240, 261, 263, 264, 277, 324, 331, 336, 337], "optirun_ex": 156, "optirun": 156, "autoselect_runn": [156, 158, 180, 183, 272, 293], "suitabl": [156, 180, 337], "environmenterror": [156, 180], "host": [156, 180, 216], "isinst": [156, 157, 180, 182, 203, 233, 315], "though": [157, 182], "mumxa3c": 158, "unset": [158, 183, 272], "let": [158, 183, 218, 228, 230, 231, 232, 233, 234, 235, 236, 239, 240, 241, 242, 243, 244, 247, 248, 249, 263, 264, 265, 266, 267, 270, 273, 274, 275, 276, 277, 279, 281, 285, 286, 287, 290, 292, 294, 295, 309, 313, 314, 315, 317, 321, 324, 328, 330, 331, 332, 333], "reset": [158, 180, 183, 229, 324], "overwrit": [158, 183, 272, 302], "oxs_cgevolv": [162, 260], "oc": [162, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 179, 180, 182, 220, 227, 251, 252, 253, 254, 255, 256, 257, 259, 273, 275, 276, 279, 280, 281, 302, 303, 304, 305, 306, 307, 308, 329, 331], "polak": 162, "ribier": 162, "fixed_subregion": [163, 313], "output_step": [163, 277], "n_thread": [163, 174, 278], "thread": [163, 174, 278], "environ": [163, 174, 180, 216, 293, 327], "oommf_thread": [163, 174], "instal": [163, 174, 216, 258, 272, 293, 298, 309, 327, 336], "impli": 163, "activ": [163, 229, 327, 337, 338], "conda": [163, 216, 258, 293, 327, 337], "request": 163, "node": 163, "write_mif": [163, 216], "subdirectiori": 163, "encourag": [163, 335], "advanc": [163, 229, 239, 324], "euler": [164, 235], "oxs_eulerevolv": 164, "min_timestep": 164, "oxs_mindriv": [165, 166, 260], "hd": [165, 314], "stopping_mxhxm": [165, 166, 260], "rung": [167, 172], "kutta": [167, 172], "oxs_rungekuttaevolv": 167, "rk4": [167, 168, 169, 172, 173], "anv_spintevolv": 168, "www": [168, 171, 272, 302, 303, 304, 309, 312], "zurich": 168, "ibm": 168, "com": [168, 172, 173, 177, 272, 309, 312, 337], "st": [168, 324], "nanomagnet": 168, "oxs_timedriv": 170, "total_iteration_limit": 170, "langevin": 171, "thetaevolv": [171, 312], "nanosci": [171, 312], "de": [171, 283, 284, 303, 312, 323, 330], "group_r": [171, 312], "stm": [171, 312], "spstm": [171, 312], "download": [171, 272, 309, 312, 336, 337], "shtml": [171, 312], "fixed_timestep": [171, 312], "60": [171, 220, 231, 233, 235, 312], "xf_thermheun": 172, "uhh_thetaevolv": [172, 216], "kelvinxyfong": [172, 173], "wordpress": [172, 173], "research": [172, 173, 336], "interest": [172, 173, 231, 233, 302], "effective_field": [174, 264, 306, 307, 310, 311], "22": [174, 220, 229, 231, 233, 236, 238, 239, 243, 258, 260, 261, 265, 266, 273, 275, 276, 279, 281, 283, 284, 286, 314, 323, 324, 330, 333, 334], "silent": [175, 216], "docker_ex": [177, 180, 272, 293], "docker": [177, 180, 185, 216, 220, 272, 293, 309, 337], "20a3": [177, 220], "selinux": [177, 216], "dockerhub": 177, "flag": 177, "mount": 177, "caution": 177, "storag": 177, "bind": 177, "configur": [177, 218, 251, 252, 253, 254, 255, 256, 257, 259, 269, 293, 302, 303, 305, 308, 309, 317, 325, 330, 331, 332], "you": [177, 216, 217, 222, 229, 230, 233, 258, 261, 271, 272, 301, 309, 324, 326, 327, 329, 330, 332, 335, 336, 337], "permiss": 177, "boxsii": [177, 178, 179, 181], "oommf_ex": [178, 180, 272, 293, 309], "__del__": 179, "kill": [179, 273, 275, 276, 279, 281, 293], "applic": [179, 237], "goe": 179, "scope": [179, 271], "window": [179, 216, 272, 285, 309, 327, 337], "ownership": 179, "consequ": [179, 235, 337], "platform": [179, 216], "seen": [179, 229, 231, 235, 236, 252, 254], "oommfrunn": [180, 183, 216, 272], "envvar": [180, 272, 293], "oommftcl": [180, 272, 293, 337], "ooommf_ex": 180, "docker_runn": [180, 309], "long": [180, 216, 243, 244, 249, 285, 287, 328], "dockeroommfrunn": [180, 216, 254, 255, 256, 259, 309], "oommf_tcl": [181, 272, 309], "exeoommfrunn": [183, 216, 218, 251, 252, 257, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 328, 329, 330, 331, 332], "usr": 183, "share": [183, 336], "miniconda": 183, "env": [183, 258, 272, 293, 308, 317, 334], "meta": [186, 298, 327, 336, 337], "build": [189, 222, 230, 234, 238, 267, 314, 337], "make": [189, 230, 231, 235, 243, 244, 249, 250, 254, 255, 256, 258, 259, 263, 264, 273, 275, 276, 279, 281, 291, 292, 303, 311, 315, 316, 321, 332, 336, 337], "recommend": [189, 219, 231, 324, 327], "odt": [189, 190, 193, 194, 195, 216, 283, 284, 285, 286, 287, 288, 336], "map": [189, 235, 252, 253, 255, 256], "ut": [189, 190, 191, 283, 285, 286, 287, 288], "odtfil": [189, 190, 193, 194, 195, 283, 284, 285, 287, 288], "file1": [189, 190, 193, 194, 195, 246, 286], "merg": [189, 299], "xmax": [189, 257, 283, 286], "odtfile1": [189, 286], "odtfile2": [189, 286], "file2": [189, 195, 246, 283, 285, 286, 287, 288], "table1": [189, 286], "table2": [189, 286], "merged_t": [189, 286], "picosecond": [189, 287, 288], "24": [189, 216, 218, 229, 231, 233, 236, 238, 239, 258, 260, 261, 265, 266, 283, 286, 296, 303, 314, 324, 333, 334], "999": 189, "39": [189, 228, 230, 231, 233, 236, 238, 240, 243, 244, 247, 248, 249, 260, 263, 264, 265, 266, 267, 268, 269, 272, 282, 283, 286, 287, 292, 293, 294, 295, 296, 304, 306, 309, 314, 315, 324, 334], "99": [189, 284], "file3": [189, 194, 246], "fuction": [189, 307], "new_tabl": 189, "shorter": [189, 193, 195, 324, 332, 333], "hysteresis1": 189, "irfft": [189, 284], "fast": [189, 250], "file5": 189, "ifft_tabl": [189, 284], "rfft": [189, 284], "nanosecond": [189, 324], "fft_tabl": [189, 284], "uu": [193, 194, 195, 198, 201, 213, 214, 251, 252, 253, 255, 256, 257, 259, 290, 296], "across": [196, 216, 253], "ubermag": [196, 200, 216, 217, 218, 219, 222, 227, 229, 230, 231, 233, 240, 251, 252, 253, 255, 256, 257, 258, 259, 272, 274, 282, 284, 293, 301, 309, 311, 314, 315, 318, 326, 327, 331, 333, 334, 335, 338], "context": [197, 216, 237, 239], "manag": [197, 216, 337], "vmin": [198, 255, 256, 290], "vmax": [198, 255, 256, 290], "loop": [198, 239, 241, 251, 261, 290, 302], "copi": 199, "docstr": [199, 334], "__init__": [199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 231, 289, 291, 292, 294, 295], "squar": [199, 218, 229, 291, 312, 334], "__doc__": [199, 292], "package_level": [200, 293], "log": [200, 216, 300, 334], "logger": [200, 293], "fine": [200, 261, 293, 303], "grain": [200, 216, 293], "subpackag": [200, 216, 219, 293, 298, 326, 327, 336, 337], "debug": [200, 293], "ubermagutil": [203, 204, 205, 206, 207, 208, 209, 210, 216, 222, 251, 252, 253, 255, 256, 257, 259, 263, 264, 266, 289, 290, 292, 293, 294, 295, 296, 336, 337], "typesystem": [203, 204, 205, 206, 207, 208, 209, 210, 263, 264, 266, 289, 294, 295, 300, 336, 338], "__set__": [203, 204, 205, 206, 207, 208, 209, 210], "instanti": [203, 228, 263, 264, 291, 294, 295], "never": [203, 272, 291], "positiveint": 203, "super": 203, "myattribut": [203, 204, 205, 206, 207, 208, 209, 210], "decoratedclass": [203, 204, 205, 206, 207, 208, 209, 210, 211, 294], "dc": [203, 204, 205, 206, 207, 208, 209, 210, 211, 223, 294], "beed": 203, "affect": [203, 204, 205, 206, 207, 210, 228, 261, 294, 331], "__delete__": 203, "nikola": [203, 205, 209, 211, 289, 291], "tesla": [203, 205, 209, 211, 289, 291], "del": [203, 291], "john": [203, 204, 205, 206, 207, 208, 209, 210], "jane": [203, 204, 205, 206, 207, 208, 209, 210], "descriptor": [204, 205, 206, 207, 208, 209, 210, 211, 263, 264, 266, 289, 300, 336], "key_descriptor": 204, "value_descriptor": 204, "allow_empti": 204, "prioriti": [204, 206, 207, 210], "inherit": [204, 205, 206, 207, 208, 209, 210, 292], "identifi": [205, 248, 315, 318, 332], "allowed_char": 205, "split": 205, "object_nam": 205, "newnam": 205, "123newnam": 205, "describ": [206, 229, 231, 237, 258, 336], "abc": [206, 291], "expected_typ": [207, 209, 210, 211, 289, 291], "subset": [207, 210, 266, 291], "neither": [207, 210, 273, 279], "nor": [207, 210, 273, 279], "sample_set": [208, 291], "unpack": [208, 239, 291, 333], "yx": [208, 324], "zyyyyx": 208, "allow_non": 209, "mihajlo": [209, 211, 294], "pupin": [209, 211, 294], "component_typ": 210, "impos": [211, 263, 264, 294, 295, 300], "si": [212, 213, 214, 243, 244, 247, 249, 287, 300], "si_multipli": [213, 296], "largest": [213, 296], "500e": [213, 214, 303, 324, 328], "5000e": 213, "microscal": 214, "picoscal": 214, "si_max_multipli": [214, 252, 296], "furthermor": [216, 229, 231, 261, 267], "reorganis": 216, "invis": 216, "158": [216, 293], "163": 216, "getitem": 216, "116": [216, 315], "mpl_subregion": [216, 243], "replac": [216, 227, 252, 327, 332, 337, 338], "164": 216, "improv": [216, 230, 324, 338], "194": [216, 293], "greatli": [216, 335], "render": [216, 250, 336], "avoid": [216, 229, 237, 252, 305, 337], "problem": [216, 230, 301, 324, 335, 336], "slow": 216, "might": [216, 219, 229, 327], "commit": 216, "4a8fca4": 216, "159": [216, 293], "rewrit": 216, "consumpt": 216, "roughli": 216, "had": [216, 311], "peak": [216, 255, 256], "33": [216, 218, 229, 231, 233, 236, 260, 266, 283, 286, 314, 315, 324, 334], "latex": [216, 265, 266], "landau": [216, 218, 303, 330], "lifshitz": [216, 218, 303, 330], "gilbert": [216, 218, 265, 284, 303, 304, 305, 324, 328, 329, 330, 332], "140": 216, "26": [216, 229, 231, 233, 236, 239, 258, 260, 261, 265, 266, 283, 286, 314, 324, 333, 334], "jupyt": [216, 217, 230, 231, 247, 326, 332, 334, 335, 336, 337], "dynacm": 216, "104": 216, "sent": 216, "subprocess": 216, "don": [216, 231, 233], "rescal": 216, "149": [216, 255, 336], "mag2exp": [216, 222, 235, 251, 252, 253, 255, 256, 257, 259, 336], "previous": [216, 233, 239, 291, 311, 312, 316, 337], "46": [216, 231, 233, 266, 305, 324, 334], "overhead": 216, "temporari": 216, "cover": [216, 243, 301], "2de6360": 216, "despit": [216, 229], "153": [216, 312], "stop": [216, 324], "keyboardinterrupt": 216, "103": 216, "upon": 216, "complet": [216, 303, 314, 337], "interrupt": 216, "counter": 216, "openh264": 216, "146": 216, "speedup": 216, "135": 216, "stabil": 216, "inaccuraci": [216, 235], "introduc": [216, 219, 235, 243, 305, 323, 326, 334], "refactor": [216, 338], "133": 216, "overlap": [216, 231, 243, 248], "tick": 216, "dealt": 216, "easili": [216, 235, 253, 258], "fashion": [216, 336], "134": 216, "textual": 216, "isosurfac": 216, "huge": 216, "200": [216, 229, 252, 253, 277, 278, 283, 284, 293, 295, 303, 314, 323, 324, 329, 330], "129": [216, 283], "mathemat": [216, 219, 228, 336], "141": 216, "144": 216, "18": [216, 218, 228, 229, 231, 233, 235, 236, 237, 238, 239, 243, 258, 259, 260, 261, 265, 266, 273, 274, 276, 277, 278, 279, 283, 284, 286, 296, 303, 306, 307, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 323, 324, 331, 332, 333, 334], "drive1": 216, "drive2": 216, "hint": 216, "27": [216, 229, 231, 233, 236, 239, 258, 260, 261, 266, 283, 286, 314, 315, 324, 333, 334], "137": 216, "directiori": 216, "readabl": [216, 332], "writabl": 216, "95": 216, "0a2": [216, 220], "84": 216, "198": [216, 283, 284, 293, 303, 323, 330], "crystallograph": [216, 266, 275, 331], "maco": [216, 285, 327, 337], "linux": [216, 272, 285, 309, 327, 337], "ligh": [216, 231], "fieldrot": [216, 254, 259], "105": [216, 323], "datatyp": 216, "114": [216, 315], "118": 216, "significantli": 216, "10_000": 216, "117": 216, "million": 216, "files": 216, "9m": 216, "1730": 216, "63000": 216, "56": [216, 231, 233, 266, 277, 323, 331], "1125": 216, "8m": 216, "1860": 216, "64000": 216, "762": 216, "15m": 216, "4920": 216, "401": 216, "69000": 216, "4510": 216, "represen": 216, "121": 216, "need": [216, 218, 229, 230, 231, 233, 235, 237, 239, 241, 242, 243, 245, 247, 258, 260, 261, 266, 272, 273, 275, 276, 279, 281, 288, 290, 295, 303, 304, 308, 309, 315, 317, 321, 322, 323, 324, 328, 330, 332, 333, 336, 337], "77": [216, 233], "anyth": [216, 336], "summari": [216, 337], "80": [216, 233, 252, 305], "108": 216, "simultan": [216, 272], "106": 216, "broke": 216, "191": 216, "solv": [216, 219, 239, 301, 336], "issu": [216, 217, 334, 335], "unifi": 216, "sync": 216, "switch": [216, 324], "lab": [216, 231, 326, 337], "situat": [216, 229], "generalis": [216, 233, 338], "dmi_cnv": [216, 283], "dmi_d2d": 216, "dmi_cnv_z": [216, 266], "zhangli": [216, 265, 304, 324, 328, 329], "xf_thermheunevolv": 216, "xf_thermspinxferevolv": 216, "setup_log": [216, 293], "colourbar": [216, 231], "twice": [216, 253], "139": 216, "pyenv": 216, "172": [216, 283], "magnetoelast": 216, "syntax": [216, 334], "highli": 217, "welcom": [217, 335, 338], "mani": [217, 231, 233, 241, 247, 251, 278, 318, 332], "skill": 217, "few": [217, 233, 235, 332], "answer": [217, 219, 335], "question": [217, 219, 301, 331, 334, 335, 336], "help": [217, 230, 246, 250, 272, 309, 336, 337], "repositori": [217, 335, 337], "mail": [217, 335, 336], "encount": [217, 308, 317, 335], "reproduc": [217, 318, 336], "pull": [217, 272, 309], "someth": [217, 231], "why": [217, 233, 253], "want": [217, 218, 228, 229, 231, 232, 233, 235, 236, 238, 239, 241, 242, 243, 244, 245, 247, 249, 259, 263, 264, 265, 266, 271, 272, 274, 277, 281, 285, 286, 287, 290, 291, 303, 305, 306, 309, 310, 311, 313, 314, 318, 321, 324, 328, 329, 331, 332, 333, 334, 335, 336, 337], "yourself": 217, "touch": 217, "beforehand": [217, 229], "core": [218, 229, 334], "develop": [218, 335, 338], "abl": [218, 236, 256, 258, 259, 261, 294, 295, 328, 335], "permalloi": [218, 303, 304, 305], "thick": [218, 241, 252, 303, 304, 305, 311, 322, 331, 333], "Its": [218, 228, 236, 243, 244, 249, 273, 275, 276, 279, 281, 298, 321, 331], "ferromagnet": [218, 284], "w_": [218, 273, 275, 276, 279, 281, 331], "pj": [218, 328, 329, 331, 332], "govern": [218, 303, 330], "211": [218, 303, 304, 328, 329, 330], "state": [218, 231, 252, 284, 303, 304, 305, 306, 310, 316, 318, 324, 331, 332], "config": 218, "inlinebackend": 218, "figure_format": 218, "svg": 218, "pd": 218, "max_row": 218, "float_format": 218, "materi": [218, 243, 258, 302, 303, 304, 305, 308, 311, 317, 328, 333, 336], "8e5": [218, 273, 275, 276, 279, 281, 303, 304, 305, 306, 307, 310, 315, 321, 324, 328, 329], "gyromagnet": [218, 284, 303, 304, 324, 328, 329, 330], "vortex_dynam": [218, 261], "omit": [218, 229, 236, 246, 335], "m_init": [218, 302, 308, 309, 317, 329], "place": [218, 274, 319, 326, 334], "investig": [218, 228, 255, 256, 331], "carri": [218, 250, 251, 329, 337], "calul": 218, "mindriv": [218, 220, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 273, 274, 275, 276, 279, 280, 281, 297, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 315, 316, 317, 318, 321, 322, 324, 328, 329, 331, 332], "2022": [218, 220, 251, 252, 257, 260, 261, 272, 274, 277, 278, 280, 293, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 328, 329, 330, 331, 332, 336], "next": [218, 230, 234, 239, 261, 269, 305, 307, 311, 324, 330, 332, 337], "back": [218, 229, 233, 235], "00e": 218, "52e": 218, "35e": [218, 329, 333], "04": [218, 260, 261, 277, 297, 323], "32e": 218, "85e": 218, "36e": 218, "31e": 218, "498": 218, "99e": 218, "90e": 218, "33e": 218, "29e": 218, "77e": 218, "499": 218, "83e": 218, "26e": 218, "idea": [218, 233, 302], "date": [218, 220, 260, 261, 277, 314, 338], "inspect": [218, 230, 236, 274, 303, 322, 330, 331, 333], "viridi": 218, "wind": 218, "iint": 218, "400369334831906": 218, "wing": 218, "commonli": [218, 253, 324], "naiv": 218, "5005803208541971": 218, "17": [218, 220, 228, 229, 231, 233, 235, 236, 237, 238, 239, 243, 247, 253, 258, 260, 261, 265, 266, 273, 276, 277, 279, 280, 281, 286, 302, 303, 308, 311, 314, 321, 323, 324, 328, 329, 330, 331, 332, 333, 334], "tutori": [219, 231, 235, 238, 239, 247, 249, 251, 252, 254, 257, 259, 267, 269, 272, 277, 278, 285, 297, 301, 302, 306, 308, 309, 312, 314, 316, 317, 318, 320, 321, 323, 326, 327, 328, 330, 331, 332, 334], "concept": [219, 324, 326], "technic": [219, 222, 301, 336], "api": [219, 233, 236, 243, 244, 249, 250, 267, 287, 301, 336], "faq": 219, "short": [219, 261, 265, 266, 331, 337], "difficult": [219, 230, 255, 256, 261], "summaris": [220, 260, 314], "abbrevi": 220, "partli": 220, "Not": [220, 231], "bulk": 220, "rkky": [220, 301], "relax": [220, 251, 252, 253, 254, 255, 256, 257, 259, 303, 304, 307, 308, 309, 310, 313, 314, 317, 318, 322, 324, 328, 329, 331, 332], "relaxdriv": [220, 260, 261], "evolut": [220, 284, 303, 305, 324, 330], "releas": [220, 222, 240, 335, 337], "66": [220, 233], "0b0": 220, "65": [220, 231, 233, 284, 330], "07": [220, 233, 239, 240, 241, 242, 243, 247, 248, 258, 260, 261, 303, 314, 333], "0a3": [220, 293], "64": [220, 231, 233, 314, 337], "63": [220, 231, 233, 282], "29": [220, 229, 231, 233, 236, 239, 258, 260, 261, 266, 272, 283, 286, 303, 314, 324, 333, 334], "62": [220, 231, 233, 314], "61": [220, 231, 233, 283], "2021": [220, 254, 255, 256, 259, 273, 275, 276, 279, 281, 336], "20a2": 220, "51": [220, 231, 233, 266, 276, 284, 293, 312, 328, 329, 330, 334], "0a1": 220, "featur": [222, 229, 231, 235, 252, 255, 256, 280, 301, 324, 335], "gentl": [222, 301, 336], "introduct": [222, 235, 301, 327, 336], "compat": [222, 227, 235], "page": [222, 324, 336], "overview": 222, "licens": 222, "under": [222, 252, 253, 259, 284, 336, 337], "latest": [222, 337], "coverag": 222, "binder": [222, 336], "magnetometri": [223, 258], "top": [227, 229, 243, 244, 249, 253, 318, 322], "your": [227, 229, 243, 271, 309, 324, 327, 336, 337], "everyth": [227, 311, 334, 337], "main": [228, 231, 234, 236, 239, 244, 246, 249, 260, 265, 266, 267, 269, 298, 309, 324, 333, 338], "achiev": [228, 232, 235, 275, 276, 286, 291, 295, 302, 307, 335], "simpli": [228, 231, 239, 241, 243, 253, 258, 302], "far": [228, 231, 277, 314, 331, 335], "serv": [228, 305], "distinguish": 228, "lost": [228, 235], "librari": [229, 230, 231], "pyvista": [229, 230, 231], "studi": [229, 330, 331, 336], "elipt": 229, "cylind": [229, 230, 231, 234, 308, 317], "vortex": [229, 231, 261, 302, 304, 336], "swap": [229, 231], "sign": [229, 237, 322, 335], "web": 229, "session": [229, 311, 332, 336], "colourmap": 229, "symmetri": [229, 254, 305, 308, 317], "explain": [229, 235, 324, 327, 330, 335, 337], "discuss": [229, 233, 235, 239, 247], "come": [229, 251, 337], "plasma": [229, 231, 261], "rare": [229, 242], "clabel": 229, "our": [229, 233, 236, 239, 240, 242, 243, 244, 247, 248, 249, 253, 254, 257, 259, 261, 272, 274, 285, 287, 294, 307, 309, 311, 315, 316, 318, 322, 323, 324, 326, 327, 330, 331, 333, 335, 337], "accomplish": 229, "potenti": [229, 253, 324], "care": [229, 235, 236, 335], "know": [229, 239, 244, 249, 290, 336, 337], "field_2d": 229, "confus": [229, 334], "40": [229, 231, 233, 236, 254, 266, 314, 315, 324, 333, 334], "fourierspac": [229, 232, 233, 235, 236, 237, 239, 240, 241, 243, 250, 260, 277], "isplan": [229, 231, 232, 233, 235, 236, 237, 239, 240, 241, 243, 250, 260, 277], "wouldn": 229, "field_4d": [229, 233], "home": [229, 231, 293, 337], "mlang": [229, 231], "repo": [229, 230, 231, 233, 272, 293, 315], "devtool": [229, 230, 231, 233, 272, 293, 315, 337], "367": 229, "userwarn": [229, 231], "coolwarm": [229, 261, 308], "28": [229, 231, 233, 236, 239, 258, 260, 261, 266, 283, 286, 314, 324, 331, 333, 334], "32": [229, 231, 233, 236, 255, 258, 260, 266, 286, 314, 324, 334, 337], "36": [229, 231, 233, 236, 266, 286, 314, 324, 334], "layout": 229, "37": [229, 231, 233, 236, 266, 277, 284, 286, 314, 317, 324, 330, 334], "widget_loc": [229, 261], "bottom": [229, 261, 318, 322], "locat": [229, 331, 333, 337, 338], "bokeh": [229, 261], "38": [229, 231, 233, 236, 266, 277, 280, 286, 314, 324, 334], "scalar_z": 229, "contour_z": 229, "plasma_r": 229, "show_legend": 229, "vector_z": 229, "turbo": [229, 231], "frame_height": 229, "experi": [230, 235, 252, 259, 335], "sure": [230, 249, 263, 264, 292, 316, 332, 337], "googl": 230, "chrome": 230, "sai": [230, 231, 232, 233, 234, 239, 241, 242, 243, 247, 263, 264, 265, 266, 270, 273, 274, 275, 276, 279, 281, 285, 290, 292, 294, 295, 314, 315, 321, 333], "ellipsoid": 230, "cz": [230, 231, 234], "norm_fun": [230, 231, 234, 307], "mous": 230, "0x27ae60": 230, "lt": [230, 231, 233, 236, 239, 241, 250, 260, 261, 272, 273, 275, 276, 279, 281, 293, 304, 315, 324, 334], "gt": [230, 231, 233, 236, 239, 241, 250, 258, 260, 261, 272, 273, 275, 276, 279, 281, 293, 304, 315, 324, 334], "phd": [230, 233, 272, 293], "k3d_field": 230, "233": 230, "k3dfield": 230, "231": 230, "232": 230, "msg": [230, 231, 233, 315], "235": 230, "236": 230, "norm_field": 230, "cascad": 230, "factori": 230, "pleaas": 230, "deactiv": 230, "plese": [230, 270], "plot1": 230, "continuous_upd": [230, 231, 238, 277, 314, 322, 329], "getattr": [230, 231, 310, 315], "firstli": [231, 234, 253, 254, 258, 259, 269, 302, 304, 305, 337], "nanocylind": 231, "diametr": 231, "secondli": [231, 304], "vortex_field": 231, "discertisedfield": 231, "3024": 231, "2992": 231, "2993": 231, "2994": 231, "2995": 231, "2996": 231, "3022": 231, "3023": 231, "mplfield": 231, "mpl_field": 231, "43": [231, 233, 266, 324, 334], "41": [231, 233, 236, 239, 266, 314, 324, 334], "42": [231, 233, 236, 266, 277, 324, 334], "47": [231, 233, 266, 314, 324, 334], "planeaxi": [231, 233, 241], "probabl": [231, 246, 332], "lose": 231, "notic": [231, 250, 328], "decreas": [231, 306, 310, 324], "simplifi": [231, 236, 252, 258, 324, 337], "plane_xi": 231, "plane_yz": 231, "got": [231, 239, 247, 329], "reconstruct": [231, 250, 259], "arround": 231, "asign": 231, "red": [231, 235, 252], "magma": [231, 303], "style": 231, "headwidth": 231, "plane_2d": 231, "606": 231, "491": 231, "492": 231, "493": 231, "603": 231, "604": 231, "605": 231, "607": 231, "_setup_ax": 231, "609": 231, "_setup_multipli": 231, "646": [231, 284, 330], "henc": [231, 235, 250, 252, 253, 255, 257, 324, 325], "demonstr": [231, 235, 240, 242, 258, 260, 261, 267, 272, 280, 285, 287, 301, 306, 312, 315, 318, 324, 331], "sens": [231, 243], "scheme": 231, "m_x": [231, 252, 330], "m_y": [231, 252, 330], "lighness_field": 231, "44": [231, 233, 266, 281, 284, 324, 330, 334], "draw": 231, "separatli": 231, "add_colorwheel": 231, "axeshostax": 231, "widht": 231, "center": [231, 336], "briefli": [231, 324], "respectivli": 231, "mplplot": 231, "48": [231, 233, 266, 314, 323, 334], "49": [231, 233, 266, 334], "Then": [231, 235, 243, 324, 333], "nrow": 231, "ncol": 231, "white": 231, "set_titl": 231, "suptitl": 231, "fontsiz": 231, "xx": [231, 324], "tight_layout": 231, "53": [231, 233, 254, 266, 279, 332, 334], "init_m": 231, "54": [231, 233, 266], "dpi": [231, 252, 257], "spline16": [231, 252, 253, 255, 256, 259], "75": [231, 233, 252, 302], "bfbfbf": 231, "ipython": 231, "57": [231, 233, 252, 266, 277, 302], "58": [231, 233, 266, 273, 284, 302, 330, 336], "correctli": [231, 334], "59": [231, 233, 266], "nbval_ignore_output": [231, 235, 239, 241, 243, 247, 251, 252, 253, 254, 255, 256, 257, 258, 259, 269, 273, 275, 276, 279, 281, 284, 285, 302], "explor": [231, 244, 249, 265, 266, 321, 330, 331, 332], "field_valu": 231, "rememb": [231, 253, 336, 337], "zip": [231, 335, 337], "m_z": [231, 251, 256, 259, 330], "xlabel": [231, 251, 302, 304, 305], "ylabel": [231, 251, 302, 305], "legend": [231, 252, 302], "0x7f3685f9f190": 231, "apart": [232, 283, 337], "7320508075688772": 232, "5773502691896258": 232, "099504938362077": 232, "pyhton": [232, 239], "sphere": [232, 333], "norm_funct": 232, "sphere_field": 232, "625": [233, 236], "1250": 233, "15625": [233, 236], "x_compon": 233, "overrid": 233, "c1": 233, "c2": 233, "c3": 233, "c4": 233, "portion": 233, "mesh4": 233, "although": 233, "dimes": 233, "extact": 233, "resampl": [233, 236, 261], "faster": [233, 311], "That": [233, 291, 334], "cartesian": [233, 247], "intesect": 233, "axis1": [233, 241], "axis2": [233, 241], "5j": 233, "3j": 233, "0j": 233, "982793723247329": 233, "5707963267948966": 233, "later": [233, 241, 243, 244, 249, 272, 273, 275, 276, 279, 281, 321, 332], "1331": 233, "1328": 233, "1329": 233, "1330": 233, "1332": 233, "1333": 233, "1334": 233, "1424": 233, "1359": 233, "1360": 233, "1361": 233, "1362": 233, "1422": 233, "1423": [233, 284, 330], "1102": 233, "1100": 233, "1101": 233, "1103": 233, "1104": 233, "1105": 233, "titl": [233, 336], "accomod": 233, "theori": 233, "behind": 233, "hopefulli": 233, "000000000017728e": 233, "00000000001152e": 233, "000000000000003e": 233, "999999999999996e": 233, "67": 233, "999999999999999e": [233, 286], "68": 233, "9999999999999975e": 233, "69": 233, "8999999999999995e": 233, "y_": 233, "70": [233, 258], "71": [233, 257], "integrand": 233, "mind": [233, 332], "72": [233, 304], "73": 233, "skyrmion": [233, 254, 301, 309, 311, 317, 329, 336], "dxdy": [233, 317], "74": 233, "Or": 233, "76": 233, "78": [233, 314], "79": 233, "2246467991473532e": 233, "81": [233, 314], "141592653589793": [233, 334], "718281828459045": 233, "83": 233, "nanospher": 234, "vtkfilenam": 234, "my_vtk_fil": 234, "omffilenam": 234, "my_omf_fil": 234, "ascii": 234, "hdf5filenam": 234, "read_field": 234, "previouli": [234, 236, 336], "periodict": 235, "predominantli": 235, "own": [235, 336], "mayb": 235, "systemat": 235, "accumult": 235, "special": [235, 236, 272, 309], "handl": [235, 250, 258, 324], "rotation_quaternion": 235, "ident": [235, 316], "transfom": 235, "from_mrp": 235, "slightli": [235, 305], "000000000000007": 235, "000000000000004": 235, "purpos": [235, 245, 247, 267, 288, 298, 334], "jag": 235, "maximis": 235, "mention": [235, 316, 324], "illustr": [235, 328], "rfield": 235, "stripe": 235, "inner": 235, "subsect": 235, "procc": 235, "fulli": [235, 303], "enclos": [235, 335], "quadrat": 235, "grow": [235, 291], "accumul": [235, 334], "clearer": 235, "princibl": 235, "theoret": 235, "known": [235, 252, 272, 309], "nx": 235, "ny": 235, "nz": 235, "resiz": 235, "round": [235, 334], "aproxim": 235, "linearli": 235, "satisfi": [236, 258, 295], "criteria": 236, "discertis": 236, "my_value_funct": 236, "__main__": [236, 261], "sourc": [236, 337], "getsourc": 236, "violent": 236, "vector_value_funct": 236, "emploi": [236, 302, 305], "regions_funct": 236, "And": [236, 308, 318, 324, 328], "region_valu": 236, "explicit": [236, 309, 312], "new_mesh": 236, "new_field": 236, "coord_field": 236, "specialis": 237, "convenic": 237, "usecas": 237, "focus": 237, "triangul": 237, "contribut": [237, 255, 331, 335, 337, 338], "triangl": 237, "everywher": 237, "useful": [237, 243], "cancel": 237, "angles_x": 237, "neigbouring_cell_angl": 237, "angles_i": 237, "treat": [237, 333], "angle_max": 237, "max_neigbouring_cell_angl": 237, "threashold": 237, "connect": 237, "count_large_cell_angle_region": 237, "180": 237, "000000e": [238, 260, 261, 277, 283, 284, 286, 303, 312, 323, 330], "00": [238, 277, 284], "982466": 238, "610991": 238, "103417": 238, "537999": 238, "155126": 238, "306999": 238, "041667e": 238, "958333e": 238, "978240": 238, "074002": 238, "115087": 238, "067530": 238, "172630": 238, "601295": 238, "083333e": 238, "916667e": 238, "972305": 238, "585328": 238, "129640": 238, "744710": 238, "194461": 238, "117066": 238, "125000e": 238, "875000e": 238, "963624": 238, "111659": 238, "148249": 238, "863332": 238, "222374": 238, "794998": 238, "166667e": 238, "833333e": 238, "950255": 238, "268139": 238, "172773": 238, "685116": 238, "259160": 238, "527674": 238, "208333e": 238, "791667e": 238, "928279": 238, "121633": 238, "206284": 238, "249252": 238, "309426": 238, "373878": 238, "250000e": [238, 323], "750000e": 238, "889000": 238, "889001": 238, "254000": 238, "381000": 238, "381001": 238, "291667e": 238, "708333e": 238, "811107": 238, "105654": 238, "324442": 238, "842262": 238, "486664": 238, "263392": 238, "333333e": 238, "666667e": 238, "639602": 238, "149067": 238, "426401": 238, "432711": 238, "375000e": 238, "267261": 238, "241912": 238, "534522": 238, "483825": 238, "801783": 238, "725737": 238, "145833e": 238, "458333e": 238, "500000e": [238, 260, 261, 284, 286, 323, 330], "354167e": 238, "541667e": 238, "583333e": 238, "562500e": 238, "625000e": 238, "770833e": 238, "979167e": 238, "985578": 238, "834374": 238, "93864": 238, "650893": 238, "140796": 238, "976339": 238, "187500e": 238, "987934": 238, "593051": 238, "85907": 238, "355918": 238, "128861": 238, "033876": 238, "989759": 238, "478081": 238, "79180": 238, "758246": 238, "118771": 238, "137370": 238, "395833e": 238, "991201": 238, "182589": 238, "73422": 238, "309821": 238, "110133": 238, "464732": 238, "992359": 238, "570702": 238, "68438": 238, "591083": 238, "102657": 238, "886624": 238, "xval": 238, "yval": 238, "zval": 238, "marker": [238, 243, 244, 249, 287, 314, 331], "deal": 239, "chunk": 239, "cube": [239, 254, 302, 306, 307, 310, 332], "previou": [239, 249, 272, 276, 279, 285, 328, 332, 333], "piec": [239, 286], "decid": [239, 272], "exactli": [239, 290, 311], "whatsoev": 239, "saw": [239, 311], "lenght": [239, 244, 287], "conclud": 239, "0x7f8d19a7df90": 239, "fifth": 239, "thing": [239, 263, 264, 267, 286, 318, 332], "75e": [239, 260], "0000000000000004e": [239, 241], "6e": [239, 241, 251, 252, 253, 254, 255, 256, 258, 259, 296, 303, 308, 309, 317, 323], "71e": 239, "000000000000001e": [239, 241], "8e": [239, 241, 260, 304, 331], "mesh_sam": 239, "mesh_differ": 239, "earlier": [239, 247, 330, 332], "boudari": 240, "neigbour": 240, "neghbour": 240, "At": [240, 284, 332], "futur": [240, 338], "0x7fa939edc040": 241, "2000000000000002e": 241, "4000000000000001e": 241, "8000000000000002e": 241, "usual": [241, 244, 246, 247, 249, 253, 254, 266, 274, 277, 304, 306, 310, 314, 324], "layer": [241, 316, 318, 322], "disctionari": 242, "05e": 242, "4999999999999996e": 242, "life": 243, "dash": [243, 244, 249, 314], "bottom_subregion": 243, "top_subregion": 243, "lx": [243, 303, 304, 305], "ly": [243, 303, 304, 305], "lz": [243, 303, 304, 305], "bottom_region": 243, "top_region": 243, "lot": [243, 291], "freedom": [243, 337], "regard": 243, "800": [243, 303, 314], "400": [243, 283, 284, 314, 324, 328, 329, 330], "k3d_subregion": 243, "rgb": [243, 244, 249], "hex": [243, 244, 249], "onlin": [243, 244, 249, 327, 336], "cycl": 243, "f33f00": 243, "0000cf": 243, "prefix": [243, 244, 247, 249, 287, 300], "micro": [243, 244, 249, 287, 296], "mu": [243, 244, 249, 258], "_as_gen": [243, 244, 249, 287], "__": [243, 244, 249, 250, 287], "customis": [243, 244, 249, 285, 287], "ourselv": [243, 244, 249, 287, 332], "set_xlabel": [243, 244, 249, 257, 287], "set_ylabel": [243, 244, 249, 257, 287], "set_zlabel": [243, 244, 249], "alltogeth": 243, "80e": 243, "12345": 243, "54321": 243, "trick": [244, 249], "matploltlib": [244, 249], "good": [244, 249, 250, 324], "proport": [244, 249], "thinner": [244, 249, 252], "impress": [244, 249], "disadvatag": [244, 249], "zoom": [244, 249], "contol": [244, 249], "pair": [244, 324, 326], "9400d3": [244, 249], "0000ff": 244, "754321": 244, "123456": 244, "opac": [244, 249], "slide": 245, "picomet": 245, "menu": 245, "radio": 245, "button": 245, "python3": [246, 258, 308, 317, 334, 337], "messag": [246, 293], "exit": [246, 252], "simplest": [246, 252, 330, 331], "fie": 246, "infil": 246, "simplic": [247, 253], "alia": [247, 248, 249, 334], "choic": [247, 305], "obvious": 247, "999999999999998e": 247, "lazi": 247, "think": 247, "807246802450429e": 247, "9394886042542286e": 247, "683419701051645e": 247, "unlik": [247, 275, 276], "parenthesi": 247, "region_sam": 247, "region_differ": 247, "pretier": 247, "thought": 249, "654321": 249, "dev": [250, 337], "en": 250, "multi": [250, 335], "visual": 250, "candid": 250, "metadata": 250, "utilis": 250, "x27": [250, 260], "2z": 250, "2comp": 250, "0arrai": 250, "float642": [250, 260], "09unit": 250, "marrai": [250, 260], "nonecel": 250, "prove": 250, "xarray_2": 250, "field_new": 250, "xdr": 250, "09arrai": 250, "field_xdr": 250, "lastli": 250, "advis": 250, "softwar": [251, 252, 257, 335], "magnetomet": 251, "varieti": [251, 258], "vibrat": 251, "superconduct": 251, "quantum": [251, 252], "interfer": [251, 252, 259], "devic": 251, "abil": [251, 255, 259], "congruent": [251, 255, 257], "inlin": [251, 252, 256, 259, 335], "seed": [251, 252, 253, 255, 256, 257, 259, 315, 316, 318, 324], "150e": [251, 252, 256, 257, 259, 322, 329], "m_fun": [251, 252, 253, 255, 256, 259, 273, 275, 276, 279, 281, 315, 321], "rand": [251, 252, 253, 255, 256, 259], "minim": [251, 252, 253, 254, 255, 256, 257, 259, 305, 308, 317, 327, 331], "net": 251, "3518": 251, "084594232684": 251, "8389": 251, "317283463413": 251, "25604": 251, "572753826702": 251, "mimic": 251, "procedur": 251, "mag_arr": 251, "h_arr": 251, "linspac": [251, 257, 302], "recov": 252, "incid": [252, 255, 259], "particl": [252, 302], "deflect": [252, 254], "specimen": 252, "travel": 252, "excess": 252, "defici": 252, "blank": 252, "longer": [252, 255, 260], "variat": [252, 305], "wire": 252, "biprism": 252, "bring": 252, "worth": 252, "veloc": [252, 265, 304, 324, 328, 329], "magntic": [252, 253, 255], "51e6": [252, 259, 308, 309], "2e5": [252, 253, 254, 255, 256, 259, 308, 309], "ref": [252, 256, 259, 302, 303, 304, 305, 334], "beleggia": 252, "2010": 252, "singular": 252, "view": [252, 254, 255, 256, 259, 314, 324], "grai": [252, 255, 256], "quick_plot": [252, 253, 254, 259], "design": [252, 253, 259, 336], "textur": [252, 253, 254, 255, 256, 259], "intermediari": [252, 253, 259], "hood": [252, 253, 259], "theme": [252, 253, 259], "ltem_phas": 252, "circl": 252, "high": [252, 255, 256, 257], "obliter": 252, "signific": 252, "NOT": [252, 255, 256], "angular": [252, 255, 256], "neq": [252, 255, 256, 258], "patch": 252, "ellips": 252, "centre_region": 252, "30e6": 252, "add_patch": 252, "edgecolor": 252, "facecolor": 252, "frameon": 252, "ltem_ft_phas": 252, "free": [252, 313, 324, 336], "bonevich": 252, "1994": 252, "electromagnet": 252, "featureless": 252, "ltem_defocus_imag": 252, "ltem_defocu": [252, 254], "rule": [252, 295], "thumb": 252, "rm": [252, 257], "1f": 252, "tanas": 252, "2009": 252, "ltem_integrated_mfd": 252, "resembl": 252, "examin": [253, 255, 284], "role": 253, "flat": 253, "dual": 253, "raster": 253, "scan": 253, "topographi": 253, "tap": 253, "omega_0": 253, "kazakova": 253, "lift": 253, "z_0": 253, "probe": 253, "characteris": 253, "ten": 253, "nanometr": 253, "diment": [253, 255], "put": [253, 285, 316], "m_field": 253, "harmon": 253, "motion": [253, 324, 326], "sub_region": 253, "phase_shift_2": 253, "phase_shift_3": 253, "recreat": [253, 255], "convolv": 253, "conv_phas": 253, "gaussian_filt": 253, "mfm_phase_shift": 253, "boundarynorm": 253, "sub_phas": 253, "conv_mag2exp": 253, "ncolor": 253, "256": 253, "n\u00e9el": 254, "magentis": [254, 332], "knowledg": [254, 259], "topic": [254, 259], "rho_func": 254, "s_size": 254, "differnt": 254, "phi_func": 254, "n_top": 254, "m_fun_2": 254, "theta": [254, 334], "arctan2": 254, "rho": 254, "box": [254, 307], "rather": 254, "overal": 254, "break": [254, 305, 308, 317], "thu": [254, 305], "reciproc": [255, 256], "mesoscop": [255, 256], "atom": [255, 258], "impact": 255, "approxim": [255, 256, 259], "m\u00fchlbauer": 255, "predict": 255, "160e": 255, "logarithm": [255, 256], "reveal": [255, 256, 257], "diffract": [255, 256], "lognorm": [255, 256], "sans_region": 255, "40e6": [255, 256], "arb": 255, "2i": 255, "asymmetri": 255, "circularli": [256, 259], "absorb": [256, 259], "tune": [256, 259, 303], "absorpt": [256, 259], "van": 256, "der": 256, "laan": 256, "300e": 256, "145": 256, "1e40": 256, "saxs_region": 256, "characterist": [257, 303, 307], "aris": 257, "rewritten": 257, "65e5": 257, "h_mag": 257, "38e6": 257, "78e": [257, 311, 322, 331], "18e6": 257, "3803181647963356e": 257, "1670664434859646e": 257, "4494604241106688e": 257, "torque_val_x": 257, "full_lik": 257, "torque_val_i": 257, "torque_val_z": 257, "enumer": 257, "hline": 257, "xmin": 257, "set_xlim": 257, "mixtur": 258, "convin": 258, "astropi": 258, "aim": [258, 331], "astrophys": 258, "commun": [258, 329, 335, 336, 337], "pip": [258, 327, 337], "sake": 258, "miniconda3": [258, 272, 293, 308, 317, 334], "ubermagdev": [258, 272, 293, 308, 317, 334], "lib": [258, 308, 317, 334], "site": [258, 302, 303, 304, 308, 317, 334], "pyerfa": 258, "initalis": 258, "gauss": 258, "throughout": [258, 261], "field2": 258, "magnetic_mo": 258, "erg": 258, "detach": 258, "numerv": 258, "t_k": 258, "temperature_energi": 258, "7296934": 258, "induct": 258, "strength": [258, 331], "induction_field": 258, "mu0": [258, 262, 302, 303, 306, 310, 311, 314], "7957": 258, "7472": 258, "hamiltonian": [258, 265, 266, 269, 273, 275, 276, 279, 281, 303, 304, 305, 306, 308, 317, 330, 331], "lead": 258, "cal": 258, "ex": [258, 272, 302, 309, 331, 337], "j_": 258, "_j": 258, "lvert": 258, "rvert": 258, "normais": 258, "curi": 258, "3k_": 258, "garanin": 258, "1996": 258, "tc_to_j": 258, "tc": 258, "t_c": 258, "fcc": 258, "808": 258, "271810024752475e": 258, "correl": 258, "zjl": 258, "12v": 258, "heisenberg": 258, "neighbor": 258, "crystal": 258, "j_to_a": 258, "84e": 258, "24e": 258, "922285495270508e": 258, "tc_to_a": 258, "922285495270509e": 258, "zdl": 258, "d_to_d": 258, "01e": 258, "137678571428571e": 258, "helic": 258, "p_to_d": 258, "d_to_p": 258, "jm": [258, 273, 275, 276, 279], "7699111843077517e": 258, "converst": 258, "mu_b": 258, "formula": 258, "ms_mub_to_am": 258, "24375e": 258, "33066": 258, "10835716991": 258, "ms_to_mu": 258, "6e5": 258, "3440000000000002e": 258, "weight": [258, 334], "k_to_k": 258, "fege": 258, "ge": [258, 263, 264], "fe": 258, "6995": 258, "\u00e5": 258, "881": 258, "wilhelm": 258, "2007": 258, "yamada": 258, "2003": 258, "278": 258, "lebech": 258, "1989": 258, "yu": 258, "2011": [258, 259], "6995e": 258, "881e": 258, "ms_orig": 258, "70e": 258, "594746713121875e": 258, "382433": 258, "88973569183": 258, "644": 258, "76621650209023e": 258, "000855629185622006": 258, "coher": 259, "slit": 259, "hologram": 259, "detector": 259, "duckworth": 259, "turnbul": 259, "holo": 259, "rdbu": 259, "meter": 259, "holo2": 259, "x_ray_holographi": 259, "With": [260, 303, 334, 336], "creata": [260, 261], "250": [260, 261, 295], "setopt": 260, "basenam": 260, "scalar_output_format": 260, "12g": 260, "scalar_field_output_format": 260, "vector_field_output_format": 260, "boxatla": 260, "main_atla": 260, "oxs_boxatla": 260, "xrang": 260, "yrang": 260, "zrang": 260, "rectangularmesh": 260, "oxs_rectangularmesh": 260, "cellsiz": [260, 302], "atla": 260, "uniformexchang": [260, 283], "oxs_uniformexchang": 260, "fixedzeeman": 260, "oxs_fixedzeeman": 260, "oxs_filevectorfield": 260, "m0_norm": 260, "oxs_vecmagscalarfield": 260, "cgevolv": 260, "destin": 260, "mmarchiv": [260, 273, 275, 276, 279, 281], "datat": [260, 303, 330], "drive_select": 260, "50067876e": 260, "98022376e": 260, "73831082e": 260, "41540277e": 260, "81017399e": 260, "00000000e": 260, "mindriverxarrai": 260, "14x": 260, "20y": 260, "10z": 260, "4comp": 260, "501e": 260, "98e": 260, "738e": 260, "415e": 260, "81e": 260, "05arrai": 260, "08unit": 260, "float640": 260, "0unit": 260, "6date": 260, "11time": 260, "17driver": 260, "side": 260, "290": 260, "27584": 260, "49540021": 260, "658579": 260, "77501927": 260, "453334": 260, "06616874": 260, "797212": 260, "875": 260, "51317": 260, "65625": 260, "42639": 260, "36328125": 260, "423e": 260, "445e": 260, "466e": 260, "timedriverxarrai": 260, "290x": 260, "758e": 260, "586e": 260, "533e": 260, "972e": 260, "132e": 260, "264e": 260, "04arrai": 260, "float641": 260, "10unit": 260, "sarrai": 260, "423237e": 260, "444648e": 260, "466095e": 260, "logo": 261, "time_dr": 261, "colorlimit": 261, "800000": 261, "full_time_dr": 261, "resulut": 261, "coarser": 261, "seri": 261, "notat": 261, "5th": 261, "familiar": [261, 326], "afterward": [261, 324], "time_drive_tcd_1": 261, "repeat": [261, 324, 330], "select_plan": 261, "time_drive_tcd_2": 261, "funtion": 261, "explanatori": 261, "hmin": [261, 314], "hmax": [261, 314], "795774": [261, 314], "7154594767": [261, 314], "stage": [261, 274, 277, 283, 284, 304, 312, 314, 315, 323, 330], "fundament": 262, "me": 262, "kb": 262, "mub": 262, "specialdynam": 263, "xi": 263, "sd": 263, "_reprlatex": [263, 264], "dmdt": 263, "specialenergi": 264, "se": 264, "valid_nam": 264, "211e5": [265, 284, 303, 304, 305, 324, 328, 329, 330, 332], "221100": 265, "adiabat": [265, 304, 324, 328, 329], "mydynamicsterm": 265, "nydynamicsterm": 265, "arbitratri": 266, "ghz": [266, 305, 319, 320, 324], "zeeman_sin": 266, "1000000000": [266, 296], "zeeman_sinc": 266, "100000": [266, 315], "1e3": [266, 279, 306, 310], "dm": [266, 275, 283, 331], "mandatori": [266, 333], "dmi_cnv_x": 266, "dmi_cnv_i": 266, "dmi_t": 266, "dmi_d2d_x": 266, "dmi_d2d_i": 266, "dmi_d2d_z": 266, "cubicanisotropi": [266, 273], "sigma_": 266, "subregion1": [266, 321], "subregion2": [266, 321], "0001": 266, "dzyaloshinkii": [266, 324, 328, 329, 337], "myenergi": 266, "myexchang": 266, "Their": 267, "mydriv": 267, "_x": 267, "arg1": 267, "arg2": 267, "_allowed_kwarg": 267, "rase": 267, "arg3": 267, "externaldriv": 267, "zeeman1": [268, 315], "zeeman2": [268, 315], "my_zeeman_term": 268, "entiti": 269, "discretisationfield": 269, "mysystem": 269, "times10": [270, 273, 275, 276, 279, 281, 315, 321, 331], "3e5": 270, "colon": [270, 316], "ot": [270, 277], "trivial": 270, "manner": 270, "testdmi": 271, "testexchang": 271, "conftest": 271, "fixtur": 271, "pytest": 271, "member": 272, "cloud": [272, 309], "destroi": [272, 309], "happen": [272, 274, 309, 330], "background": [272, 274, 284, 309], "assist": [272, 309], "desktop": [272, 309], "delai": [272, 309], "tcloommfrunn": [272, 309], "couldn": [272, 309], "tclsh": 272, "boxsi": [272, 293], "fg": [272, 293], "exitondon": [272, 293], "stderr": [272, 293], "432": 272, "429": 272, "setter": [272, 291], "430": 272, "431": 272, "433": 272, "_runner": 272, "expectedli": 272, "paragraph": 272, "choosen": [272, 324], "search": 272, "sucessfulli": 272, "tend": [273, 275, 276, 279, 281, 331], "antiparallel": [273, 279, 315, 331], "chain": [273, 275, 276, 279, 281, 315, 321, 323, 331], "cubicanisotropy_constant_k_u": 273, "made": [273, 275, 276, 279, 281, 284, 321], "cubicanisotropy_dict_k": 273, "spatailli": [273, 279], "nbsphinx": [273, 276, 279], "k_fun": 273, "cubicanisotropy_field_u": 273, "organis": 274, "my_simul": 274, "instruct": [274, 327, 337], "my_project": 274, "isdir": 274, "max_mxhxm": [274, 277, 314, 315], "delta_": [274, 277, 283, 284, 303, 312, 314, 315, 323, 330], "bracket_count": [274, 277, 314, 315], "line_min_count": [274, 277, 314, 315], "conjugate_cycle_count": [274, 277, 314, 315], "cycle_count": [274, 277, 314, 315], "cycle_sub_count": [274, 277, 314, 315], "energy_calc_count": [274, 277, 314, 315], "e_zeeman": [274, 277, 284, 303, 320, 323, 330], "stage_iter": [274, 277, 283, 284, 303, 312, 314, 315, 323, 330], "503365e": 274, "785840e": 274, "350143e": 274, "ll": 275, "nv": [275, 331], "dzyaloshinksii": 275, "dmi_constant_d": 275, "orthogon": 275, "dmi_dict_d": 275, "exchange_constant_a": 276, "exchange_dict_a": 276, "allign": 276, "a_fun": 276, "exchange_field_a": 276, "mindriver_step": [277, 278], "relex": 277, "000000": 277, "999996e": 277, "206285e": 277, "000873": 277, "848078e": 277, "400340e": 277, "388277e": 277, "173648": 277, "396926e": 277, "727747e": 277, "327407e": 277, "342020": 277, "660254e": 277, "911504e": 277, "183757e": 277, "500000": 277, "660444e": 277, "885258e": 277, "973754e": 277, "642788": 277, "427876e": 277, "058904e": 277, "703780e": 277, "766044": 277, "197108e": 277, "382038e": 277, "866025": 277, "464669e": 277, "296684e": 277, "957653e": 277, "938062": 277, "420201e": 277, "298938e": 277, "253721e": 277, "939693": 277, "981052e": 277, "354905e": 277, "596679e": 277, "980181": 277, "736482e": 277, "361301e": 277, "395896e": 277, "984808": 277, "305027e": 277, "379550e": 277, "824996e": 277, "998010": 277, "366695e": 277, "382301e": 277, "750291e": 277, "fecault": 277, "creationg": 277, "my_plot": [277, 314, 322, 324, 328], "uniaxialanisotropy_constant_k_u": 279, "uniaxialanisotropy_dict_k": 279, "u_fun": 279, "uniaxialanisotropy_field_u": 279, "uniaxialanisotropy_higher_ord": 279, "screen": [280, 293], "sole": 280, "cleanup": 280, "zeeman_constant_h": [281, 321], "zeeman_dict_h": [281, 321], "h_fun": [281, 321], "zeeman_field_h": [281, 321], "__version__": [282, 335], "e_calc_count": [283, 284, 303, 312, 323, 330], "max_dmdt": [283, 312], "average_u": [283, 324], "e_exchang": [283, 303, 314, 323], "max_spin_ang_exchang": [283, 303, 323], "stage_max_spin_ang_exchang": [283, 303, 323], "run_max_spin_ang_exchang": [283, 303, 323], "e_dmi": 283, "e_uniaxialanisotropi": 283, "last_time_step": [283, 284, 303, 312, 323, 330], "138757e": 283, "5105": 283, "786662": 283, "131548e": 283, "234439e": 283, "819720e": 283, "981919": 283, "791404e": 283, "955566e": 283, "004356": 283, "001711": 283, "779309": 283, "146802e": 283, "123365e": 283, "92": 283, "5393": 283, "820357": 283, "881778e": 283, "714936e": 283, "859070e": 283, "999114": 283, "795166e": 283, "969222e": 283, "007399": 283, "002527": 283, "779212": 283, "481817e": 283, "101629e": 283, "5478": 283, "105937": 283, "410525e": 283, "525909e": 283, "908188e": 283, "839540": 283, "800156e": 283, "991741e": 283, "010058": 283, "002596": 283, "779103": 283, "371456e": 283, "075651e": 283, "5775": 283, "596117": 283, "750961e": 283, "026333e": 283, "963184e": 283, "523018": 283, "806035e": 283, "021517e": 283, "012243": 283, "002078": 283, "779037": 283, "397143e": 283, "046980e": 283, "209": 283, "6099": 283, "408455": 283, "938665e": 283, "417659e": 283, "020796e": 283, "968494": 283, "812650e": 283, "058726e": 283, "013915": 283, "001139": 283, "779058": 283, "838847e": 283, "195": [283, 284, 303, 323, 330], "666219e": 283, "7786": 283, "6419": 283, "713717": 283, "798949e": 283, "373560e": 283, "222876e": 283, "279242": 283, "396487": 283, "740702": 283, "937412e": 283, "678731e": 283, "1372": 283, "007893": 283, "008017": 283, "899229": 283, "094469e": 283, "960000e": 283, "634379e": 283, "7829": 283, "6444": 283, "188876": 283, "763562e": 283, "564748e": 283, "222846e": 283, "358338": 283, "936677e": 283, "674871e": 283, "1379": 283, "007885": 283, "008007": 283, "899298": 283, "044352e": 283, "970000e": 283, "197": [283, 284, 293, 303, 323, 330], "601751e": 283, "7866": 283, "6397": 283, "295744": 283, "905618e": 283, "926693e": 283, "222790e": 283, "418283": 283, "935846e": 283, "670387e": 283, "1386": 283, "007876": 283, "007998": 283, "899383": 283, "101084e": 283, "980000e": 283, "568193e": 283, "7909": 283, "6374": 283, "587944": 283, "124776e": 283, "795553e": 283, "222710e": 283, "397007": 283, "419861": 283, "934920e": 283, "665281e": 283, "1393": 283, "007866": 283, "007989": 283, "899482": 283, "961504e": 283, "990000e": 283, "199": [283, 284, 303, 323, 330], "533615e": 283, "7946": 283, "6479": 283, "674566": 283, "377564e": 283, "490729e": 283, "222607e": 283, "301311": 283, "933899e": 283, "659556e": 283, "1400": 283, "007854": 283, "007981": 283, "899595": 283, "547542e": 283, "shorten": 283, "table_not_renam": 283, "spintevolv": 283, "ang": 283, "knew": 283, "phenomena": 284, "8e6": [284, 316, 318, 330, 331, 332, 333], "indepent": 284, "max_dm": [284, 303, 323, 330], "400762e": [284, 330], "25204": [284, 330], "415522": [284, 330], "798712e": [284, 330], "269612e": [284, 330], "975901": [284, 330], "217115": [284, 330], "021888": [284, 330], "715017e": [284, 330], "797309e": [284, 330], "25186": [284, 330], "311578": [284, 330], "786077e": [284, 330], "396547e": [284, 330], "904810": [284, 330], "423562": [284, 330], "043754": [284, 330], "318544e": [284, 330], "25156": [284, 330], "186455": [284, 330], "765071e": [284, 330], "388134e": [284, 330], "790286": [284, 330], "609218": [284, 330], "065579": [284, 330], "756100e": [284, 330], "25114": [284, 330], "112032": [284, 330], "735776e": [284, 330], "375555e": [284, 330], "638055": [284, 330], "765021": [284, 330], "087341": [284, 330], "191985e": [284, 330], "25060": [284, 330], "188355": [284, 330], "698302e": [284, 330], "358857e": [284, 330], "455710": [284, 330], "883427": [284, 330], "109020": [284, 330], "009865e": [284, 330], "1402": [284, 330], "690": [284, 330], "438568": [284, 330], "602614e": [284, 330], "374608e": [284, 330], "396": [284, 330], "013011": [284, 330], "024099": [284, 330], "999625": [284, 330], "800000e": [284, 286, 303, 330], "009897e": [284, 330], "1409": [284, 330], "675": [284, 330], "493807": [284, 330], "319876e": [284, 330], "230101e": [284, 330], "398": [284, 330], "017545": [284, 330], "020251": [284, 330], "999641": [284, 330], "850000e": [284, 303, 330], "009928e": [284, 330], "1416": [284, 330], "660": [284, 330], "872303": [284, 330], "049242e": [284, 330], "091780e": [284, 330], "021059": [284, 330], "015612": [284, 330], "999656": [284, 330], "900000e": [284, 286, 303, 323, 330], "009958e": [284, 330], "567078": [284, 330], "790193e": [284, 330], "959381e": [284, 330], "402": [284, 330], "023428": [284, 330], "010435": [284, 330], "999671": [284, 330], "950000e": [284, 303, 323, 330], "009986e": [284, 330], "1430": [284, 330], "632": [284, 330], "571305": [284, 330], "542233e": [284, 330], "832649e": [284, 330], "404": [284, 330], "024591": [284, 330], "004988": [284, 330], "999685": [284, 330], "ft_mx": 284, "ft_my": 284, "521315": 284, "000000j": 284, "487159": 284, "543484": 284, "663425j": 284, "585720": 284, "150552j": 284, "616125": 284, "426352j": 284, "912330": 284, "322464j": 284, "759313": 284, "452269j": 284, "590649": 284, "544779j": 284, "989438": 284, "140613j": 284, "995293": 284, "839505j": 284, "96": 284, "600000e": [284, 286], "487614": 284, "030294j": 284, "055860": 284, "006899j": 284, "97": 284, "700000e": [284, 286], "487593": 284, "022707j": 284, "055952": 284, "005171j": 284, "98": 284, "487579": 284, "015131j": 284, "056017": 284, "003446j": 284, "487570": 284, "007564j": 284, "056056": 284, "001722j": 284, "487567": 284, "056069": 284, "ft_mz": 284, "168": 284, "841749": 284, "166086": 284, "032844j": 284, "088546": 284, "908290j": 284, "313478": 284, "167120j": 284, "9890680": 284, "7393600j": 284, "4943940": 284, "0307590j": 284, "4943850": 284, "0230560j": 284, "4943780": 284, "0153640j": 284, "4943740": 284, "0076800j": 284, "4943730": 284, "0000000j": 284, "my_interactive_plot": 285, "hold": 285, "ctrl": 285, "interv": 286, "4999999999999994e": 286, "monoton": 286, "100000e": 286, "200000e": 286, "300000e": 286, "400000e": 286, "restrict": [287, 288], "12e": [287, 318], "forbid": [289, 295], "person": 289, "clerk": 289, "maxwel": 289, "fuinction": 290, "hysteresis_valu": 290, "_a": 291, "repetit": 291, "myclass": 291, "reject": [291, 295], "challeng": 292, "overwritten": 292, "ihnerit": 292, "unless": [292, 324], "method1": 292, "method2": 292, "blass": 292, "howto": 293, "metapackag": 293, "setup": [293, 336], "wanr": 293, "martin": [293, 336], "510": 293, "523": 293, "548": 293, "554": 293, "ouput": 293, "201": 293, "573": 293, "279": 293, "575": 293, "completedprocess": 293, "returncod": 293, "51622": 293, "noommf": 293, "lookup": 293, "failur": [293, 324], "156": 293, "157": 293, "244": 293, "51659": 293, "otheriws": 294, "variou": [295, 303], "satisi": 295, "weather": 295, "pico": 296, "mega": 296, "si_prefix": 296, "ordereddict": 296, "1000000000000": 296, "1000000000000000": 296, "intend": [298, 332, 337], "inherit_doc": 300, "tailor": 301, "concis": 301, "fmr": 301, "flower": 302, "splai": 302, "intrins": 302, "magnetostat": 302, "princip": 302, "initiais": 302, "m_init_flow": 302, "norm_squar": 302, "m_init_vortex": 302, "minimise_system_energi": 302, "__name__": 302, "cubes": 302, "lex": 302, "km": 302, "stdprob3": 302, "transit": 302, "occurr": 302, "l_arrai": 302, "vortex_energi": 302, "flower_energi": 302, "4l_": 302, "6l_": 302, "root": [302, 337], "bisect": 302, "algorithm": 302, "energy_differ": 302, "xtol": 302, "nthe": 302, "425": 302, "4375": 302, "\u00b5mag": [302, 303, 304], "ctcm": [302, 303, 304], "rdm": [302, 303, 304], "mumag": [302, 303, 304], "underbrac": [303, 330], "equlibrium": [303, 332], "125e": 303, "stdprob4": 303, "littl": 303, "bit": [303, 324, 337], "resulot": 303, "ni": 303, "773766": 303, "2113000217": 303, "99856": 303, "85902016422": 303, "0031607521877565227": 303, "799979": 303, "2760196766": 303, "5758": 303, "293066036878": 303, "005025602440378236": 303, "h1": [303, 315], "drove": 303, "e_demag": 303, "676342e": 303, "3736": 303, "1162": 303, "551057": 303, "697359e": 303, "278388e": 303, "548545e": 303, "913555": 303, "281298": 303, "612838": 303, "530166e": 303, "624844e": 303, "784": 303, "984260": 303, "010971": 303, "033987": 303, "374338e": 303, "685463e": 303, "3755": 303, "1260": 303, "313987": 303, "935225e": 303, "621609e": 303, "637446e": 303, "157990": 303, "844369e": 303, "656275e": 303, "788": 303, "987086": 303, "021592": 303, "039286": 303, "373844e": 303, "695498e": 303, "3774": 303, "1384": 303, "782639": 303, "057789e": 303, "813911e": 303, "039753e": 303, "727732": 303, "074607e": 303, "683357e": 303, "792": 303, "988092": 303, "057824": 303, "042604": 303, "373936e": 303, "705827e": 303, "3793": 303, "1351": 303, "611579": 303, "053171e": 303, "832074e": 303, "586011e": 303, "669397": 303, "772022": 303, "220444e": 303, "703732e": 303, "796": 303, "986964": 303, "095870": 303, "043794": 303, "374355e": 303, "715833e": 303, "3812": 303, "1191": 303, "084437": 303, "931645e": 303, "687310e": 303, "141300e": 303, "354487": 303, "291427e": 303, "716389e": 303, "983765": 303, "133793": 303, "042832": 303, "375196e": 303, "snap": 303, "shot": 303, "fluctuat": 303, "pydata": 303, "u_": 304, "ux": [304, 324, 328, 329], "stdprob5": 304, "m_vortex": 304, "displac": 304, "axessubplot": 304, "irregular": 305, "discret": 305, "enough": [305, 324, 334], "neglect": [305, 324], "008": 305, "bia": 305, "ka": 305, "715": 305, "degener": 305, "eigenmod": 305, "suffici": 305, "converg": 305, "equilibrium": 305, "quasistat": 305, "alter": 305, "record": [305, 336], "120e": [305, 333], "8e4": 305, "81345856316858023": 305, "58162287266553481": 305, "stdprobfmr": 305, "81923192051904048": 305, "57346234436332832": 305, "4000": 305, "psd": 305, "log10": [305, 334], "f_axi": 305, "fftfreq": 305, "psa": 305, "baker": 305, "beg": [305, 322, 336], "ashton": 305, "chernyshenko": 305, "wang": 305, "bisotti": 305, "franchin": 305, "hu": 305, "stamp": 305, "hesjed": 305, "fangohr": [305, 335, 336, 337, 338], "magn": 305, "mater": 305, "421": 305, "428": 305, "2017": 305, "afetr": 306, "intialis": [306, 310], "hex_eff": [306, 310], "3470795322e": [306, 310], "35285533145e": [306, 310], "1217018942e": 306, "chack": 306, "total_energi": [306, 310], "352855331441701e": 306, "edgl": 307, "airbox_method": 307, "confirm": 307, "stray_field": 307, "confin": 308, "cylindr": 308, "50nm": 308, "definr": 308, "10nm": [308, 317], "magnets": [308, 317], "689": [308, 317], "runtimewarn": [308, 317], "double_scalar": [308, 317], "widthu_per_lenu": [308, 317], "49e": [308, 317], "tcl_runner": 309, "exe_runn": 309, "tell": 309, "energy_comput": 310, "m3": 310, "heff": [310, 311], "12170206653e": 310, "simpler": [310, 324], "3528553314865004e": 310, "84e5": [311, 322, 331], "58e": [311, 322, 331], "m_initi": [311, 331], "volume_integr": 311, "wdf": 311, "wmc": 311, "edf": 311, "emc": 311, "rerr": 311, "0347218596939451e": 311, "03472185969e": 311, "8126911702142893e": 311, "hdf": 311, "hmc": 311, "2k": 311, "043355901311158e": 311, "04335590131e": 311, "668156582818925e": 311, "2a": 311, "7438374238126347e": 311, "74383742381e": 311, "510847357640387e": 311, "350588324058675e": 311, "35058832406e": 311, "045656594100094e": 311, "heff_funct": 311, "dmdt_function": 311, "soon": 312, "publish": 312, "60k": 312, "uniformli": [312, 316], "1700e3": 312, "timestep": [312, 324], "offici": [312, 337], "68871": 312, "265081": 312, "842372": 312, "002361": 312, "003408": 312, "102": 312, "69924": 312, "226300": 312, "710945": 312, "001004": 312, "001404": 312, "78886": 312, "820644": 312, "152": 312, "600855": 312, "002175": 312, "005869": 312, "204": 312, "67798": 312, "361453": 312, "203": 312, "502902": 312, "003426": 312, "002623": 312, "255": 312, "75905": 312, "774117": 312, "254": 312, "425940": 312, "003645": 312, "007141": 312, "somethom": 313, "fixed1": 313, "27e": 313, "fixed2": 313, "fixed_spin": 313, "duri": 313, "anf": 313, "neel": 313, "wall": [313, 324, 326], "offer": 314, "arhument": 314, "081201": 314, "296243e": 314, "958228e": 314, "178506e": 314, "550275e": 314, "411539e": 314, "998400": 314, "079326": 314, "769135e": 314, "874685e": 314, "301416e": 314, "900": 314, "481374e": 314, "722528e": 314, "998216": 314, "056126": 314, "242133e": 314, "479114e": 314, "445097e": 314, "100550e": 314, "791429e": 314, "997999": 314, "086456": 314, "715256e": 314, "465190e": 314, "614662e": 314, "700": 314, "752309e": 314, "515825e": 314, "997739": 314, "053076": 314, "188531e": 314, "451266e": 314, "816966e": 314, "600": 314, "854727e": 314, "997422": 314, "bz": 314, "h2": 315, "multiple_term": 315, "115": 315, "113": 315, "_container_class": 315, "378": 315, "369": 315, "370": 315, "__class__": 315, "371": 315, "_term": 315, "372": 315, "373": 315, "374": 315, "375": 315, "376": 315, "377": 315, "379": 315, "380": 315, "e_zeeman_zeeman1": 315, "e_zeeman_zeeman2": 315, "002808": 315, "843445e": 315, "222237e": 315, "421723e": 315, "707107": 315, "862214e": 315, "mark": [315, 334], "gave": 315, "plan": [316, 337, 338], "coupl": [316, 318], "antiferomagnet": 316, "60e": [316, 318], "r3": 316, "negative_a": 316, "adict": 316, "m_random": 316, "antiferromagnet": [316, 318], "infinit": 317, "9249451991543435": 317, "9244762913568568": 317, "9244762913568569": 317, "9997455664839123": 317, "spacer": 318, "22e": 318, "sine_hysteresi": 319, "1e2": 319, "2e9": [319, 320], "bz_zeeman": [319, 323, 324], "space_time_varying_field": 320, "hspace": 320, "scientif": [322, 336], "7959": 322, "150": 322, "hb": 322, "ht": 322, "bloch_point": 322, "vortic": 322, "closer": 322, "amp": 323, "time_dependent_field": 323, "by_zeeman": [323, 324], "297563e": 323, "434031e": 323, "147568e": 323, "812700e": 323, "931627e": 323, "897440e": 323, "758989": 323, "183653": 323, "624666": 323, "515634e": 323, "562001e": 323, "766104e": 323, "954602e": 323, "204656e": 323, "766444e": 323, "164967e": 323, "090633": 323, "038564": 323, "995137": 323, "425770e": 323, "759093e": 323, "290846e": 323, "636140e": 323, "221901e": 323, "141003e": 323, "711504e": 323, "784284": 323, "261449": 323, "562622": 323, "631440e": 323, "863542e": 323, "184": 323, "673341e": 323, "207088e": 323, "112468e": 323, "477265e": 323, "215898e": 323, "015202": 323, "010857": 323, "999825": 323, "449728e": 323, "848036e": 323, "299": 323, "014752e": 323, "675974e": 323, "915541e": 323, "777153e": 323, "665730e": 323, "497085": 323, "051994": 323, "866143": 323, "913664e": 323, "436379e": 323, "20614": 323, "906705e": 323, "837992e": 323, "268306e": 323, "3450": 323, "020176": 323, "114665": 323, "993199": 323, "918021e": 323, "422674e": 323, "20687": 323, "474584e": 323, "221479e": 323, "046823e": 323, "3463": 323, "848044": 323, "209072": 323, "486939": 323, "197700e": 323, "925000e": 323, "328011e": 323, "20742": 323, "004530e": 323, "502211e": 323, "083878e": 323, "3473": 323, "063640": 323, "149399": 323, "986727": 323, "412896e": 323, "178128e": 323, "20779": 323, "087140e": 323, "673789e": 323, "358762e": 323, "3480": 323, "822805": 323, "116178": 323, "556322": 323, "059389e": 323, "975000e": 323, "088592e": 323, "20804": 323, "629445e": 323, "731610e": 323, "217703e": 323, "032019e": 323, "048028e": 323, "3485": 323, "041748": 323, "107200": 323, "993361": 323, "687671e": 323, "bx_zeeman": [323, 324], "cardin": 323, "prefactor": 324, "mechan": 324, "nevertheless": 324, "micromagnetimodel": 324, "correstpond": 324, "coars": 324, "somewher": 324, "userguide12b3": 324, "stem": 324, "differen": 324, "amplitud": 324, "toi": 324, "exter": 324, "observ": 324, "durat": 324, "particularli": 324, "5e4": 324, "almost": 324, "ninti": 324, "t_func": 324, "macrospin_puls": 324, "ax1": 324, "ax2": 324, "macrospin_pulse_dr": 324, "tion": 324, "offset": 324, "macrospin_sin": 324, "macrospin_sinc": 324, "profil": 324, "artif": 324, "nois": 324, "smooth": 324, "t_sampl": 324, "1001": 324, "10n": 324, "10p": 324, "measured_time_depend": 324, "randn": 324, "26263374": 324, "32470813": 324, "18966045": 324, "19483294": 324, "line2d": 324, "0x7fa269d430a0": 324, "wrap": 324, "accuraci": 324, "interp": 324, "macrospin_measur": 324, "userguide20a2": 324, "r_": 324, "yy": 324, "zx": 324, "zy": 324, "zz": 324, "h_field": 324, "system_tcl": 324, "custom_tcl": 324, "oxs_transformzeeman": 324, "easiest": 324, "proc": 324, "timefunct": 324, "total_tim": 324, "expr": 324, "atan": 324, "ct": 324, "mct": 324, "cosin": 324, "mst": 324, "domain_wal": [324, 328], "dw": [324, 328], "m_valu": [324, 328, 333], "time_func": 324, "5t": 324, "movement": 324, "2e12": 324, "average_j": 324, "influenc": 325, "learn": [326, 327, 336], "exercis": 326, "induc": 326, "newer": 327, "anaconda": [327, 337], "prompt": [327, 337], "termin": [327, 337], "venv": [327, 337], "ubermag_env": [327, 337], "browser": [327, 336], "tab": [327, 337], "ui": 327, "click": 327, "screenshot": 327, "mj": [328, 329], "domain_wall_pair": 328, "solut": [328, 330, 333], "narrow": 329, "constrain": 329, "zhou": 329, "ezawa": 329, "2014": 329, "revers": 329, "junction": 329, "natur": [329, 334], "1038": 329, "ncomms5652": 329, "dw_pair_convers": 329, "wider": 329, "excit": 330, "initial_m": 330, "41e6": 330, "intuit": 330, "uniaxial_anisotropi": 331, "6e6": 331, "aniostropi": 331, "preferenti": 331, "hamiltoninan": 331, "exchange_and_zeeman": 331, "plu": 331, "approx": 331, "exchange_and_dmi": 331, "28e": 331, "diamet": [331, 333], "goal": [332, 338], "comfort": 332, "eventu": 332, "skeleton": 332, "worri": 332, "difer": 332, "first_ubermag_simul": 332, "simulaton": 332, "mistak": 332, "human": 332, "sligtli": 332, "workshop": [332, 335, 336], "7860158": 332, "235916737": 332, "007325129149015993": 332, "0489096641540526e": 332, "9825197794895917": 332, "156411379107609e": 332, "498001805406602e": 332, "quantitit": 333, "8000000": 333, "disrectis": 333, "ms_valu": 333, "decim": 334, "bracket": 334, "3333333333333335": 334, "live": 334, "14159": 334, "65358979335273e": 334, "9999999999964793": 334, "51000": 334, "mutabl": 334, "new_el": 334, "region797": 334, "quot": 334, "branch": 334, "sum_of_el": 334, "syntaxerror": 334, "indentationerror": 334, "block": [334, 335], "my_var": 334, "nameerror": 334, "scp": 334, "typo": 334, "scpy": 334, "my_object": 334, "signatur": 334, "keepdim": 334, "arithmet": 334, "flatten": 334, "intermedi": 334, "versionad": 334, "cast": 334, "against": 334, "std": 334, "var": 334, "nanmean": 334, "nanstd": 334, "nanvar": 334, "inaccur": 334, "especi": 334, "float32": 334, "allevi": 334, "float16": 334, "512": 334, "54999924": 334, "55000000074505806": 334, "fromnumer": 334, "bug": 335, "public": [335, 336], "zulip": [335, 336], "chat": [335, 336], "everyon": 335, "subscrib": [335, 336], "announc": [335, 336], "archiv": 335, "perhap": 335, "ideal": 335, "upload": [335, 336], "confidenti": 335, "backtick": 335, "inline_cod": 335, "excerpt": 335, "enhanc": 335, "chanc": 335, "who": 335, "patient": 335, "repli": 335, "immedi": 335, "suggest": 335, "phrase": 335, "smartquest": 335, "anyon": 335, "fellow": 335, "buid": 335, "task": [335, 336], "micromagnetic simul": 336, "finite differ": 336, "lorentz transmission electron microscopi": 336, "small-angle neutron scatt": 336, "small angle x-ray scatt": 336, "sax": 336, "magnetic force microscopi": 336, "torque magnetometri": 336, "dc magnetometry x-ray holographi": 336, "taylor": 336, "fluid": 336, "framework": 336, "sit": 336, "\u00fcber": 336, "backend": [336, 337], "ecosystem": 336, "popular": 336, "becom": 336, "readili": 336, "deleg": 336, "toward": 336, "spacif": 336, "blender": 336, "june": 336, "spintalk": 336, "ieee": 336, "societi": 336, "ieeemagnet": 336, "youtub": 336, "badg": 336, "scratch": 336, "prepar": 336, "marijan": 336, "lang": 336, "samuel": 336, "holt": 336, "ryan": 336, "pepper": 336, "thoma": 336, "kluyver": 336, "loudon": 336, "hicken": 336, "david": 336, "cort\u00e9": 336, "ortu\u00f1o": 336, "jeroen": 336, "jonathan": 336, "leliaert": 336, "han": 336, "depart": 336, "earth": 336, "scienc": 336, "engin": 336, "imperi": 336, "colleg": 336, "london": 336, "sw7": 336, "2az": 336, "kingdom": 336, "faculti": 336, "univers": [336, 338], "southampton": [336, 338], "so17": 336, "1bj": 336, "institut": 336, "matter": 336, "lurup": 336, "chausse": 336, "22761": 336, "hamburg": [336, 338], "germani": [336, 338], "warwick": 336, "coventri": 336, "cv4": 336, "7al": 336, "european": 336, "xfel": 336, "gmbh": 336, "holzkoppel": 336, "22869": 336, "schenefeld": 336, "metallurgi": 336, "cambridg": 336, "cb3": 336, "0f": 336, "durham": 336, "dh1": 336, "3le": 336, "ghent": 336, "krijgslaan": 336, "281": 336, "s12": 336, "9000": 336, "belgium": 336, "laser": 336, "workflow": 336, "transact": 336, "vol": 336, "feb": 336, "art": 336, "7300205": 336, "1109": 336, "tmag": 336, "3078896": 336, "articl": 336, "beg2022": 336, "journal": 336, "year": 336, "bsd": 336, "claus": 336, "revis": 336, "horizon": 336, "infrastructur": 336, "opendreamkit": 336, "id": 336, "676541": 336, "fond": 336, "wetenschappelijk": 336, "onderzoek": 336, "fwo": 336, "vlaanderen": 336, "g098917n": 336, "postdoctor": 336, "fellowship": 336, "forg": 337, "pypi": 337, "ubermagdata": 337, "virtual": 337, "ubermag_venv": 337, "folder": 337, "bat": 337, "channel": 337, "raw": 337, "backslash": 337, "escap": 337, "sequenc": 337, "upgrad": 337, "unzip": 337, "among": 337, "step2": 337, "compil": 337, "xcode": 337, "appstor": 337, "git": 337, "clone": 337, "cd": 337, "bash_profil": 337, "edit": 337, "refresh": 337, "bashrc": 337, "reopen": 337, "ubuntu": 337, "privileg": 337, "sudo": 337, "apt": 337, "tk": 337, "reporsitori": 337, "emd": 337, "until": 337, "deamon": 337, "helper": 337, "feasibl": 337, "peopl": 337, "dissemin": 338, "decemb": 338, "8th": 338, "15th": 338, "uk": 338, "contact": 338, "soton": 338, "ac": 338, "port": 338, "dataclass": 338, "brainstorm": 338, "august": 338, "22nd": 338, "27th": 338, "mpsd": 338}, "objects": {"": [[0, 0, 0, "-", "discretisedfield"], [38, 0, 0, "-", "mag2exp"], [66, 0, 0, "-", "micromagneticdata"], [74, 0, 0, "-", "micromagneticmodel"], [114, 0, 0, "-", "micromagnetictests"], [148, 0, 0, "-", "mumax3c"], [161, 0, 0, "-", "oommfc"], [186, 0, 0, "-", "ubermag"], [188, 0, 0, "-", "ubermagtable"], [196, 0, 0, "-", "ubermagutil"]], "discretisedfield": [[1, 1, 1, "", "DValue"], [2, 1, 1, "", "Field"], [3, 1, 1, "", "FieldRotator"], [4, 1, 1, "", "Line"], [5, 1, 1, "", "Mesh"], [6, 1, 1, "", "Region"], [7, 5, 1, "", "integral"], [8, 5, 1, "", "interact"], [9, 0, 0, "-", "io"], [18, 0, 0, "-", "plotting"], [27, 5, 1, "", "test"], [28, 0, 0, "-", "tools"]], "discretisedfield.DValue": [[1, 2, 1, "", "__abs__"], [1, 2, 1, "", "__call__"], [1, 2, 1, "", "__matmul__"], [1, 2, 1, "", "__mul__"]], "discretisedfield.Field": [[2, 2, 1, "", "__abs__"], [2, 2, 1, "", "__add__"], [2, 2, 1, "", "__and__"], [2, 2, 1, "", "__array_ufunc__"], [2, 2, 1, "", "__call__"], [2, 2, 1, "", "__dir__"], [2, 2, 1, "", "__eq__"], [2, 2, 1, "", "__getattr__"], [2, 2, 1, "", "__getitem__"], [2, 3, 1, "", "__hash__"], [2, 2, 1, "", "__iter__"], [2, 2, 1, "", "__lshift__"], [2, 2, 1, "", "__matmul__"], [2, 2, 1, "", "__mul__"], [2, 2, 1, "", "__neg__"], [2, 2, 1, "", "__pos__"], [2, 2, 1, "", "__pow__"], [2, 2, 1, "", "__repr__"], [2, 2, 1, "", "__sub__"], [2, 2, 1, "", "__truediv__"], [2, 2, 1, "", "allclose"], [2, 4, 1, "", "angle"], [2, 4, 1, "", "array"], [2, 4, 1, "", "average"], [2, 4, 1, "", "components"], [2, 4, 1, "", "conjugate"], [2, 2, 1, "", "coordinate_field"], [2, 4, 1, "", "curl"], [2, 2, 1, "", "derivative"], [2, 4, 1, "", "div"], [2, 4, 1, "", "fftn"], [2, 2, 1, "", "from_xarray"], [2, 2, 1, "", "fromfile"], [2, 4, 1, "", "grad"], [2, 4, 1, "", "hv"], [2, 4, 1, "", "ifftn"], [2, 4, 1, "", "imag"], [2, 2, 1, "", "integral"], [2, 4, 1, "", "irfftn"], [2, 4, 1, "", "k3d"], [2, 4, 1, "", "laplace"], [2, 2, 1, "", "line"], [2, 4, 1, "", "mpl"], [2, 4, 1, "", "norm"], [2, 4, 1, "", "orientation"], [2, 2, 1, "", "pad"], [2, 4, 1, "", "phase"], [2, 2, 1, "", "plane"], [2, 2, 1, "", "project"], [2, 4, 1, "", "real"], [2, 4, 1, "", "rfftn"], [2, 2, 1, "", "to_vtk"], [2, 2, 1, "", "to_xarray"], [2, 4, 1, "", "value"], [2, 2, 1, "", "write"], [2, 4, 1, "", "zero"]], "discretisedfield.FieldRotator": [[3, 2, 1, "", "__repr__"], [3, 2, 1, "", "clear_rotation"], [3, 4, 1, "", "field"], [3, 2, 1, "", "rotate"]], "discretisedfield.Line": [[4, 2, 1, "", "__repr__"], [4, 4, 1, "", "length"], [4, 2, 1, "", "mpl"], [4, 4, 1, "", "point_columns"], [4, 2, 1, "", "selector"], [4, 2, 1, "", "slider"], [4, 4, 1, "", "value_columns"]], "discretisedfield.Mesh": [[5, 2, 1, "", "__dir__"], [5, 2, 1, "", "__eq__"], [5, 2, 1, "", "__getattr__"], [5, 2, 1, "", "__getitem__"], [5, 3, 1, "", "__hash__"], [5, 2, 1, "", "__iter__"], [5, 2, 1, "", "__len__"], [5, 2, 1, "", "__or__"], [5, 2, 1, "", "__repr__"], [5, 2, 1, "", "axis_selector"], [5, 4, 1, "", "dS"], [5, 4, 1, "", "dV"], [5, 2, 1, "", "index2point"], [5, 4, 1, "", "indices"], [5, 4, 1, "", "k3d"], [5, 2, 1, "", "line"], [5, 2, 1, "", "load_subregions"], [5, 4, 1, "", "midpoints"], [5, 4, 1, "", "mpl"], [5, 2, 1, "", "neighbours"], [5, 2, 1, "", "pad"], [5, 2, 1, "", "plane"], [5, 2, 1, "", "point2index"], [5, 2, 1, "", "region2slices"], [5, 2, 1, "", "save_subregions"], [5, 2, 1, "", "slider"], [5, 4, 1, "", "subregions"], [5, 4, 1, "", "vertices"]], "discretisedfield.Region": [[6, 2, 1, "", "__contains__"], [6, 2, 1, "", "__eq__"], [6, 3, 1, "", "__hash__"], [6, 2, 1, "", "__mul__"], [6, 2, 1, "", "__or__"], [6, 2, 1, "", "__repr__"], [6, 2, 1, "", "__truediv__"], [6, 4, 1, "", "centre"], [6, 4, 1, "", "edges"], [6, 4, 1, "", "k3d"], [6, 4, 1, "", "mpl"], [6, 4, 1, "", "multiplier"], [6, 4, 1, "", "pmax"], [6, 4, 1, "", "pmin"], [6, 2, 1, "", "random_point"], [6, 2, 1, "", "to_dict"], [6, 4, 1, "", "volume"]], "discretisedfield.io": [[10, 5, 1, "", "field_from_hdf5"], [11, 5, 1, "", "field_from_ovf"], [12, 5, 1, "", "field_from_vtk"], [13, 5, 1, "", "field_to_hdf5"], [14, 5, 1, "", "field_to_ovf"], [15, 5, 1, "", "field_to_vtk"], [16, 0, 0, "-", "ovf2vtk"]], "discretisedfield.io.ovf2vtk": [[17, 5, 1, "", "ovf2vtk"]], "discretisedfield.plotting": [[19, 1, 1, "", "Hv"], [20, 1, 1, "", "K3dField"], [21, 1, 1, "", "K3dMesh"], [22, 1, 1, "", "K3dRegion"], [23, 1, 1, "", "MplField"], [24, 1, 1, "", "MplMesh"], [25, 1, 1, "", "MplRegion"], [26, 5, 1, "", "add_colorwheel"]], "discretisedfield.plotting.Hv": [[19, 2, 1, "", "__call__"], [19, 2, 1, "", "contour"], [19, 2, 1, "", "scalar"], [19, 2, 1, "", "vector"]], "discretisedfield.plotting.K3dField": [[20, 2, 1, "", "__dir__"], [20, 2, 1, "", "nonzero"], [20, 2, 1, "", "scalar"], [20, 2, 1, "", "vector"]], "discretisedfield.plotting.K3dMesh": [[21, 2, 1, "", "__call__"], [21, 2, 1, "", "subregions"]], "discretisedfield.plotting.K3dRegion": [[22, 2, 1, "", "__call__"]], "discretisedfield.plotting.MplField": [[23, 2, 1, "", "__call__"], [23, 2, 1, "", "__dir__"], [23, 2, 1, "", "contour"], [23, 2, 1, "", "lightness"], [23, 2, 1, "", "scalar"], [23, 2, 1, "", "vector"]], "discretisedfield.plotting.MplMesh": [[24, 2, 1, "", "__call__"], [24, 2, 1, "", "subregions"]], "discretisedfield.plotting.MplRegion": [[25, 2, 1, "", "__call__"]], "discretisedfield.tools": [[29, 5, 1, "", "count_bps"], [30, 5, 1, "", "count_large_cell_angle_regions"], [31, 5, 1, "", "demag_field"], [32, 5, 1, "", "demag_tensor"], [33, 5, 1, "", "emergent_magnetic_field"], [34, 5, 1, "", "max_neigbouring_cell_angle"], [35, 5, 1, "", "neigbouring_cell_angle"], [36, 5, 1, "", "topological_charge"], [37, 5, 1, "", "topological_charge_density"]], "mag2exp": [[39, 0, 0, "-", "ltem"], [44, 0, 0, "-", "magnetometry"], [47, 0, 0, "-", "mfm"], [49, 0, 0, "-", "quick_plots"], [59, 0, 0, "-", "sans"], [62, 5, 1, "", "test"], [63, 0, 0, "-", "x_ray"]], "mag2exp.ltem": [[40, 5, 1, "", "defocus_image"], [41, 5, 1, "", "integrated_magnetic_flux_density"], [42, 5, 1, "", "phase"], [43, 5, 1, "", "relativistic_wavelength"]], "mag2exp.magnetometry": [[45, 5, 1, "", "magnetisation"], [46, 5, 1, "", "torque"]], "mag2exp.mfm": [[48, 5, 1, "", "phase_shift"]], "mag2exp.quick_plots": [[50, 5, 1, "", "ltem_defocus"], [51, 5, 1, "", "ltem_ft_phase"], [52, 5, 1, "", "ltem_integrated_mfd"], [53, 5, 1, "", "ltem_phase"], [54, 5, 1, "", "mfm_phase_shift"], [55, 5, 1, "", "sans_chiral_function"], [56, 5, 1, "", "sans_cross_section"], [57, 5, 1, "", "saxs"], [58, 5, 1, "", "x_ray_holography"]], "mag2exp.sans": [[60, 5, 1, "", "chiral_function"], [61, 5, 1, "", "cross_section"]], "mag2exp.x_ray": [[64, 5, 1, "", "holography"], [65, 5, 1, "", "saxs"]], "micromagneticdata": [[67, 1, 1, "", "AbstractDrive"], [68, 1, 1, "", "CombinedDrive"], [69, 1, 1, "", "Data"], [70, 1, 1, "", "Drive"], [71, 1, 1, "", "Mumax3Drive"], [72, 1, 1, "", "OOMMFDrive"], [73, 5, 1, "", "test"]], "micromagneticdata.AbstractDrive": [[67, 2, 1, "", "__getitem__"], [67, 2, 1, "", "__iter__"], [67, 2, 1, "", "__lshift__"], [67, 2, 1, "", "__repr__"], [67, 4, 1, "", "callbacks"], [67, 4, 1, "", "hv"], [67, 4, 1, "", "info"], [67, 4, 1, "", "m0"], [67, 4, 1, "", "n"], [67, 2, 1, "", "register_callback"], [67, 4, 1, "", "table"], [67, 2, 1, "", "to_xarray"], [67, 4, 1, "", "x"]], "micromagneticdata.CombinedDrive": [[68, 2, 1, "", "__lshift__"], [68, 2, 1, "", "__repr__"], [68, 4, 1, "", "info"], [68, 2, 1, "", "register_callback"], [68, 4, 1, "", "table"], [68, 4, 1, "", "x"]], "micromagneticdata.Data": [[69, 2, 1, "", "__getitem__"], [69, 2, 1, "", "__iter__"], [69, 2, 1, "", "__repr__"], [69, 4, 1, "", "info"], [69, 4, 1, "", "n"], [69, 2, 1, "", "selector"]], "micromagneticdata.Drive": [[70, 2, 1, "", "__getitem__"], [70, 2, 1, "", "__lshift__"], [70, 2, 1, "", "__new__"], [70, 4, 1, "", "calculator_script"], [70, 4, 1, "", "info"], [70, 2, 1, "", "ovf2vtk"], [70, 2, 1, "", "register_callback"], [70, 2, 1, "", "slider"], [70, 4, 1, "", "table"], [70, 4, 1, "", "use_cache"]], "micromagneticdata.Mumax3Drive": [[71, 2, 1, "", "__repr__"], [71, 4, 1, "", "calculator_script"], [71, 4, 1, "", "x"]], "micromagneticdata.OOMMFDrive": [[72, 2, 1, "", "__repr__"], [72, 4, 1, "", "calculator_script"], [72, 4, 1, "", "x"]], "micromagneticmodel": [[75, 1, 1, "", "CubicAnisotropy"], [76, 1, 1, "", "DMI"], [77, 1, 1, "", "Damping"], [78, 1, 1, "", "Demag"], [79, 1, 1, "", "Driver"], [80, 1, 1, "", "Dynamics"], [81, 1, 1, "", "DynamicsTerm"], [82, 1, 1, "", "Energy"], [83, 1, 1, "", "EnergyTerm"], [84, 1, 1, "", "Evolver"], [85, 1, 1, "", "Exchange"], [86, 1, 1, "", "ExternalDriver"], [87, 1, 1, "", "ExternalRunner"], [88, 1, 1, "", "MagnetoElastic"], [89, 1, 1, "", "Precession"], [90, 1, 1, "", "RKKY"], [91, 1, 1, "", "Slonczewski"], [92, 1, 1, "", "System"], [93, 1, 1, "", "UniaxialAnisotropy"], [94, 1, 1, "", "Zeeman"], [95, 1, 1, "", "ZhangLi"], [96, 0, 0, "-", "abstract"], [100, 0, 0, "-", "consts"], [111, 0, 0, "-", "examples"], [113, 5, 1, "", "test"]], "micromagneticmodel.Driver": [[79, 2, 1, "", "drive"]], "micromagneticmodel.ExternalDriver": [[86, 2, 1, "", "drive"], [86, 2, 1, "", "drive_kwargs_setup"], [86, 2, 1, "", "schedule"], [86, 2, 1, "", "schedule_kwargs_setup"]], "micromagneticmodel.ExternalRunner": [[87, 2, 1, "", "call"], [87, 4, 1, "", "package_name"]], "micromagneticmodel.System": [[92, 2, 1, "", "__repr__"], [92, 4, 1, "", "dynamics"], [92, 4, 1, "", "energy"]], "micromagneticmodel.abstract": [[97, 1, 1, "", "Abstract"], [98, 1, 1, "", "Container"], [99, 1, 1, "", "Term"]], "micromagneticmodel.abstract.Abstract": [[97, 2, 1, "", "__iter__"], [97, 2, 1, "", "__repr__"], [97, 4, 1, "", "name"]], "micromagneticmodel.abstract.Container": [[98, 2, 1, "", "__add__"], [98, 2, 1, "", "__contains__"], [98, 2, 1, "", "__dir__"], [98, 2, 1, "", "__eq__"], [98, 2, 1, "", "__getattr__"], [98, 2, 1, "", "__getitem__"], [98, 3, 1, "", "__hash__"], [98, 2, 1, "", "__iter__"], [98, 2, 1, "", "__len__"], [98, 2, 1, "", "__repr__"], [98, 2, 1, "", "__sub__"], [98, 2, 1, "", "get"]], "micromagneticmodel.abstract.Term": [[99, 2, 1, "", "__add__"], [99, 2, 1, "", "__eq__"], [99, 3, 1, "", "__hash__"]], "micromagneticmodel.consts": [[101, 6, 1, "", "e"], [102, 6, 1, "", "g"], [103, 6, 1, "", "gamma"], [104, 6, 1, "", "gamma0"], [105, 6, 1, "", "h"], [106, 6, 1, "", "hbar"], [107, 6, 1, "", "kB"], [108, 6, 1, "", "me"], [109, 6, 1, "", "mu0"], [110, 6, 1, "", "muB"]], "micromagneticmodel.examples": [[112, 5, 1, "", "macrospin"]], "micromagnetictests": [[115, 0, 0, "-", "calculatortests"], [146, 5, 1, "", "get_tests"], [147, 5, 1, "", "test"]], "micromagnetictests.calculatortests": [[116, 1, 1, "", "TestCompute"], [117, 1, 1, "", "TestCubicAnisotropy"], [118, 1, 1, "", "TestDMI"], [119, 1, 1, "", "TestDamping"], [120, 1, 1, "", "TestDemag"], [121, 1, 1, "", "TestDynamics"], [122, 1, 1, "", "TestEnergy"], [123, 1, 1, "", "TestExchange"], [124, 1, 1, "", "TestFixedSubregions"], [125, 1, 1, "", "TestHysteresisDriver"], [126, 1, 1, "", "TestMesh"], [127, 1, 1, "", "TestMinDriver"], [128, 1, 1, "", "TestPrecession"], [129, 1, 1, "", "TestRKKY"], [130, 1, 1, "", "TestSlonczewski"], [131, 1, 1, "", "TestThreads"], [132, 1, 1, "", "TestTimeDriver"], [133, 1, 1, "", "TestUniaxialAnisotropy"], [134, 1, 1, "", "TestZeeman"], [135, 1, 1, "", "TestZhangLi"], [136, 5, 1, "", "test_dirname"], [137, 5, 1, "", "test_format"], [138, 5, 1, "", "test_info_file"], [139, 5, 1, "", "test_multiple_drives"], [140, 5, 1, "", "test_outputstep"], [141, 5, 1, "", "test_schedule"], [142, 5, 1, "", "test_skyrmion"], [143, 5, 1, "", "test_stdprob3"], [144, 5, 1, "", "test_stdprob4"], [145, 5, 1, "", "test_stdprob5"]], "mumax3c": [[149, 1, 1, "", "MinDriver"], [150, 1, 1, "", "RelaxDriver"], [151, 1, 1, "", "TimeDriver"], [152, 5, 1, "", "delete"], [153, 0, 0, "-", "mumax3"], [158, 6, 1, "", "runner"], [159, 5, 1, "", "test"], [160, 5, 1, "", "test_docker"]], "mumax3c.mumax3": [[154, 1, 1, "", "ExeMumax3Runner"], [155, 1, 1, "", "Mumax3Runner"], [156, 1, 1, "", "Runner"], [157, 5, 1, "", "overhead"]], "mumax3c.mumax3.Mumax3Runner": [[155, 4, 1, "", "package_name"], [155, 4, 1, "", "status"]], "mumax3c.mumax3.Runner": [[156, 2, 1, "", "autoselect_runner"], [156, 4, 1, "", "runner"]], "oommfc": [[162, 1, 1, "", "CGEvolver"], [163, 1, 1, "", "Driver"], [164, 1, 1, "", "EulerEvolver"], [165, 1, 1, "", "HysteresisDriver"], [166, 1, 1, "", "MinDriver"], [167, 1, 1, "", "RungeKuttaEvolver"], [168, 1, 1, "", "SpinTEvolver"], [169, 1, 1, "", "SpinXferEvolver"], [170, 1, 1, "", "TimeDriver"], [171, 1, 1, "", "UHH_ThetaEvolver"], [172, 1, 1, "", "Xf_ThermHeunEvolver"], [173, 1, 1, "", "Xf_ThermSpinXferEvolver"], [174, 5, 1, "", "compute"], [175, 5, 1, "", "delete"], [176, 0, 0, "-", "oommf"], [183, 6, 1, "", "runner"], [184, 5, 1, "", "test"], [185, 5, 1, "", "test_docker"]], "oommfc.Driver": [[163, 2, 1, "", "drive_kwargs_setup"], [163, 2, 1, "", "schedule_kwargs_setup"], [163, 2, 1, "", "write_mif"]], "oommfc.oommf": [[177, 1, 1, "", "DockerOOMMFRunner"], [178, 1, 1, "", "ExeOOMMFRunner"], [179, 1, 1, "", "OOMMFRunner"], [180, 1, 1, "", "Runner"], [181, 1, 1, "", "TclOOMMFRunner"], [182, 5, 1, "", "overhead"]], "oommfc.oommf.DockerOOMMFRunner": [[177, 2, 1, "", "__repr__"], [177, 2, 1, "", "errors"]], "oommfc.oommf.ExeOOMMFRunner": [[178, 2, 1, "", "__repr__"], [178, 2, 1, "", "errors"]], "oommfc.oommf.OOMMFRunner": [[179, 2, 1, "", "__del__"], [179, 2, 1, "", "__repr__"], [179, 2, 1, "", "errors"], [179, 4, 1, "", "package_name"], [179, 4, 1, "", "platform"], [179, 4, 1, "", "status"], [179, 4, 1, "", "version"]], "oommfc.oommf.Runner": [[180, 2, 1, "", "__repr__"], [180, 2, 1, "", "autoselect_runner"], [180, 4, 1, "", "runner"]], "oommfc.oommf.TclOOMMFRunner": [[181, 2, 1, "", "__repr__"], [181, 2, 1, "", "errors"]], "ubermag": [[187, 5, 1, "", "test"]], "ubermagtable": [[189, 1, 1, "", "Table"], [190, 5, 1, "", "interact"], [191, 5, 1, "", "test"], [192, 0, 0, "-", "util"]], "ubermagtable.Table": [[189, 2, 1, "", "__lshift__"], [189, 2, 1, "", "__repr__"], [189, 2, 1, "", "apply"], [189, 4, 1, "", "dx"], [189, 2, 1, "", "fromfile"], [189, 2, 1, "", "irfft"], [189, 2, 1, "", "mpl"], [189, 2, 1, "", "rfft"], [189, 2, 1, "", "selector"], [189, 2, 1, "", "slider"], [189, 4, 1, "", "x"], [189, 4, 1, "", "xmax"], [189, 4, 1, "", "y"]], "ubermagtable.util": [[193, 5, 1, "", "columns"], [194, 5, 1, "", "data"], [195, 5, 1, "", "units"]], "ubermagutil": [[197, 5, 1, "", "changedir"], [198, 5, 1, "", "hysteresis_values"], [199, 5, 1, "", "inherit_docs"], [200, 5, 1, "", "setup_logging"], [201, 5, 1, "", "test"], [202, 0, 0, "-", "typesystem"], [212, 0, 0, "-", "units"]], "ubermagutil.typesystem": [[203, 1, 1, "", "Descriptor"], [204, 1, 1, "", "Dictionary"], [205, 1, 1, "", "Name"], [206, 1, 1, "", "Parameter"], [207, 1, 1, "", "Scalar"], [208, 1, 1, "", "Subset"], [209, 1, 1, "", "Typed"], [210, 1, 1, "", "Vector"], [211, 5, 1, "", "typesystem"]], "ubermagutil.typesystem.Descriptor": [[203, 2, 1, "", "__delete__"], [203, 2, 1, "", "__set__"]], "ubermagutil.typesystem.Dictionary": [[204, 2, 1, "", "__set__"]], "ubermagutil.typesystem.Name": [[205, 2, 1, "", "__set__"]], "ubermagutil.typesystem.Parameter": [[206, 2, 1, "", "__set__"]], "ubermagutil.typesystem.Scalar": [[207, 2, 1, "", "__set__"]], "ubermagutil.typesystem.Subset": [[208, 2, 1, "", "__set__"]], "ubermagutil.typesystem.Typed": [[209, 2, 1, "", "__set__"]], "ubermagutil.typesystem.Vector": [[210, 2, 1, "", "__set__"]], "ubermagutil.units": [[213, 5, 1, "", "si_max_multiplier"], [214, 5, 1, "", "si_multiplier"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function", "6": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "data", "Python data"]}, "titleterms": {"discretisedfield": [0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 221, 250, 270, 273, 276, 279, 281], "dvalu": 1, "field": [2, 218, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 250, 270, 273, 276, 279, 281, 303, 306, 307, 311, 320, 323, 324, 333], "fieldrot": [3, 235], "line": [4, 229, 231, 233, 238, 241, 280], "mesh": [5, 233, 235, 236, 239, 240, 241, 242, 243, 244, 245, 333], "region": [6, 233, 235, 236, 247, 248, 249, 270, 333], "integr": [7, 233, 252], "interact": [8, 190, 230, 231, 261, 285], "io": [9, 10, 11, 12, 13, 14, 15, 16, 17], "field_from_hdf5": 10, "field_from_ovf": 11, "field_from_vtk": 12, "field_to_hdf5": 13, "field_to_ovf": 14, "field_to_vtk": 15, "ovf2vtk": [16, 17, 246], "plot": [18, 26, 229, 230, 231, 244, 249, 253, 259, 261, 285, 314], "hv": 19, "k3dfield": 20, "k3dmesh": 21, "k3dregion": 22, "mplfield": 23, "mplmesh": 24, "mplregion": 25, "add_colorwheel": 26, "test": [27, 62, 73, 113, 147, 159, 184, 187, 191, 201, 337], "tool": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 237, 246], "count_bp": 29, "count_large_cell_angle_region": 30, "demag_field": 31, "demag_tensor": 32, "emergent_magnetic_field": 33, "max_neigbouring_cell_angl": 34, "neigbouring_cell_angl": 35, "topological_charg": 36, "topological_charge_dens": 37, "mag2exp": [38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 223, 254], "ltem": [39, 40, 41, 42, 43, 252, 254], "defocus_imag": 40, "integrated_magnetic_flux_dens": 41, "phase": 42, "relativistic_wavelength": 43, "magnetometri": [44, 45, 46, 251, 257], "magnetis": [45, 251, 258, 261, 302, 311, 332, 333], "torqu": [46, 257], "mfm": [47, 48, 253], "phase_shift": 48, "quick_plot": [49, 50, 51, 52, 53, 54, 55, 56, 57, 58], "ltem_defocu": 50, "ltem_ft_phas": 51, "ltem_integrated_mfd": 52, "ltem_phas": 53, "mfm_phase_shift": 54, "sans_chiral_funct": 55, "sans_cross_sect": 56, "sax": [57, 65, 256], "x_ray_holographi": 58, "san": [59, 60, 61, 255], "chiral_funct": 60, "cross_sect": 61, "x_rai": [63, 64, 65], "holographi": [64, 259], "micromagneticdata": [66, 73, 224, 277, 314], "abstractdr": 67, "combineddr": [68, 260], "data": [69, 194, 218, 260, 261], "drive": [70, 260, 261, 332], "mumax3dr": 71, "oommfdriv": 72, "micromagneticmodel": [74, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 225], "cubicanisotropi": 75, "dmi": [76, 258, 311, 331], "damp": [77, 265], "demag": [78, 237], "driver": [79, 163, 267], "dynam": [80, 218, 263, 265, 305, 330, 332], "dynamicsterm": 81, "energi": [82, 218, 264, 266, 268, 273, 275, 276, 279, 281, 302, 306, 310, 311, 315, 316, 318, 331, 332], "energyterm": 83, "evolv": [84, 267], "exchang": [85, 258, 266, 276, 311, 316, 331], "externaldriv": 86, "externalrunn": 87, "magnetoelast": 88, "precess": [89, 262, 265], "rkky": [90, 266, 318], "slonczewski": [91, 324], "system": [92, 218, 269, 306, 332], "uniaxialanisotropi": 93, "zeeman": [94, 266, 281, 311, 324, 331], "zhangli": 95, "abstract": [96, 97], "contain": 98, "term": [99, 262, 263, 264, 265, 266, 268, 270, 273, 275, 276, 279, 281, 306, 310, 315, 318], "const": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110], "e": [101, 334], "g": [102, 262, 334], "gamma": [103, 262], "gamma0": 104, "h": [105, 281, 321], "hbar": 106, "kb": 107, "me": 108, "mu0": 109, "mub": 110, "exampl": [111, 112, 233, 258, 261, 301, 333], "macrospin": [112, 330], "micromagnetictest": [114, 115, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 226], "calculatortest": [115, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "testcomput": 116, "testcubicanisotropi": 117, "testdmi": 118, "testdamp": 119, "testdemag": 120, "testdynam": 121, "testenergi": 122, "testexchang": 123, "testfixedsubregion": 124, "testhysteresisdriv": 125, "testmesh": 126, "testmindriv": 127, "testprecess": 128, "testrkki": 129, "testslonczewski": 130, "testthread": 131, "testtimedriv": 132, "testuniaxialanisotropi": 133, "testzeeman": 134, "testzhangli": 135, "test_dirnam": 136, "test_format": 137, "test_info_fil": 138, "test_multiple_dr": 139, "test_outputstep": 140, "test_schedul": 141, "test_skyrmion": 142, "test_stdprob3": 143, "test_stdprob4": 144, "test_stdprob5": 145, "get_test": 146, "mumax3c": [148, 152, 153, 157, 158, 159, 160, 227], "mindriv": [149, 166, 277], "relaxdriv": 150, "timedriv": [151, 170, 280, 325], "delet": [152, 175, 291], "mumax3": [153, 157, 220], "exemumax3runn": 154, "mumax3runn": 155, "runner": [156, 158, 180, 183, 272, 309], "overhead": [157, 182], "test_dock": [160, 185], "oommfc": [161, 174, 175, 176, 182, 183, 184, 185, 297], "cgevolv": 162, "eulerevolv": 164, "hysteresisdriv": 165, "rungekuttaevolv": 167, "spintevolv": 168, "spinxferevolv": 169, "uhh_thetaevolv": [171, 312], "xf_thermheunevolv": [172, 312], "xf_thermspinxferevolv": [173, 312], "comput": [174, 233, 252, 253, 254, 255, 256, 257, 259, 261, 306, 310], "oommf": [176, 182, 220, 337], "dockeroommfrunn": 177, "exeoommfrunn": 178, "oommfrunn": 179, "tcloommfrunn": 181, "ubermag": [186, 187, 220, 298, 332, 336, 337], "ubermagt": [188, 190, 191, 192, 193, 194, 195, 299], "tabl": [189, 283, 284, 285, 286, 287, 288], "util": [192, 193, 194, 195], "column": 193, "unit": [195, 212, 213, 214, 228, 258], "ubermagutil": [196, 197, 198, 199, 200, 201, 202, 211, 212, 213, 214, 291, 300], "changedir": 197, "hysteresis_valu": 198, "inherit_doc": [199, 292], "setup_log": 200, "typesystem": [202, 211, 291], "descriptor": [203, 295], "dictionari": [204, 273, 276, 279, 281, 334], "name": [205, 274], "paramet": [206, 258, 270, 295, 321, 322], "scalar": [207, 228, 229, 231, 324], "subset": 208, "type": [209, 272, 294, 334], "vector": [210, 228, 229, 231, 233, 235, 324], "si_max_multipli": 213, "si_multipli": 214, "api": 215, "refer": [215, 251, 252, 253, 255, 256, 257, 259, 302, 303, 304, 305, 329], "changelog": 216, "0": 216, "66": 216, "oct": 216, "20": 216, "2022": [216, 338], "ad": 216, "chang": [216, 272], "fix": [216, 217, 313], "65": 216, "jul": 216, "17": 216, "64": 216, "03": [216, 279], "63": 216, "jun": 216, "29": 216, "62": 216, "1": [216, 235, 237, 246, 261, 262, 265, 266, 270, 273, 303, 321, 330, 332, 334], "09": 216, "mai": 216, "22": 216, "remov": 216, "61": 216, "2": [216, 233, 235, 237, 246, 261, 262, 265, 266, 270, 311, 322, 330, 332, 334], "mar": 216, "feb": 216, "gener": 216, "60": 216, "2021": 216, "51": 216, "10": [216, 262, 334], "contribut": 217, "bug": 217, "featur": [217, 220, 336], "request": [217, 335], "document": [217, 219, 222, 336], "demo": 218, "vortex": 218, "initialis": 218, "minimis": 218, "displac": 218, "magnet": [218, 237, 252, 253, 262], "free": 218, "relax": [218, 302, 305, 306], "analysi": [218, 277, 314], "compat": 220, "support": 220, "version": 220, "packag": [222, 336], "defin": [228, 269, 270, 294, 324], "uniform": 228, "visualis": [229, 230, 231, 238, 243, 244, 249, 261, 287], "us": [229, 230, 231, 236, 250, 254, 270, 291, 307, 334], "holoview": 229, "contour": [229, 231], "combin": [229, 231, 261], "multipl": [229, 230, 235, 246, 261, 268, 315, 334], "k3d": [230, 243, 244, 249], "same": [230, 268, 315], "matplotlib": 231, "mpl": [231, 243, 244, 249], "avail": 231, "function": [231, 233, 236, 324, 334], "2d": 231, "hsl": 231, "light": 231, "colorwheel": 231, "build": 231, "custom": [231, 274], "deprec": 231, "valu": [231, 235, 236, 288, 290, 306, 333, 334], "along": [231, 233], "normalis": [232, 261], "oper": [233, 311, 334], "sampl": 233, "extract": [233, 296], "compon": 233, "smaller": 233, "subfield": 233, "align": 233, "ani": 233, "averag": 233, "iter": [233, 334], "through": 233, "intersect": 233, "plane": [233, 241], "cascad": 233, "complex": 233, "algebra": 233, "compund": 233, "product": 233, "dot": 233, "cross": [233, 255, 256, 302], "calculu": 233, "gradient": 233, "nabla": 233, "f": 233, "diverg": 233, "cdot": 233, "curl": 233, "time": [233, 261, 266, 320, 323, 324, 334], "laplac": 233, "volum": 233, "surfac": [233, 248], "improp": 233, "pipelin": 233, "appli": 233, "numpi": 233, "univers": 233, "other": [233, 236, 335], "read": 234, "write": 234, "file": [234, 246, 325], "rotat": [235, 254, 259], "origin": 235, "method": [235, 250, 307], "90": 235, "about": 235, "arbitrari": 235, "angl": [235, 237, 255, 256], "point": 235, "certain": 235, "direct": 235, "detail": 235, "process": 235, "3": [235, 237, 246, 262, 265, 266, 270, 302, 330, 332, 334], "spatial": [236, 273, 275, 276, 279, 281, 320, 321, 322, 333], "vari": [236, 273, 275, 276, 279, 281, 320, 321, 322, 323, 333], "python": [236, 324, 334], "properti": [236, 250, 291], "anoth": 236, "object": [236, 238, 270, 332, 334], "creat": 236, "coordin": 236, "topolog": [237, 261], "charg": [237, 261, 262], "densiti": [237, 252, 261, 311], "between": 237, "cell": 237, "emerg": 237, "count": 237, "bp": 237, "4": [237, 262, 266, 303, 334], "tensor": 237, "basic": [239, 244, 247, 249, 283, 334], "boundari": [240, 317], "condit": [240, 317], "period": [240, 317], "experiment": [240, 324], "neumann": 240, "dirichet": 240, "pad": 242, "subregion": [243, 313], "advanc": [244, 249, 337], "widget": [245, 260, 288], "slider": [245, 288], "axi": 245, "selector": [245, 288], "singl": [246, 328], "wildcard": 246, "face": 248, "import": [250, 334], "export": 250, "from": [250, 265, 266], "xarrai": 250, "dataarrai": 250, "few": 250, "to_xarrai": 250, "except": 250, "from_xarrai": 250, "expect": 250, "input": 250, "dc": 251, "frame": [251, 252, 253, 255, 256, 257, 259], "The": [251, 252, 253, 255, 256, 257, 259, 272, 332], "micromagnet": [251, 252, 253, 255, 256, 257, 258, 259, 269, 311], "simul": [251, 252, 253, 255, 256, 257, 259, 260, 261, 278, 302, 303, 304, 306, 312, 314, 324, 330, 332], "lorentz": 252, "transmiss": 252, "electron": [252, 262], "microscopi": [252, 253], "imag": [252, 253, 254, 259], "defocus": 252, "flux": 252, "forc": 253, "finit": [253, 312], "size": 253, "tip": 253, "quick": [253, 259], "small": [255, 256, 334], "neutron": 255, "scatter": [255, 256], "section": [255, 256], "x": [256, 259], "rai": [256, 259], "recreat": 257, "experi": 257, "convers": [258, 329], "cg": 258, "si": [258, 296], "equival": 258, "atomist": 258, "micromagent": 258, "satur": 258, "anisotropi": [258, 266, 273, 279, 311, 331], "work": 258, "analys": 260, "result": [260, 330], "evolut": 261, "deriv": [261, 263, 264, 267, 306], "quantiti": 261, "select": [261, 334], "onli": [261, 280], "part": 261, "hysteresi": [261, 290, 314, 319], "constant": [262, 270, 273, 275, 276, 279, 281, 289, 316, 321], "elementari": 262, "": [262, 333], "mass": 262, "boltzmann": 262, "5": [262, 266, 304, 334], "planck": 262, "6": [262, 266, 334], "land": 262, "factor": 262, "7": [262, 266], "reduc": 262, "8": 262, "gyrotrop": 262, "ratio": 262, "9": 262, "bohr": 262, "magneton": 262, "llg": 262, "an": [264, 291, 307, 334], "equat": [265, 266, 330, 331, 332], "zhang": [265, 324], "li": [265, 324], "acces": [265, 266], "individu": [265, 266, 306], "independ": 266, "depend": [266, 324], "uniaxi": [266, 279, 311, 331], "demagnetis": 266, "dzyaloshinskii": [266, 275, 331], "moriya": [266, 275, 331], "cubic": [266, 273], "class": [267, 268, 291, 315], "per": 270, "usag": 271, "control": [272, 293], "default": [272, 280], "differ": 272, "go": 272, "back": 272, "tutori": [273, 275, 276, 279, 281, 336], "05": 273, "k_": 273, "mathbf": [273, 279, 281, 303, 321], "u": [273, 279], "k": [273, 279], "_": [273, 303], "directori": 274, "04": 275, "d": 275, "02": 276, "A": 276, "step": 277, "run": [278, 280], "parallel": 278, "higher": 279, "order": 279, "verbos": 280, "level": 280, "One": 280, "summari": 280, "silent": 280, "progress": 280, "bar": 280, "01": 281, "fft": 284, "merg": 286, "attribut": [289, 291], "impos": 291, "decor": 292, "log": 293, "otherwis": 294, "prefix": 296, "standard": [302, 303, 304, 305, 337], "problem": [302, 303, 304, 305, 328, 329], "specif": [302, 303, 304, 305], "state": 302, "first": [303, 332], "stage": [303, 305], "second": 303, "b": [303, 334], "postprocess": [303, 305], "spin": 304, "polaris": 304, "current": [304, 324, 328], "fmr": 305, "effect": [306, 311], "calcul": [307, 311, 337], "strai": 307, "airbox": 307, "skyrmion": [308, 331], "disk": [308, 325, 331], "choos": 309, "t": 311, "oversimplifi": 311, "temperatur": 312, "loop": 314, "neg": 316, "sine": 319, "both": 320, "how": [324, 335, 336, 337], "properli": 324, "thi": 324, "puls": 324, "pre": 324, "measur": 324, "tcl": 324, "faq": 325, "number": [325, 334], "written": 325, "get": [326, 334], "start": 326, "jupyt": 327, "lab": 327, "exercis": [328, 329, 330, 333], "induc": 328, "domain": [328, 329], "wall": [328, 329], "motion": 328, "descript": [328, 329], "pair": [328, 329], "solut": 329, "competit": 331, "our": 332, "main": 332, "initi": 332, "inspect": 332, "m_": 333, "mathrm": 333, "variabl": 334, "larg": 334, "addit": 334, "c": 334, "subtract": 334, "divis": 334, "power": 334, "more": 334, "complic": 334, "list": 334, "tupl": 334, "index": 334, "length": 334, "element": 334, "unpack": 334, "keyword": 334, "argument": 334, "common": 334, "mistak": 334, "No": 334, "colon": 334, "indent": 334, "mix": 334, "undefin": 334, "modul": 334, "i": [334, 335, 336], "orient": 334, "program": 334, "help": [334, 335], "prepar": 335, "your": 335, "render": 335, "output": 335, "similar": 335, "what": 336, "cloud": 336, "author": 336, "cite": 336, "licens": 336, "acknowledg": 336, "instal": 337, "recommend": 337, "environ": 337, "updat": 337, "check": 337, "doe": 337, "find": 337, "develop": 337, "new": 338, "winter": 338, "workshop": 338, "summer": 338, "code": 338, "sprint": 338}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"discretisedfield": [[0, "module-discretisedfield"], [221, "discretisedfield"], [221, null]], "DValue": [[1, "dvalue"]], "Field": [[2, "field"], [333, "Field"]], "FieldRotator": [[3, "fieldrotator"], [235, "FieldRotator"]], "Line": [[4, "line"]], "Mesh": [[5, "mesh"], [333, "Mesh"]], "Region": [[6, "region"], [333, "Region"]], "discretisedfield.integral": [[7, "discretisedfield-integral"]], "discretisedfield.interact": [[8, "discretisedfield-interact"]], "discretisedfield.io": [[9, "module-discretisedfield.io"]], "discretisedfield.io.field_from_hdf5": [[10, "discretisedfield-io-field-from-hdf5"]], "discretisedfield.io.field_from_ovf": [[11, "discretisedfield-io-field-from-ovf"]], "discretisedfield.io.field_from_vtk": [[12, "discretisedfield-io-field-from-vtk"]], "discretisedfield.io.field_to_hdf5": [[13, "discretisedfield-io-field-to-hdf5"]], "discretisedfield.io.field_to_ovf": [[14, "discretisedfield-io-field-to-ovf"]], "discretisedfield.io.field_to_vtk": [[15, "discretisedfield-io-field-to-vtk"]], "discretisedfield.io.ovf2vtk": [[16, "module-discretisedfield.io.ovf2vtk"]], "discretisedfield.io.ovf2vtk.ovf2vtk": [[17, "discretisedfield-io-ovf2vtk-ovf2vtk"]], "discretisedfield.plotting": [[18, "module-discretisedfield.plotting"]], "Hv": [[19, "hv"]], "K3dField": [[20, "k3dfield"]], "K3dMesh": [[21, "k3dmesh"]], "K3dRegion": [[22, "k3dregion"]], "MplField": [[23, "mplfield"]], "MplMesh": [[24, "mplmesh"]], "MplRegion": [[25, "mplregion"]], "discretisedfield.plotting.add_colorwheel": [[26, "discretisedfield-plotting-add-colorwheel"]], "discretisedfield.test": [[27, "discretisedfield-test"]], "discretisedfield.tools": [[28, "module-discretisedfield.tools"]], "discretisedfield.tools.count_bps": [[29, "discretisedfield-tools-count-bps"]], "discretisedfield.tools.count_large_cell_angle_regions": [[30, "discretisedfield-tools-count-large-cell-angle-regions"]], "discretisedfield.tools.demag_field": [[31, "discretisedfield-tools-demag-field"]], "discretisedfield.tools.demag_tensor": [[32, "discretisedfield-tools-demag-tensor"]], "discretisedfield.tools.emergent_magnetic_field": [[33, "discretisedfield-tools-emergent-magnetic-field"]], "discretisedfield.tools.max_neigbouring_cell_angle": [[34, "discretisedfield-tools-max-neigbouring-cell-angle"]], "discretisedfield.tools.neigbouring_cell_angle": [[35, "discretisedfield-tools-neigbouring-cell-angle"]], "discretisedfield.tools.topological_charge": [[36, "discretisedfield-tools-topological-charge"]], "discretisedfield.tools.topological_charge_density": [[37, "discretisedfield-tools-topological-charge-density"]], "mag2exp": [[38, "module-mag2exp"], [223, "mag2exp"], [223, null]], "mag2exp.ltem": [[39, "module-mag2exp.ltem"]], "mag2exp.ltem.defocus_image": [[40, "mag2exp-ltem-defocus-image"]], "mag2exp.ltem.integrated_magnetic_flux_density": [[41, "mag2exp-ltem-integrated-magnetic-flux-density"]], "mag2exp.ltem.phase": [[42, "mag2exp-ltem-phase"]], "mag2exp.ltem.relativistic_wavelength": [[43, "mag2exp-ltem-relativistic-wavelength"]], "mag2exp.magnetometry": [[44, "module-mag2exp.magnetometry"]], "mag2exp.magnetometry.magnetisation": [[45, "mag2exp-magnetometry-magnetisation"]], "mag2exp.magnetometry.torque": [[46, "mag2exp-magnetometry-torque"]], "mag2exp.mfm": [[47, "module-mag2exp.mfm"]], "mag2exp.mfm.phase_shift": [[48, "mag2exp-mfm-phase-shift"]], "mag2exp.quick_plots": [[49, "module-mag2exp.quick_plots"]], "mag2exp.quick_plots.ltem_defocus": [[50, "mag2exp-quick-plots-ltem-defocus"]], "mag2exp.quick_plots.ltem_ft_phase": [[51, "mag2exp-quick-plots-ltem-ft-phase"]], "mag2exp.quick_plots.ltem_integrated_mfd": [[52, "mag2exp-quick-plots-ltem-integrated-mfd"]], "mag2exp.quick_plots.ltem_phase": [[53, "mag2exp-quick-plots-ltem-phase"]], "mag2exp.quick_plots.mfm_phase_shift": [[54, "mag2exp-quick-plots-mfm-phase-shift"]], "mag2exp.quick_plots.sans_chiral_function": [[55, "mag2exp-quick-plots-sans-chiral-function"]], "mag2exp.quick_plots.sans_cross_section": [[56, "mag2exp-quick-plots-sans-cross-section"]], "mag2exp.quick_plots.saxs": [[57, "mag2exp-quick-plots-saxs"]], "mag2exp.quick_plots.x_ray_holography": [[58, "mag2exp-quick-plots-x-ray-holography"]], "mag2exp.sans": [[59, "module-mag2exp.sans"]], "mag2exp.sans.chiral_function": [[60, "mag2exp-sans-chiral-function"]], "mag2exp.sans.cross_section": [[61, "mag2exp-sans-cross-section"]], "mag2exp.test": [[62, "mag2exp-test"]], "mag2exp.x_ray": [[63, "module-mag2exp.x_ray"]], "mag2exp.x_ray.holography": [[64, "mag2exp-x-ray-holography"]], "mag2exp.x_ray.saxs": [[65, "mag2exp-x-ray-saxs"]], "micromagneticdata": [[66, "module-micromagneticdata"], [224, "micromagneticdata"], [224, null]], "AbstractDrive": [[67, "abstractdrive"]], "CombinedDrive": [[68, "combineddrive"], [260, "CombinedDrive"]], "Data": [[69, "data"], [260, "Data"]], "Drive": [[70, "drive"], [260, "Drive"]], "Mumax3Drive": [[71, "mumax3drive"]], "OOMMFDrive": [[72, "oommfdrive"]], "micromagneticdata.test": [[73, "micromagneticdata-test"]], "micromagneticmodel": [[74, "module-micromagneticmodel"], [225, "micromagneticmodel"], [225, null]], "CubicAnisotropy": [[75, "cubicanisotropy"]], "DMI": [[76, "dmi"], [258, "DMI"]], "Damping": [[77, "damping"]], "Demag": [[78, "demag"]], "Driver": [[79, "driver"], [163, "driver"]], "Dynamics": [[80, "dynamics"]], "DynamicsTerm": [[81, "dynamicsterm"]], "Energy": [[82, "energy"], [311, "Energy"], [311, "id2"], [311, "id5"], [311, "id8"]], "EnergyTerm": [[83, "energyterm"]], "Evolver": [[84, "evolver"]], "Exchange": [[85, "exchange"], [258, "Exchange"], [311, "Exchange"]], "ExternalDriver": [[86, "externaldriver"]], "ExternalRunner": [[87, "externalrunner"]], "MagnetoElastic": [[88, "magnetoelastic"]], "Precession": [[89, "precession"]], "RKKY": [[90, "rkky"]], "Slonczewski": [[91, "slonczewski"]], "System": [[92, "system"]], "UniaxialAnisotropy": [[93, "uniaxialanisotropy"]], "Zeeman": [[94, "zeeman"], [311, "Zeeman"]], "ZhangLi": [[95, "zhangli"]], "micromagneticmodel.abstract": [[96, "module-micromagneticmodel.abstract"]], "Abstract": [[97, "abstract"]], "Container": [[98, "container"]], "Term": [[99, "term"]], "micromagneticmodel.consts": [[100, "module-micromagneticmodel.consts"]], "micromagneticmodel.consts.e": [[101, "micromagneticmodel-consts-e"]], "micromagneticmodel.consts.g": [[102, "micromagneticmodel-consts-g"]], "micromagneticmodel.consts.gamma": [[103, "micromagneticmodel-consts-gamma"]], "micromagneticmodel.consts.gamma0": [[104, "micromagneticmodel-consts-gamma0"]], "micromagneticmodel.consts.h": [[105, "micromagneticmodel-consts-h"]], "micromagneticmodel.consts.hbar": [[106, "micromagneticmodel-consts-hbar"]], "micromagneticmodel.consts.kB": [[107, "micromagneticmodel-consts-kb"]], "micromagneticmodel.consts.me": [[108, "micromagneticmodel-consts-me"]], "micromagneticmodel.consts.mu0": [[109, "micromagneticmodel-consts-mu0"]], "micromagneticmodel.consts.muB": [[110, "micromagneticmodel-consts-mub"]], "micromagneticmodel.examples": [[111, "module-micromagneticmodel.examples"]], "micromagneticmodel.examples.macrospin": [[112, "micromagneticmodel-examples-macrospin"]], "micromagneticmodel.test": [[113, "micromagneticmodel-test"]], "micromagnetictests": [[114, "module-micromagnetictests"], [226, "micromagnetictests"], [226, null]], "micromagnetictests.calculatortests": [[115, "module-micromagnetictests.calculatortests"]], "TestCompute": [[116, "testcompute"]], "TestCubicAnisotropy": [[117, "testcubicanisotropy"]], "TestDMI": [[118, "testdmi"]], "TestDamping": [[119, "testdamping"]], "TestDemag": [[120, "testdemag"]], "TestDynamics": [[121, "testdynamics"]], "TestEnergy": [[122, "testenergy"]], "TestExchange": [[123, "testexchange"]], "TestFixedSubregions": [[124, "testfixedsubregions"]], "TestHysteresisDriver": [[125, "testhysteresisdriver"]], "TestMesh": [[126, "testmesh"]], "TestMinDriver": [[127, "testmindriver"]], "TestPrecession": [[128, "testprecession"]], "TestRKKY": [[129, "testrkky"]], "TestSlonczewski": [[130, "testslonczewski"]], "TestThreads": [[131, "testthreads"]], "TestTimeDriver": [[132, "testtimedriver"]], "TestUniaxialAnisotropy": [[133, "testuniaxialanisotropy"]], "TestZeeman": [[134, "testzeeman"]], "TestZhangLi": [[135, "testzhangli"]], "micromagnetictests.calculatortests.test_dirname": [[136, "micromagnetictests-calculatortests-test-dirname"]], "micromagnetictests.calculatortests.test_format": [[137, "micromagnetictests-calculatortests-test-format"]], "micromagnetictests.calculatortests.test_info_file": [[138, "micromagnetictests-calculatortests-test-info-file"]], "micromagnetictests.calculatortests.test_multiple_drives": [[139, "micromagnetictests-calculatortests-test-multiple-drives"]], "micromagnetictests.calculatortests.test_outputstep": [[140, "micromagnetictests-calculatortests-test-outputstep"]], "micromagnetictests.calculatortests.test_schedule": [[141, "micromagnetictests-calculatortests-test-schedule"]], "micromagnetictests.calculatortests.test_skyrmion": [[142, "micromagnetictests-calculatortests-test-skyrmion"]], "micromagnetictests.calculatortests.test_stdprob3": [[143, "micromagnetictests-calculatortests-test-stdprob3"]], "micromagnetictests.calculatortests.test_stdprob4": [[144, "micromagnetictests-calculatortests-test-stdprob4"]], "micromagnetictests.calculatortests.test_stdprob5": [[145, "micromagnetictests-calculatortests-test-stdprob5"]], "micromagnetictests.get_tests": [[146, "micromagnetictests-get-tests"]], "micromagnetictests.test": [[147, "micromagnetictests-test"]], "mumax3c": [[148, "module-mumax3c"], [227, "mumax3c"]], "MinDriver": [[149, "mindriver"], [166, "mindriver"]], "RelaxDriver": [[150, "relaxdriver"]], "TimeDriver": [[151, "timedriver"], [170, "timedriver"]], "mumax3c.delete": [[152, "mumax3c-delete"]], "mumax3c.mumax3": [[153, "module-mumax3c.mumax3"]], "ExeMumax3Runner": [[154, "exemumax3runner"]], "Mumax3Runner": [[155, "mumax3runner"]], "Runner": [[156, "runner"], [180, "runner"]], "mumax3c.mumax3.overhead": [[157, "mumax3c-mumax3-overhead"]], "mumax3c.runner": [[158, "mumax3c-runner"]], "mumax3c.test": [[159, "mumax3c-test"]], "mumax3c.test_docker": [[160, "mumax3c-test-docker"]], "oommfc": [[161, "module-oommfc"], [297, "oommfc"], [297, null]], "CGEvolver": [[162, "cgevolver"]], "EulerEvolver": [[164, "eulerevolver"]], "HysteresisDriver": [[165, "hysteresisdriver"]], "RungeKuttaEvolver": [[167, "rungekuttaevolver"]], "SpinTEvolver": [[168, "spintevolver"]], "SpinXferEvolver": [[169, "spinxferevolver"]], "UHH_ThetaEvolver": [[171, "uhh-thetaevolver"], [312, "UHH_ThetaEvolver"]], "Xf_ThermHeunEvolver": [[172, "xf-thermheunevolver"], [312, "Xf_ThermHeunEvolver"]], "Xf_ThermSpinXferEvolver": [[173, "xf-thermspinxferevolver"], [312, "Xf_ThermSpinXferEvolver"]], "oommfc.compute": [[174, "oommfc-compute"]], "oommfc.delete": [[175, "oommfc-delete"]], "oommfc.oommf": [[176, "module-oommfc.oommf"]], "DockerOOMMFRunner": [[177, "dockeroommfrunner"]], "ExeOOMMFRunner": [[178, "exeoommfrunner"]], "OOMMFRunner": [[179, "oommfrunner"]], "TclOOMMFRunner": [[181, "tcloommfrunner"]], "oommfc.oommf.overhead": [[182, "oommfc-oommf-overhead"]], "oommfc.runner": [[183, "oommfc-runner"]], "oommfc.test": [[184, "oommfc-test"]], "oommfc.test_docker": [[185, "oommfc-test-docker"]], "ubermag": [[186, "module-ubermag"], [298, "ubermag"]], "ubermag.test": [[187, "ubermag-test"]], "ubermagtable": [[188, "module-ubermagtable"], [299, "ubermagtable"], [299, null]], "Table": [[189, "table"]], "ubermagtable.interact": [[190, "ubermagtable-interact"]], "ubermagtable.test": [[191, "ubermagtable-test"]], "ubermagtable.util": [[192, "module-ubermagtable.util"]], "ubermagtable.util.columns": [[193, "ubermagtable-util-columns"]], "ubermagtable.util.data": [[194, "ubermagtable-util-data"]], "ubermagtable.util.units": [[195, "ubermagtable-util-units"]], "ubermagutil": [[196, "module-ubermagutil"], [300, "ubermagutil"], [300, null]], "ubermagutil.changedir": [[197, "ubermagutil-changedir"]], "ubermagutil.hysteresis_values": [[198, "ubermagutil-hysteresis-values"]], "ubermagutil.inherit_docs": [[199, "ubermagutil-inherit-docs"]], "ubermagutil.setup_logging": [[200, "ubermagutil-setup-logging"]], "ubermagutil.test": [[201, "ubermagutil-test"]], "ubermagutil.typesystem": [[202, "module-ubermagutil.typesystem"]], "Descriptor": [[203, "descriptor"]], "Dictionary": [[204, "dictionary"], [273, "Dictionary"], [276, "Dictionary"], [279, "Dictionary"], [281, "Dictionary"]], "Name": [[205, "name"]], "Parameter": [[206, "parameter"]], "Scalar": [[207, "scalar"], [324, "Scalar"]], "Subset": [[208, "subset"]], "Typed": [[209, "typed"]], "Vector": [[210, "vector"], [324, "Vector"]], "ubermagutil.typesystem.typesystem": [[211, "ubermagutil-typesystem-typesystem"]], "ubermagutil.units": [[212, "module-ubermagutil.units"]], "ubermagutil.units.si_max_multiplier": [[213, "ubermagutil-units-si-max-multiplier"]], "ubermagutil.units.si_multiplier": [[214, "ubermagutil-units-si-multiplier"]], "API Reference": [[215, "api-reference"]], "Changelog": [[216, "changelog"]], "0.66.0 (Oct 20, 2022)": [[216, "oct-20-2022"]], "Added": [[216, "added"], [216, "id2"], [216, "id6"], [216, "id9"], [216, "id13"]], "Changed": [[216, "changed"], [216, "id1"], [216, "id3"], [216, "id10"]], "Fixed": [[216, "fixed"], [216, "id4"], [216, "id5"], [216, "id7"], [216, "id8"], [216, "id11"], [216, "id14"]], "0.65.0 (Jul 17, 2022)": [[216, "jul-17-2022"]], "0.64.0 (Jul 03, 2022)": [[216, "jul-03-2022"]], "0.63.0 (Jun 29, 2022)": [[216, "jun-29-2022"]], "0.62.1 (Jun 09, 2022)": [[216, "jun-09-2022"]], "0.62.0 (May 22, 2022)": [[216, "may-22-2022"]], "Removed": [[216, "removed"]], "0.61.2 (Mar 17, 2022)": [[216, "mar-17-2022"]], "0.61.0 (Feb 22, 2022)": [[216, "feb-22-2022"]], "General": [[216, "general"], [216, "id12"]], "0.60.0 (Oct 1, 2021)": [[216, "oct-1-2021"]], "0.51 (Feb 10, 2021)": [[216, "feb-10-2021"]], "Contributing": [[217, "contributing"]], "Bugs": [[217, "bugs"]], "Fixing a Bug": [[217, "fixing-a-bug"]], "Feature requests": [[217, "feature-requests"]], "Documentation": [[217, "documentation"], [219, "documentation"]], "Demo": [[218, "Demo"]], "Vortex dynamics": [[218, "Vortex-dynamics"]], "System initialisation": [[218, "System-initialisation"]], "Energy minimisation": [[218, "Energy-minimisation"]], "Displacement with magnetic field": [[218, "Displacement-with-magnetic-field"]], "Free relaxation": [[218, "Free-relaxation"]], "Data analysis": [[218, "Data-analysis"]], "Compatibility: Ubermag - OOMMF - mumax3": [[220, "compatibility-ubermag-oommf-mumax3"]], "Supported features": [[220, "supported-features"]], "Compatible versions": [[220, "compatible-versions"]], "Package documentation": [[222, "package-documentation"]], "Defining a uniform field": [[228, "Defining-a-uniform-field"]], "Scalar field": [[228, "Scalar-field"]], "Vector field": [[228, "Vector-field"]], "Field units": [[228, "Field-units"]], "Visualising field using holoviews": [[229, "Visualising-field-using-holoviews"]], "Scalar plot": [[229, "Scalar-plot"]], "Vector plot": [[229, "Vector-plot"]], "Contour lines": [[229, "Contour-lines"]], "Combining multiple plots": [[229, "Combining-multiple-plots"]], "Field visualisation using k3d": [[230, "Field-visualisation-using-k3d"]], "Multiple visualisation on the same plot": [[230, "Multiple-visualisation-on-the-same-plot"]], "k3d interactive plots": [[230, "k3d-interactive-plots"]], "Visualising field using matplotlib": [[231, "Visualising-field-using-matplotlib"]], "Plotting using Field.mpl()": [[231, "Plotting-using-Field.mpl()"]], "Available plotting functions": [[231, "Available-plotting-functions"]], "Scalar field visualisation \u2013 mpl.scalar": [[231, "Scalar-field-visualisation-\u2013-mpl.scalar"]], "Vector field visualisation \u2013 mpl.vector": [[231, "Vector-field-visualisation-\u2013-mpl.vector"]], "2d vector fields": [[231, "2d-vector-fields"]], "Contour line plots \u2013 mpl.contour": [[231, "Contour-line-plots-\u2013-mpl.contour"]], "HSL plots \u2013 mpl.lightness": [[231, "HSL-plots-\u2013-mpl.lightness"]], "colorwheel": [[231, "colorwheel"]], "Combining scalar and vector plots \u2013 mpl()": [[231, "Combining-scalar-and-vector-plots-\u2013-mpl()"]], "Building a custom plot": [[231, "Building-a-custom-plot"]], "[DEPRECATED] Interactive plots": [[231, "[DEPRECATED]-Interactive-plots"]], "Plotting field values along the line": [[231, "Plotting-field-values-along-the-line"]], "Field normalisation": [[232, "Field-normalisation"]], "Field operations": [[233, "Field-operations"]], "Sampling the field": [[233, "Sampling-the-field"]], "Extracting the component of a vector field": [[233, "Extracting-the-component-of-a-vector-field"]], "Extracting smaller region": [[233, "Extracting-smaller-region"]], "Extracting subfield on aligned mesh": [[233, "Extracting-subfield-on-aligned-mesh"]], "Extracting field on any mesh": [[233, "Extracting-field-on-any-mesh"]], "Computing the average": [[233, "Computing-the-average"]], "Iterating through the field": [[233, "Iterating-through-the-field"]], "Sampling the field along the line": [[233, "Sampling-the-field-along-the-line"]], "Intersecting the field with a plane": [[233, "Intersecting-the-field-with-a-plane"]], "Cascading the operations": [[233, "Cascading-the-operations"]], "Complex fields": [[233, "Complex-fields"]], "Algebra operations": [[233, "Algebra-operations"]], "+ operation": [[233, "+-operation"]], "- operation": [[233, "--operation"]], "* operation": [[233, "*-operation"]], "/ operation": [[233, "/-operation"]], "** operator": [[233, "**-operator"]], "Compund operations": [[233, "Compund-operations"]], "Vector products": [[233, "Vector-products"]], "Dot product": [[233, "Dot-product"]], "Cross product": [[233, "Cross-product"]], "Vector calculus": [[233, "Vector-calculus"]], "Gradient (\\nabla f)": [[233, "Gradient-(\\nabla-f)"]], "Divergence (\\nabla \\cdot f)": [[233, "Divergence-(\\nabla-\\cdot-f)"]], "Curl (\\nabla \\times f)": [[233, "Curl-(\\nabla-\\times-f)"]], "Laplace operator (\\nabla^{2} f)": [[233, "Laplace-operator-(\\nabla^{2}-f)"]], "Integrals": [[233, "Integrals"]], "Volume integral": [[233, "Volume-integral"]], "Surface integral": [[233, "Surface-integral"]], "Line integrals": [[233, "Line-integrals"]], "Improper integrals": [[233, "Improper-integrals"]], "Example": [[233, "Example"], [233, "id4"], [333, "Example"]], "Operation pipelines": [[233, "Operation-pipelines"]], "Applying numpys universal functions": [[233, "Applying-numpys-universal-functions"]], "Other": [[233, "Other"], [236, "Other"]], "Reading and writing fields": [[234, "Reading-and-writing-fields"]], "Writing the field to a file": [[234, "Writing-the-field-to-a-file"]], "Reading files": [[234, "Reading-files"]], "Field rotation": [[235, "Field-rotation"]], "Rotating a field": [[235, "Rotating-a-field"]], "Original field": [[235, "Original-field"]], "Rotation methods": [[235, "Rotation-methods"]], "Rotations by multiples of 90\u00b0": [[235, "Rotations-by-multiples-of-90\u00b0"]], "Rotations about arbitrary angles": [[235, "Rotations-about-arbitrary-angles"]], "Rotating a vector to point in a certain direction": [[235, "Rotating-a-vector-to-point-in-a-certain-direction"]], "Details of the rotation process": [[235, "Details-of-the-rotation-process"]], "1. Rotation of the region": [[235, "1.-Rotation-of-the-region"]], "2. Rotation of the mesh": [[235, "2.-Rotation-of-the-mesh"]], "3. Rotation of the field values": [[235, "3.-Rotation-of-the-field-values"]], "Spatially varying fields": [[236, "Spatially-varying-fields"]], "Using a Python function": [[236, "Using-a-Python-function"]], "Value property": [[236, "Value-property"]], "Using mesh regions": [[236, "Using-mesh-regions"]], "Using another Field object": [[236, "Using-another-Field-object"]], "Creating a field with coordinate values": [[236, "Creating-a-field-with-coordinate-values"]], "Field tools": [[237, "Field-tools"]], "1. Topological charge/topological charge density": [[237, "1.-Topological-charge/topological-charge-density"]], "2. Angles between cells": [[237, "2.-Angles-between-cells"]], "3. Emergent magnetic field and counting of BPs": [[237, "3.-Emergent-magnetic-field-and-counting-of-BPs"]], "4. Demag tensor": [[237, "4.-Demag-tensor"]], "Line object": [[238, "Line-object"]], "Line visualisation": [[238, "Line-visualisation"]], "Mesh basics": [[239, "Mesh-basics"]], "Mesh boundary conditions": [[240, "Mesh-boundary-conditions"]], "Periodic boundary conditions": [[240, "Periodic-boundary-conditions"], [317, "Periodic-boundary-conditions"]], "Experimental: Neumann and Dirichet boundary conditions": [[240, "Experimental:-Neumann-and-Dirichet-boundary-conditions"]], "Mesh plane and line": [[241, "Mesh-plane-and-line"]], "Plane mesh": [[241, "Plane-mesh"]], "Mesh pad": [[242, "Mesh-pad"]], "Mesh subregions": [[243, "Mesh-subregions"]], "Mesh subregions visualisation": [[243, "Mesh-subregions-visualisation"]], "mpl": [[243, "mpl"], [244, "mpl"], [249, "mpl"]], "k3d": [[243, "k3d"], [244, "k3d"], [249, "k3d"]], "Mesh visualisation": [[244, "Mesh-visualisation"]], "Basic plotting": [[244, "Basic-plotting"], [249, "Basic-plotting"]], "Advanced plotting": [[244, "Advanced-plotting"], [249, "Advanced-plotting"]], "Mesh widgets": [[245, "Mesh-widgets"]], "Slider": [[245, "Slider"], [288, "Slider"]], "Axis selector": [[245, "Axis-selector"]], "ovf2vtk tool": [[246, "ovf2vtk-tool"]], "1. Single file": [[246, "1.-Single-file"]], "2. Multiple files": [[246, "2.-Multiple-files"]], "3. Wildcard": [[246, "3.-Wildcard"]], "Region basics": [[247, "Region-basics"]], "Region facing surfaces": [[248, "Region-facing-surfaces"]], "Region visualisation": [[249, "Region-visualisation"]], "Importing/Exporting field from/to xarray.DataArray": [[250, "Importing/Exporting-field-from/to-xarray.DataArray"]], "Exporting discretisedfield.Field to xarray.DataArray": [[250, "Exporting-discretisedfield.Field-to-xarray.DataArray"]], "Few useful xarray.DataArray methods": [[250, "Few-useful-xarray.DataArray-methods"]], "to_xarray exceptions": [[250, "to_xarray-exceptions"]], "from_xarray exceptions and expected properties of input xarray.DataArray": [[250, "from_xarray-exceptions-and-expected-properties-of-input-xarray.DataArray"]], "DC magnetometry": [[251, "DC-magnetometry"]], "Magnetometry Reference frame": [[251, "Magnetometry-Reference-frame"], [257, "Magnetometry-Reference-frame"]], "The micromagnetic simulation": [[251, "The-micromagnetic-simulation"], [252, "The-micromagnetic-simulation"], [253, "The-micromagnetic-simulation"], [255, "The-micromagnetic-simulation"], [256, "The-micromagnetic-simulation"], [257, "The-micromagnetic-simulation"], [259, "The-micromagnetic-simulation"]], "DC Magnetisation": [[251, "DC-Magnetisation"]], "Lorentz Transmission Electron Microscopy": [[252, "Lorentz-Transmission-Electron-Microscopy"]], "LTEM Reference frame": [[252, "LTEM-Reference-frame"]], "Computing LTEM images": [[252, "Computing-LTEM-images"], [254, "Computing-LTEM-images"]], "Defocused Imaging": [[252, "Defocused-Imaging"]], "Integrated magnetic flux density": [[252, "Integrated-magnetic-flux-density"]], "Magnetic Force Microscopy": [[253, "Magnetic-Force-Microscopy"]], "MFM Reference frame": [[253, "MFM-Reference-frame"]], "Computing MFM images": [[253, "Computing-MFM-images"]], "The finite size of the tip": [[253, "The-finite-size-of-the-tip"]], "Quick plots": [[253, "Quick-plots"], [259, "Quick-plots"]], "Using Rotations with mag2exp": [[254, "Using-Rotations-with-mag2exp"]], "Small Angle Neutron Scattering": [[255, "Small-Angle-Neutron-Scattering"]], "SANS Reference frame": [[255, "SANS-Reference-frame"]], "Computing SANS Cross-sections": [[255, "Computing-SANS-Cross-sections"]], "Small Angle X-ray Scattering": [[256, "Small-Angle-X-ray-Scattering"]], "SAXS Reference frame": [[256, "SAXS-Reference-frame"]], "Computing SAXS Cross-sections": [[256, "Computing-SAXS-Cross-sections"]], "Torque magnetometry": [[257, "Torque-magnetometry"]], "Computing Torque Magnetometry": [[257, "Computing-Torque-Magnetometry"]], "Recreating experiments": [[257, "Recreating-experiments"]], "Unit Conversions": [[258, "Unit-Conversions"]], "CGS to SI": [[258, "CGS-to-SI"]], "Equivalencies": [[258, "Equivalencies"]], "Parameters": [[258, "Parameters"]], "Atomistic": [[258, "Atomistic"], [258, "id1"], [258, "id2"], [258, "id4"]], "Micromagnetic": [[258, "Micromagnetic"], [258, "id3"]], "Micromagentic": [[258, "Micromagentic"]], "Saturation Magnetisation": [[258, "Saturation-Magnetisation"]], "Micromagnetics": [[258, "Micromagnetics"]], "Anisotropy": [[258, "Anisotropy"]], "Worked Example": [[258, "Worked-Example"]], "X-ray Holography": [[259, "X-ray-Holography"]], "X-ray holography reference frame": [[259, "X-ray-holography-reference-frame"]], "Computing X-ray holography images": [[259, "Computing-X-ray-holography-images"]], "Rotations": [[259, "Rotations"]], "Analysing simulation results": [[260, "Analysing-simulation-results"]], "Widgets": [[260, "Widgets"]], "Interactive plots": [[261, "Interactive-plots"]], "Visualising computed magnetisation data": [[261, "Visualising-computed-magnetisation-data"]], "Time evolution of the magnetisation": [[261, "Time-evolution-of-the-magnetisation"], [261, "id1"], [261, "id2"]], "Combining multiple drives": [[261, "Combining-multiple-drives"]], "Computing derived quantities": [[261, "Computing-derived-quantities"]], "Selecting only a part of the drive": [[261, "Selecting-only-a-part-of-the-drive"]], "Normalised magnetisation": [[261, "Normalised-magnetisation"]], "Topological charge density - example 1": [[261, "Topological-charge-density---example-1"]], "Topological charge density - example 2": [[261, "Topological-charge-density---example-2"]], "Hysteresis simulation": [[261, "Hysteresis-simulation"]], "Constants": [[262, "Constants"]], "1. Magnetic constant": [[262, "1.-Magnetic-constant"]], "2. Elementary charge": [[262, "2.-Elementary-charge"]], "3. Electron\u2019s mass": [[262, "3.-Electron\u2019s-mass"]], "4. Boltzmann constant": [[262, "4.-Boltzmann-constant"]], "5. Planck\u2019s constant": [[262, "5.-Planck\u2019s-constant"]], "6. Lande g-factor": [[262, "6.-Lande-g-factor"]], "7. Reduced Planck constant": [[262, "7.-Reduced-Planck-constant"]], "8. Gyrotropic ratio": [[262, "8.-Gyrotropic-ratio"]], "9. Bohr magneton": [[262, "9.-Bohr-magneton"]], "10. LLG precession term gamma": [[262, "10.-LLG-precession-term-gamma"]], "Deriving a dynamics term": [[263, "Deriving-a-dynamics-term"]], "Deriving an energy term": [[264, "Deriving-an-energy-term"]], "Dynamics terms and dynamics equation": [[265, "Dynamics-terms-and-dynamics-equation"]], "Dynamics terms": [[265, "Dynamics-terms"]], "1. Precession": [[265, "1.-Precession"]], "2. Damping": [[265, "2.-Damping"]], "3. Zhang-Li term": [[265, "3.-Zhang-Li-term"]], "Dynamics equation": [[265, "Dynamics-equation"], [330, "Dynamics-equation"]], "Accesing individual dynamics terms from the dynamics equation": [[265, "Accesing-individual-dynamics-terms-from-the-dynamics-equation"]], "Energy terms and energy equation": [[266, "Energy-terms-and-energy-equation"]], "Energy terms": [[266, "Energy-terms"]], "1. Exchange energy": [[266, "1.-Exchange-energy"]], "2. Zeeman energy": [[266, "2.-Zeeman-energy"]], "Time-independent": [[266, "Time-independent"]], "Time-dependent": [[266, "Time-dependent"]], "3. Uniaxial anisotropy": [[266, "3.-Uniaxial-anisotropy"]], "4. Demagnetisation energy": [[266, "4.-Demagnetisation-energy"]], "5. Dzyaloshinskii-Moriya energy": [[266, "5.-Dzyaloshinskii-Moriya-energy"]], "6. Cubic anisotropy": [[266, "6.-Cubic-anisotropy"]], "7. RKKY": [[266, "7.-RKKY"]], "Energy equation": [[266, "Energy-equation"], [331, "Energy-equation"]], "Accesing the individual energy terms from the energy equation": [[266, "Accesing-the-individual-energy-terms-from-the-energy-equation"]], "Deriving evolver and driver classes": [[267, "Deriving-evolver-and-driver-classes"]], "Multiple energy terms of the same class": [[268, "Multiple-energy-terms-of-the-same-class"], [315, "Multiple-energy-terms-of-the-same-class"]], "Defining micromagnetic system": [[269, "Defining-micromagnetic-system"]], "Term parameters": [[270, "Term-parameters"]], "1. Constant parameters": [[270, "1.-Constant-parameters"]], "2. Parameters defined \u201cper region\u201d": [[270, "2.-Parameters-defined-\u201cper-region\u201d"]], "3. Parameters defined using discretisedfield.Field object": [[270, "3.-Parameters-defined-using-discretisedfield.Field-object"]], "Usage": [[271, "Usage"]], "Controlling the default runner": [[272, "Controlling-the-default-runner"]], "Different runners": [[272, "Different-runners"]], "The default runner": [[272, "The-default-runner"]], "Defaults for the different runner types": [[272, "Defaults-for-the-different-runner-types"]], "Changing the default runner": [[272, "Changing-the-default-runner"]], "Going back to the default runner": [[272, "Going-back-to-the-default-runner"]], "Tutorial 05: Cubic anisotropy energy term": [[273, "Tutorial-05:-Cubic-anisotropy-energy-term"]], "Spatially constant K_{1} and \\mathbf{u}": [[273, "Spatially-constant-K_{1}-and-\\mathbf{u}"]], "Spatially varying \\mathbf{K}_{1}": [[273, "Spatially-varying-\\mathbf{K}_{1}"]], "discretisedfield.Field": [[273, "discretisedfield.Field"], [276, "discretisedfield.Field"], [279, "discretisedfield.Field"], [281, "discretisedfield.Field"]], "Custom directory name": [[274, "Custom-directory-name"]], "Tutorial 04: Dzyaloshinskii-Moriya energy term": [[275, "Tutorial-04:-Dzyaloshinskii-Moriya-energy-term"]], "Spatially constant D": [[275, "Spatially-constant-D"]], "Spatially varying D": [[275, "Spatially-varying-D"]], "Tutorial 02: Exchange energy term": [[276, "Tutorial-02:-Exchange-energy-term"]], "Spatially constant A": [[276, "Spatially-constant-A"]], "Spatially varying A": [[276, "Spatially-varying-A"]], "MinDriver steps": [[277, "MinDriver-steps"]], "micromagneticdata analysis": [[277, "micromagneticdata-analysis"], [314, "micromagneticdata-analysis"]], "Running simulations in parallel": [[278, "Running-simulations-in-parallel"]], "Tutorial 03: Uniaxial anisotropy energy term": [[279, "Tutorial-03:-Uniaxial-anisotropy-energy-term"]], "Spatially constant K and \\mathbf{u}": [[279, "Spatially-constant-K-and-\\mathbf{u}"]], "Spatially varying \\mathbf{K}": [[279, "Spatially-varying-\\mathbf{K}"]], "Higher-order uniaxial anisotropy": [[279, "Higher-order-uniaxial-anisotropy"]], "Verbosity levels": [[280, "Verbosity-levels"]], "One summary line (default)": [[280, "One-summary-line-(default)"]], "Silent run": [[280, "Silent-run"]], "Progress bar (TimeDriver only)": [[280, "Progress-bar-(TimeDriver-only)"]], "Tutorial 01: Zeeman energy term": [[281, "Tutorial-01:-Zeeman-energy-term"]], "Spatially constant \\mathbf{H}": [[281, "Spatially-constant-\\mathbf{H}"], [321, "Spatially-constant-\\mathbf{H}"]], "Spatially varying \\mathbf{H}": [[281, "Spatially-varying-\\mathbf{H}"]], "Table basics": [[283, "Table-basics"]], "Table FFT": [[284, "Table-FFT"]], "Table interactive plot": [[285, "Table-interactive-plot"]], "Table merge": [[286, "Table-merge"]], "Table visualisation": [[287, "Table-visualisation"]], "Table widgets": [[288, "Table-widgets"]], "Value selector": [[288, "Value-selector"]], "Constant attributes": [[289, "Constant-attributes"]], "Hysteresis values": [[290, "Hysteresis-values"]], "Imposing typesystem on a class": [[291, "Imposing-typesystem-on-a-class"]], "Properties": [[291, "Properties"]], "Imposing typesystem using ubermagutil.typesystem": [[291, "Imposing-typesystem-using-ubermagutil.typesystem"]], "Deleting an attribute": [[291, "Deleting-an-attribute"]], "inherit_docs decorator": [[292, "inherit_docs-decorator"]], "Logging control": [[293, "Logging-control"]], "Defining otherwise type": [[294, "Defining-otherwise-type"]], "Parameter descriptor": [[295, "Parameter-descriptor"]], "Extracting the SI prefix": [[296, "Extracting-the-SI-prefix"]], "Examples": [[301, "examples"]], "Standard problem 3": [[302, "Standard-problem-3"]], "Problem specification": [[302, "Problem-specification"], [303, "Problem-specification"], [304, "Problem-specification"], [305, "Problem-specification"]], "Simulation": [[302, "Simulation"], [303, "Simulation"], [304, "Simulation"], [306, "Simulation"]], "Relaxed magnetisation states": [[302, "Relaxed-magnetisation-states"]], "Energy crossing": [[302, "Energy-crossing"]], "References": [[302, "References"], [303, "References"], [304, "References"], [305, "References"], [329, "References"]], "Standard problem 4": [[303, "Standard-problem-4"]], "First stage": [[303, "First-stage"]], "Second stage: field \\mathbf{B}_{1}": [[303, "Second-stage:-field-\\mathbf{B}_{1}"]], "Postprocessing": [[303, "Postprocessing"], [305, "Postprocessing"]], "Standard problem 5": [[304, "Standard-problem-5"]], "Spin-polarised current": [[304, "Spin-polarised-current"]], "FMR standard problem": [[305, "FMR-standard-problem"]], "Relaxation stage": [[305, "Relaxation-stage"]], "Dynamic stage": [[305, "Dynamic-stage"]], "Deriving energy values": [[306, "Deriving-energy-values"]], "Effective field": [[306, "Effective-field"], [311, "Effective-field"], [311, "id3"], [311, "id6"], [311, "id9"]], "Relax the system": [[306, "Relax-the-system"]], "Computing energies of individual term": [[306, "Computing-energies-of-individual-term"]], "Calculating a stray field using an airbox method": [[307, "Calculating-a-stray-field-using-an-airbox-method"]], "Skyrmion in a disk": [[308, "Skyrmion-in-a-disk"], [331, "Skyrmion-in-a-disk"]], "Choosing runner": [[309, "Choosing-runner"]], "Energy term computations": [[310, "Energy-term-computations"]], "Field operations 2": [[311, "Field-operations-2"]], "Magnetisation": [[311, "Magnetisation"]], "Energy density": [[311, "Energy-density"], [311, "id1"], [311, "id4"], [311, "id7"]], "Uniaxial anisotropy": [[311, "Uniaxial-anisotropy"], [331, "Uniaxial-anisotropy"]], "DMI (T)": [[311, "DMI-(T)"]], "(Oversimplified) micromagnetic calculator": [[311, "(Oversimplified)-micromagnetic-calculator"]], "Simulation at finite temperature": [[312, "Simulation-at-finite-temperature"]], "Fixed subregions": [[313, "Fixed-subregions"]], "Hysteresis simulations": [[314, "Hysteresis-simulations"]], "Plotting hysteresis loop": [[314, "Plotting-hysteresis-loop"]], "Negative exchange energy constant": [[316, "Negative-exchange-energy-constant"]], "RKKY energy term": [[318, "RKKY-energy-term"]], "Sine-hysteresis": [[319, "Sine-hysteresis"]], "Both spatially and time varying field": [[320, "Both-spatially-and-time-varying-field"]], "Spatially varying parameters 1": [[321, "Spatially-varying-parameters-1"]], "Spatially varying H": [[321, "Spatially-varying-H"]], "Spatially varying parameters 2": [[322, "Spatially-varying-parameters-2"]], "Time-varying field": [[323, "Time-varying-field"]], "Time-dependent fields and currents": [[324, "Time-dependent-fields-and-currents"]], "Zeeman field": [[324, "Zeeman-field"]], "Python function": [[324, "Python-function"], [324, "id1"]], "How to properly simulate this field pulse": [[324, "How-to-properly-simulate-this-field-pulse"]], "Pre-defined functions": [[324, "Pre-defined-functions"]], "Experimentally measured time-dependence": [[324, "Experimentally-measured-time-dependence"]], "Tcl": [[324, "Tcl"], [324, "id2"]], "Slonczewski and Zhang-Li currents": [[324, "Slonczewski-and-Zhang-Li-currents"]], "FAQ": [[325, "faq"]], "Number of files written to disk with TimeDriver": [[325, "number-of-files-written-to-disk-with-timedriver"]], "Getting started": [[326, "getting-started"]], "Jupyter lab": [[327, "jupyter-lab"]], "Exercise: Current induced domain wall motion": [[328, "Exercise:-Current-induced-domain-wall-motion"]], "Problem description": [[328, "Problem-description"], [329, "Problem-description"]], "Domain-wall pair": [[328, "Domain-wall-pair"]], "Single domain wall": [[328, "Single-domain-wall"]], "Exercise: Domain wall pair conversion": [[329, "Exercise:-Domain-wall-pair-conversion"]], "Solution": [[329, "Solution"]], "Macrospin": [[330, "Macrospin"]], "Dynamics simulation": [[330, "Dynamics-simulation"]], "Simulation results": [[330, "Simulation-results"]], "Exercise 1": [[330, "Exercise-1"]], "Exercise 2": [[330, "Exercise-2"]], "Exercise 3": [[330, "Exercise-3"]], "Zeeman energy": [[331, "Zeeman-energy"]], "Exchange energy": [[331, "Exchange-energy"]], "Dzyaloshinskii-Moriya energy": [[331, "Dzyaloshinskii-Moriya-energy"]], "Exchange and Zeeman energies": [[331, "Exchange-and-Zeeman-energies"]], "Competition of DMI and exchange": [[331, "Competition-of-DMI-and-exchange"]], "Our first ubermag simulation": [[332, "Our-first-ubermag-simulation"]], "The main object in Ubermag: System object": [[332, "The-main-object-in-Ubermag:-System-object"]], "1. Energy equation": [[332, "1.-Energy-equation"]], "2. Dynamics equation": [[332, "2.-Dynamics-equation"]], "3. Initial magnetisation": [[332, "3.-Initial-magnetisation"]], "Inspecting system object": [[332, "Inspecting-system-object"]], "Driving the system": [[332, "Driving-the-system"]], "Magnetisation field": [[333, "Magnetisation-field"]], "Spatially varying field value": [[333, "Spatially-varying-field-value"]], "Spatially varying M_\\mathrm{s}": [[333, "Spatially-varying-M_\\mathrm{s}"]], "Exercise": [[333, "Exercise"]], "Python basics": [[334, "Python-basics"]], "Variables": [[334, "Variables"]], "Large/small values, e.g.\u00a0a = 2.1 \\times 10^{6}": [[334, "Large/small-values,-e.g.\u00a0a-=-2.1-\\times-10^{6}"]], "Basic operations": [[334, "Basic-operations"]], "1. Addition c = a + b": [[334, "1.-Addition-c-=-a-+-b"]], "2. Subtraction: a - b": [[334, "2.-Subtraction:-a---b"]], "3. Multiplication: a \\times b": [[334, "3.-Multiplication:-a-\\times-b"]], "4. Division: a / b": [[334, "4.-Division:-a-/-b"]], "5. Power a^{b}": [[334, "5.-Power-a^{b}"]], "6. More complicated operations": [[334, "6.-More-complicated-operations"]], "Lists and tuples": [[334, "Lists-and-tuples"]], "Indexing": [[334, "Indexing"]], "Length (the number of elements)": [[334, "Length-(the-number-of-elements)"]], "Unpacking": [[334, "Unpacking"]], "Dictionaries": [[334, "Dictionaries"]], "Selection": [[334, "Selection"]], "Iteration": [[334, "Iteration"]], "Functions": [[334, "Functions"]], "Keyword arguments": [[334, "Keyword-arguments"]], "Imports": [[334, "Imports"]], "Common mistakes": [[334, "Common-mistakes"]], "1. No colon": [[334, "1.-No-colon"]], "2. No indentation": [[334, "2.-No-indentation"]], "3. Mixing types": [[334, "3.-Mixing-types"]], "4. Using an undefined variable": [[334, "4.-Using-an-undefined-variable"]], "5. Module is not imported": [[334, "5.-Module-is-not-imported"]], "Object oriented programming basics": [[334, "Object-oriented-programming-basics"]], "Getting help": [[334, "Getting-help"]], "Help": [[335, "help"]], "How to prepare your request for help": [[335, "how-to-prepare-your-request-for-help"]], "rendered output is similar to": [[335, null], [335, null], [335, null]], "Help others": [[335, "help-others"]], "Ubermag": [[336, "ubermag"]], "Features and packages": [[336, "features-and-packages"]], "What is ubermag?": [[336, "what-is-ubermag"]], "Documentation and tutorials": [[336, "documentation-and-tutorials"]], "ubermag in the cloud": [[336, "ubermag-in-the-cloud"]], "Authors": [[336, "authors"]], "How to cite": [[336, "how-to-cite"]], "License": [[336, "license"]], "Acknowledgements": [[336, "acknowledgements"]], "Installation": [[337, "installation"], [337, "id1"]], "Standard installation \u2013 recommended": [[337, "standard-installation-recommended"]], "Installation environment": [[337, "installation-environment"]], "Installing a calculator": [[337, "installing-a-calculator"]], "Testing": [[337, "testing"]], "Update": [[337, "update"]], "Advanced installation": [[337, "advanced-installation"]], "Check the installation": [[337, "check-the-installation"]], "How does Ubermag find OOMMF?": [[337, "how-does-ubermag-find-oommf"]], "Development installation": [[337, "development-installation"]], "News": [[338, "news"]], "2022 winter workshop": [[338, "winter-workshop"]], "2022 summer code sprint": [[338, "summer-code-sprint"]]}, "indexentries": {"discretisedfield": [[0, "module-discretisedfield"]], "module": [[0, "module-discretisedfield"], [9, "module-discretisedfield.io"], [16, "module-discretisedfield.io.ovf2vtk"], [18, "module-discretisedfield.plotting"], [28, "module-discretisedfield.tools"], [38, "module-mag2exp"], [39, "module-mag2exp.ltem"], [44, "module-mag2exp.magnetometry"], [47, "module-mag2exp.mfm"], [49, "module-mag2exp.quick_plots"], [59, "module-mag2exp.sans"], [63, "module-mag2exp.x_ray"], [66, "module-micromagneticdata"], [74, "module-micromagneticmodel"], [96, "module-micromagneticmodel.abstract"], [100, "module-micromagneticmodel.consts"], [111, "module-micromagneticmodel.examples"], [114, "module-micromagnetictests"], [115, "module-micromagnetictests.calculatortests"], [148, "module-mumax3c"], [153, "module-mumax3c.mumax3"], [161, "module-oommfc"], [176, "module-oommfc.oommf"], [186, "module-ubermag"], [188, "module-ubermagtable"], [192, "module-ubermagtable.util"], [196, "module-ubermagutil"], [202, "module-ubermagutil.typesystem"], [212, "module-ubermagutil.units"]], "dvalue (class in discretisedfield)": [[1, "discretisedfield.DValue"]], "__abs__() (discretisedfield.dvalue method)": [[1, "discretisedfield.DValue.__abs__"]], "__call__() (discretisedfield.dvalue method)": [[1, "discretisedfield.DValue.__call__"]], "__matmul__() (discretisedfield.dvalue method)": [[1, "discretisedfield.DValue.__matmul__"]], "__mul__() (discretisedfield.dvalue method)": [[1, "discretisedfield.DValue.__mul__"]], "field (class in discretisedfield)": [[2, "discretisedfield.Field"]], "__abs__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__abs__"]], "__add__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__add__"]], "__and__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__and__"]], "__array_ufunc__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__array_ufunc__"]], "__call__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__call__"]], "__dir__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__dir__"]], "__eq__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__eq__"]], "__getattr__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__getattr__"]], "__getitem__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__getitem__"]], "__hash__ (discretisedfield.field attribute)": [[2, "discretisedfield.Field.__hash__"]], "__iter__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__iter__"]], "__lshift__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__lshift__"]], "__matmul__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__matmul__"]], "__mul__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__mul__"]], "__neg__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__neg__"]], "__pos__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__pos__"]], "__pow__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__pow__"]], "__repr__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__repr__"]], "__sub__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__sub__"]], "__truediv__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__truediv__"]], "allclose() (discretisedfield.field method)": [[2, "discretisedfield.Field.allclose"]], "angle (discretisedfield.field property)": [[2, "discretisedfield.Field.angle"]], "array (discretisedfield.field property)": [[2, "discretisedfield.Field.array"]], "average (discretisedfield.field property)": [[2, "discretisedfield.Field.average"]], "components (discretisedfield.field property)": [[2, "discretisedfield.Field.components"]], "conjugate (discretisedfield.field property)": [[2, "discretisedfield.Field.conjugate"]], "coordinate_field() (discretisedfield.field class method)": [[2, "discretisedfield.Field.coordinate_field"]], "curl (discretisedfield.field property)": [[2, "discretisedfield.Field.curl"]], "derivative() (discretisedfield.field method)": [[2, "discretisedfield.Field.derivative"]], "div (discretisedfield.field property)": [[2, "discretisedfield.Field.div"]], "fftn (discretisedfield.field property)": [[2, "discretisedfield.Field.fftn"]], "from_xarray() (discretisedfield.field class method)": [[2, "discretisedfield.Field.from_xarray"]], "fromfile() (discretisedfield.field class method)": [[2, "discretisedfield.Field.fromfile"]], "grad (discretisedfield.field property)": [[2, "discretisedfield.Field.grad"]], "hv (discretisedfield.field property)": [[2, "discretisedfield.Field.hv"]], "ifftn (discretisedfield.field property)": [[2, "discretisedfield.Field.ifftn"]], "imag (discretisedfield.field property)": [[2, "discretisedfield.Field.imag"]], "integral() (discretisedfield.field method)": [[2, "discretisedfield.Field.integral"]], "irfftn (discretisedfield.field property)": [[2, "discretisedfield.Field.irfftn"]], "k3d (discretisedfield.field property)": [[2, "discretisedfield.Field.k3d"]], "laplace (discretisedfield.field property)": [[2, "discretisedfield.Field.laplace"]], "line() (discretisedfield.field method)": [[2, "discretisedfield.Field.line"]], "mpl (discretisedfield.field property)": [[2, "discretisedfield.Field.mpl"]], "norm (discretisedfield.field property)": [[2, "discretisedfield.Field.norm"]], "orientation (discretisedfield.field property)": [[2, "discretisedfield.Field.orientation"]], "pad() (discretisedfield.field method)": [[2, "discretisedfield.Field.pad"]], "phase (discretisedfield.field property)": [[2, "discretisedfield.Field.phase"]], "plane() (discretisedfield.field method)": [[2, "discretisedfield.Field.plane"]], "project() (discretisedfield.field method)": [[2, "discretisedfield.Field.project"]], "real (discretisedfield.field property)": [[2, "discretisedfield.Field.real"]], "rfftn (discretisedfield.field property)": [[2, "discretisedfield.Field.rfftn"]], "to_vtk() (discretisedfield.field method)": [[2, "discretisedfield.Field.to_vtk"]], "to_xarray() (discretisedfield.field method)": [[2, "discretisedfield.Field.to_xarray"]], "value (discretisedfield.field property)": [[2, "discretisedfield.Field.value"]], "write() (discretisedfield.field method)": [[2, "discretisedfield.Field.write"]], "zero (discretisedfield.field property)": [[2, "discretisedfield.Field.zero"]], "fieldrotator (class in discretisedfield)": [[3, "discretisedfield.FieldRotator"]], "__repr__() (discretisedfield.fieldrotator method)": [[3, "discretisedfield.FieldRotator.__repr__"]], "clear_rotation() (discretisedfield.fieldrotator method)": [[3, "discretisedfield.FieldRotator.clear_rotation"]], "field (discretisedfield.fieldrotator property)": [[3, "discretisedfield.FieldRotator.field"]], "rotate() (discretisedfield.fieldrotator method)": [[3, "discretisedfield.FieldRotator.rotate"]], "line (class in discretisedfield)": [[4, "discretisedfield.Line"]], "__repr__() (discretisedfield.line method)": [[4, "discretisedfield.Line.__repr__"]], "length (discretisedfield.line property)": [[4, "discretisedfield.Line.length"]], "mpl() (discretisedfield.line method)": [[4, "discretisedfield.Line.mpl"]], "point_columns (discretisedfield.line property)": [[4, "discretisedfield.Line.point_columns"]], "selector() (discretisedfield.line method)": [[4, "discretisedfield.Line.selector"]], "slider() (discretisedfield.line method)": [[4, "discretisedfield.Line.slider"]], "value_columns (discretisedfield.line property)": [[4, "discretisedfield.Line.value_columns"]], "mesh (class in discretisedfield)": [[5, "discretisedfield.Mesh"]], "__dir__() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.__dir__"]], "__eq__() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.__eq__"]], "__getattr__() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.__getattr__"]], "__getitem__() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.__getitem__"]], "__hash__ (discretisedfield.mesh attribute)": [[5, "discretisedfield.Mesh.__hash__"]], "__iter__() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.__iter__"]], "__len__() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.__len__"]], "__or__() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.__or__"]], "__repr__() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.__repr__"]], "axis_selector() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.axis_selector"]], "ds (discretisedfield.mesh property)": [[5, "discretisedfield.Mesh.dS"]], "dv (discretisedfield.mesh property)": [[5, "discretisedfield.Mesh.dV"]], "index2point() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.index2point"]], "indices (discretisedfield.mesh property)": [[5, "discretisedfield.Mesh.indices"]], "k3d (discretisedfield.mesh property)": [[5, "discretisedfield.Mesh.k3d"]], "line() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.line"]], "load_subregions() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.load_subregions"]], "midpoints (discretisedfield.mesh property)": [[5, "discretisedfield.Mesh.midpoints"]], "mpl (discretisedfield.mesh property)": [[5, "discretisedfield.Mesh.mpl"]], "neighbours() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.neighbours"]], "pad() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.pad"]], "plane() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.plane"]], "point2index() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.point2index"]], "region2slices() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.region2slices"]], "save_subregions() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.save_subregions"]], "slider() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.slider"]], "subregions (discretisedfield.mesh property)": [[5, "discretisedfield.Mesh.subregions"]], "vertices (discretisedfield.mesh property)": [[5, "discretisedfield.Mesh.vertices"]], "region (class in discretisedfield)": [[6, "discretisedfield.Region"]], "__contains__() (discretisedfield.region method)": [[6, "discretisedfield.Region.__contains__"]], "__eq__() (discretisedfield.region method)": [[6, "discretisedfield.Region.__eq__"]], "__hash__ (discretisedfield.region attribute)": [[6, "discretisedfield.Region.__hash__"]], "__mul__() (discretisedfield.region method)": [[6, "discretisedfield.Region.__mul__"]], "__or__() (discretisedfield.region method)": [[6, "discretisedfield.Region.__or__"]], "__repr__() (discretisedfield.region method)": [[6, "discretisedfield.Region.__repr__"]], "__truediv__() (discretisedfield.region method)": [[6, "discretisedfield.Region.__truediv__"]], "centre (discretisedfield.region property)": [[6, "discretisedfield.Region.centre"]], "edges (discretisedfield.region property)": [[6, "discretisedfield.Region.edges"]], "k3d (discretisedfield.region property)": [[6, "discretisedfield.Region.k3d"]], "mpl (discretisedfield.region property)": [[6, "discretisedfield.Region.mpl"]], "multiplier (discretisedfield.region property)": [[6, "discretisedfield.Region.multiplier"]], "pmax (discretisedfield.region property)": [[6, "discretisedfield.Region.pmax"]], "pmin (discretisedfield.region property)": [[6, "discretisedfield.Region.pmin"]], "random_point() (discretisedfield.region method)": [[6, "discretisedfield.Region.random_point"]], "to_dict() (discretisedfield.region method)": [[6, "discretisedfield.Region.to_dict"]], "volume (discretisedfield.region property)": [[6, "discretisedfield.Region.volume"]], "integral() (in module discretisedfield)": [[7, "discretisedfield.integral"]], "interact() (in module discretisedfield)": [[8, "discretisedfield.interact"]], "discretisedfield.io": [[9, "module-discretisedfield.io"]], "field_from_hdf5() (in module discretisedfield.io)": [[10, "discretisedfield.io.field_from_hdf5"]], "field_from_ovf() (in module discretisedfield.io)": [[11, "discretisedfield.io.field_from_ovf"]], "field_from_vtk() (in module discretisedfield.io)": [[12, "discretisedfield.io.field_from_vtk"]], "field_to_hdf5() (in module discretisedfield.io)": [[13, "discretisedfield.io.field_to_hdf5"]], "field_to_ovf() (in module discretisedfield.io)": [[14, "discretisedfield.io.field_to_ovf"]], "field_to_vtk() (in module discretisedfield.io)": [[15, "discretisedfield.io.field_to_vtk"]], "discretisedfield.io.ovf2vtk": [[16, "module-discretisedfield.io.ovf2vtk"]], "ovf2vtk() (in module discretisedfield.io.ovf2vtk)": [[17, "discretisedfield.io.ovf2vtk.ovf2vtk"]], "discretisedfield.plotting": [[18, "module-discretisedfield.plotting"]], "hv (class in discretisedfield.plotting)": [[19, "discretisedfield.plotting.Hv"]], "__call__() (discretisedfield.plotting.hv method)": [[19, "discretisedfield.plotting.Hv.__call__"]], "contour() (discretisedfield.plotting.hv method)": [[19, "discretisedfield.plotting.Hv.contour"]], "scalar() (discretisedfield.plotting.hv method)": [[19, "discretisedfield.plotting.Hv.scalar"]], "vector() (discretisedfield.plotting.hv method)": [[19, "discretisedfield.plotting.Hv.vector"]], "k3dfield (class in discretisedfield.plotting)": [[20, "discretisedfield.plotting.K3dField"]], "__dir__() (discretisedfield.plotting.k3dfield method)": [[20, "discretisedfield.plotting.K3dField.__dir__"]], "nonzero() (discretisedfield.plotting.k3dfield method)": [[20, "discretisedfield.plotting.K3dField.nonzero"]], "scalar() (discretisedfield.plotting.k3dfield method)": [[20, "discretisedfield.plotting.K3dField.scalar"]], "vector() (discretisedfield.plotting.k3dfield method)": [[20, "discretisedfield.plotting.K3dField.vector"]], "k3dmesh (class in discretisedfield.plotting)": [[21, "discretisedfield.plotting.K3dMesh"]], "__call__() (discretisedfield.plotting.k3dmesh method)": [[21, "discretisedfield.plotting.K3dMesh.__call__"]], "subregions() (discretisedfield.plotting.k3dmesh method)": [[21, "discretisedfield.plotting.K3dMesh.subregions"]], "k3dregion (class in discretisedfield.plotting)": [[22, "discretisedfield.plotting.K3dRegion"]], "__call__() (discretisedfield.plotting.k3dregion method)": [[22, "discretisedfield.plotting.K3dRegion.__call__"]], "mplfield (class in discretisedfield.plotting)": [[23, "discretisedfield.plotting.MplField"]], "__call__() (discretisedfield.plotting.mplfield method)": [[23, "discretisedfield.plotting.MplField.__call__"]], "__dir__() (discretisedfield.plotting.mplfield method)": [[23, "discretisedfield.plotting.MplField.__dir__"]], "contour() (discretisedfield.plotting.mplfield method)": [[23, "discretisedfield.plotting.MplField.contour"]], "lightness() (discretisedfield.plotting.mplfield method)": [[23, "discretisedfield.plotting.MplField.lightness"]], "scalar() (discretisedfield.plotting.mplfield method)": [[23, "discretisedfield.plotting.MplField.scalar"]], "vector() (discretisedfield.plotting.mplfield method)": [[23, "discretisedfield.plotting.MplField.vector"]], "mplmesh (class in discretisedfield.plotting)": [[24, "discretisedfield.plotting.MplMesh"]], "__call__() (discretisedfield.plotting.mplmesh method)": [[24, "discretisedfield.plotting.MplMesh.__call__"]], "subregions() (discretisedfield.plotting.mplmesh method)": [[24, "discretisedfield.plotting.MplMesh.subregions"]], "mplregion (class in discretisedfield.plotting)": [[25, "discretisedfield.plotting.MplRegion"]], "__call__() (discretisedfield.plotting.mplregion method)": [[25, "discretisedfield.plotting.MplRegion.__call__"]], "add_colorwheel() (in module discretisedfield.plotting)": [[26, "discretisedfield.plotting.add_colorwheel"]], "test() (in module discretisedfield)": [[27, "discretisedfield.test"]], "discretisedfield.tools": [[28, "module-discretisedfield.tools"]], "count_bps() (in module discretisedfield.tools)": [[29, "discretisedfield.tools.count_bps"]], "count_large_cell_angle_regions() (in module discretisedfield.tools)": [[30, "discretisedfield.tools.count_large_cell_angle_regions"]], "demag_field() (in module discretisedfield.tools)": [[31, "discretisedfield.tools.demag_field"]], "demag_tensor() (in module discretisedfield.tools)": [[32, "discretisedfield.tools.demag_tensor"]], "emergent_magnetic_field() (in module discretisedfield.tools)": [[33, "discretisedfield.tools.emergent_magnetic_field"]], "max_neigbouring_cell_angle() (in module discretisedfield.tools)": [[34, "discretisedfield.tools.max_neigbouring_cell_angle"]], "neigbouring_cell_angle() (in module discretisedfield.tools)": [[35, "discretisedfield.tools.neigbouring_cell_angle"]], "topological_charge() (in module discretisedfield.tools)": [[36, "discretisedfield.tools.topological_charge"]], "topological_charge_density() (in module discretisedfield.tools)": [[37, "discretisedfield.tools.topological_charge_density"]], "mag2exp": [[38, "module-mag2exp"]], "mag2exp.ltem": [[39, "module-mag2exp.ltem"]], "defocus_image() (in module mag2exp.ltem)": [[40, "mag2exp.ltem.defocus_image"]], "integrated_magnetic_flux_density() (in module mag2exp.ltem)": [[41, "mag2exp.ltem.integrated_magnetic_flux_density"]], "phase() (in module mag2exp.ltem)": [[42, "mag2exp.ltem.phase"]], "relativistic_wavelength() (in module mag2exp.ltem)": [[43, "mag2exp.ltem.relativistic_wavelength"]], "mag2exp.magnetometry": [[44, "module-mag2exp.magnetometry"]], "magnetisation() (in module mag2exp.magnetometry)": [[45, "mag2exp.magnetometry.magnetisation"]], "torque() (in module mag2exp.magnetometry)": [[46, "mag2exp.magnetometry.torque"]], "mag2exp.mfm": [[47, "module-mag2exp.mfm"]], "phase_shift() (in module mag2exp.mfm)": [[48, "mag2exp.mfm.phase_shift"]], "mag2exp.quick_plots": [[49, "module-mag2exp.quick_plots"]], "ltem_defocus() (in module mag2exp.quick_plots)": [[50, "mag2exp.quick_plots.ltem_defocus"]], "ltem_ft_phase() (in module mag2exp.quick_plots)": [[51, "mag2exp.quick_plots.ltem_ft_phase"]], "ltem_integrated_mfd() (in module mag2exp.quick_plots)": [[52, "mag2exp.quick_plots.ltem_integrated_mfd"]], "ltem_phase() (in module mag2exp.quick_plots)": [[53, "mag2exp.quick_plots.ltem_phase"]], "mfm_phase_shift() (in module mag2exp.quick_plots)": [[54, "mag2exp.quick_plots.mfm_phase_shift"]], "sans_chiral_function() (in module mag2exp.quick_plots)": [[55, "mag2exp.quick_plots.sans_chiral_function"]], "sans_cross_section() (in module mag2exp.quick_plots)": [[56, "mag2exp.quick_plots.sans_cross_section"]], "saxs() (in module mag2exp.quick_plots)": [[57, "mag2exp.quick_plots.saxs"]], "x_ray_holography() (in module mag2exp.quick_plots)": [[58, "mag2exp.quick_plots.x_ray_holography"]], "mag2exp.sans": [[59, "module-mag2exp.sans"]], "chiral_function() (in module mag2exp.sans)": [[60, "mag2exp.sans.chiral_function"]], "cross_section() (in module mag2exp.sans)": [[61, "mag2exp.sans.cross_section"]], "test() (in module mag2exp)": [[62, "mag2exp.test"]], "mag2exp.x_ray": [[63, "module-mag2exp.x_ray"]], "holography() (in module mag2exp.x_ray)": [[64, "mag2exp.x_ray.holography"]], "saxs() (in module mag2exp.x_ray)": [[65, "mag2exp.x_ray.saxs"]], "micromagneticdata": [[66, "module-micromagneticdata"]], "abstractdrive (class in micromagneticdata)": [[67, "micromagneticdata.AbstractDrive"]], "__getitem__() (micromagneticdata.abstractdrive method)": [[67, "micromagneticdata.AbstractDrive.__getitem__"]], "__iter__() (micromagneticdata.abstractdrive method)": [[67, "micromagneticdata.AbstractDrive.__iter__"]], "__lshift__() (micromagneticdata.abstractdrive method)": [[67, "micromagneticdata.AbstractDrive.__lshift__"]], "__repr__() (micromagneticdata.abstractdrive method)": [[67, "micromagneticdata.AbstractDrive.__repr__"]], "callbacks (micromagneticdata.abstractdrive property)": [[67, "micromagneticdata.AbstractDrive.callbacks"]], "hv (micromagneticdata.abstractdrive property)": [[67, "micromagneticdata.AbstractDrive.hv"]], "info (micromagneticdata.abstractdrive property)": [[67, "micromagneticdata.AbstractDrive.info"]], "m0 (micromagneticdata.abstractdrive property)": [[67, "micromagneticdata.AbstractDrive.m0"]], "n (micromagneticdata.abstractdrive property)": [[67, "micromagneticdata.AbstractDrive.n"]], "register_callback() (micromagneticdata.abstractdrive method)": [[67, "micromagneticdata.AbstractDrive.register_callback"]], "table (micromagneticdata.abstractdrive property)": [[67, "micromagneticdata.AbstractDrive.table"]], "to_xarray() (micromagneticdata.abstractdrive method)": [[67, "micromagneticdata.AbstractDrive.to_xarray"]], "x (micromagneticdata.abstractdrive property)": [[67, "micromagneticdata.AbstractDrive.x"]], "combineddrive (class in micromagneticdata)": [[68, "micromagneticdata.CombinedDrive"]], "__lshift__() (micromagneticdata.combineddrive method)": [[68, "micromagneticdata.CombinedDrive.__lshift__"]], "__repr__() (micromagneticdata.combineddrive method)": [[68, "micromagneticdata.CombinedDrive.__repr__"]], "info (micromagneticdata.combineddrive property)": [[68, "micromagneticdata.CombinedDrive.info"]], "register_callback() (micromagneticdata.combineddrive method)": [[68, "micromagneticdata.CombinedDrive.register_callback"]], "table (micromagneticdata.combineddrive property)": [[68, "micromagneticdata.CombinedDrive.table"]], "x (micromagneticdata.combineddrive property)": [[68, "micromagneticdata.CombinedDrive.x"]], "data (class in micromagneticdata)": [[69, "micromagneticdata.Data"]], "__getitem__() (micromagneticdata.data method)": [[69, "micromagneticdata.Data.__getitem__"]], "__iter__() (micromagneticdata.data method)": [[69, "micromagneticdata.Data.__iter__"]], "__repr__() (micromagneticdata.data method)": [[69, "micromagneticdata.Data.__repr__"]], "info (micromagneticdata.data property)": [[69, "micromagneticdata.Data.info"]], "n (micromagneticdata.data property)": [[69, "micromagneticdata.Data.n"]], "selector() (micromagneticdata.data method)": [[69, "micromagneticdata.Data.selector"]], "drive (class in micromagneticdata)": [[70, "micromagneticdata.Drive"]], "__getitem__() (micromagneticdata.drive method)": [[70, "micromagneticdata.Drive.__getitem__"]], "__lshift__() (micromagneticdata.drive method)": [[70, "micromagneticdata.Drive.__lshift__"]], "__new__() (micromagneticdata.drive static method)": [[70, "micromagneticdata.Drive.__new__"]], "calculator_script (micromagneticdata.drive property)": [[70, "micromagneticdata.Drive.calculator_script"]], "info (micromagneticdata.drive property)": [[70, "micromagneticdata.Drive.info"]], "ovf2vtk() (micromagneticdata.drive method)": [[70, "micromagneticdata.Drive.ovf2vtk"]], "register_callback() (micromagneticdata.drive method)": [[70, "micromagneticdata.Drive.register_callback"]], "slider() (micromagneticdata.drive method)": [[70, "micromagneticdata.Drive.slider"]], "table (micromagneticdata.drive property)": [[70, "micromagneticdata.Drive.table"]], "use_cache (micromagneticdata.drive property)": [[70, "micromagneticdata.Drive.use_cache"]], "mumax3drive (class in micromagneticdata)": [[71, "micromagneticdata.Mumax3Drive"]], "__repr__() (micromagneticdata.mumax3drive method)": [[71, "micromagneticdata.Mumax3Drive.__repr__"]], "calculator_script (micromagneticdata.mumax3drive property)": [[71, "micromagneticdata.Mumax3Drive.calculator_script"]], "x (micromagneticdata.mumax3drive property)": [[71, "micromagneticdata.Mumax3Drive.x"]], "oommfdrive (class in micromagneticdata)": [[72, "micromagneticdata.OOMMFDrive"]], "__repr__() (micromagneticdata.oommfdrive method)": [[72, "micromagneticdata.OOMMFDrive.__repr__"]], "calculator_script (micromagneticdata.oommfdrive property)": [[72, "micromagneticdata.OOMMFDrive.calculator_script"]], "x (micromagneticdata.oommfdrive property)": [[72, "micromagneticdata.OOMMFDrive.x"]], "test() (in module micromagneticdata)": [[73, "micromagneticdata.test"]], "micromagneticmodel": [[74, "module-micromagneticmodel"]], "cubicanisotropy (class in micromagneticmodel)": [[75, "micromagneticmodel.CubicAnisotropy"]], "dmi (class in micromagneticmodel)": [[76, "micromagneticmodel.DMI"]], "damping (class in micromagneticmodel)": [[77, "micromagneticmodel.Damping"]], "demag (class in micromagneticmodel)": [[78, "micromagneticmodel.Demag"]], "driver (class in micromagneticmodel)": [[79, "micromagneticmodel.Driver"]], "drive() (micromagneticmodel.driver method)": [[79, "micromagneticmodel.Driver.drive"]], "dynamics (class in micromagneticmodel)": [[80, "micromagneticmodel.Dynamics"]], "dynamicsterm (class in micromagneticmodel)": [[81, "micromagneticmodel.DynamicsTerm"]], "energy (class in micromagneticmodel)": [[82, "micromagneticmodel.Energy"]], "energyterm (class in micromagneticmodel)": [[83, "micromagneticmodel.EnergyTerm"]], "evolver (class in micromagneticmodel)": [[84, "micromagneticmodel.Evolver"]], "exchange (class in micromagneticmodel)": [[85, "micromagneticmodel.Exchange"]], "externaldriver (class in micromagneticmodel)": [[86, "micromagneticmodel.ExternalDriver"]], "drive() (micromagneticmodel.externaldriver method)": [[86, "micromagneticmodel.ExternalDriver.drive"]], "drive_kwargs_setup() (micromagneticmodel.externaldriver method)": [[86, "micromagneticmodel.ExternalDriver.drive_kwargs_setup"]], "schedule() (micromagneticmodel.externaldriver method)": [[86, "micromagneticmodel.ExternalDriver.schedule"]], "schedule_kwargs_setup() (micromagneticmodel.externaldriver method)": [[86, "micromagneticmodel.ExternalDriver.schedule_kwargs_setup"]], "externalrunner (class in micromagneticmodel)": [[87, "micromagneticmodel.ExternalRunner"]], "call() (micromagneticmodel.externalrunner method)": [[87, "micromagneticmodel.ExternalRunner.call"]], "package_name (micromagneticmodel.externalrunner property)": [[87, "micromagneticmodel.ExternalRunner.package_name"]], "magnetoelastic (class in micromagneticmodel)": [[88, "micromagneticmodel.MagnetoElastic"]], "precession (class in micromagneticmodel)": [[89, "micromagneticmodel.Precession"]], "rkky (class in micromagneticmodel)": [[90, "micromagneticmodel.RKKY"]], "slonczewski (class in micromagneticmodel)": [[91, "micromagneticmodel.Slonczewski"]], "system (class in micromagneticmodel)": [[92, "micromagneticmodel.System"]], "__repr__() (micromagneticmodel.system method)": [[92, "micromagneticmodel.System.__repr__"]], "dynamics (micromagneticmodel.system property)": [[92, "micromagneticmodel.System.dynamics"]], "energy (micromagneticmodel.system property)": [[92, "micromagneticmodel.System.energy"]], "uniaxialanisotropy (class in micromagneticmodel)": [[93, "micromagneticmodel.UniaxialAnisotropy"]], "zeeman (class in micromagneticmodel)": [[94, "micromagneticmodel.Zeeman"]], "zhangli (class in micromagneticmodel)": [[95, "micromagneticmodel.ZhangLi"]], "micromagneticmodel.abstract": [[96, "module-micromagneticmodel.abstract"]], "abstract (class in micromagneticmodel.abstract)": [[97, "micromagneticmodel.abstract.Abstract"]], "__iter__() (micromagneticmodel.abstract.abstract method)": [[97, "micromagneticmodel.abstract.Abstract.__iter__"]], "__repr__() (micromagneticmodel.abstract.abstract method)": [[97, "micromagneticmodel.abstract.Abstract.__repr__"]], "name (micromagneticmodel.abstract.abstract property)": [[97, "micromagneticmodel.abstract.Abstract.name"]], "container (class in micromagneticmodel.abstract)": [[98, "micromagneticmodel.abstract.Container"]], "__add__() (micromagneticmodel.abstract.container method)": [[98, "micromagneticmodel.abstract.Container.__add__"]], "__contains__() (micromagneticmodel.abstract.container method)": [[98, "micromagneticmodel.abstract.Container.__contains__"]], "__dir__() (micromagneticmodel.abstract.container method)": [[98, "micromagneticmodel.abstract.Container.__dir__"]], "__eq__() (micromagneticmodel.abstract.container method)": [[98, "micromagneticmodel.abstract.Container.__eq__"]], "__getattr__() (micromagneticmodel.abstract.container method)": [[98, "micromagneticmodel.abstract.Container.__getattr__"]], "__getitem__() (micromagneticmodel.abstract.container method)": [[98, "micromagneticmodel.abstract.Container.__getitem__"]], "__hash__ (micromagneticmodel.abstract.container attribute)": [[98, "micromagneticmodel.abstract.Container.__hash__"]], "__iter__() (micromagneticmodel.abstract.container method)": [[98, "micromagneticmodel.abstract.Container.__iter__"]], "__len__() (micromagneticmodel.abstract.container method)": [[98, "micromagneticmodel.abstract.Container.__len__"]], "__repr__() (micromagneticmodel.abstract.container method)": [[98, "micromagneticmodel.abstract.Container.__repr__"]], "__sub__() (micromagneticmodel.abstract.container method)": [[98, "micromagneticmodel.abstract.Container.__sub__"]], "get() (micromagneticmodel.abstract.container method)": [[98, "micromagneticmodel.abstract.Container.get"]], "term (class in micromagneticmodel.abstract)": [[99, "micromagneticmodel.abstract.Term"]], "__add__() (micromagneticmodel.abstract.term method)": [[99, "micromagneticmodel.abstract.Term.__add__"]], "__eq__() (micromagneticmodel.abstract.term method)": [[99, "micromagneticmodel.abstract.Term.__eq__"]], "__hash__ (micromagneticmodel.abstract.term attribute)": [[99, "micromagneticmodel.abstract.Term.__hash__"]], "micromagneticmodel.consts": [[100, "module-micromagneticmodel.consts"]], "e (in module micromagneticmodel.consts)": [[101, "micromagneticmodel.consts.e"]], "g (in module micromagneticmodel.consts)": [[102, "micromagneticmodel.consts.g"]], "gamma (in module micromagneticmodel.consts)": [[103, "micromagneticmodel.consts.gamma"]], "gamma0 (in module micromagneticmodel.consts)": [[104, "micromagneticmodel.consts.gamma0"]], "h (in module micromagneticmodel.consts)": [[105, "micromagneticmodel.consts.h"]], "hbar (in module micromagneticmodel.consts)": [[106, "micromagneticmodel.consts.hbar"]], "kb (in module micromagneticmodel.consts)": [[107, "micromagneticmodel.consts.kB"]], "me (in module micromagneticmodel.consts)": [[108, "micromagneticmodel.consts.me"]], "mu0 (in module micromagneticmodel.consts)": [[109, "micromagneticmodel.consts.mu0"]], "mub (in module micromagneticmodel.consts)": [[110, "micromagneticmodel.consts.muB"]], "micromagneticmodel.examples": [[111, "module-micromagneticmodel.examples"]], "macrospin() (in module micromagneticmodel.examples)": [[112, "micromagneticmodel.examples.macrospin"]], "test() (in module micromagneticmodel)": [[113, "micromagneticmodel.test"]], "micromagnetictests": [[114, "module-micromagnetictests"]], "micromagnetictests.calculatortests": [[115, "module-micromagnetictests.calculatortests"]], "testcompute (class in micromagnetictests.calculatortests)": [[116, "micromagnetictests.calculatortests.TestCompute"]], "testcubicanisotropy (class in micromagnetictests.calculatortests)": [[117, "micromagnetictests.calculatortests.TestCubicAnisotropy"]], "testdmi (class in micromagnetictests.calculatortests)": [[118, "micromagnetictests.calculatortests.TestDMI"]], "testdamping (class in micromagnetictests.calculatortests)": [[119, "micromagnetictests.calculatortests.TestDamping"]], "testdemag (class in micromagnetictests.calculatortests)": [[120, "micromagnetictests.calculatortests.TestDemag"]], "testdynamics (class in micromagnetictests.calculatortests)": [[121, "micromagnetictests.calculatortests.TestDynamics"]], "testenergy (class in micromagnetictests.calculatortests)": [[122, "micromagnetictests.calculatortests.TestEnergy"]], "testexchange (class in micromagnetictests.calculatortests)": [[123, "micromagnetictests.calculatortests.TestExchange"]], "testfixedsubregions (class in micromagnetictests.calculatortests)": [[124, "micromagnetictests.calculatortests.TestFixedSubregions"]], "testhysteresisdriver (class in micromagnetictests.calculatortests)": [[125, "micromagnetictests.calculatortests.TestHysteresisDriver"]], "testmesh (class in micromagnetictests.calculatortests)": [[126, "micromagnetictests.calculatortests.TestMesh"]], "testmindriver (class in micromagnetictests.calculatortests)": [[127, "micromagnetictests.calculatortests.TestMinDriver"]], "testprecession (class in micromagnetictests.calculatortests)": [[128, "micromagnetictests.calculatortests.TestPrecession"]], "testrkky (class in micromagnetictests.calculatortests)": [[129, "micromagnetictests.calculatortests.TestRKKY"]], "testslonczewski (class in micromagnetictests.calculatortests)": [[130, "micromagnetictests.calculatortests.TestSlonczewski"]], "testthreads (class in micromagnetictests.calculatortests)": [[131, "micromagnetictests.calculatortests.TestThreads"]], "testtimedriver (class in micromagnetictests.calculatortests)": [[132, "micromagnetictests.calculatortests.TestTimeDriver"]], "testuniaxialanisotropy (class in micromagnetictests.calculatortests)": [[133, "micromagnetictests.calculatortests.TestUniaxialAnisotropy"]], "testzeeman (class in micromagnetictests.calculatortests)": [[134, "micromagnetictests.calculatortests.TestZeeman"]], "testzhangli (class in micromagnetictests.calculatortests)": [[135, "micromagnetictests.calculatortests.TestZhangLi"]], "test_dirname() (in module micromagnetictests.calculatortests)": [[136, "micromagnetictests.calculatortests.test_dirname"]], "test_format() (in module micromagnetictests.calculatortests)": [[137, "micromagnetictests.calculatortests.test_format"]], "test_info_file() (in module micromagnetictests.calculatortests)": [[138, "micromagnetictests.calculatortests.test_info_file"]], "test_multiple_drives() (in module micromagnetictests.calculatortests)": [[139, "micromagnetictests.calculatortests.test_multiple_drives"]], "test_outputstep() (in module micromagnetictests.calculatortests)": [[140, "micromagnetictests.calculatortests.test_outputstep"]], "test_schedule() (in module micromagnetictests.calculatortests)": [[141, "micromagnetictests.calculatortests.test_schedule"]], "test_skyrmion() (in module micromagnetictests.calculatortests)": [[142, "micromagnetictests.calculatortests.test_skyrmion"]], "test_stdprob3() (in module micromagnetictests.calculatortests)": [[143, "micromagnetictests.calculatortests.test_stdprob3"]], "test_stdprob4() (in module micromagnetictests.calculatortests)": [[144, "micromagnetictests.calculatortests.test_stdprob4"]], "test_stdprob5() (in module micromagnetictests.calculatortests)": [[145, "micromagnetictests.calculatortests.test_stdprob5"]], "get_tests() (in module micromagnetictests)": [[146, "micromagnetictests.get_tests"]], "test() (in module micromagnetictests)": [[147, "micromagnetictests.test"]], "mumax3c": [[148, "module-mumax3c"]], "mindriver (class in mumax3c)": [[149, "mumax3c.MinDriver"]], "relaxdriver (class in mumax3c)": [[150, "mumax3c.RelaxDriver"]], "timedriver (class in mumax3c)": [[151, "mumax3c.TimeDriver"]], "delete() (in module mumax3c)": [[152, "mumax3c.delete"]], "mumax3c.mumax3": [[153, "module-mumax3c.mumax3"]], "exemumax3runner (class in mumax3c.mumax3)": [[154, "mumax3c.mumax3.ExeMumax3Runner"]], "mumax3runner (class in mumax3c.mumax3)": [[155, "mumax3c.mumax3.Mumax3Runner"]], "package_name (mumax3c.mumax3.mumax3runner property)": [[155, "mumax3c.mumax3.Mumax3Runner.package_name"]], "status (mumax3c.mumax3.mumax3runner property)": [[155, "mumax3c.mumax3.Mumax3Runner.status"]], "runner (class in mumax3c.mumax3)": [[156, "mumax3c.mumax3.Runner"]], "autoselect_runner() (mumax3c.mumax3.runner method)": [[156, "mumax3c.mumax3.Runner.autoselect_runner"]], "runner (mumax3c.mumax3.runner property)": [[156, "mumax3c.mumax3.Runner.runner"]], "overhead() (in module mumax3c.mumax3)": [[157, "mumax3c.mumax3.overhead"]], "runner (in module mumax3c)": [[158, "mumax3c.runner"]], "test() (in module mumax3c)": [[159, "mumax3c.test"]], "test_docker() (in module mumax3c)": [[160, "mumax3c.test_docker"]], "oommfc": [[161, "module-oommfc"]], "cgevolver (class in oommfc)": [[162, "oommfc.CGEvolver"]], "driver (class in oommfc)": [[163, "oommfc.Driver"]], "drive_kwargs_setup() (oommfc.driver method)": [[163, "oommfc.Driver.drive_kwargs_setup"]], "schedule_kwargs_setup() (oommfc.driver method)": [[163, "oommfc.Driver.schedule_kwargs_setup"]], "write_mif() (oommfc.driver method)": [[163, "oommfc.Driver.write_mif"]], "eulerevolver (class in oommfc)": [[164, "oommfc.EulerEvolver"]], "hysteresisdriver (class in oommfc)": [[165, "oommfc.HysteresisDriver"]], "mindriver (class in oommfc)": [[166, "oommfc.MinDriver"]], "rungekuttaevolver (class in oommfc)": [[167, "oommfc.RungeKuttaEvolver"]], "spintevolver (class in oommfc)": [[168, "oommfc.SpinTEvolver"]], "spinxferevolver (class in oommfc)": [[169, "oommfc.SpinXferEvolver"]], "timedriver (class in oommfc)": [[170, "oommfc.TimeDriver"]], "uhh_thetaevolver (class in oommfc)": [[171, "oommfc.UHH_ThetaEvolver"]], "xf_thermheunevolver (class in oommfc)": [[172, "oommfc.Xf_ThermHeunEvolver"]], "xf_thermspinxferevolver (class in oommfc)": [[173, "oommfc.Xf_ThermSpinXferEvolver"]], "compute() (in module oommfc)": [[174, "oommfc.compute"]], "delete() (in module oommfc)": [[175, "oommfc.delete"]], "oommfc.oommf": [[176, "module-oommfc.oommf"]], "dockeroommfrunner (class in oommfc.oommf)": [[177, "oommfc.oommf.DockerOOMMFRunner"]], "__repr__() (oommfc.oommf.dockeroommfrunner method)": [[177, "oommfc.oommf.DockerOOMMFRunner.__repr__"]], "errors() (oommfc.oommf.dockeroommfrunner method)": [[177, "oommfc.oommf.DockerOOMMFRunner.errors"]], "exeoommfrunner (class in oommfc.oommf)": [[178, "oommfc.oommf.ExeOOMMFRunner"]], "__repr__() (oommfc.oommf.exeoommfrunner method)": [[178, "oommfc.oommf.ExeOOMMFRunner.__repr__"]], "errors() (oommfc.oommf.exeoommfrunner method)": [[178, "oommfc.oommf.ExeOOMMFRunner.errors"]], "oommfrunner (class in oommfc.oommf)": [[179, "oommfc.oommf.OOMMFRunner"]], "__del__() (oommfc.oommf.oommfrunner method)": [[179, "oommfc.oommf.OOMMFRunner.__del__"]], "__repr__() (oommfc.oommf.oommfrunner method)": [[179, "oommfc.oommf.OOMMFRunner.__repr__"]], "errors() (oommfc.oommf.oommfrunner method)": [[179, "oommfc.oommf.OOMMFRunner.errors"]], "package_name (oommfc.oommf.oommfrunner property)": [[179, "oommfc.oommf.OOMMFRunner.package_name"]], "platform (oommfc.oommf.oommfrunner property)": [[179, "oommfc.oommf.OOMMFRunner.platform"]], "status (oommfc.oommf.oommfrunner property)": [[179, "oommfc.oommf.OOMMFRunner.status"]], "version (oommfc.oommf.oommfrunner property)": [[179, "oommfc.oommf.OOMMFRunner.version"]], "runner (class in oommfc.oommf)": [[180, "oommfc.oommf.Runner"]], "__repr__() (oommfc.oommf.runner method)": [[180, "oommfc.oommf.Runner.__repr__"]], "autoselect_runner() (oommfc.oommf.runner method)": [[180, "oommfc.oommf.Runner.autoselect_runner"]], "runner (oommfc.oommf.runner property)": [[180, "oommfc.oommf.Runner.runner"]], "tcloommfrunner (class in oommfc.oommf)": [[181, "oommfc.oommf.TclOOMMFRunner"]], "__repr__() (oommfc.oommf.tcloommfrunner method)": [[181, "oommfc.oommf.TclOOMMFRunner.__repr__"]], "errors() (oommfc.oommf.tcloommfrunner method)": [[181, "oommfc.oommf.TclOOMMFRunner.errors"]], "overhead() (in module oommfc.oommf)": [[182, "oommfc.oommf.overhead"]], "runner (in module oommfc)": [[183, "oommfc.runner"]], "test() (in module oommfc)": [[184, "oommfc.test"]], "test_docker() (in module oommfc)": [[185, "oommfc.test_docker"]], "ubermag": [[186, "module-ubermag"]], "test() (in module ubermag)": [[187, "ubermag.test"]], "ubermagtable": [[188, "module-ubermagtable"]], "table (class in ubermagtable)": [[189, "ubermagtable.Table"]], "__lshift__() (ubermagtable.table method)": [[189, "ubermagtable.Table.__lshift__"]], "__repr__() (ubermagtable.table method)": [[189, "ubermagtable.Table.__repr__"]], "apply() (ubermagtable.table method)": [[189, "ubermagtable.Table.apply"]], "dx (ubermagtable.table property)": [[189, "ubermagtable.Table.dx"]], "fromfile() (ubermagtable.table class method)": [[189, "ubermagtable.Table.fromfile"]], "irfft() (ubermagtable.table method)": [[189, "ubermagtable.Table.irfft"]], "mpl() (ubermagtable.table method)": [[189, "ubermagtable.Table.mpl"]], "rfft() (ubermagtable.table method)": [[189, "ubermagtable.Table.rfft"]], "selector() (ubermagtable.table method)": [[189, "ubermagtable.Table.selector"]], "slider() (ubermagtable.table method)": [[189, "ubermagtable.Table.slider"]], "x (ubermagtable.table property)": [[189, "ubermagtable.Table.x"]], "xmax (ubermagtable.table property)": [[189, "ubermagtable.Table.xmax"]], "y (ubermagtable.table property)": [[189, "ubermagtable.Table.y"]], "interact() (in module ubermagtable)": [[190, "ubermagtable.interact"]], "test() (in module ubermagtable)": [[191, "ubermagtable.test"]], "ubermagtable.util": [[192, "module-ubermagtable.util"]], "columns() (in module ubermagtable.util)": [[193, "ubermagtable.util.columns"]], "data() (in module ubermagtable.util)": [[194, "ubermagtable.util.data"]], "units() (in module ubermagtable.util)": [[195, "ubermagtable.util.units"]], "ubermagutil": [[196, "module-ubermagutil"]], "changedir() (in module ubermagutil)": [[197, "ubermagutil.changedir"]], "hysteresis_values() (in module ubermagutil)": [[198, "ubermagutil.hysteresis_values"]], "inherit_docs() (in module ubermagutil)": [[199, "ubermagutil.inherit_docs"]], "setup_logging() (in module ubermagutil)": [[200, "ubermagutil.setup_logging"]], "test() (in module ubermagutil)": [[201, "ubermagutil.test"]], "ubermagutil.typesystem": [[202, "module-ubermagutil.typesystem"]], "descriptor (class in ubermagutil.typesystem)": [[203, "ubermagutil.typesystem.Descriptor"]], "__delete__() (ubermagutil.typesystem.descriptor method)": [[203, "ubermagutil.typesystem.Descriptor.__delete__"]], "__set__() (ubermagutil.typesystem.descriptor method)": [[203, "ubermagutil.typesystem.Descriptor.__set__"]], "dictionary (class in ubermagutil.typesystem)": [[204, "ubermagutil.typesystem.Dictionary"]], "__set__() (ubermagutil.typesystem.dictionary method)": [[204, "ubermagutil.typesystem.Dictionary.__set__"]], "name (class in ubermagutil.typesystem)": [[205, "ubermagutil.typesystem.Name"]], "__set__() (ubermagutil.typesystem.name method)": [[205, "ubermagutil.typesystem.Name.__set__"]], "parameter (class in ubermagutil.typesystem)": [[206, "ubermagutil.typesystem.Parameter"]], "__set__() (ubermagutil.typesystem.parameter method)": [[206, "ubermagutil.typesystem.Parameter.__set__"]], "scalar (class in ubermagutil.typesystem)": [[207, "ubermagutil.typesystem.Scalar"]], "__set__() (ubermagutil.typesystem.scalar method)": [[207, "ubermagutil.typesystem.Scalar.__set__"]], "subset (class in ubermagutil.typesystem)": [[208, "ubermagutil.typesystem.Subset"]], "__set__() (ubermagutil.typesystem.subset method)": [[208, "ubermagutil.typesystem.Subset.__set__"]], "typed (class in ubermagutil.typesystem)": [[209, "ubermagutil.typesystem.Typed"]], "__set__() (ubermagutil.typesystem.typed method)": [[209, "ubermagutil.typesystem.Typed.__set__"]], "vector (class in ubermagutil.typesystem)": [[210, "ubermagutil.typesystem.Vector"]], "__set__() (ubermagutil.typesystem.vector method)": [[210, "ubermagutil.typesystem.Vector.__set__"]], "typesystem() (in module ubermagutil.typesystem)": [[211, "ubermagutil.typesystem.typesystem"]], "ubermagutil.units": [[212, "module-ubermagutil.units"]], "si_max_multiplier() (in module ubermagutil.units)": [[213, "ubermagutil.units.si_max_multiplier"]], "si_multiplier() (in module ubermagutil.units)": [[214, "ubermagutil.units.si_multiplier"]]}})