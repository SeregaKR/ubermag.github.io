Search.setIndex({"docnames": ["api/_autosummary/discretisedfield", "api/_autosummary/discretisedfield.Field", "api/_autosummary/discretisedfield.FieldRotator", "api/_autosummary/discretisedfield.Line", "api/_autosummary/discretisedfield.Mesh", "api/_autosummary/discretisedfield.Region", "api/_autosummary/discretisedfield.integrate", "api/_autosummary/discretisedfield.interact", "api/_autosummary/discretisedfield.io", "api/_autosummary/discretisedfield.io.ovf2vtk", "api/_autosummary/discretisedfield.io.ovf2vtk.ovf2vtk", "api/_autosummary/discretisedfield.plotting", "api/_autosummary/discretisedfield.plotting.Hv", "api/_autosummary/discretisedfield.plotting.K3dField", "api/_autosummary/discretisedfield.plotting.K3dMesh", "api/_autosummary/discretisedfield.plotting.K3dRegion", "api/_autosummary/discretisedfield.plotting.MplField", "api/_autosummary/discretisedfield.plotting.MplMesh", "api/_autosummary/discretisedfield.plotting.MplRegion", "api/_autosummary/discretisedfield.plotting.add_colorwheel", "api/_autosummary/discretisedfield.test", "api/_autosummary/discretisedfield.tools", "api/_autosummary/discretisedfield.tools.count_bps", "api/_autosummary/discretisedfield.tools.count_large_cell_angle_regions", "api/_autosummary/discretisedfield.tools.demag_field", "api/_autosummary/discretisedfield.tools.demag_tensor", "api/_autosummary/discretisedfield.tools.emergent_magnetic_field", "api/_autosummary/discretisedfield.tools.max_neighbouring_cell_angle", "api/_autosummary/discretisedfield.tools.neighbouring_cell_angle", "api/_autosummary/discretisedfield.tools.topological_charge", "api/_autosummary/discretisedfield.tools.topological_charge_density", "api/_autosummary/mag2exp", "api/_autosummary/mag2exp.ltem", "api/_autosummary/mag2exp.ltem.defocus_image", "api/_autosummary/mag2exp.ltem.integrated_magnetic_flux_density", "api/_autosummary/mag2exp.ltem.phase", "api/_autosummary/mag2exp.ltem.relativistic_wavelength", "api/_autosummary/mag2exp.magnetometry", "api/_autosummary/mag2exp.magnetometry.magnetisation", "api/_autosummary/mag2exp.magnetometry.torque", "api/_autosummary/mag2exp.mfm", "api/_autosummary/mag2exp.mfm.phase_shift", "api/_autosummary/mag2exp.quick_plots", "api/_autosummary/mag2exp.quick_plots.ltem_defocus", "api/_autosummary/mag2exp.quick_plots.ltem_ft_phase", "api/_autosummary/mag2exp.quick_plots.ltem_integrated_mfd", "api/_autosummary/mag2exp.quick_plots.ltem_phase", "api/_autosummary/mag2exp.quick_plots.mfm_phase_shift", "api/_autosummary/mag2exp.quick_plots.sans_chiral_function", "api/_autosummary/mag2exp.quick_plots.sans_cross_section", "api/_autosummary/mag2exp.quick_plots.saxs", "api/_autosummary/mag2exp.quick_plots.x_ray_holography", "api/_autosummary/mag2exp.sans", "api/_autosummary/mag2exp.sans.chiral_function", "api/_autosummary/mag2exp.sans.cross_section", "api/_autosummary/mag2exp.test", "api/_autosummary/mag2exp.x_ray", "api/_autosummary/mag2exp.x_ray.holography", "api/_autosummary/mag2exp.x_ray.saxs", "api/_autosummary/micromagneticdata", "api/_autosummary/micromagneticdata.AbstractDrive", "api/_autosummary/micromagneticdata.CombinedDrive", "api/_autosummary/micromagneticdata.Data", "api/_autosummary/micromagneticdata.Drive", "api/_autosummary/micromagneticdata.Mumax3Drive", "api/_autosummary/micromagneticdata.OOMMFDrive", "api/_autosummary/micromagneticdata.test", "api/_autosummary/micromagneticmodel", "api/_autosummary/micromagneticmodel.CubicAnisotropy", "api/_autosummary/micromagneticmodel.DMI", "api/_autosummary/micromagneticmodel.Damping", "api/_autosummary/micromagneticmodel.Demag", "api/_autosummary/micromagneticmodel.Driver", "api/_autosummary/micromagneticmodel.Dynamics", "api/_autosummary/micromagneticmodel.DynamicsTerm", "api/_autosummary/micromagneticmodel.Energy", "api/_autosummary/micromagneticmodel.EnergyTerm", "api/_autosummary/micromagneticmodel.Evolver", "api/_autosummary/micromagneticmodel.Exchange", "api/_autosummary/micromagneticmodel.ExternalDriver", "api/_autosummary/micromagneticmodel.ExternalRunner", "api/_autosummary/micromagneticmodel.MagnetoElastic", "api/_autosummary/micromagneticmodel.Precession", "api/_autosummary/micromagneticmodel.RKKY", "api/_autosummary/micromagneticmodel.Slonczewski", "api/_autosummary/micromagneticmodel.System", "api/_autosummary/micromagneticmodel.UniaxialAnisotropy", "api/_autosummary/micromagneticmodel.Zeeman", "api/_autosummary/micromagneticmodel.ZhangLi", "api/_autosummary/micromagneticmodel.abstract", "api/_autosummary/micromagneticmodel.abstract.Abstract", "api/_autosummary/micromagneticmodel.abstract.Container", "api/_autosummary/micromagneticmodel.abstract.Term", "api/_autosummary/micromagneticmodel.consts", "api/_autosummary/micromagneticmodel.consts.e", "api/_autosummary/micromagneticmodel.consts.g", "api/_autosummary/micromagneticmodel.consts.gamma", "api/_autosummary/micromagneticmodel.consts.gamma0", "api/_autosummary/micromagneticmodel.consts.h", "api/_autosummary/micromagneticmodel.consts.hbar", "api/_autosummary/micromagneticmodel.consts.kB", "api/_autosummary/micromagneticmodel.consts.me", "api/_autosummary/micromagneticmodel.consts.mu0", "api/_autosummary/micromagneticmodel.consts.muB", "api/_autosummary/micromagneticmodel.examples", "api/_autosummary/micromagneticmodel.examples.macrospin", "api/_autosummary/micromagneticmodel.test", "api/_autosummary/micromagnetictests", "api/_autosummary/micromagnetictests.calculatortests", "api/_autosummary/micromagnetictests.calculatortests.TestCompute", "api/_autosummary/micromagnetictests.calculatortests.TestCubicAnisotropy", "api/_autosummary/micromagnetictests.calculatortests.TestDMI", "api/_autosummary/micromagnetictests.calculatortests.TestDamping", "api/_autosummary/micromagnetictests.calculatortests.TestDemag", "api/_autosummary/micromagnetictests.calculatortests.TestDynamics", "api/_autosummary/micromagnetictests.calculatortests.TestEnergy", "api/_autosummary/micromagnetictests.calculatortests.TestExchange", "api/_autosummary/micromagnetictests.calculatortests.TestFixedSubregions", "api/_autosummary/micromagnetictests.calculatortests.TestHysteresisDriver", "api/_autosummary/micromagnetictests.calculatortests.TestMesh", "api/_autosummary/micromagnetictests.calculatortests.TestMinDriver", "api/_autosummary/micromagnetictests.calculatortests.TestPrecession", "api/_autosummary/micromagnetictests.calculatortests.TestRKKY", "api/_autosummary/micromagnetictests.calculatortests.TestSlonczewski", "api/_autosummary/micromagnetictests.calculatortests.TestThreads", "api/_autosummary/micromagnetictests.calculatortests.TestTimeDriver", "api/_autosummary/micromagnetictests.calculatortests.TestUniaxialAnisotropy", "api/_autosummary/micromagnetictests.calculatortests.TestZeeman", "api/_autosummary/micromagnetictests.calculatortests.TestZhangLi", "api/_autosummary/micromagnetictests.calculatortests.test_dirname", "api/_autosummary/micromagnetictests.calculatortests.test_format", "api/_autosummary/micromagnetictests.calculatortests.test_info_file", "api/_autosummary/micromagnetictests.calculatortests.test_multiple_drives", "api/_autosummary/micromagnetictests.calculatortests.test_outputstep", "api/_autosummary/micromagnetictests.calculatortests.test_schedule", "api/_autosummary/micromagnetictests.calculatortests.test_skyrmion", "api/_autosummary/micromagnetictests.calculatortests.test_stdprob3", "api/_autosummary/micromagnetictests.calculatortests.test_stdprob4", "api/_autosummary/micromagnetictests.calculatortests.test_stdprob5", "api/_autosummary/micromagnetictests.get_tests", "api/_autosummary/micromagnetictests.test", "api/_autosummary/mumax3c", "api/_autosummary/mumax3c.MinDriver", "api/_autosummary/mumax3c.RelaxDriver", "api/_autosummary/mumax3c.TimeDriver", "api/_autosummary/mumax3c.delete", "api/_autosummary/mumax3c.mumax3", "api/_autosummary/mumax3c.mumax3.ExeMumax3Runner", "api/_autosummary/mumax3c.mumax3.Mumax3Runner", "api/_autosummary/mumax3c.mumax3.Runner", "api/_autosummary/mumax3c.mumax3.overhead", "api/_autosummary/mumax3c.runner", "api/_autosummary/mumax3c.test", "api/_autosummary/mumax3c.test_docker", "api/_autosummary/oommfc", "api/_autosummary/oommfc.CGEvolver", "api/_autosummary/oommfc.Driver", "api/_autosummary/oommfc.EulerEvolver", "api/_autosummary/oommfc.HysteresisDriver", "api/_autosummary/oommfc.MinDriver", "api/_autosummary/oommfc.RungeKuttaEvolver", "api/_autosummary/oommfc.SpinTEvolver", "api/_autosummary/oommfc.SpinXferEvolver", "api/_autosummary/oommfc.TimeDriver", "api/_autosummary/oommfc.UHH_ThetaEvolver", "api/_autosummary/oommfc.Xf_ThermHeunEvolver", "api/_autosummary/oommfc.Xf_ThermSpinXferEvolver", "api/_autosummary/oommfc.compute", "api/_autosummary/oommfc.delete", "api/_autosummary/oommfc.oommf", "api/_autosummary/oommfc.oommf.DockerOOMMFRunner", "api/_autosummary/oommfc.oommf.ExeOOMMFRunner", "api/_autosummary/oommfc.oommf.OOMMFRunner", "api/_autosummary/oommfc.oommf.Runner", "api/_autosummary/oommfc.oommf.TclOOMMFRunner", "api/_autosummary/oommfc.oommf.overhead", "api/_autosummary/oommfc.runner", "api/_autosummary/oommfc.test", "api/_autosummary/oommfc.test_docker", "api/_autosummary/ubermag", "api/_autosummary/ubermag.debug_info", "api/_autosummary/ubermag.test", "api/_autosummary/ubermagtable", "api/_autosummary/ubermagtable.Table", "api/_autosummary/ubermagtable.interact", "api/_autosummary/ubermagtable.test", "api/_autosummary/ubermagtable.util", "api/_autosummary/ubermagtable.util.columns", "api/_autosummary/ubermagtable.util.data", "api/_autosummary/ubermagtable.util.units", "api/_autosummary/ubermagutil", "api/_autosummary/ubermagutil.changedir", "api/_autosummary/ubermagutil.hysteresis_values", "api/_autosummary/ubermagutil.inherit_docs", "api/_autosummary/ubermagutil.setup_logging", "api/_autosummary/ubermagutil.test", "api/_autosummary/ubermagutil.typesystem", "api/_autosummary/ubermagutil.typesystem.Descriptor", "api/_autosummary/ubermagutil.typesystem.Dictionary", "api/_autosummary/ubermagutil.typesystem.Name", "api/_autosummary/ubermagutil.typesystem.Parameter", "api/_autosummary/ubermagutil.typesystem.Scalar", "api/_autosummary/ubermagutil.typesystem.Subset", "api/_autosummary/ubermagutil.typesystem.Typed", "api/_autosummary/ubermagutil.typesystem.Vector", "api/_autosummary/ubermagutil.typesystem.typesystem", "api/_autosummary/ubermagutil.units", "api/_autosummary/ubermagutil.units.si_max_multiplier", "api/_autosummary/ubermagutil.units.si_multiplier", "api/index", "changelog", "contributing", "demo", "documentation", "documentation/compatibility", "documentation/discretisedfield", "documentation/index", "documentation/mag2exp", "documentation/micromagneticdata", "documentation/micromagneticmodel", "documentation/micromagnetictests", "documentation/mumax3c", "documentation/notebooks/discretisedfield/field-definition", "documentation/notebooks/discretisedfield/field-fft", "documentation/notebooks/discretisedfield/field-holoviews-visualisation", "documentation/notebooks/discretisedfield/field-k3d-visualisation", "documentation/notebooks/discretisedfield/field-matplotlib-visualisation", "documentation/notebooks/discretisedfield/field-normalisation", "documentation/notebooks/discretisedfield/field-operations", "documentation/notebooks/discretisedfield/field-read-write", "documentation/notebooks/discretisedfield/field-rotations", "documentation/notebooks/discretisedfield/field-spatially-varying", "documentation/notebooks/discretisedfield/field-tools", "documentation/notebooks/discretisedfield/field-valid", "documentation/notebooks/discretisedfield/line", "documentation/notebooks/discretisedfield/mesh-basics", "documentation/notebooks/discretisedfield/mesh-bc", "documentation/notebooks/discretisedfield/mesh-line-plane", "documentation/notebooks/discretisedfield/mesh-pad", "documentation/notebooks/discretisedfield/mesh-subregions", "documentation/notebooks/discretisedfield/mesh-visualisation", "documentation/notebooks/discretisedfield/mesh-widgets", "documentation/notebooks/discretisedfield/ovf2vtk", "documentation/notebooks/discretisedfield/region-basics", "documentation/notebooks/discretisedfield/region-facing-surfaces", "documentation/notebooks/discretisedfield/region-visualisation", "documentation/notebooks/discretisedfield/xarray-usage", "documentation/notebooks/mag2exp/DC_magnetometry", "documentation/notebooks/mag2exp/Lorentz_TEM", "documentation/notebooks/mag2exp/Magnetic_Force_Microscopy", "documentation/notebooks/mag2exp/Rotations_Lorentz_Microscopy", "documentation/notebooks/mag2exp/SANS", "documentation/notebooks/mag2exp/SAXS", "documentation/notebooks/mag2exp/Torque_magnetometry", "documentation/notebooks/mag2exp/X_ray_Holography", "documentation/notebooks/micromagneticdata/documentation", "documentation/notebooks/micromagneticdata/interactive_plotting", "documentation/notebooks/micromagneticmodel/constants", "documentation/notebooks/micromagneticmodel/deriving-dynamics-term", "documentation/notebooks/micromagneticmodel/deriving-energy-term", "documentation/notebooks/micromagneticmodel/dynamics-terms", "documentation/notebooks/micromagneticmodel/energy-terms", "documentation/notebooks/micromagneticmodel/evolver-driver", "documentation/notebooks/micromagneticmodel/same-class-terms", "documentation/notebooks/micromagneticmodel/system", "documentation/notebooks/micromagneticmodel/term-parameters", "documentation/notebooks/micromagnetictests/usage", "documentation/notebooks/oommfc/controlling-default-runner", "documentation/notebooks/oommfc/cubicanisotropy", "documentation/notebooks/oommfc/dirname", "documentation/notebooks/oommfc/dmi", "documentation/notebooks/oommfc/exchange", "documentation/notebooks/oommfc/mindriver-steps", "documentation/notebooks/oommfc/parallel", "documentation/notebooks/oommfc/uniaxialanisotropy", "documentation/notebooks/oommfc/verbosity_levels", "documentation/notebooks/oommfc/zeeman", "documentation/notebooks/ubermag/hdf5-file-specification", "documentation/notebooks/ubermag/ubermag-version", "documentation/notebooks/ubermagtable/table-basics", "documentation/notebooks/ubermagtable/table-fft", "documentation/notebooks/ubermagtable/table-interactive-plot", "documentation/notebooks/ubermagtable/table-merge", "documentation/notebooks/ubermagtable/table-visualisation", "documentation/notebooks/ubermagtable/table-widgets", "documentation/notebooks/ubermagutil/constant-attributes", "documentation/notebooks/ubermagutil/hysteresis", "documentation/notebooks/ubermagutil/imposing-typesystem", "documentation/notebooks/ubermagutil/inherit-docs", "documentation/notebooks/ubermagutil/logging", "documentation/notebooks/ubermagutil/otherwise-type", "documentation/notebooks/ubermagutil/parameter-descriptor", "documentation/notebooks/ubermagutil/si-prefix", "documentation/oommfc", "documentation/ubermag", "documentation/ubermagtable", "documentation/ubermagutil", "examples/index", "examples/notebooks/07-tutorial-standard-problem3", "examples/notebooks/08-tutorial-standard-problem4", "examples/notebooks/09-tutorial-standard-problem5", "examples/notebooks/10-tutorial-standard-problem-fmr", "examples/notebooks/11-tutorial-deriving-fields", "examples/notebooks/12-tutorial-stray-field", "examples/notebooks/13-tutorial-skyrmion", "examples/notebooks/STT-dw-motion", "examples/notebooks/choosing-runner", "examples/notebooks/energy-term-computations", "examples/notebooks/field-operations2", "examples/notebooks/finite-temperature", "examples/notebooks/fixed-subregions", "examples/notebooks/hysteresis", "examples/notebooks/multiple-terms", "examples/notebooks/negative-A", "examples/notebooks/periodic-boundary-conditions", "examples/notebooks/rkky", "examples/notebooks/sine-hysteresis", "examples/notebooks/space-time-field", "examples/notebooks/spatially-varying-parameters1", "examples/notebooks/spatially-varying-parameters2", "examples/notebooks/time-dependent-field", "examples/notebooks/time-dependent-field-current", "faq", "getting-started/index", "getting-started/jupyter-basics", "getting-started/notebooks/dw-pair-conversion", "getting-started/notebooks/dynamics-equation", "getting-started/notebooks/energy-equation", "getting-started/notebooks/first-ubermag-simulation", "getting-started/notebooks/mag2exp", "getting-started/notebooks/magnetisation-field", "getting-started/notebooks/python-basics", "getting-started/notebooks/unit-converter", "help", "index", "installation", "news"], "filenames": ["api/_autosummary/discretisedfield.rst", "api/_autosummary/discretisedfield.Field.rst", "api/_autosummary/discretisedfield.FieldRotator.rst", "api/_autosummary/discretisedfield.Line.rst", "api/_autosummary/discretisedfield.Mesh.rst", "api/_autosummary/discretisedfield.Region.rst", "api/_autosummary/discretisedfield.integrate.rst", "api/_autosummary/discretisedfield.interact.rst", "api/_autosummary/discretisedfield.io.rst", "api/_autosummary/discretisedfield.io.ovf2vtk.rst", "api/_autosummary/discretisedfield.io.ovf2vtk.ovf2vtk.rst", "api/_autosummary/discretisedfield.plotting.rst", "api/_autosummary/discretisedfield.plotting.Hv.rst", "api/_autosummary/discretisedfield.plotting.K3dField.rst", "api/_autosummary/discretisedfield.plotting.K3dMesh.rst", "api/_autosummary/discretisedfield.plotting.K3dRegion.rst", "api/_autosummary/discretisedfield.plotting.MplField.rst", "api/_autosummary/discretisedfield.plotting.MplMesh.rst", "api/_autosummary/discretisedfield.plotting.MplRegion.rst", "api/_autosummary/discretisedfield.plotting.add_colorwheel.rst", "api/_autosummary/discretisedfield.test.rst", "api/_autosummary/discretisedfield.tools.rst", "api/_autosummary/discretisedfield.tools.count_bps.rst", "api/_autosummary/discretisedfield.tools.count_large_cell_angle_regions.rst", "api/_autosummary/discretisedfield.tools.demag_field.rst", "api/_autosummary/discretisedfield.tools.demag_tensor.rst", "api/_autosummary/discretisedfield.tools.emergent_magnetic_field.rst", "api/_autosummary/discretisedfield.tools.max_neighbouring_cell_angle.rst", "api/_autosummary/discretisedfield.tools.neighbouring_cell_angle.rst", "api/_autosummary/discretisedfield.tools.topological_charge.rst", "api/_autosummary/discretisedfield.tools.topological_charge_density.rst", "api/_autosummary/mag2exp.rst", "api/_autosummary/mag2exp.ltem.rst", "api/_autosummary/mag2exp.ltem.defocus_image.rst", "api/_autosummary/mag2exp.ltem.integrated_magnetic_flux_density.rst", "api/_autosummary/mag2exp.ltem.phase.rst", "api/_autosummary/mag2exp.ltem.relativistic_wavelength.rst", "api/_autosummary/mag2exp.magnetometry.rst", "api/_autosummary/mag2exp.magnetometry.magnetisation.rst", "api/_autosummary/mag2exp.magnetometry.torque.rst", "api/_autosummary/mag2exp.mfm.rst", "api/_autosummary/mag2exp.mfm.phase_shift.rst", "api/_autosummary/mag2exp.quick_plots.rst", "api/_autosummary/mag2exp.quick_plots.ltem_defocus.rst", "api/_autosummary/mag2exp.quick_plots.ltem_ft_phase.rst", "api/_autosummary/mag2exp.quick_plots.ltem_integrated_mfd.rst", "api/_autosummary/mag2exp.quick_plots.ltem_phase.rst", "api/_autosummary/mag2exp.quick_plots.mfm_phase_shift.rst", "api/_autosummary/mag2exp.quick_plots.sans_chiral_function.rst", "api/_autosummary/mag2exp.quick_plots.sans_cross_section.rst", "api/_autosummary/mag2exp.quick_plots.saxs.rst", "api/_autosummary/mag2exp.quick_plots.x_ray_holography.rst", "api/_autosummary/mag2exp.sans.rst", "api/_autosummary/mag2exp.sans.chiral_function.rst", "api/_autosummary/mag2exp.sans.cross_section.rst", "api/_autosummary/mag2exp.test.rst", "api/_autosummary/mag2exp.x_ray.rst", "api/_autosummary/mag2exp.x_ray.holography.rst", "api/_autosummary/mag2exp.x_ray.saxs.rst", "api/_autosummary/micromagneticdata.rst", "api/_autosummary/micromagneticdata.AbstractDrive.rst", "api/_autosummary/micromagneticdata.CombinedDrive.rst", "api/_autosummary/micromagneticdata.Data.rst", "api/_autosummary/micromagneticdata.Drive.rst", "api/_autosummary/micromagneticdata.Mumax3Drive.rst", "api/_autosummary/micromagneticdata.OOMMFDrive.rst", "api/_autosummary/micromagneticdata.test.rst", "api/_autosummary/micromagneticmodel.rst", "api/_autosummary/micromagneticmodel.CubicAnisotropy.rst", "api/_autosummary/micromagneticmodel.DMI.rst", "api/_autosummary/micromagneticmodel.Damping.rst", "api/_autosummary/micromagneticmodel.Demag.rst", "api/_autosummary/micromagneticmodel.Driver.rst", "api/_autosummary/micromagneticmodel.Dynamics.rst", "api/_autosummary/micromagneticmodel.DynamicsTerm.rst", "api/_autosummary/micromagneticmodel.Energy.rst", "api/_autosummary/micromagneticmodel.EnergyTerm.rst", "api/_autosummary/micromagneticmodel.Evolver.rst", "api/_autosummary/micromagneticmodel.Exchange.rst", "api/_autosummary/micromagneticmodel.ExternalDriver.rst", "api/_autosummary/micromagneticmodel.ExternalRunner.rst", "api/_autosummary/micromagneticmodel.MagnetoElastic.rst", "api/_autosummary/micromagneticmodel.Precession.rst", "api/_autosummary/micromagneticmodel.RKKY.rst", "api/_autosummary/micromagneticmodel.Slonczewski.rst", "api/_autosummary/micromagneticmodel.System.rst", "api/_autosummary/micromagneticmodel.UniaxialAnisotropy.rst", "api/_autosummary/micromagneticmodel.Zeeman.rst", "api/_autosummary/micromagneticmodel.ZhangLi.rst", "api/_autosummary/micromagneticmodel.abstract.rst", "api/_autosummary/micromagneticmodel.abstract.Abstract.rst", "api/_autosummary/micromagneticmodel.abstract.Container.rst", "api/_autosummary/micromagneticmodel.abstract.Term.rst", "api/_autosummary/micromagneticmodel.consts.rst", "api/_autosummary/micromagneticmodel.consts.e.rst", "api/_autosummary/micromagneticmodel.consts.g.rst", "api/_autosummary/micromagneticmodel.consts.gamma.rst", "api/_autosummary/micromagneticmodel.consts.gamma0.rst", "api/_autosummary/micromagneticmodel.consts.h.rst", "api/_autosummary/micromagneticmodel.consts.hbar.rst", "api/_autosummary/micromagneticmodel.consts.kB.rst", "api/_autosummary/micromagneticmodel.consts.me.rst", "api/_autosummary/micromagneticmodel.consts.mu0.rst", "api/_autosummary/micromagneticmodel.consts.muB.rst", "api/_autosummary/micromagneticmodel.examples.rst", "api/_autosummary/micromagneticmodel.examples.macrospin.rst", "api/_autosummary/micromagneticmodel.test.rst", "api/_autosummary/micromagnetictests.rst", "api/_autosummary/micromagnetictests.calculatortests.rst", "api/_autosummary/micromagnetictests.calculatortests.TestCompute.rst", "api/_autosummary/micromagnetictests.calculatortests.TestCubicAnisotropy.rst", "api/_autosummary/micromagnetictests.calculatortests.TestDMI.rst", "api/_autosummary/micromagnetictests.calculatortests.TestDamping.rst", "api/_autosummary/micromagnetictests.calculatortests.TestDemag.rst", "api/_autosummary/micromagnetictests.calculatortests.TestDynamics.rst", "api/_autosummary/micromagnetictests.calculatortests.TestEnergy.rst", "api/_autosummary/micromagnetictests.calculatortests.TestExchange.rst", "api/_autosummary/micromagnetictests.calculatortests.TestFixedSubregions.rst", "api/_autosummary/micromagnetictests.calculatortests.TestHysteresisDriver.rst", "api/_autosummary/micromagnetictests.calculatortests.TestMesh.rst", "api/_autosummary/micromagnetictests.calculatortests.TestMinDriver.rst", "api/_autosummary/micromagnetictests.calculatortests.TestPrecession.rst", "api/_autosummary/micromagnetictests.calculatortests.TestRKKY.rst", "api/_autosummary/micromagnetictests.calculatortests.TestSlonczewski.rst", "api/_autosummary/micromagnetictests.calculatortests.TestThreads.rst", "api/_autosummary/micromagnetictests.calculatortests.TestTimeDriver.rst", "api/_autosummary/micromagnetictests.calculatortests.TestUniaxialAnisotropy.rst", "api/_autosummary/micromagnetictests.calculatortests.TestZeeman.rst", "api/_autosummary/micromagnetictests.calculatortests.TestZhangLi.rst", "api/_autosummary/micromagnetictests.calculatortests.test_dirname.rst", "api/_autosummary/micromagnetictests.calculatortests.test_format.rst", "api/_autosummary/micromagnetictests.calculatortests.test_info_file.rst", "api/_autosummary/micromagnetictests.calculatortests.test_multiple_drives.rst", "api/_autosummary/micromagnetictests.calculatortests.test_outputstep.rst", "api/_autosummary/micromagnetictests.calculatortests.test_schedule.rst", "api/_autosummary/micromagnetictests.calculatortests.test_skyrmion.rst", "api/_autosummary/micromagnetictests.calculatortests.test_stdprob3.rst", "api/_autosummary/micromagnetictests.calculatortests.test_stdprob4.rst", "api/_autosummary/micromagnetictests.calculatortests.test_stdprob5.rst", "api/_autosummary/micromagnetictests.get_tests.rst", "api/_autosummary/micromagnetictests.test.rst", "api/_autosummary/mumax3c.rst", "api/_autosummary/mumax3c.MinDriver.rst", "api/_autosummary/mumax3c.RelaxDriver.rst", "api/_autosummary/mumax3c.TimeDriver.rst", "api/_autosummary/mumax3c.delete.rst", "api/_autosummary/mumax3c.mumax3.rst", "api/_autosummary/mumax3c.mumax3.ExeMumax3Runner.rst", "api/_autosummary/mumax3c.mumax3.Mumax3Runner.rst", "api/_autosummary/mumax3c.mumax3.Runner.rst", "api/_autosummary/mumax3c.mumax3.overhead.rst", "api/_autosummary/mumax3c.runner.rst", "api/_autosummary/mumax3c.test.rst", "api/_autosummary/mumax3c.test_docker.rst", "api/_autosummary/oommfc.rst", "api/_autosummary/oommfc.CGEvolver.rst", "api/_autosummary/oommfc.Driver.rst", "api/_autosummary/oommfc.EulerEvolver.rst", "api/_autosummary/oommfc.HysteresisDriver.rst", "api/_autosummary/oommfc.MinDriver.rst", "api/_autosummary/oommfc.RungeKuttaEvolver.rst", "api/_autosummary/oommfc.SpinTEvolver.rst", "api/_autosummary/oommfc.SpinXferEvolver.rst", "api/_autosummary/oommfc.TimeDriver.rst", "api/_autosummary/oommfc.UHH_ThetaEvolver.rst", "api/_autosummary/oommfc.Xf_ThermHeunEvolver.rst", "api/_autosummary/oommfc.Xf_ThermSpinXferEvolver.rst", "api/_autosummary/oommfc.compute.rst", "api/_autosummary/oommfc.delete.rst", "api/_autosummary/oommfc.oommf.rst", "api/_autosummary/oommfc.oommf.DockerOOMMFRunner.rst", "api/_autosummary/oommfc.oommf.ExeOOMMFRunner.rst", "api/_autosummary/oommfc.oommf.OOMMFRunner.rst", "api/_autosummary/oommfc.oommf.Runner.rst", "api/_autosummary/oommfc.oommf.TclOOMMFRunner.rst", "api/_autosummary/oommfc.oommf.overhead.rst", "api/_autosummary/oommfc.runner.rst", "api/_autosummary/oommfc.test.rst", "api/_autosummary/oommfc.test_docker.rst", "api/_autosummary/ubermag.rst", "api/_autosummary/ubermag.debug_info.rst", "api/_autosummary/ubermag.test.rst", "api/_autosummary/ubermagtable.rst", "api/_autosummary/ubermagtable.Table.rst", "api/_autosummary/ubermagtable.interact.rst", "api/_autosummary/ubermagtable.test.rst", "api/_autosummary/ubermagtable.util.rst", "api/_autosummary/ubermagtable.util.columns.rst", "api/_autosummary/ubermagtable.util.data.rst", "api/_autosummary/ubermagtable.util.units.rst", "api/_autosummary/ubermagutil.rst", "api/_autosummary/ubermagutil.changedir.rst", "api/_autosummary/ubermagutil.hysteresis_values.rst", "api/_autosummary/ubermagutil.inherit_docs.rst", "api/_autosummary/ubermagutil.setup_logging.rst", "api/_autosummary/ubermagutil.test.rst", "api/_autosummary/ubermagutil.typesystem.rst", "api/_autosummary/ubermagutil.typesystem.Descriptor.rst", "api/_autosummary/ubermagutil.typesystem.Dictionary.rst", "api/_autosummary/ubermagutil.typesystem.Name.rst", "api/_autosummary/ubermagutil.typesystem.Parameter.rst", "api/_autosummary/ubermagutil.typesystem.Scalar.rst", "api/_autosummary/ubermagutil.typesystem.Subset.rst", "api/_autosummary/ubermagutil.typesystem.Typed.rst", "api/_autosummary/ubermagutil.typesystem.Vector.rst", "api/_autosummary/ubermagutil.typesystem.typesystem.rst", "api/_autosummary/ubermagutil.units.rst", "api/_autosummary/ubermagutil.units.si_max_multiplier.rst", "api/_autosummary/ubermagutil.units.si_multiplier.rst", "api/index.rst", "changelog.rst", "contributing.rst", "demo.ipynb", "documentation.rst", "documentation/compatibility.rst", "documentation/discretisedfield.rst", "documentation/index.rst", "documentation/mag2exp.rst", "documentation/micromagneticdata.rst", "documentation/micromagneticmodel.rst", "documentation/micromagnetictests.rst", "documentation/mumax3c.rst", "documentation/notebooks/discretisedfield/field-definition.ipynb", "documentation/notebooks/discretisedfield/field-fft.ipynb", "documentation/notebooks/discretisedfield/field-holoviews-visualisation.ipynb", "documentation/notebooks/discretisedfield/field-k3d-visualisation.ipynb", "documentation/notebooks/discretisedfield/field-matplotlib-visualisation.ipynb", "documentation/notebooks/discretisedfield/field-normalisation.ipynb", "documentation/notebooks/discretisedfield/field-operations.ipynb", "documentation/notebooks/discretisedfield/field-read-write.ipynb", "documentation/notebooks/discretisedfield/field-rotations.ipynb", "documentation/notebooks/discretisedfield/field-spatially-varying.ipynb", "documentation/notebooks/discretisedfield/field-tools.ipynb", "documentation/notebooks/discretisedfield/field-valid.ipynb", "documentation/notebooks/discretisedfield/line.ipynb", "documentation/notebooks/discretisedfield/mesh-basics.ipynb", "documentation/notebooks/discretisedfield/mesh-bc.ipynb", "documentation/notebooks/discretisedfield/mesh-line-plane.ipynb", "documentation/notebooks/discretisedfield/mesh-pad.ipynb", "documentation/notebooks/discretisedfield/mesh-subregions.ipynb", "documentation/notebooks/discretisedfield/mesh-visualisation.ipynb", "documentation/notebooks/discretisedfield/mesh-widgets.ipynb", "documentation/notebooks/discretisedfield/ovf2vtk.ipynb", "documentation/notebooks/discretisedfield/region-basics.ipynb", "documentation/notebooks/discretisedfield/region-facing-surfaces.ipynb", "documentation/notebooks/discretisedfield/region-visualisation.ipynb", "documentation/notebooks/discretisedfield/xarray-usage.ipynb", "documentation/notebooks/mag2exp/DC_magnetometry.ipynb", "documentation/notebooks/mag2exp/Lorentz_TEM.ipynb", "documentation/notebooks/mag2exp/Magnetic_Force_Microscopy.ipynb", "documentation/notebooks/mag2exp/Rotations_Lorentz_Microscopy.ipynb", "documentation/notebooks/mag2exp/SANS.ipynb", "documentation/notebooks/mag2exp/SAXS.ipynb", "documentation/notebooks/mag2exp/Torque_magnetometry.ipynb", "documentation/notebooks/mag2exp/X_ray_Holography.ipynb", "documentation/notebooks/micromagneticdata/documentation.ipynb", "documentation/notebooks/micromagneticdata/interactive_plotting.ipynb", "documentation/notebooks/micromagneticmodel/constants.ipynb", "documentation/notebooks/micromagneticmodel/deriving-dynamics-term.ipynb", "documentation/notebooks/micromagneticmodel/deriving-energy-term.ipynb", "documentation/notebooks/micromagneticmodel/dynamics-terms.ipynb", "documentation/notebooks/micromagneticmodel/energy-terms.ipynb", "documentation/notebooks/micromagneticmodel/evolver-driver.ipynb", "documentation/notebooks/micromagneticmodel/same-class-terms.ipynb", "documentation/notebooks/micromagneticmodel/system.ipynb", "documentation/notebooks/micromagneticmodel/term-parameters.ipynb", "documentation/notebooks/micromagnetictests/usage.ipynb", "documentation/notebooks/oommfc/controlling-default-runner.ipynb", "documentation/notebooks/oommfc/cubicanisotropy.ipynb", "documentation/notebooks/oommfc/dirname.ipynb", "documentation/notebooks/oommfc/dmi.ipynb", "documentation/notebooks/oommfc/exchange.ipynb", "documentation/notebooks/oommfc/mindriver-steps.ipynb", "documentation/notebooks/oommfc/parallel.ipynb", "documentation/notebooks/oommfc/uniaxialanisotropy.ipynb", "documentation/notebooks/oommfc/verbosity_levels.ipynb", "documentation/notebooks/oommfc/zeeman.ipynb", "documentation/notebooks/ubermag/hdf5-file-specification.ipynb", "documentation/notebooks/ubermag/ubermag-version.ipynb", "documentation/notebooks/ubermagtable/table-basics.ipynb", "documentation/notebooks/ubermagtable/table-fft.ipynb", "documentation/notebooks/ubermagtable/table-interactive-plot.ipynb", "documentation/notebooks/ubermagtable/table-merge.ipynb", "documentation/notebooks/ubermagtable/table-visualisation.ipynb", "documentation/notebooks/ubermagtable/table-widgets.ipynb", "documentation/notebooks/ubermagutil/constant-attributes.ipynb", "documentation/notebooks/ubermagutil/hysteresis.ipynb", "documentation/notebooks/ubermagutil/imposing-typesystem.ipynb", "documentation/notebooks/ubermagutil/inherit-docs.ipynb", "documentation/notebooks/ubermagutil/logging.ipynb", "documentation/notebooks/ubermagutil/otherwise-type.ipynb", "documentation/notebooks/ubermagutil/parameter-descriptor.ipynb", "documentation/notebooks/ubermagutil/si-prefix.ipynb", "documentation/oommfc.rst", "documentation/ubermag.rst", "documentation/ubermagtable.rst", "documentation/ubermagutil.rst", "examples/index.rst", "examples/notebooks/07-tutorial-standard-problem3.ipynb", "examples/notebooks/08-tutorial-standard-problem4.ipynb", "examples/notebooks/09-tutorial-standard-problem5.ipynb", "examples/notebooks/10-tutorial-standard-problem-fmr.ipynb", "examples/notebooks/11-tutorial-deriving-fields.ipynb", "examples/notebooks/12-tutorial-stray-field.ipynb", "examples/notebooks/13-tutorial-skyrmion.ipynb", "examples/notebooks/STT-dw-motion.ipynb", "examples/notebooks/choosing-runner.ipynb", "examples/notebooks/energy-term-computations.ipynb", "examples/notebooks/field-operations2.ipynb", "examples/notebooks/finite-temperature.ipynb", "examples/notebooks/fixed-subregions.ipynb", "examples/notebooks/hysteresis.ipynb", "examples/notebooks/multiple-terms.ipynb", "examples/notebooks/negative-A.ipynb", "examples/notebooks/periodic-boundary-conditions.ipynb", "examples/notebooks/rkky.ipynb", "examples/notebooks/sine-hysteresis.ipynb", "examples/notebooks/space-time-field.ipynb", "examples/notebooks/spatially-varying-parameters1.ipynb", "examples/notebooks/spatially-varying-parameters2.ipynb", "examples/notebooks/time-dependent-field.ipynb", "examples/notebooks/time-dependent-field-current.ipynb", "faq.rst", "getting-started/index.rst", "getting-started/jupyter-basics.rst", "getting-started/notebooks/dw-pair-conversion.ipynb", "getting-started/notebooks/dynamics-equation.ipynb", "getting-started/notebooks/energy-equation.ipynb", "getting-started/notebooks/first-ubermag-simulation.ipynb", "getting-started/notebooks/mag2exp.ipynb", "getting-started/notebooks/magnetisation-field.ipynb", "getting-started/notebooks/python-basics.ipynb", "getting-started/notebooks/unit-converter.ipynb", "help.rst", "index.rst", "installation.rst", "news.rst"], "titles": ["discretisedfield", "Field", "FieldRotator", "Line", "Mesh", "Region", "discretisedfield.integrate", "discretisedfield.interact", "discretisedfield.io", "discretisedfield.io.ovf2vtk", "discretisedfield.io.ovf2vtk.ovf2vtk", "discretisedfield.plotting", "Hv", "K3dField", "K3dMesh", "K3dRegion", "MplField", "MplMesh", "MplRegion", "discretisedfield.plotting.add_colorwheel", "discretisedfield.test", "discretisedfield.tools", "discretisedfield.tools.count_bps", "discretisedfield.tools.count_large_cell_angle_regions", "discretisedfield.tools.demag_field", "discretisedfield.tools.demag_tensor", "discretisedfield.tools.emergent_magnetic_field", "discretisedfield.tools.max_neighbouring_cell_angle", "discretisedfield.tools.neighbouring_cell_angle", "discretisedfield.tools.topological_charge", "discretisedfield.tools.topological_charge_density", "mag2exp", "mag2exp.ltem", "mag2exp.ltem.defocus_image", "mag2exp.ltem.integrated_magnetic_flux_density", "mag2exp.ltem.phase", "mag2exp.ltem.relativistic_wavelength", "mag2exp.magnetometry", "mag2exp.magnetometry.magnetisation", "mag2exp.magnetometry.torque", "mag2exp.mfm", "mag2exp.mfm.phase_shift", "mag2exp.quick_plots", "mag2exp.quick_plots.ltem_defocus", "mag2exp.quick_plots.ltem_ft_phase", "mag2exp.quick_plots.ltem_integrated_mfd", "mag2exp.quick_plots.ltem_phase", "mag2exp.quick_plots.mfm_phase_shift", "mag2exp.quick_plots.sans_chiral_function", "mag2exp.quick_plots.sans_cross_section", "mag2exp.quick_plots.saxs", "mag2exp.quick_plots.x_ray_holography", "mag2exp.sans", "mag2exp.sans.chiral_function", "mag2exp.sans.cross_section", "mag2exp.test", "mag2exp.x_ray", "mag2exp.x_ray.holography", "mag2exp.x_ray.saxs", "micromagneticdata", "AbstractDrive", "CombinedDrive", "Data", "Drive", "Mumax3Drive", "OOMMFDrive", "micromagneticdata.test", "micromagneticmodel", "CubicAnisotropy", "DMI", "Damping", "Demag", "Driver", "Dynamics", "DynamicsTerm", "Energy", "EnergyTerm", "Evolver", "Exchange", "ExternalDriver", "ExternalRunner", "MagnetoElastic", "Precession", "RKKY", "Slonczewski", "System", "UniaxialAnisotropy", "Zeeman", "ZhangLi", "micromagneticmodel.abstract", "Abstract", "Container", "Term", "micromagneticmodel.consts", "micromagneticmodel.consts.e", "micromagneticmodel.consts.g", "micromagneticmodel.consts.gamma", "micromagneticmodel.consts.gamma0", "micromagneticmodel.consts.h", "micromagneticmodel.consts.hbar", "micromagneticmodel.consts.kB", "micromagneticmodel.consts.me", "micromagneticmodel.consts.mu0", "micromagneticmodel.consts.muB", "micromagneticmodel.examples", "micromagneticmodel.examples.macrospin", "micromagneticmodel.test", "micromagnetictests", "micromagnetictests.calculatortests", "TestCompute", "TestCubicAnisotropy", "TestDMI", "TestDamping", "TestDemag", "TestDynamics", "TestEnergy", "TestExchange", "TestFixedSubregions", "TestHysteresisDriver", "TestMesh", "TestMinDriver", "TestPrecession", "TestRKKY", "TestSlonczewski", "TestThreads", "TestTimeDriver", "TestUniaxialAnisotropy", "TestZeeman", "TestZhangLi", "micromagnetictests.calculatortests.test_dirname", "micromagnetictests.calculatortests.test_format", "micromagnetictests.calculatortests.test_info_file", "micromagnetictests.calculatortests.test_multiple_drives", "micromagnetictests.calculatortests.test_outputstep", "micromagnetictests.calculatortests.test_schedule", "micromagnetictests.calculatortests.test_skyrmion", "micromagnetictests.calculatortests.test_stdprob3", "micromagnetictests.calculatortests.test_stdprob4", "micromagnetictests.calculatortests.test_stdprob5", "micromagnetictests.get_tests", "micromagnetictests.test", "mumax3c", "MinDriver", "RelaxDriver", "TimeDriver", "mumax3c.delete", "mumax3c.mumax3", "ExeMumax3Runner", "Mumax3Runner", "Runner", "mumax3c.mumax3.overhead", "mumax3c.runner", "mumax3c.test", "mumax3c.test_docker", "oommfc", "CGEvolver", "Driver", "EulerEvolver", "HysteresisDriver", "MinDriver", "RungeKuttaEvolver", "SpinTEvolver", "SpinXferEvolver", "TimeDriver", "UHH_ThetaEvolver", "Xf_ThermHeunEvolver", "Xf_ThermSpinXferEvolver", "oommfc.compute", "oommfc.delete", "oommfc.oommf", "DockerOOMMFRunner", "ExeOOMMFRunner", "OOMMFRunner", "Runner", "TclOOMMFRunner", "oommfc.oommf.overhead", "oommfc.runner", "oommfc.test", "oommfc.test_docker", "ubermag", "ubermag.debug_info", "ubermag.test", "ubermagtable", "Table", "ubermagtable.interact", "ubermagtable.test", "ubermagtable.util", "ubermagtable.util.columns", "ubermagtable.util.data", "ubermagtable.util.units", "ubermagutil", "ubermagutil.changedir", "ubermagutil.hysteresis_values", "ubermagutil.inherit_docs", "ubermagutil.setup_logging", "ubermagutil.test", "ubermagutil.typesystem", "Descriptor", "Dictionary", "Name", "Parameter", "Scalar", "Subset", "Typed", "Vector", "ubermagutil.typesystem.typesystem", "ubermagutil.units", "ubermagutil.units.si_max_multiplier", "ubermagutil.units.si_multiplier", "API Reference", "Changelog", "Contributing", "Demo", "Documentation", "Compatibility: Ubermag - OOMMF - mumax<sup>3</sup>", "discretisedfield", "Package documentation", "mag2exp", "micromagneticdata", "micromagneticmodel", "micromagnetictests", "mumax3c", "Defining a uniform field", "FFT Tutorial with <code class=\"docutils literal notranslate\"><span class=\"pre\">discretisedfield</span></code>", "Visualising field using <code class=\"docutils literal notranslate\"><span class=\"pre\">holoviews</span></code>", "Field visualisation using <code class=\"docutils literal notranslate\"><span class=\"pre\">k3d</span></code>", "Visualising field using <code class=\"docutils literal notranslate\"><span class=\"pre\">matplotlib</span></code>", "Field normalisation", "Field operations", "Reading and writing fields", "Field rotation", "Spatially varying fields", "Field tools", "Field <code class=\"docutils literal notranslate\"><span class=\"pre\">Valid</span></code>", "Line object", "Mesh basics", "Mesh boundary conditions", "Mesh plane and line", "Mesh pad", "Mesh subregions", "Mesh visualisation", "Mesh widgets", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ovf2vtk</span></code> tool", "Region basics", "Region facing surfaces", "Region visualisation", "Importing/Exporting field from/to <code class=\"docutils literal notranslate\"><span class=\"pre\">xarray.DataArray</span></code>", "DC magnetometry", "Lorentz Transmission Electron Microscopy", "Magnetic Force Microscopy", "Using Rotations with <code class=\"docutils literal notranslate\"><span class=\"pre\">mag2exp</span></code>", "Small Angle Neutron Scattering", "Small Angle X-ray Scattering", "Torque magnetometry", "X-ray Holography", "Analysing simulation results", "Interactive plots", "Constants", "Deriving a dynamics term", "Deriving an energy term", "Dynamics terms and dynamics equation", "Energy terms and energy equation", "Deriving evolver and driver classes", "Multiple energy terms of the same class", "Defining micromagnetic system", "Term parameters", "Usage", "Controlling the default runner", "Tutorial 05: Cubic anisotropy energy term", "Custom directory name", "Tutorial 04: Dzyaloshinskii-Moriya energy term", "Tutorial 02: Exchange energy term", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinDriver</span></code> steps", "Running simulations in parallel", "Tutorial 03: Uniaxial anisotropy energy term", "Verbosity levels", "Tutorial 01: Zeeman energy term", "HDF5 specification in Ubermag", "Collecting debug information", "Table basics", "Table FFT", "Table interactive plot", "Table merge", "Table visualisation", "Table widgets", "Constant attributes", "Hysteresis values", "Imposing <code class=\"docutils literal notranslate\"><span class=\"pre\">typesystem</span></code> on a class", "<code class=\"docutils literal notranslate\"><span class=\"pre\">inherit_docs</span></code> decorator", "Logging control", "Defining <code class=\"docutils literal notranslate\"><span class=\"pre\">otherwise</span></code> type", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Parameter</span></code> descriptor", "Extracting the SI prefix", "oommfc", "ubermag", "ubermagtable", "ubermagutil", "Examples", "Standard problem 3", "Standard problem 4", "Standard problem 5", "FMR standard problem", "Deriving energy values", "Calculating a stray field using an airbox method", "Skyrmion in a disk", "Current induced domain wall motion using STT", "Choosing runner", "Energy term computations", "Field operations 2", "Simulation at finite temperature", "Fixed subregions", "Hysteresis simulations", "Multiple energy terms of the same class", "Negative exchange energy constant", "Periodic boundary conditions", "RKKY energy term", "Sine-hysteresis", "Both spatially and time varying field", "Spatially varying parameters 1", "Spatially varying parameters 2", "Time-varying field", "Time-dependent fields and currents", "FAQ", "Getting started", "Jupyter lab", "Exercise: Domain wall pair conversion", "Dynamics equation", "Energy equation", "Our first ubermag simulation", "Tutorial: mag2exp", "Magnetisation field", "Python basics", "Unit Conversions", "Help", "Ubermag", "Installation", "News"], "terms": {"finit": [0, 1, 4, 164, 166, 210, 222, 230, 235, 243, 297, 301, 328, 330, 334], "differ": [0, 1, 2, 4, 5, 12, 16, 17, 18, 25, 30, 60, 61, 62, 87, 91, 150, 151, 173, 175, 176, 210, 212, 213, 216, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 235, 239, 240, 242, 243, 245, 249, 252, 254, 256, 260, 261, 263, 264, 265, 268, 271, 274, 275, 276, 277, 279, 289, 291, 301, 306, 311, 312, 313, 315, 318, 319, 321, 326, 327, 328, 330, 331, 332, 334, 335], "field": [0, 2, 3, 4, 6, 7, 8, 12, 13, 16, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 57, 58, 60, 61, 63, 68, 69, 70, 78, 81, 82, 84, 85, 86, 87, 88, 105, 167, 183, 184, 210, 215, 234, 237, 238, 239, 243, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 264, 269, 270, 272, 273, 280, 297, 298, 300, 301, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 323, 325, 326, 327, 328, 329, 332, 334, 336], "class": [0, 1, 2, 3, 4, 5, 11, 12, 13, 14, 15, 16, 17, 18, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 139, 141, 142, 143, 144, 146, 147, 148, 149, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 182, 183, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 210, 213, 219, 222, 223, 229, 231, 232, 233, 246, 250, 258, 259, 261, 270, 277, 279, 285, 288, 290, 291, 296, 297, 321, 326, 327, 330, 335, 336], "function": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 21, 22, 27, 29, 31, 32, 33, 37, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 59, 60, 67, 79, 87, 104, 107, 108, 139, 141, 145, 146, 149, 154, 156, 168, 169, 173, 179, 182, 183, 184, 186, 190, 194, 196, 198, 199, 200, 201, 202, 203, 204, 206, 210, 212, 213, 223, 224, 225, 227, 230, 232, 233, 235, 239, 240, 243, 245, 247, 248, 249, 250, 251, 252, 254, 255, 256, 261, 265, 268, 274, 276, 278, 279, 280, 281, 283, 286, 289, 294, 298, 299, 300, 302, 303, 304, 307, 308, 309, 311, 314, 315, 316, 318, 320, 329, 330, 332, 334], "submodul": [0, 8, 31, 32, 37, 40, 52, 56, 67, 107, 141, 154, 182, 190, 210, 329], "discretisedfield": [1, 2, 3, 4, 5, 12, 13, 14, 15, 16, 17, 18, 33, 34, 35, 38, 39, 41, 53, 54, 57, 58, 60, 63, 68, 69, 70, 78, 81, 82, 84, 85, 86, 87, 88, 167, 212, 216, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 264, 269, 270, 272, 273, 278, 280, 289, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 330, 331, 334, 335, 336], "mesh": [1, 2, 3, 7, 12, 13, 14, 16, 17, 23, 25, 26, 27, 28, 29, 30, 33, 34, 35, 38, 39, 41, 53, 54, 57, 58, 68, 69, 70, 78, 81, 82, 84, 85, 86, 87, 88, 156, 210, 212, 215, 222, 223, 224, 225, 226, 227, 229, 232, 233, 234, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 261, 264, 265, 268, 269, 270, 271, 272, 273, 274, 276, 280, 283, 291, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 325, 326, 327, 328, 329], "nvdim": [1, 2, 4, 7, 12, 13, 16, 23, 26, 27, 28, 29, 30, 33, 34, 35, 38, 39, 41, 53, 54, 57, 58, 68, 69, 70, 78, 81, 82, 84, 85, 86, 87, 88, 210, 212, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 264, 265, 268, 269, 270, 271, 272, 273, 274, 276, 277, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 325, 326, 327, 328, 329, 330], "none": [1, 2, 3, 4, 5, 6, 12, 13, 14, 15, 16, 17, 18, 23, 33, 41, 43, 47, 51, 57, 60, 63, 64, 65, 73, 75, 79, 80, 85, 91, 92, 156, 167, 183, 194, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 212, 224, 225, 226, 230, 232, 243, 246, 248, 255, 256, 277], "valu": [1, 2, 3, 4, 5, 7, 12, 13, 14, 16, 17, 18, 23, 26, 27, 28, 29, 30, 33, 34, 35, 38, 39, 41, 53, 54, 57, 58, 60, 61, 62, 63, 64, 65, 68, 69, 70, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 142, 143, 144, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 183, 189, 192, 194, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 210, 212, 222, 223, 224, 225, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 258, 259, 260, 261, 262, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 285, 287, 289, 290, 291, 292, 296, 297, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 325, 326, 327, 328, 329, 332, 335], "0": [1, 2, 3, 4, 5, 7, 12, 13, 14, 15, 16, 17, 18, 23, 26, 27, 28, 29, 30, 33, 34, 35, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 53, 54, 57, 58, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 73, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 92, 105, 148, 157, 158, 159, 167, 172, 183, 192, 197, 201, 204, 208, 212, 214, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 282, 283, 286, 287, 289, 290, 292, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 325, 326, 327, 328, 329, 330, 331, 332], "norm": [1, 12, 13, 16, 38, 39, 41, 53, 54, 57, 58, 60, 85, 210, 212, 224, 225, 226, 227, 228, 229, 230, 233, 234, 247, 248, 249, 250, 251, 252, 253, 254, 256, 264, 268, 269, 270, 271, 272, 273, 274, 276, 277, 280, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 325, 326, 327, 328, 329, 330], "vdim": [1, 12, 16, 60, 210, 212, 222, 223, 224, 226, 228, 230, 231, 232, 246, 248, 255, 272, 277], "dtype": [1, 3, 246, 255, 282, 311], "unit": [1, 3, 4, 5, 12, 13, 14, 16, 17, 18, 23, 26, 27, 28, 35, 41, 54, 58, 183, 210, 223, 224, 227, 228, 230, 231, 232, 235, 236, 237, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 272, 277, 279, 280, 283, 284, 292, 298, 311, 323, 334], "valid": [1, 4, 5, 12, 17, 18, 197, 198, 199, 200, 201, 202, 203, 204, 205, 210, 212, 215, 224, 226, 227, 229, 230, 239, 240, 245, 258, 259, 277, 287, 291, 303, 304, 311, 315, 319, 325, 327, 330], "true": [1, 4, 5, 12, 13, 16, 17, 29, 33, 39, 63, 64, 65, 79, 80, 91, 92, 145, 149, 150, 156, 167, 168, 170, 173, 175, 176, 183, 187, 189, 197, 198, 199, 200, 201, 202, 203, 204, 205, 210, 222, 223, 224, 225, 226, 228, 229, 232, 233, 235, 239, 243, 248, 250, 258, 259, 261, 267, 269, 272, 277, 285, 287, 289, 291, 298, 308, 309], "vdim_map": [1, 222, 226], "kwarg": [1, 2, 3, 4, 5, 7, 12, 13, 14, 15, 16, 17, 18, 19, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 92, 142, 143, 144, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 183, 184, 197, 198, 199, 200, 201, 202, 203, 204, 205, 225, 262], "thi": [1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 23, 27, 28, 29, 30, 34, 41, 43, 45, 53, 60, 61, 62, 63, 64, 65, 69, 79, 80, 83, 85, 87, 92, 149, 156, 168, 170, 173, 183, 184, 189, 194, 198, 199, 200, 201, 202, 203, 204, 210, 212, 213, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 270, 271, 272, 273, 275, 277, 279, 280, 281, 283, 284, 286, 287, 288, 289, 291, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 318, 319, 320, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 334, 335], "specifi": [1, 2, 3, 4, 5, 12, 13, 14, 15, 16, 17, 18, 23, 27, 28, 33, 57, 79, 84, 87, 88, 156, 167, 183, 198, 200, 201, 204, 210, 214, 222, 223, 224, 226, 228, 230, 231, 232, 237, 239, 242, 248, 249, 254, 255, 261, 273, 277, 279, 288, 289, 299, 300, 301, 309, 310, 311, 316, 317, 321, 328, 330, 331, 333, 334], "defin": [1, 2, 3, 4, 5, 12, 16, 17, 26, 29, 30, 35, 53, 54, 57, 58, 63, 68, 69, 70, 71, 73, 75, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 142, 143, 144, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 183, 197, 198, 200, 201, 202, 204, 210, 212, 215, 219, 224, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 238, 239, 243, 245, 246, 247, 248, 249, 251, 252, 253, 254, 256, 261, 262, 268, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 283, 287, 291, 296, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 326, 327, 328, 329, 330, 331, 334], "oper": [1, 4, 5, 91, 92, 210, 212, 213, 215, 222, 223, 225, 230, 235, 239, 243, 255, 256, 260, 261, 272, 282, 297, 303, 305, 327, 330, 332, 334, 335], "its": [1, 4, 5, 16, 27, 41, 58, 91, 183, 197, 198, 199, 200, 201, 202, 203, 204, 210, 211, 212, 222, 223, 224, 225, 226, 228, 229, 230, 231, 233, 235, 239, 242, 243, 247, 248, 249, 250, 251, 253, 254, 255, 256, 260, 261, 265, 267, 268, 271, 274, 276, 279, 288, 289, 290, 291, 299, 301, 302, 303, 307, 313, 315, 318, 323, 324, 327, 328, 330, 331, 332, 333, 334, 335], "analysi": [1, 60, 61, 63, 64, 65, 183, 223, 334], "visualis": [1, 3, 4, 5, 13, 14, 15, 16, 17, 18, 33, 34, 35, 41, 53, 54, 57, 58, 60, 183, 215, 229, 230, 232, 254, 255, 279, 295, 299, 305, 321, 330, 334], "The": [1, 2, 3, 4, 5, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 27, 28, 33, 35, 36, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 57, 58, 60, 61, 63, 79, 84, 87, 88, 91, 105, 139, 149, 150, 151, 156, 167, 173, 175, 176, 183, 192, 198, 200, 210, 212, 213, 214, 216, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 255, 256, 258, 259, 260, 261, 262, 265, 266, 268, 270, 271, 272, 274, 275, 276, 278, 279, 280, 281, 282, 284, 289, 291, 292, 294, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 323, 326, 327, 329, 330, 331, 332, 334, 335], "i": [1, 2, 3, 4, 5, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 57, 58, 60, 61, 62, 63, 64, 65, 68, 69, 70, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 90, 91, 92, 105, 139, 142, 143, 144, 145, 148, 149, 151, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 173, 176, 183, 184, 192, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 210, 211, 212, 213, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 294, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 335], "pass": [1, 2, 3, 4, 5, 12, 13, 14, 15, 16, 17, 18, 29, 60, 61, 62, 63, 68, 69, 70, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 91, 142, 143, 144, 145, 151, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 176, 183, 194, 197, 198, 199, 200, 201, 204, 210, 222, 224, 225, 226, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 248, 249, 255, 256, 258, 259, 260, 261, 262, 266, 267, 269, 272, 273, 274, 275, 279, 281, 283, 284, 285, 287, 289, 290, 291, 306, 310, 311, 315, 317, 320, 321, 322, 329, 330], "us": [1, 2, 3, 4, 5, 8, 10, 12, 13, 14, 15, 16, 17, 18, 23, 29, 30, 33, 34, 35, 36, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 57, 58, 60, 62, 63, 64, 65, 68, 69, 70, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 147, 149, 151, 156, 167, 170, 171, 173, 174, 176, 183, 190, 194, 207, 210, 211, 212, 213, 214, 215, 217, 221, 222, 223, 227, 228, 229, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 264, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 289, 291, 292, 294, 297, 298, 299, 300, 301, 302, 306, 307, 308, 309, 311, 313, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336], "anoth": [1, 5, 227, 235, 237, 250, 256, 260, 261, 270, 271, 281, 299, 319, 329, 331], "must": [1, 2, 3, 4, 5, 12, 13, 16, 18, 29, 30, 33, 79, 84, 87, 88, 194, 197, 201, 204, 210, 224, 226, 228, 230, 231, 232, 233, 237, 239, 240, 245, 246, 249, 258, 259, 261, 262, 263, 264, 268, 270, 271, 274, 276, 287, 309, 312, 318, 321, 330, 331], "dimens": [1, 3, 4, 5, 12, 13, 16, 23, 27, 28, 29, 35, 60, 210, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 236, 237, 246, 247, 254, 255, 277, 298, 299, 300, 301, 303, 330, 336], "": [1, 4, 5, 12, 16, 41, 62, 63, 64, 65, 71, 79, 84, 85, 87, 156, 183, 210, 212, 214, 223, 226, 228, 233, 235, 240, 242, 245, 247, 248, 249, 250, 251, 252, 253, 254, 261, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 287, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 325, 326, 327, 328, 329, 331, 332], "For": [1, 2, 3, 4, 5, 6, 7, 12, 13, 14, 15, 16, 17, 18, 29, 60, 62, 68, 69, 70, 78, 79, 80, 81, 82, 84, 86, 87, 91, 142, 143, 144, 151, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 176, 183, 184, 210, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 243, 244, 245, 249, 251, 252, 254, 256, 258, 259, 260, 261, 265, 266, 272, 281, 283, 287, 290, 297, 299, 302, 304, 306, 307, 309, 311, 312, 313, 316, 317, 320, 321, 324, 327, 328, 329, 330, 331, 332, 333, 334, 335], "instanc": [1, 3, 4, 5, 13, 14, 16, 17, 18, 92, 183, 197, 198, 199, 200, 201, 202, 203, 204, 210, 222, 225, 228, 235, 236, 237, 239, 240, 241, 243, 244, 245, 258, 259, 260, 261, 265, 266, 272, 281, 283, 287, 290, 299, 302, 307, 311, 313, 330, 331, 333], "scalar": [1, 3, 12, 13, 16, 27, 28, 29, 30, 33, 35, 41, 43, 44, 46, 47, 48, 49, 50, 51, 53, 54, 57, 58, 60, 61, 63, 69, 70, 78, 82, 84, 88, 183, 198, 200, 205, 210, 212, 223, 225, 227, 228, 230, 231, 233, 246, 248, 249, 251, 252, 253, 254, 255, 256, 258, 259, 265, 279, 287, 291, 299, 304, 314, 317, 325, 329, 330, 334], "1": [1, 2, 3, 4, 5, 7, 12, 13, 14, 16, 17, 18, 19, 23, 26, 27, 28, 29, 30, 33, 34, 35, 36, 38, 39, 41, 43, 44, 45, 46, 48, 49, 53, 54, 57, 58, 60, 61, 62, 63, 64, 68, 69, 70, 71, 73, 78, 79, 80, 81, 82, 84, 85, 86, 88, 90, 91, 92, 94, 99, 100, 102, 105, 142, 143, 144, 148, 150, 158, 159, 163, 167, 172, 175, 183, 192, 197, 198, 199, 200, 204, 205, 207, 208, 212, 214, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 262, 263, 264, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 319, 320, 321, 322, 325, 327, 329, 330, 332, 334], "three": [1, 2, 3, 4, 5, 16, 26, 27, 28, 29, 30, 60, 87, 204, 222, 223, 224, 225, 228, 229, 230, 231, 232, 235, 237, 242, 243, 246, 251, 253, 256, 258, 264, 265, 267, 268, 277, 287, 298, 306, 313, 315, 326, 330, 333, 335], "dimension": [1, 4, 12, 16, 26, 29, 30, 57, 204, 210, 212, 222, 223, 224, 225, 226, 228, 230, 231, 232, 235, 237, 243, 246, 247, 248, 252, 253, 254, 258, 268, 269, 270, 271, 274, 276, 287, 305, 310, 312, 318, 320, 321, 325, 326, 327, 330, 331, 336], "vector": [1, 2, 3, 4, 5, 12, 13, 16, 22, 23, 26, 27, 28, 29, 30, 35, 45, 54, 60, 68, 69, 81, 84, 86, 87, 88, 210, 223, 225, 227, 229, 231, 232, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 260, 261, 265, 268, 270, 271, 274, 276, 287, 290, 299, 301, 303, 304, 305, 306, 314, 326, 330, 332, 334, 336], "3": [1, 2, 3, 4, 5, 7, 12, 13, 14, 16, 17, 18, 23, 26, 27, 28, 29, 30, 33, 34, 35, 38, 39, 41, 47, 53, 54, 57, 58, 60, 68, 69, 81, 84, 85, 86, 87, 91, 155, 157, 160, 161, 162, 164, 165, 166, 183, 197, 198, 200, 201, 203, 204, 208, 212, 214, 216, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 287, 288, 289, 290, 291, 292, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 327, 328, 329, 330, 332, 334, 335], "can": [1, 2, 3, 4, 5, 12, 13, 14, 15, 16, 17, 18, 23, 29, 30, 35, 39, 53, 54, 58, 60, 61, 62, 63, 79, 84, 85, 87, 88, 90, 91, 92, 139, 142, 143, 144, 147, 149, 151, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 173, 176, 183, 198, 203, 210, 211, 212, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335], "set": [1, 3, 4, 5, 17, 18, 41, 60, 61, 63, 64, 65, 83, 85, 149, 170, 173, 183, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 210, 213, 216, 222, 223, 224, 227, 231, 233, 236, 240, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 263, 265, 266, 268, 270, 271, 274, 275, 276, 277, 287, 289, 291, 294, 299, 300, 304, 313, 314, 315, 318, 319, 321, 323, 326, 330, 334, 335], "detail": [1, 2, 5, 6, 7, 15, 16, 26, 29, 30, 60, 79, 84, 87, 88, 142, 143, 144, 151, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 176, 184, 210, 211, 213, 221, 223, 224, 226, 229, 232, 233, 243, 256, 262, 265, 272, 298, 299, 300, 301, 309, 311, 317, 321, 324, 328, 329, 331, 333, 334, 335, 336], "how": [1, 4, 12, 29, 30, 211, 213, 222, 223, 224, 225, 226, 228, 230, 231, 233, 235, 239, 240, 242, 243, 245, 249, 250, 254, 256, 265, 267, 268, 270, 271, 272, 273, 274, 276, 281, 283, 297, 298, 302, 305, 306, 309, 311, 312, 313, 315, 316, 318, 320, 326, 327, 328, 329, 330, 332], "refer": [1, 2, 4, 5, 6, 7, 12, 15, 16, 29, 53, 54, 57, 58, 60, 79, 84, 87, 88, 142, 143, 144, 151, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 176, 184, 210, 212, 213, 221, 223, 224, 225, 226, 228, 229, 230, 231, 233, 235, 246, 256, 260, 261, 262, 265, 297, 309, 311, 317, 321, 324, 329, 333, 334, 335], "similarli": [1, 3, 5, 210, 225, 226, 228, 230, 234, 235, 243, 246, 260, 261, 279, 287, 291, 292, 299, 302, 307, 311, 320, 326, 332], "ha": [1, 4, 12, 16, 27, 28, 60, 61, 63, 87, 173, 197, 198, 200, 201, 204, 210, 212, 214, 223, 224, 226, 228, 230, 231, 232, 233, 235, 237, 241, 243, 245, 246, 248, 249, 251, 253, 254, 255, 262, 267, 268, 270, 271, 274, 276, 277, 280, 284, 289, 291, 305, 310, 311, 312, 318, 319, 321, 327, 329, 331, 332, 333, 334], "normalis": [1, 22, 210, 212, 215, 230, 268, 270, 271, 274, 276, 318], "pleas": [1, 2, 4, 5, 6, 7, 12, 15, 16, 29, 69, 87, 142, 143, 144, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 184, 210, 211, 222, 223, 224, 225, 226, 228, 229, 230, 233, 235, 239, 260, 261, 272, 297, 298, 299, 300, 305, 309, 311, 312, 315, 317, 321, 324, 325, 328, 333, 334, 335, 336], "paramet": [1, 2, 3, 4, 5, 12, 13, 14, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 38, 39, 41, 53, 54, 57, 58, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 73, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 145, 147, 149, 156, 167, 168, 170, 171, 173, 174, 183, 187, 188, 189, 192, 194, 197, 198, 199, 201, 202, 203, 204, 207, 208, 212, 219, 222, 224, 226, 232, 239, 240, 241, 245, 249, 258, 259, 260, 261, 262, 264, 268, 270, 271, 274, 276, 283, 284, 290, 296, 297, 298, 299, 300, 301, 305, 308, 313, 315, 321, 322, 325, 326, 327, 330], "rectangular": [1, 223, 226, 230], "int": [1, 4, 5, 12, 13, 15, 18, 23, 58, 60, 62, 63, 64, 65, 79, 80, 91, 148, 156, 167, 172, 194, 197, 201, 204, 212, 224, 228, 239, 245, 253, 273, 277, 287, 314, 331], "number": [1, 2, 3, 4, 5, 12, 13, 14, 15, 16, 17, 18, 22, 23, 28, 30, 33, 35, 36, 41, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 73, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 156, 167, 183, 192, 201, 204, 207, 208, 210, 212, 222, 223, 224, 226, 228, 230, 231, 232, 234, 235, 237, 238, 239, 240, 242, 243, 255, 262, 272, 273, 275, 277, 280, 287, 299, 308, 311, 314, 321, 330, 332, 334], "array_lik": [1, 3, 4, 5, 12, 14, 17, 18, 41, 57, 68, 81, 84, 86, 87], "callabl": [1, 4, 12, 60, 84, 87, 88, 167, 210, 321, 330], "dict": [1, 4, 5, 12, 16, 22, 61, 63, 68, 69, 70, 78, 81, 82, 84, 86, 87, 88, 183, 189, 194, 226, 246, 248], "option": [1, 2, 3, 4, 5, 12, 13, 14, 15, 16, 17, 18, 22, 23, 27, 28, 29, 30, 33, 35, 57, 60, 62, 63, 64, 65, 71, 79, 80, 83, 84, 85, 87, 88, 91, 156, 167, 168, 170, 183, 194, 197, 198, 201, 204, 210, 212, 224, 226, 228, 232, 235, 240, 242, 243, 255, 256, 260, 261, 275, 277, 309, 321, 333, 335], "properti": [1, 2, 3, 4, 5, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 92, 142, 143, 144, 147, 148, 149, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 183, 200, 210, 212, 223, 224, 233, 235, 240, 245, 255, 258, 259, 260, 261, 262, 264, 269, 302, 307, 308, 326, 329], "default": [1, 2, 3, 4, 5, 12, 13, 14, 15, 16, 17, 18, 23, 27, 28, 29, 30, 62, 63, 64, 65, 79, 80, 84, 85, 91, 142, 143, 144, 147, 149, 151, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 173, 176, 183, 187, 189, 194, 197, 210, 222, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 236, 239, 240, 241, 243, 245, 246, 256, 263, 272, 279, 281, 283, 284, 289, 293, 299, 311, 332, 335], "mean": [1, 4, 12, 16, 19, 35, 41, 210, 226, 227, 235, 237, 250, 280, 299, 302, 307, 314, 328, 329, 330], "provid": [1, 4, 5, 12, 60, 61, 63, 64, 65, 84, 85, 87, 88, 90, 156, 210, 216, 222, 223, 224, 225, 226, 228, 233, 235, 246, 255, 260, 261, 262, 263, 267, 268, 270, 271, 274, 276, 279, 280, 283, 289, 291, 292, 294, 299, 300, 312, 324, 330, 332, 333, 335], "initialis": [1, 3, 69, 79, 90, 91, 210, 222, 223, 224, 228, 230, 231, 243, 261, 262, 263, 287, 298, 300, 302, 305, 307, 309, 310, 313, 315, 321, 325, 326, 327, 328], "zero": [1, 5, 12, 13, 16, 29, 33, 38, 41, 210, 222, 223, 225, 226, 227, 230, 231, 232, 236, 249, 299, 300, 302, 303, 304, 307, 314, 317, 326, 330], "real": [1, 3, 4, 5, 13, 14, 15, 16, 17, 18, 23, 33, 35, 36, 41, 54, 57, 58, 68, 69, 70, 71, 78, 81, 82, 83, 84, 85, 86, 87, 88, 167, 183, 192, 201, 204, 207, 208, 223, 228, 248, 251, 252, 280, 329, 332], "str": [1, 2, 3, 4, 5, 12, 13, 16, 17, 18, 22, 23, 27, 28, 29, 30, 54, 60, 61, 62, 63, 64, 65, 69, 79, 80, 85, 87, 90, 91, 147, 149, 156, 167, 170, 171, 172, 173, 174, 183, 187, 188, 189, 194, 197, 199, 203, 205, 246, 277, 285, 290, 331], "type": [1, 2, 3, 4, 5, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 36, 38, 39, 41, 53, 54, 57, 58, 60, 61, 62, 63, 64, 65, 80, 85, 87, 90, 91, 92, 105, 139, 148, 150, 164, 167, 170, 171, 172, 174, 175, 183, 187, 188, 189, 192, 197, 198, 199, 200, 201, 202, 204, 205, 207, 208, 210, 214, 224, 232, 242, 248, 255, 260, 261, 277, 285, 287, 296, 312, 321, 335], "np": [1, 4, 5, 33, 39, 53, 54, 58, 84, 87, 88, 183, 223, 226, 228, 230, 233, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 280, 298, 301, 321, 329, 331, 332, 336], "data": [1, 3, 12, 13, 59, 60, 61, 63, 64, 65, 79, 156, 168, 182, 183, 210, 223, 224, 225, 226, 229, 230, 234, 243, 246, 269, 272, 277, 279, 280, 281, 282, 283, 284, 298, 299, 300, 301, 305, 309, 311, 312, 319, 320, 321, 325, 326, 331, 334], "underli": [1, 4, 222, 246], "numpi": [1, 4, 5, 33, 39, 53, 54, 58, 68, 81, 86, 87, 88, 204, 210, 222, 223, 226, 230, 233, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 280, 298, 301, 321, 329, 332], "arrai": [1, 2, 4, 5, 12, 33, 34, 35, 38, 210, 212, 222, 223, 224, 227, 228, 229, 230, 231, 232, 233, 235, 237, 238, 239, 243, 246, 247, 248, 249, 251, 252, 253, 255, 256, 269, 270, 277, 301, 302, 307, 314, 321, 327, 328, 330, 336], "If": [1, 2, 3, 4, 5, 12, 13, 14, 15, 16, 17, 18, 23, 26, 28, 29, 30, 57, 60, 61, 62, 63, 64, 65, 68, 69, 70, 78, 79, 80, 81, 82, 84, 86, 87, 90, 91, 145, 148, 149, 156, 167, 168, 170, 172, 173, 183, 187, 189, 192, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 211, 216, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 239, 240, 243, 244, 245, 256, 258, 259, 260, 261, 262, 265, 267, 269, 272, 279, 280, 282, 283, 285, 287, 291, 297, 299, 307, 321, 323, 328, 329, 331, 332, 333, 334, 335], "best": [1, 3, 4, 5, 13, 14, 16, 17, 18, 149, 151, 173, 176, 183, 226, 267], "automat": [1, 2, 3, 4, 5, 12, 13, 14, 15, 16, 17, 18, 63, 64, 65, 79, 167, 183, 210, 224, 226, 229, 230, 233, 239, 240, 245, 267, 278, 280, 283, 306, 315, 324, 334, 335], "determin": [1, 4, 5, 12, 13, 16, 17, 18, 91, 149, 173, 225, 230, 233, 249, 292], "current": [1, 12, 60, 61, 63, 69, 79, 84, 88, 145, 156, 167, 210, 226, 229, 230, 232, 235, 239, 243, 260, 267, 277, 297, 325, 326, 332, 333, 335, 336], "float64": [1, 246, 255, 277, 282, 311], "physic": [1, 5, 30, 93, 213, 232, 297, 334], "ndarrai": [1, 4, 5, 68, 81, 86, 87, 204, 210, 331], "mask": [1, 233, 277], "invalid": [1, 28, 197, 198, 199, 200, 201, 202, 203, 204, 205, 258, 259, 267, 287, 304, 314, 317], "dictionari": [1, 4, 12, 16, 22, 61, 63, 68, 69, 70, 78, 81, 82, 84, 86, 87, 88, 183, 189, 194, 200, 210, 224, 231, 238, 239, 265, 270, 279, 289, 291, 313, 315, 318, 321], "map": [1, 183, 222, 230, 248, 249, 251, 252, 331], "spatial": [1, 2, 4, 12, 16, 26, 28, 29, 30, 38, 68, 69, 70, 78, 81, 82, 84, 86, 87, 210, 215, 222, 223, 224, 226, 228, 230, 233, 243, 254, 258, 259, 277, 291, 297, 301, 316, 329, 334, 336], "It": [1, 3, 4, 5, 12, 13, 14, 16, 17, 18, 29, 30, 60, 62, 64, 65, 79, 90, 91, 92, 156, 183, 194, 197, 198, 199, 200, 201, 204, 210, 216, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 235, 237, 238, 239, 240, 243, 245, 246, 248, 249, 250, 251, 252, 254, 255, 256, 257, 262, 264, 279, 286, 287, 294, 298, 310, 321, 326, 329, 331], "same": [1, 3, 4, 5, 12, 16, 60, 61, 63, 90, 91, 92, 145, 149, 156, 168, 173, 210, 214, 219, 222, 223, 224, 228, 229, 230, 231, 232, 233, 235, 237, 239, 240, 242, 243, 245, 249, 251, 256, 262, 267, 269, 277, 297, 302, 305, 307, 308, 310, 313, 315, 321, 322, 328, 329, 331, 333], "ar": [1, 2, 3, 4, 5, 12, 13, 16, 17, 18, 22, 23, 25, 26, 27, 28, 29, 30, 35, 36, 41, 53, 60, 61, 63, 79, 83, 84, 87, 88, 91, 92, 145, 156, 167, 168, 183, 187, 189, 192, 197, 200, 204, 210, 211, 212, 216, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 283, 284, 288, 291, 292, 297, 298, 299, 300, 301, 302, 305, 306, 307, 308, 310, 311, 312, 313, 315, 318, 319, 320, 321, 322, 323, 327, 328, 329, 330, 331, 332, 334, 335, 336], "els": [1, 13, 23, 33, 34, 35, 38, 41, 57, 63, 212, 224, 225, 226, 227, 229, 231, 232, 243, 268, 271, 274, 287, 290, 298, 303, 304, 305, 306, 308, 311, 312, 314, 317, 319, 321, 325, 327, 330, 331], "empti": [1, 4, 12, 19, 91, 198, 236, 249, 291], "exampl": [1, 2, 3, 4, 5, 7, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 26, 27, 28, 29, 30, 33, 34, 35, 36, 38, 39, 41, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73, 75, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 106, 139, 140, 142, 143, 144, 145, 148, 149, 150, 151, 152, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 173, 175, 176, 177, 178, 181, 183, 184, 185, 187, 188, 189, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 210, 211, 212, 213, 221, 223, 224, 225, 226, 230, 233, 235, 236, 237, 239, 241, 243, 244, 246, 248, 249, 250, 251, 254, 255, 262, 265, 267, 269, 271, 272, 274, 275, 280, 281, 282, 283, 284, 287, 289, 291, 303, 306, 308, 309, 310, 318, 321, 324, 327, 329, 331, 333, 334], "uniform": [1, 12, 16, 35, 38, 215, 224, 226, 232, 248, 256, 299, 301, 302, 307, 321, 327, 330], "nano": [1, 4, 5, 212, 239, 240, 245, 283], "size": [1, 3, 4, 5, 13, 14, 16, 17, 18, 105, 183, 204, 210, 223, 226, 228, 230, 234, 235, 238, 239, 240, 245, 248, 258, 280, 287, 290, 298, 299, 300, 304, 305, 306, 314, 321, 325, 326, 327, 330], "thin": [1, 4, 212, 239, 240, 245, 248, 249, 299, 300, 301, 314, 325, 329, 330], "film": [1, 4, 239, 240, 245, 249, 299, 300, 301, 314, 325, 330], "import": [1, 2, 3, 4, 5, 7, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 26, 27, 28, 29, 30, 33, 34, 35, 36, 38, 39, 41, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73, 75, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 105, 106, 139, 140, 142, 143, 144, 145, 148, 149, 150, 152, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 173, 175, 177, 178, 181, 183, 184, 185, 187, 188, 189, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 210, 212, 215, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 330, 332, 333, 335], "df": [1, 2, 3, 4, 5, 7, 12, 13, 14, 15, 16, 17, 18, 20, 23, 26, 27, 28, 29, 30, 33, 34, 35, 38, 39, 41, 53, 54, 57, 58, 68, 69, 70, 78, 81, 82, 84, 85, 86, 87, 88, 210, 212, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 258, 259, 264, 265, 268, 269, 270, 271, 272, 273, 274, 276, 277, 280, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 325, 326, 327, 328, 329, 330], "p1": [1, 2, 3, 4, 5, 7, 12, 13, 14, 15, 16, 17, 18, 23, 26, 27, 28, 29, 30, 33, 34, 35, 38, 39, 41, 53, 54, 57, 58, 68, 69, 70, 78, 81, 82, 84, 85, 86, 87, 88, 210, 212, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 264, 265, 268, 269, 270, 271, 272, 273, 274, 276, 277, 280, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 325, 326, 327, 328, 329, 330], "50e": [1, 4, 5, 7, 13, 15, 17, 18, 38, 39, 41, 54, 58, 207, 212, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 255, 265, 272, 273, 277, 299, 303, 304, 306, 311, 314, 316, 317, 325, 328, 330], "9": [1, 3, 4, 5, 7, 13, 14, 15, 16, 17, 18, 33, 34, 38, 39, 41, 53, 54, 57, 58, 68, 69, 70, 78, 81, 82, 84, 85, 86, 87, 88, 101, 103, 105, 183, 207, 208, 212, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 282, 283, 288, 291, 292, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 326, 327, 328, 329, 330, 331, 332, 334], "25e": [1, 4, 5, 38, 39, 41, 53, 54, 226, 235, 254, 255, 277, 299, 321], "p2": [1, 2, 3, 4, 5, 7, 12, 13, 14, 15, 16, 17, 18, 23, 26, 27, 28, 29, 30, 33, 34, 35, 38, 39, 41, 53, 54, 57, 58, 68, 69, 70, 78, 81, 82, 84, 85, 86, 87, 88, 210, 212, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 264, 265, 268, 269, 270, 271, 272, 273, 274, 276, 277, 280, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 325, 326, 327, 328, 329, 330], "5e": [1, 4, 5, 33, 34, 57, 68, 69, 70, 78, 81, 82, 84, 86, 87, 88, 91, 92, 207, 208, 212, 223, 224, 225, 226, 229, 234, 235, 236, 237, 239, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 259, 260, 261, 270, 271, 272, 273, 277, 282, 292, 299, 300, 301, 303, 304, 305, 306, 308, 309, 311, 314, 316, 317, 319, 320, 321, 327, 330, 331], "cell": [1, 2, 4, 12, 13, 14, 16, 17, 22, 23, 26, 27, 28, 29, 30, 33, 34, 35, 38, 39, 41, 53, 54, 57, 58, 60, 105, 210, 212, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 237, 238, 239, 240, 241, 246, 247, 248, 249, 250, 251, 252, 253, 254, 265, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 280, 291, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 316, 317, 318, 319, 320, 321, 325, 326, 327, 328, 329, 330, 331, 332, 333], "1e": [1, 3, 4, 5, 13, 14, 16, 17, 18, 33, 34, 38, 39, 41, 53, 54, 57, 58, 69, 75, 78, 83, 84, 85, 87, 88, 90, 91, 92, 105, 145, 168, 183, 207, 208, 210, 224, 225, 226, 228, 234, 235, 236, 237, 239, 240, 241, 243, 244, 245, 246, 247, 249, 251, 255, 261, 264, 265, 268, 270, 271, 272, 273, 274, 275, 276, 277, 280, 283, 284, 292, 298, 299, 300, 302, 303, 305, 307, 308, 309, 310, 311, 312, 313, 315, 316, 317, 318, 320, 321, 322, 326, 327, 328, 331], "region": [1, 2, 4, 7, 13, 14, 15, 16, 17, 18, 23, 38, 41, 68, 69, 70, 78, 81, 82, 83, 84, 85, 86, 87, 88, 210, 212, 214, 215, 222, 223, 224, 226, 227, 232, 235, 236, 237, 238, 239, 240, 241, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 268, 269, 270, 271, 272, 273, 274, 276, 280, 283, 291, 299, 300, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 325, 326, 327, 328], "10": [1, 2, 3, 4, 5, 7, 12, 13, 14, 16, 17, 18, 23, 24, 25, 26, 27, 28, 29, 30, 35, 60, 84, 87, 183, 201, 204, 207, 208, 212, 214, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 287, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335], "n": [1, 2, 3, 4, 5, 7, 12, 13, 14, 16, 17, 18, 23, 27, 28, 30, 54, 60, 62, 63, 68, 69, 70, 78, 81, 82, 84, 85, 86, 87, 88, 102, 145, 168, 183, 207, 208, 210, 212, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 245, 246, 255, 256, 264, 272, 273, 275, 277, 279, 280, 283, 289, 292, 298, 299, 300, 301, 304, 305, 307, 308, 309, 311, 313, 314, 315, 316, 317, 320, 321, 322, 325, 326, 327, 328, 330, 331, 335, 336], "14": [1, 197, 201, 203, 204, 210, 212, 222, 223, 224, 225, 226, 228, 230, 231, 232, 234, 235, 239, 240, 243, 245, 248, 249, 251, 253, 255, 256, 260, 261, 268, 269, 270, 271, 272, 274, 276, 277, 279, 280, 282, 287, 299, 305, 307, 308, 311, 318, 321, 326, 327, 330, 331, 332], "50e9": 1, "25e9": 1, "5e9": [1, 321], "1e9": [1, 87, 212, 225, 226, 229, 234, 261, 276, 301, 318, 320, 321], "8": [1, 4, 5, 63, 167, 212, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 240, 241, 243, 245, 246, 248, 249, 251, 253, 254, 255, 256, 258, 259, 260, 261, 264, 267, 268, 270, 271, 272, 274, 275, 276, 277, 279, 280, 282, 283, 291, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 311, 312, 314, 315, 316, 318, 319, 320, 321, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335], "method": [1, 2, 3, 4, 5, 6, 10, 12, 13, 14, 15, 16, 17, 18, 23, 28, 29, 30, 41, 49, 54, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 142, 143, 144, 147, 148, 149, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 170, 171, 172, 173, 174, 183, 189, 197, 198, 199, 200, 201, 202, 203, 204, 210, 212, 224, 225, 226, 228, 229, 231, 232, 233, 235, 237, 238, 240, 243, 244, 245, 248, 249, 250, 251, 254, 256, 258, 259, 262, 267, 269, 272, 273, 277, 279, 281, 283, 284, 288, 292, 297, 299, 301, 306, 310, 311, 314, 321, 329, 331, 332, 335], "__abs__": 1, "absolut": [1, 4, 5, 12, 16, 29, 183, 210, 223, 224, 232], "conveni": [1, 12, 16, 21, 145, 168, 183, 210, 224, 226, 228, 230, 246, 255, 256, 257, 279, 283, 286, 292, 298, 311, 331], "return": [1, 2, 3, 4, 5, 12, 13, 16, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 38, 39, 41, 53, 54, 57, 58, 60, 61, 62, 63, 64, 65, 80, 84, 85, 87, 88, 90, 91, 92, 105, 139, 148, 149, 150, 151, 167, 170, 171, 172, 173, 174, 175, 176, 183, 187, 188, 189, 192, 193, 207, 208, 210, 212, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 234, 235, 237, 238, 239, 241, 243, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 262, 266, 268, 270, 271, 274, 276, 277, 279, 280, 284, 287, 288, 298, 300, 303, 304, 305, 306, 308, 311, 312, 313, 314, 317, 318, 319, 321, 325, 327, 329, 330, 331, 332], "comput": [1, 3, 4, 5, 13, 16, 22, 25, 26, 27, 28, 29, 30, 62, 63, 64, 65, 67, 79, 87, 107, 156, 183, 207, 208, 210, 212, 223, 226, 230, 232, 238, 247, 268, 270, 271, 274, 276, 280, 297, 298, 299, 301, 303, 304, 308, 314, 321, 324, 327, 328, 331, 333, 334, 335], "5": [1, 4, 5, 13, 16, 17, 35, 60, 63, 68, 69, 70, 78, 81, 82, 84, 85, 86, 87, 88, 145, 163, 168, 197, 201, 205, 210, 212, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 286, 287, 289, 290, 291, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 325, 326, 327, 328, 329, 330, 332, 334], "13": [1, 4, 84, 87, 88, 164, 212, 222, 223, 224, 225, 226, 228, 230, 231, 232, 234, 235, 239, 240, 243, 245, 248, 249, 251, 253, 254, 255, 256, 258, 260, 261, 267, 268, 269, 270, 271, 272, 274, 276, 277, 279, 280, 282, 299, 302, 305, 307, 308, 309, 311, 318, 320, 321, 326, 327, 330, 331, 332], "ab": [1, 183, 223, 224, 256, 277, 280, 301, 308, 332], "__add__": [1, 91, 92, 312], "other": [1, 3, 4, 5, 12, 16, 19, 26, 60, 61, 63, 79, 91, 92, 156, 183, 198, 199, 200, 201, 204, 210, 222, 223, 226, 233, 234, 237, 238, 239, 248, 255, 261, 265, 266, 270, 271, 272, 280, 291, 298, 299, 309, 311, 312, 317, 324, 327, 331, 332, 334], "binari": [1, 79, 91, 92, 156, 167, 210, 229, 255, 282], "appli": [1, 2, 4, 5, 12, 16, 39, 60, 63, 91, 92, 183, 210, 212, 230, 247, 250, 251, 253, 256, 276, 280, 299, 300, 301, 311, 316, 318, 321, 325, 326, 327, 328, 329], "between": [1, 3, 4, 5, 12, 23, 27, 28, 41, 83, 91, 92, 150, 175, 210, 214, 223, 224, 226, 228, 233, 234, 237, 241, 249, 265, 270, 271, 272, 298, 299, 300, 310, 311, 313, 315, 321, 325, 329, 330, 331, 332], "two": [1, 2, 3, 4, 5, 12, 16, 29, 30, 60, 61, 63, 83, 87, 91, 92, 183, 210, 212, 222, 223, 224, 226, 228, 229, 230, 231, 232, 234, 235, 237, 238, 239, 240, 243, 244, 245, 248, 256, 260, 261, 265, 268, 270, 271, 274, 276, 282, 287, 289, 298, 299, 300, 302, 305, 307, 312, 315, 318, 319, 321, 322, 325, 326, 329, 330, 331, 332, 335], "object": [1, 2, 3, 4, 5, 6, 8, 12, 13, 14, 15, 16, 17, 18, 60, 61, 62, 63, 64, 65, 79, 90, 91, 92, 139, 149, 151, 156, 168, 173, 183, 210, 212, 215, 222, 223, 224, 227, 228, 229, 230, 232, 235, 237, 239, 240, 241, 243, 245, 246, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 262, 263, 264, 267, 268, 270, 271, 272, 273, 274, 276, 280, 281, 283, 284, 298, 299, 300, 301, 302, 304, 306, 307, 309, 311, 314, 317, 318, 319, 320, 321, 326, 327, 330, 334], "constant": [1, 2, 4, 22, 26, 29, 30, 41, 68, 69, 70, 78, 81, 82, 83, 84, 86, 87, 91, 93, 98, 99, 100, 102, 197, 198, 199, 200, 201, 202, 203, 204, 205, 212, 219, 223, 227, 230, 249, 260, 261, 296, 297, 298, 299, 300, 301, 305, 307, 319, 321, 325, 326, 327, 328, 332], "second": [1, 2, 4, 5, 14, 17, 62, 84, 87, 88, 91, 92, 139, 183, 210, 223, 224, 226, 230, 232, 235, 238, 239, 240, 244, 245, 249, 255, 256, 265, 280, 282, 300, 304, 321, 326, 328, 333], "operand": [1, 4, 5, 91, 92, 183, 282, 331], "either": [1, 4, 5, 12, 13, 14, 17, 18, 23, 33, 68, 69, 70, 78, 81, 82, 84, 86, 87, 88, 91, 230, 232, 233, 235, 239, 243, 245, 246, 251, 261, 321, 327, 332], "an": [1, 4, 5, 12, 13, 16, 19, 27, 30, 33, 36, 41, 60, 61, 63, 68, 69, 70, 72, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 91, 142, 143, 144, 149, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 173, 183, 187, 188, 189, 197, 198, 205, 210, 211, 212, 216, 219, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 254, 255, 256, 258, 260, 261, 262, 265, 267, 270, 271, 272, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 289, 290, 291, 297, 298, 299, 301, 304, 305, 306, 307, 308, 310, 311, 312, 314, 316, 317, 318, 319, 321, 325, 326, 327, 329, 330, 332, 333, 334, 335], "iter": [1, 4, 60, 61, 62, 63, 90, 91, 183, 210, 222, 235, 237, 255, 256, 269, 272, 279, 280, 299, 309, 311, 312, 320, 326], "tupl": [1, 3, 4, 5, 12, 14, 16, 17, 18, 38, 39, 68, 81, 83, 86, 87, 139, 183, 204, 210, 222, 224, 231, 235, 238, 239, 240, 243, 244, 245, 256, 283, 287, 290, 291, 330], "list": [1, 3, 4, 12, 16, 17, 60, 61, 62, 63, 68, 73, 75, 81, 83, 86, 87, 90, 91, 139, 142, 143, 144, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 183, 187, 188, 192, 204, 205, 207, 210, 211, 216, 222, 224, 233, 235, 237, 239, 242, 246, 255, 260, 261, 262, 277, 280, 281, 283, 287, 292, 310, 321, 333, 334, 335], "both": [1, 3, 4, 5, 12, 13, 16, 23, 189, 210, 222, 223, 228, 233, 235, 237, 238, 240, 243, 245, 249, 250, 251, 254, 263, 274, 291, 297, 298, 321, 327, 329, 335], "have": [1, 2, 3, 4, 5, 12, 16, 30, 61, 87, 91, 156, 183, 210, 212, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 235, 239, 240, 243, 244, 245, 246, 247, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 263, 265, 267, 268, 270, 271, 272, 274, 276, 277, 279, 280, 281, 282, 287, 288, 289, 291, 299, 303, 305, 306, 310, 311, 312, 313, 314, 315, 317, 318, 321, 322, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335], "result": [1, 4, 5, 12, 22, 27, 28, 57, 60, 61, 63, 79, 91, 92, 149, 167, 173, 183, 192, 210, 212, 218, 222, 223, 228, 230, 233, 235, 237, 243, 244, 254, 262, 269, 280, 282, 299, 310, 312, 321, 322, 325, 329, 332, 334], "rais": [1, 3, 4, 5, 12, 13, 16, 26, 28, 29, 30, 60, 61, 62, 63, 64, 65, 79, 80, 90, 91, 145, 149, 168, 173, 183, 192, 197, 198, 199, 200, 201, 202, 203, 204, 225, 226, 228, 235, 237, 239, 244, 246, 258, 259, 262, 263, 267, 285, 287, 290, 291, 312, 333], "valueerror": [1, 3, 4, 5, 12, 13, 16, 26, 28, 29, 30, 60, 61, 64, 65, 68, 70, 81, 82, 86, 87, 91, 183, 192, 197, 198, 199, 200, 201, 202, 204, 210, 225, 228, 235, 237, 244, 258, 259, 263, 267, 287, 290, 291, 312], "typeerror": [1, 4, 5, 61, 69, 78, 83, 84, 88, 91, 197, 198, 199, 200, 201, 203, 204, 205, 210, 244, 246, 258, 259, 287, 290, 291, 331], "cannot": [1, 4, 5, 12, 13, 16, 62, 63, 64, 65, 91, 149, 156, 192, 197, 207, 208, 210, 214, 223, 225, 226, 228, 229, 235, 267, 278, 301, 321, 335], "add": [1, 3, 4, 16, 63, 64, 65, 91, 183, 210, 212, 226, 238, 239, 240, 245, 260, 261, 263, 283, 299, 300, 305, 312, 320, 321, 327, 335], "f1": [1, 228], "f2": [1, 228], "re": [1, 4, 5, 12, 224], "2": [1, 2, 3, 4, 5, 7, 12, 13, 14, 16, 17, 18, 26, 29, 30, 33, 35, 36, 39, 41, 53, 54, 57, 58, 60, 63, 64, 65, 68, 70, 71, 73, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 95, 102, 183, 193, 200, 204, 212, 214, 222, 223, 224, 225, 226, 227, 229, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 259, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 325, 327, 329, 330, 332, 334], "4": [1, 3, 4, 5, 30, 33, 35, 60, 63, 68, 81, 83, 84, 86, 156, 167, 212, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 287, 288, 289, 290, 291, 292, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 325, 326, 327, 328, 329, 330, 332, 334], "__sub__": [1, 91], "__array_ufunc__": 1, "ufunc": [1, 210], "input": [1, 79, 156, 183, 210, 223, 237, 242, 256, 258, 259, 261, 262, 265, 268, 270, 271, 274, 276, 277, 279, 287, 309, 311, 318, 321, 330], "support": [1, 183, 210, 216, 221, 222, 224, 226, 228, 230, 235, 236, 239, 243, 301, 306, 327, 331, 334], "__call__": [1, 12, 14, 15, 16, 17, 18, 60], "point": [1, 3, 4, 5, 12, 13, 16, 22, 33, 34, 35, 38, 41, 53, 54, 57, 58, 183, 210, 212, 222, 223, 224, 225, 226, 227, 228, 229, 231, 234, 235, 237, 239, 243, 251, 267, 268, 270, 271, 274, 276, 277, 280, 289, 299, 300, 304, 306, 308, 309, 311, 313, 314, 315, 317, 318, 319, 321, 326, 327, 328, 330, 331, 334], "sampl": [1, 3, 12, 29, 41, 53, 54, 105, 212, 222, 224, 225, 226, 227, 229, 231, 232, 234, 237, 247, 248, 249, 250, 251, 252, 253, 254, 256, 268, 270, 271, 274, 276, 279, 281, 282, 283, 284, 298, 299, 300, 301, 303, 304, 305, 306, 310, 312, 313, 314, 315, 318, 319, 320, 321, 325, 327, 328, 329, 330], "discretis": [1, 4, 13, 14, 16, 17, 27, 28, 105, 222, 223, 225, 226, 228, 229, 230, 235, 237, 238, 239, 240, 271, 280, 291, 298, 299, 300, 301, 302, 304, 305, 306, 307, 310, 314, 319, 321, 325, 326, 327, 328, 330], "which": [1, 3, 4, 5, 12, 13, 14, 15, 16, 17, 18, 22, 28, 29, 30, 41, 60, 61, 62, 63, 64, 65, 68, 79, 81, 83, 86, 87, 90, 142, 143, 144, 147, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 171, 183, 197, 198, 199, 207, 208, 210, 216, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 261, 262, 264, 267, 268, 270, 271, 273, 274, 276, 277, 279, 280, 281, 283, 284, 286, 289, 291, 297, 298, 299, 300, 301, 303, 304, 306, 308, 310, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 326, 327, 328, 329, 330, 331, 334, 335], "belong": [1, 4, 5, 228, 231, 235, 237, 239, 331], "whose": [1, 4, 5, 145, 156, 168, 204, 212, 222, 226, 228, 230, 231, 239, 268, 270, 271, 274, 276, 279, 288, 291, 310, 318], "length": [1, 3, 4, 5, 12, 14, 17, 18, 33, 68, 81, 83, 86, 87, 183, 204, 210, 212, 222, 223, 224, 228, 230, 234, 235, 237, 238, 239, 240, 243, 244, 245, 249, 251, 252, 255, 277, 282, 287, 290, 298, 299, 300, 302, 303, 304, 305, 307, 314, 317, 321, 327, 328, 329, 330], "coordin": [1, 3, 4, 5, 12, 13, 60, 210, 222, 223, 228, 230, 234, 235, 237, 241, 243, 244, 246, 248, 255, 277, 298, 330], "mathbf": [1, 4, 5, 30, 35, 68, 69, 70, 71, 78, 82, 84, 86, 87, 88, 212, 228, 232, 235, 236, 239, 258, 259, 260, 261, 264, 265, 270, 271, 300, 302, 305, 307, 308, 309, 314, 315, 320, 325, 326, 327, 328, 330], "p": [1, 4, 5, 23, 41, 54, 84, 148, 150, 172, 175, 210, 223, 224, 226, 232, 235, 239, 243, 250, 261, 277, 285, 292, 301, 321, 332], "p_": [1, 4, 5, 223, 243, 245, 330], "x": [1, 2, 3, 4, 5, 7, 12, 13, 16, 23, 30, 33, 34, 35, 38, 41, 50, 53, 54, 56, 57, 58, 60, 61, 63, 64, 65, 69, 183, 184, 208, 210, 212, 217, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 246, 248, 249, 250, 251, 253, 255, 256, 261, 264, 268, 270, 271, 272, 274, 276, 277, 279, 280, 281, 282, 283, 284, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 314, 316, 317, 318, 319, 321, 325, 326, 327, 328, 330, 331, 332, 334], "y": [1, 3, 4, 5, 12, 13, 16, 23, 30, 33, 34, 35, 38, 41, 53, 54, 57, 58, 60, 69, 183, 210, 212, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 241, 243, 244, 245, 246, 248, 249, 250, 255, 256, 261, 268, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 283, 292, 298, 299, 300, 301, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 325, 326, 327, 328, 330, 331], "z": [1, 2, 3, 4, 5, 12, 13, 16, 28, 29, 30, 33, 34, 35, 38, 41, 53, 54, 57, 58, 60, 69, 170, 210, 212, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 261, 268, 270, 271, 272, 274, 276, 277, 280, 292, 298, 299, 300, 301, 303, 304, 305, 306, 308, 309, 311, 312, 314, 316, 317, 318, 319, 321, 325, 326, 327, 328, 329, 330, 331, 332], "A": [1, 3, 4, 5, 12, 16, 17, 18, 27, 28, 73, 74, 75, 76, 78, 84, 85, 88, 90, 91, 92, 102, 151, 156, 167, 176, 183, 193, 205, 210, 211, 212, 222, 223, 224, 226, 228, 230, 233, 235, 241, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 261, 264, 265, 267, 268, 270, 272, 273, 274, 276, 277, 280, 284, 288, 290, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 318, 319, 320, 321, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335], "20": [1, 2, 4, 5, 60, 212, 214, 222, 223, 224, 226, 227, 228, 230, 231, 234, 235, 236, 237, 238, 239, 240, 241, 243, 247, 249, 250, 255, 256, 260, 261, 271, 272, 274, 277, 279, 280, 282, 299, 301, 302, 304, 305, 307, 309, 311, 312, 313, 314, 315, 319, 320, 321, 326, 327, 330, 331, 332], "__dir__": [1, 4, 13, 16, 91], "extens": [1, 4, 91, 165, 166, 210, 224, 229, 242, 256, 309, 335], "dir": [1, 4, 13, 16, 91, 331], "self": [1, 2, 4, 5, 91, 170, 171, 172, 173, 174, 183, 193, 197, 198, 199, 200, 201, 202, 203, 204, 205, 225, 226, 258, 259, 262, 267, 285, 287, 288, 289, 290, 291, 304, 312, 314, 317, 334], "compon": [1, 3, 5, 12, 16, 25, 30, 48, 60, 204, 210, 223, 224, 225, 226, 230, 246, 248, 249, 252, 254, 256, 264, 280, 281, 283, 299, 301, 304, 305, 314, 316, 317, 319, 326, 329, 330], "label": [1, 3, 4, 5, 13, 14, 16, 17, 18, 170, 183, 210, 223, 226, 228, 239, 240, 243, 245, 246, 248, 283, 298], "remov": [1, 2, 4, 5, 13, 16, 91, 223, 224, 226, 229, 230, 321, 333], "grad": [1, 210, 228], "div": [1, 210, 228], "depend": [1, 12, 16, 23, 38, 54, 60, 63, 64, 65, 84, 87, 88, 156, 167, 183, 210, 212, 214, 224, 236, 241, 248, 255, 260, 270, 279, 280, 284, 297, 298, 320, 324, 327, 332], "avalil": [1, 4, 91], "attribut": [1, 4, 60, 90, 91, 93, 141, 142, 143, 144, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 183, 197, 198, 199, 200, 201, 202, 203, 204, 205, 210, 222, 228, 233, 239, 243, 246, 255, 258, 259, 260, 261, 262, 277, 279, 290, 291, 296, 331], "__eq__": [1, 4, 5, 91, 92], "relat": [1, 4, 5, 12, 32, 34, 39, 40, 52, 91, 92, 156, 210, 223, 230, 232, 235, 243, 332], "consid": [1, 4, 5, 91, 92, 208, 216, 222, 225, 233, 235, 297, 329, 334], "equal": [1, 4, 5, 91, 92, 210, 222, 224, 228, 237, 246, 249, 289, 298, 321], "thei": [1, 4, 5, 12, 13, 91, 92, 197, 225, 229, 235, 239, 242, 243, 246, 248, 256, 258, 259, 265, 267, 271, 310, 312, 327, 329, 332], "contain": [1, 3, 4, 8, 12, 22, 60, 73, 75, 84, 85, 87, 88, 92, 105, 167, 173, 210, 213, 226, 228, 229, 230, 231, 232, 249, 255, 256, 267, 278, 287, 289, 299, 300, 303, 306, 312, 321, 325, 328, 329, 331, 333, 334, 335], "fals": [1, 4, 5, 6, 12, 13, 16, 17, 29, 63, 64, 65, 79, 80, 91, 92, 145, 149, 156, 168, 170, 173, 223, 224, 225, 226, 228, 233, 234, 235, 237, 243, 248, 256, 277, 279, 287], "otherwis": [1, 4, 5, 12, 16, 23, 79, 91, 92, 148, 172, 198, 200, 201, 204, 213, 222, 224, 226, 229, 231, 258, 259, 262, 296], "bool": [1, 4, 5, 12, 13, 16, 17, 29, 63, 64, 65, 79, 80, 91, 92, 149, 156, 167, 168, 170, 173, 183, 187, 189, 197, 198, 201, 202, 203, 204, 243, 277], "check": [1, 4, 5, 79, 91, 148, 149, 170, 172, 173, 197, 199, 210, 222, 223, 228, 229, 235, 243, 248, 264, 282, 287, 289, 291, 299, 302, 307, 321, 324, 326, 328, 331], "f3": [1, 228], "__getattr__": [1, 4, 91], "attr": [1, 4, 90, 91, 246, 277], "extract": [1, 4, 187, 188, 189, 224, 225, 226, 237, 239, 249, 296, 335], "access": [1, 2, 4, 12, 16, 60, 63, 64, 65, 91, 151, 170, 176, 210, 222, 223, 228, 230, 239, 242, 246, 254, 255, 260, 261, 269, 279, 324, 330, 334], "individu": [1, 3, 4, 12, 60, 61, 63, 64, 65, 79, 91, 142, 143, 144, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 189, 194, 199, 210, 224, 228, 255, 262, 272, 277, 279, 307, 308, 309, 311, 313, 327, 330, 334, 335], "custom": [1, 87, 210, 222, 228, 243, 261, 272, 293, 321, 335, 336], "manual": [1, 4, 12, 151, 176, 210, 224, 226, 230, 256, 289, 335], "get": [1, 2, 3, 4, 5, 54, 60, 61, 62, 63, 64, 65, 85, 90, 91, 105, 139, 142, 143, 144, 149, 150, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 170, 172, 173, 175, 183, 210, 211, 212, 213, 216, 223, 224, 226, 227, 228, 231, 235, 237, 239, 240, 241, 243, 244, 245, 251, 255, 256, 260, 261, 267, 272, 275, 281, 284, 297, 311, 312, 321, 325, 333, 334, 335], "mx": [1, 212, 226, 228, 255, 256, 269, 272, 277, 279, 280, 281, 283, 284, 298, 299, 300, 301, 309, 311, 312, 320, 321, 326], "my": [1, 212, 226, 228, 239, 240, 241, 242, 245, 255, 256, 269, 272, 277, 279, 280, 281, 283, 284, 298, 299, 301, 306, 309, 311, 312, 320, 321, 326], "mz": [1, 212, 226, 228, 255, 256, 269, 272, 277, 279, 280, 281, 283, 298, 299, 309, 311, 312, 316, 320, 321, 326], "__getitem__": [1, 4, 60, 62, 63, 91, 210], "item": [1, 4, 5, 60, 62, 63, 91, 265, 270, 271, 331], "subregion": [1, 4, 14, 17, 83, 156, 210, 214, 215, 228, 231, 235, 255, 261, 268, 270, 271, 274, 276, 277, 297, 313, 315, 318, 319], "were": [1, 4, 210, 231, 335], "when": [1, 3, 4, 5, 12, 13, 16, 41, 60, 62, 63, 64, 65, 170, 173, 183, 197, 210, 223, 226, 228, 229, 233, 235, 236, 237, 238, 239, 243, 244, 249, 250, 254, 256, 267, 269, 273, 275, 277, 279, 280, 285, 290, 299, 306, 310, 312, 316, 317, 321, 325, 329, 330, 331, 334, 335], "wa": [1, 3, 4, 62, 80, 90, 198, 199, 200, 201, 202, 203, 204, 210, 223, 225, 226, 229, 258, 259, 260, 261, 263, 277, 279, 288, 301, 311, 328, 334, 335], "creat": [1, 2, 3, 4, 5, 12, 13, 14, 15, 16, 17, 18, 19, 33, 62, 63, 64, 65, 79, 104, 156, 167, 183, 194, 210, 211, 212, 222, 223, 224, 225, 226, 228, 229, 233, 234, 235, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 262, 264, 266, 267, 269, 271, 272, 277, 280, 282, 283, 298, 299, 300, 301, 304, 306, 310, 311, 316, 317, 319, 321, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335], "altern": [1, 4, 88, 156, 167, 170, 248, 331, 335], "minimum": [1, 4, 5, 23, 192, 210, 228, 235, 241, 243, 248, 277, 284, 286, 298, 327, 330], "origin": [1, 4, 41, 210, 212, 223, 228, 237, 243, 249, 250, 328, 330], "kei": [1, 4, 12, 84, 87, 88, 189, 194, 198, 200, 223, 231, 238, 239, 249, 265, 268, 270, 271, 274, 276, 279, 291, 313, 318, 321, 331], "disretisedfield": [1, 4, 85, 228], "100": [1, 4, 5, 12, 13, 14, 16, 17, 23, 27, 28, 210, 228, 235, 237, 239, 243, 248, 249, 253, 256, 280, 300, 303, 305, 308, 311, 321, 327, 329, 330, 331, 332], "r1": [1, 4, 14, 17, 83, 313, 319], "50": [1, 4, 5, 13, 14, 16, 17, 23, 210, 212, 222, 223, 226, 227, 228, 230, 231, 235, 239, 243, 250, 261, 275, 289, 300, 303, 309, 328, 330, 331], "r2": [1, 4, 14, 17, 83, 313, 319], "def": [1, 7, 13, 16, 33, 34, 35, 38, 41, 53, 54, 57, 58, 84, 87, 88, 184, 193, 197, 198, 199, 200, 201, 202, 203, 204, 205, 212, 223, 224, 225, 226, 227, 228, 229, 231, 232, 234, 247, 248, 249, 250, 251, 252, 254, 256, 258, 259, 262, 266, 267, 268, 270, 271, 274, 276, 277, 281, 285, 287, 288, 290, 291, 298, 300, 303, 304, 305, 306, 308, 311, 312, 313, 314, 317, 318, 319, 321, 325, 327, 329, 330, 331, 332], "value_fun": [1, 33, 34, 35, 57, 58, 225, 226, 229, 234], "f": [1, 26, 29, 30, 33, 87, 90, 212, 223, 225, 229, 231, 232, 246, 248, 250, 261, 267, 272, 280, 292, 298, 301, 302, 307, 308, 312, 316, 317, 320, 321, 331, 332], "subfield": 1, "9e": [1, 235, 237, 255], "14e": [1, 4], "4e": [1, 33, 34, 57, 235, 237, 243, 247, 248, 249, 250, 251, 252, 254, 255, 283, 304, 306, 314, 321], "shape": [1, 4, 210, 222, 223, 230, 231, 232, 277, 304, 320], "__iter__": [1, 4, 60, 62, 90, 91], "gener": [1, 3, 4, 8, 60, 63, 87, 91, 139, 156, 192, 224, 226, 230, 232, 235, 236, 237, 241, 243, 251, 262, 280, 284, 286, 294, 313, 321, 331, 332], "yield": [1, 4, 60, 62, 90, 91, 139, 329], "all": [1, 2, 3, 4, 5, 12, 13, 14, 16, 17, 18, 20, 23, 27, 28, 55, 60, 61, 62, 63, 66, 74, 76, 87, 90, 91, 106, 139, 140, 145, 152, 168, 177, 181, 183, 185, 194, 195, 197, 204, 207, 210, 211, 212, 213, 216, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 238, 239, 240, 243, 245, 246, 247, 248, 249, 254, 255, 256, 258, 259, 266, 267, 268, 269, 270, 271, 272, 274, 276, 277, 279, 281, 282, 283, 284, 288, 289, 291, 294, 297, 298, 299, 300, 301, 302, 303, 306, 307, 311, 312, 313, 318, 321, 323, 324, 326, 327, 328, 330, 331, 332, 334, 335, 336], "one": [1, 3, 4, 5, 12, 13, 14, 16, 17, 18, 23, 27, 28, 60, 61, 63, 64, 65, 79, 91, 156, 167, 183, 207, 210, 212, 222, 223, 224, 226, 228, 229, 230, 231, 232, 235, 238, 239, 240, 243, 246, 255, 256, 265, 268, 269, 270, 271, 272, 274, 275, 276, 277, 280, 281, 282, 283, 287, 291, 297, 298, 305, 310, 311, 312, 318, 319, 320, 321, 324, 326, 327, 328, 331, 332, 335], "through": [1, 33, 60, 63, 90, 148, 150, 172, 175, 223, 235, 237, 241, 246, 248, 249, 254, 304, 306, 314, 329, 330, 334], "print": [1, 79, 80, 90, 91, 148, 167, 172, 194, 210, 226, 228, 235, 237, 243, 244, 246, 248, 250, 255, 258, 259, 262, 263, 275, 278, 285, 287, 289, 290, 291, 298, 299, 302, 307, 308, 331, 332, 333], "coord": [1, 246], "zip": [1, 226, 333, 335], "indic": [1, 4, 79, 80, 223, 233, 235, 248, 251, 275, 329], "__lshift__": [1, 60, 61, 63, 183], "stack": [1, 61, 239, 244], "multipl": [1, 2, 3, 4, 5, 13, 14, 16, 17, 18, 60, 61, 63, 84, 87, 88, 156, 183, 210, 214, 219, 228, 239, 240, 245, 255, 267, 272, 281, 282, 283, 297, 301, 327, 334], "singl": [1, 23, 60, 63, 68, 69, 70, 78, 79, 81, 82, 84, 86, 87, 88, 105, 156, 167, 183, 222, 224, 228, 230, 235, 248, 255, 256, 280, 282, 291, 292, 298, 321, 326, 329, 331, 333, 334], "take": [1, 12, 16, 54, 79, 156, 183, 210, 212, 223, 224, 228, 229, 230, 231, 235, 237, 238, 246, 248, 249, 251, 254, 261, 267, 268, 270, 271, 274, 276, 279, 280, 298, 302, 306, 307, 311, 318, 321, 327, 329, 330], "ani": [1, 3, 4, 5, 12, 13, 14, 15, 16, 17, 18, 60, 62, 63, 79, 156, 183, 202, 210, 211, 222, 223, 224, 225, 226, 231, 232, 233, 235, 239, 240, 241, 242, 243, 244, 245, 250, 251, 254, 261, 262, 267, 275, 281, 283, 284, 285, 294, 306, 311, 312, 321, 324, 327, 331, 333, 334, 335], "except": [1, 4, 79, 225, 226, 228, 235, 237, 244, 258, 259, 262, 263, 285, 287, 290, 291, 312], "each": [1, 4, 12, 22, 35, 63, 91, 156, 212, 222, 223, 228, 230, 232, 235, 239, 247, 249, 254, 256, 270, 271, 277, 280, 281, 282, 283, 289, 308, 320, 327, 328, 329, 330, 331], "disrectisedfield": 1, "__mul__": 1, "complex": [1, 4, 58, 210, 223, 243, 245, 280], "multipli": [1, 3, 4, 5, 13, 14, 15, 16, 17, 18, 58, 84, 87, 88, 183, 206, 207, 208, 210, 223, 225, 226, 239, 240, 241, 245, 248, 261, 283, 284, 304, 314, 317, 320, 321, 332], "45": [1, 210, 223, 226, 228, 230, 235, 261, 289, 298, 321, 331], "call": [1, 2, 4, 5, 6, 12, 29, 30, 68, 69, 70, 78, 80, 81, 82, 83, 84, 86, 87, 88, 91, 142, 143, 144, 149, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 173, 197, 198, 199, 200, 201, 202, 203, 204, 205, 210, 222, 223, 224, 225, 226, 228, 229, 231, 240, 245, 248, 255, 256, 262, 267, 275, 281, 283, 289, 298, 310, 312, 324, 329, 331, 335], "25": [1, 4, 5, 60, 223, 224, 226, 228, 231, 234, 235, 243, 255, 256, 260, 261, 279, 280, 282, 298, 299, 311, 320, 321, 326, 330, 331, 332], "__rmul__": 1, "__truediv__": 1, "__neg__": 1, "unari": 1, "negat": 1, "equival": [1, 4, 210, 242, 249, 251], "cdot": [1, 26, 30, 41, 54, 68, 69, 71, 78, 84, 86, 87, 88, 212, 232, 249, 251, 259, 260, 261, 264, 268, 270, 274, 276, 299, 300, 302, 307, 308, 314, 315, 326, 327, 328, 332], "3e": [1, 225, 235, 244, 255, 269, 299, 300, 301, 305, 310, 321, 325, 327, 329], "1000": [1, 4, 210, 292, 311, 321, 322, 328, 332], "__pos__": 1, "itself": [1, 5, 13, 225, 228, 235], "__pow__": 1, "onli": [1, 2, 4, 12, 13, 16, 17, 23, 25, 27, 28, 30, 63, 64, 65, 79, 80, 87, 91, 92, 105, 142, 143, 144, 149, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 173, 178, 197, 199, 201, 202, 203, 204, 210, 212, 214, 222, 223, 224, 226, 228, 230, 231, 232, 235, 236, 243, 246, 248, 249, 252, 254, 258, 259, 261, 262, 268, 270, 271, 272, 274, 276, 277, 280, 281, 283, 287, 297, 299, 300, 304, 308, 310, 311, 314, 318, 321, 322, 325, 326, 327, 328, 329, 334, 335], "attempt": [1, 4, 5, 29, 30, 68, 69, 70, 78, 81, 82, 83, 84, 86, 87, 88, 197, 198, 199, 200, 201, 202, 203, 204, 205, 225, 258, 259, 285, 287, 289, 290, 291, 335], "power": [1, 223, 228, 249, 251, 329], "__repr__": [1, 2, 3, 4, 5, 60, 61, 62, 64, 65, 85, 90, 91, 170, 171, 172, 173, 174, 183], "represent": [1, 2, 3, 4, 5, 60, 61, 62, 64, 65, 85, 90, 91, 183, 210, 229, 235, 243, 260, 261, 279, 328], "string": [1, 2, 3, 4, 5, 12, 16, 60, 61, 62, 63, 64, 65, 78, 80, 83, 84, 85, 87, 88, 90, 91, 156, 183, 199, 200, 222, 229, 235, 236, 237, 238, 239, 240, 241, 243, 245, 260, 261, 262, 268, 270, 271, 274, 276, 277, 279, 281, 283, 287, 288, 290, 291, 318, 321, 331, 335], "intern": [1, 2, 3, 4, 5, 13, 14, 15, 16, 17, 18, 87, 183, 210, 224, 226, 230, 321, 322, 334, 336], "_repr_html_": [1, 2, 4, 5], "html": [1, 2, 4, 5, 84, 87, 88, 161, 210, 239, 240, 243, 245, 283, 289, 298, 299, 300, 321, 333], "tag": [1, 2, 4, 5], "from": [1, 2, 3, 4, 5, 12, 13, 16, 17, 18, 22, 33, 34, 41, 57, 58, 60, 62, 63, 79, 81, 91, 92, 139, 145, 149, 156, 173, 187, 188, 189, 193, 197, 198, 199, 200, 201, 202, 203, 204, 210, 212, 215, 223, 224, 225, 226, 227, 228, 229, 230, 234, 235, 239, 240, 243, 244, 245, 248, 249, 250, 251, 252, 253, 254, 256, 258, 259, 262, 266, 267, 279, 280, 281, 282, 283, 284, 287, 288, 289, 292, 298, 299, 300, 301, 306, 309, 310, 311, 319, 321, 324, 326, 327, 328, 329, 330, 331, 332, 334, 335], "subtract": 1, "6": [1, 3, 4, 5, 13, 14, 16, 17, 18, 61, 63, 64, 65, 98, 142, 143, 144, 183, 207, 208, 212, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 262, 264, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 287, 289, 290, 291, 292, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 326, 327, 328, 329, 330, 332, 334], "divid": [1, 3, 4, 5, 13, 14, 16, 17, 18, 183, 192, 213, 228, 230, 235, 239, 240, 245, 283, 304, 314, 317, 321, 331], "allclos": [1, 4, 5, 33, 39, 210, 223, 308], "divis": [1, 210], "allow": [1, 4, 60, 61, 63, 69, 87, 142, 143, 144, 149, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 173, 183, 194, 197, 198, 199, 200, 201, 202, 203, 204, 210, 223, 224, 226, 228, 230, 233, 235, 236, 237, 239, 240, 241, 243, 245, 252, 254, 258, 259, 261, 262, 263, 267, 272, 281, 283, 284, 287, 290, 301, 306, 321, 331, 334, 335, 336], "inf": 1, "rtol": [1, 4, 5], "05": [1, 4, 212, 214, 223, 255, 259, 272, 289, 293, 298, 299, 300, 305, 321, 332], "atol": [1, 4, 5], "08": [1, 212, 223, 224, 228, 234, 235, 236, 237, 238, 239, 243, 244, 246, 255, 272, 277, 299, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 330], "whether": [1, 16, 91, 229, 244], "within": [1, 5, 210, 223, 231, 233], "rel": [1, 4, 5, 210, 251, 253, 329], "toler": [1, 4, 5, 210, 235, 324], "compar": [1, 4, 28, 91, 92, 210, 223, 230, 235, 243, 248, 254, 308, 334], "non": [1, 12, 13, 38, 41, 54, 183, 210, 223, 224, 225, 230, 249, 251, 252, 254, 260, 265, 282, 300, 305, 315, 321, 325, 326, 327, 330, 335], "angl": [1, 2, 16, 23, 27, 28, 48, 49, 50, 52, 58, 210, 217, 226, 250, 253, 334], "form": [1, 3, 12, 211, 248, 251, 253, 254, 308, 310, 325, 329], "radian": [1, 23, 27, 28, 232, 248, 249], "pi": [1, 2, 30, 33, 34, 53, 54, 58, 87, 88, 212, 223, 228, 230, 232, 247, 248, 250, 251, 252, 253, 298, 314, 320, 321, 327, 329, 331, 332], "rang": [1, 3, 4, 16, 183, 192, 226, 250, 268, 271, 274, 276, 280, 281, 283, 308, 312, 313, 315, 318, 327, 331], "slice": [1, 4, 12, 13, 16, 29, 30, 63, 210, 224, 225, 232, 237, 249, 256, 301, 328, 330], "yz": [1, 4, 226, 228, 237, 321, 329], "plane": [1, 4, 5, 12, 16, 30, 33, 35, 41, 43, 210, 215, 223, 224, 225, 226, 230, 232, 243, 247, 248, 249, 250, 251, 252, 253, 254, 256, 301, 304, 305, 306, 314, 319, 321, 325, 329], "57079633": [1, 228], "cross": [1, 2, 53, 54, 212, 223, 230, 243, 246, 253, 308, 314, 319, 329], "product": [1, 2, 230, 253, 267, 306, 329], "diff": [1, 210, 212, 228, 314], "direct": [1, 4, 5, 6, 8, 12, 16, 22, 23, 27, 28, 34, 35, 38, 39, 41, 53, 54, 57, 58, 156, 210, 212, 222, 223, 224, 226, 232, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 251, 252, 253, 254, 255, 256, 271, 274, 276, 277, 280, 298, 299, 300, 301, 302, 304, 305, 306, 307, 309, 311, 312, 314, 318, 321, 325, 326, 327, 328, 329, 330, 332], "order": [1, 4, 5, 12, 13, 54, 85, 86, 87, 149, 173, 222, 223, 226, 228, 230, 235, 241, 243, 246, 249, 250, 251, 252, 254, 256, 261, 262, 265, 267, 268, 269, 270, 271, 276, 277, 281, 284, 299, 301, 303, 306, 308, 310, 313, 315, 318, 321, 327, 328, 330, 332, 335], "restrict2valid": 1, "deriv": [1, 60, 72, 77, 79, 87, 90, 92, 197, 198, 199, 200, 201, 202, 203, 204, 210, 219, 249, 257, 288, 297, 308, 321], "via": [1, 3, 4, 12, 16, 60, 61, 62, 63, 87, 156, 164, 167, 183, 210, 212, 222, 223, 225, 226, 229, 243, 248, 255, 267, 271, 279, 284, 321, 334, 335], "argument": [1, 2, 3, 4, 5, 12, 13, 14, 15, 16, 17, 18, 19, 60, 61, 62, 63, 69, 79, 80, 90, 142, 143, 144, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 183, 205, 210, 224, 225, 226, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 248, 249, 254, 256, 258, 259, 260, 261, 262, 269, 273, 279, 281, 283, 284, 289, 291, 298, 302, 306, 307, 310, 311, 317, 321, 322], "element": [1, 4, 5, 12, 14, 16, 17, 39, 87, 139, 204, 207, 210, 224, 228, 233, 235, 238, 239, 240, 244, 245, 252, 254, 255, 321], "dim": [1, 3, 4, 5, 210, 222, 223, 224, 226, 227, 228, 230, 231, 232, 234, 235, 236, 237, 239, 243, 244, 246, 255, 272, 277, 280], "accur": [1, 5, 212, 233], "stencil": 1, "unless": [1, 4, 5, 288, 321], "too": [1, 16, 226, 248, 321], "few": [1, 210, 211, 223, 228, 230, 328], "differenti": [1, 87, 164, 210, 233, 251, 252, 254, 321, 329], "In": [1, 4, 13, 16, 28, 33, 41, 85, 87, 199, 210, 212, 222, 223, 224, 225, 226, 228, 229, 230, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 251, 253, 254, 256, 257, 261, 262, 263, 264, 265, 267, 268, 270, 271, 272, 273, 274, 276, 280, 281, 283, 284, 287, 289, 290, 291, 299, 300, 301, 302, 303, 304, 305, 306, 308, 310, 311, 312, 313, 314, 315, 318, 319, 320, 321, 326, 327, 328, 329, 330, 331, 332, 333, 335], "case": [1, 3, 4, 5, 13, 14, 16, 17, 18, 60, 69, 183, 227, 228, 230, 231, 235, 237, 239, 240, 242, 243, 245, 261, 263, 270, 280, 283, 288, 290, 291, 297, 310, 321, 326, 327, 330], "first": [1, 3, 4, 5, 12, 14, 17, 60, 62, 139, 149, 151, 173, 176, 183, 192, 197, 199, 210, 212, 216, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 235, 238, 239, 240, 244, 245, 246, 248, 249, 255, 256, 267, 280, 282, 297, 300, 301, 302, 304, 306, 308, 310, 311, 314, 321, 323, 326, 329, 331, 333, 334, 335], "boundari": [1, 2, 4, 210, 215, 226, 228, 230, 232, 249, 251, 252, 277, 297, 301, 306], "interior": 1, "less": [1, 27, 28, 61, 223], "exist": [1, 4, 5, 60, 61, 63, 64, 65, 79, 145, 167, 168, 210, 223, 228, 229, 230, 231, 262, 333, 334, 335], "than": [1, 5, 12, 60, 61, 210, 212, 222, 223, 224, 230, 239, 243, 246, 248, 250, 289, 321, 329], "By": [1, 13, 16, 210, 222, 223, 224, 225, 226, 229, 230, 233, 234, 235, 236, 241, 246, 263, 272, 275, 279, 281, 282, 283, 330, 333, 334, 335], "across": [1, 190, 210, 223, 249], "contigu": 1, "area": [1, 12, 228, 230, 232, 233, 249, 251, 252, 331], "where": [1, 3, 4, 5, 12, 13, 14, 16, 17, 18, 23, 30, 33, 35, 36, 38, 39, 41, 53, 54, 58, 84, 88, 139, 156, 183, 189, 212, 223, 224, 225, 226, 228, 229, 230, 232, 235, 238, 239, 240, 241, 243, 245, 248, 249, 251, 252, 253, 266, 268, 269, 270, 271, 274, 276, 281, 283, 298, 299, 302, 307, 318, 324, 326, 327, 329, 330, 332, 335], "behaviour": [1, 210, 226, 256, 262], "chang": [1, 4, 12, 13, 16, 60, 87, 191, 197, 198, 199, 200, 201, 202, 203, 204, 205, 222, 223, 224, 225, 226, 227, 228, 230, 234, 239, 240, 241, 243, 245, 249, 250, 251, 252, 256, 260, 261, 269, 272, 279, 281, 284, 285, 288, 289, 291, 301, 306, 310, 311, 324, 326, 327, 334, 335, 336], "whole": [1, 13, 17, 228, 239, 249, 256, 334], "strongli": [1, 226, 246], "condit": [1, 2, 4, 215, 230, 232, 243, 251, 252, 277, 297, 306], "period": [1, 2, 4, 230, 251, 252, 253, 297, 306, 321, 327, 329, 332], "edg": [1, 4, 5, 17, 18, 210, 212, 230, 235, 237, 238, 243, 246, 248, 249, 250, 252, 254, 287, 298, 302, 307, 328, 330], "To": [1, 3, 4, 5, 12, 16, 17, 18, 87, 156, 183, 210, 212, 221, 223, 224, 225, 226, 228, 230, 232, 233, 236, 238, 240, 242, 244, 245, 248, 249, 250, 255, 256, 260, 261, 262, 266, 280, 281, 283, 289, 305, 306, 321, 324, 326, 327, 331, 332, 333, 334, 335], "enabl": [1, 210, 247, 329, 332], "bc": [1, 4, 235, 236, 251, 252, 277, 306, 308, 314], "notimplementederror": [1, 258, 259, 262], "higher": [1, 4, 86, 194, 224, 228, 248, 251, 252, 261], "ask": [1, 34, 227, 228, 234, 235, 237, 239, 240, 241, 243, 245, 267, 289, 328, 330, 333, 334], "vari": [1, 68, 69, 70, 78, 81, 82, 84, 86, 87, 210, 215, 226, 233, 241, 249, 258, 259, 265, 284, 291, 297, 316, 321, 326], "we": [1, 5, 35, 41, 57, 58, 210, 211, 212, 213, 214, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335], "choos": [1, 3, 183, 210, 224, 230, 234, 239, 240, 243, 245, 270, 281, 283, 297, 299, 300, 301, 302, 307, 310, 312, 316, 317, 320, 327, 328, 335], "2x": 1, "3y": 1, "5z": 1, "accordingli": [1, 3, 4, 5, 13, 14, 16, 17, 18, 183, 238, 239, 243, 282, 291, 311, 320, 330], "expect": [1, 2, 29, 223, 239, 240, 245, 268, 270, 271, 274, 276, 282, 283, 287, 302, 307, 311, 312, 318, 327, 328, 331], "dy": [1, 4, 300, 301], "100e": [1, 5, 228, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 249, 250, 253, 275, 277, 298, 300, 303, 308, 327, 330], "10e": [1, 4, 5, 15, 17, 18, 41, 53, 54, 58, 85, 87, 212, 223, 224, 226, 228, 234, 239, 243, 244, 246, 264, 268, 270, 271, 272, 273, 274, 276, 277, 300, 301, 302, 304, 306, 307, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 327, 329, 330], "try": [1, 226, 228, 233, 235, 237, 244, 258, 259, 262, 263, 280, 285, 287, 290, 291, 297, 305, 308, 312, 328, 334, 335, 336], "dx": [1, 4, 183, 300, 301], "dz": [1, 4, 34, 58, 300, 301], "howev": [1, 13, 183, 223, 224, 225, 226, 228, 230, 231, 233, 235, 239, 240, 243, 245, 249, 252, 254, 256, 263, 272, 280, 288, 290, 291, 306, 316, 326, 329, 330, 332, 335], "becaus": [1, 4, 12, 183, 210, 212, 224, 225, 226, 228, 229, 237, 250, 258, 259, 261, 263, 265, 267, 282, 290, 301, 302, 305, 307, 312, 313, 315, 321, 328], "calcul": [1, 3, 4, 5, 13, 14, 16, 17, 18, 22, 24, 27, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 79, 108, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 154, 167, 180, 183, 210, 212, 214, 216, 221, 223, 228, 232, 243, 248, 249, 251, 252, 253, 254, 262, 266, 297, 298, 302, 307, 322, 328, 329, 332, 334], "below": [1, 60, 210, 224, 228, 230, 249, 254, 321, 329, 331, 335], "valid_fun": 1, "tolist": 1, "dot": [1, 212, 308, 314], "diment": [1, 230, 249, 251], "2e": [1, 4, 33, 34, 38, 39, 41, 54, 57, 78, 164, 212, 224, 225, 226, 228, 235, 236, 237, 239, 243, 244, 246, 255, 261, 265, 273, 277, 279, 292, 309, 325, 329], "fftn": [1, 4, 223, 233], "perform": [1, 4, 41, 197, 210, 223, 224, 228, 230, 233, 235, 239, 247, 248, 249, 253, 254, 283, 287, 302, 303, 307, 308, 329, 336], "discret": [1, 4], "fast": [1, 4, 183, 223, 246, 331], "fourier": [1, 4, 25, 33, 35, 44, 54, 58, 183, 210, 223, 248, 251, 252, 254, 280, 301, 329], "transform": [1, 2, 4, 25, 35, 44, 54, 58, 183, 210, 223, 248, 251, 252, 254, 280, 301, 321, 329], "fft": [1, 4, 210, 215, 238, 295, 301, 331], "underi": 1, "domain": [1, 4, 67, 210, 223, 225, 280, 297, 298, 299, 300, 310, 319, 321, 323, 326, 334], "frequenc": [1, 4, 41, 87, 183, 248, 249, 251, 252, 261, 316, 317, 320, 321], "dure": [1, 2, 3, 4, 80, 90, 149, 156, 173, 210, 212, 222, 223, 228, 230, 233, 243, 272, 299, 310, 328, 335], "process": [1, 2, 87, 210, 223, 249, 321], "inform": [1, 4, 12, 16, 22, 60, 61, 62, 63, 79, 80, 167, 210, 222, 223, 226, 229, 233, 242, 246, 248, 253, 254, 255, 256, 267, 275, 277, 289, 294, 309, 321, 326, 329, 331, 332, 333, 335], "about": [1, 4, 5, 15, 22, 61, 62, 63, 79, 80, 167, 180, 210, 213, 222, 223, 226, 229, 235, 242, 243, 246, 250, 255, 267, 277, 278, 298, 309, 321, 324, 329, 331, 332], "lost": [1, 4, 222, 223, 229, 230], "keyword": [1, 2, 3, 4, 5, 12, 13, 14, 15, 16, 17, 18, 19, 61, 62, 63, 79, 90, 142, 143, 144, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 183, 199, 210, 224, 225, 226, 241, 262, 284, 311], "directli": [1, 2, 12, 16, 63, 87, 150, 156, 175, 210, 222, 223, 224, 229, 230, 235, 248, 249, 254, 256, 294, 321, 329, 332, 335], "scipi": [1, 2, 223, 230, 298, 301, 331, 332], "fftpack": 1, "repres": [1, 3, 4, 60, 199, 210, 212, 223, 230, 233, 246, 277, 327, 331], "ft_": [1, 223], "front": 1, "correspond": [1, 4, 12, 13, 212, 223, 224, 231, 240, 241, 243, 248, 284, 330], "fft_field": [1, 223], "ft_x": [1, 223], "ft_y": [1, 223], "ft_z": [1, 223], "3d": [1, 12, 16, 210, 224, 226, 230, 231, 235, 239, 240, 243, 245, 254, 270, 277, 330], "ft_v0": 1, "ft_v1": 1, "ft_v2": 1, "ft_v3": 1, "ifftn": [1, 4, 223], "rfftn": [1, 223], "irfftn": [1, 223], "classmethod": [1, 183], "from_xarrai": [1, 210], "xa": 1, "xarrai": [1, 12, 60, 210, 215, 222, 224, 255, 336], "dataarrai": [1, 12, 60, 210, 215, 224, 255, 336], "accept": [1, 3, 4, 5, 12, 13, 14, 15, 16, 17, 18, 62, 63, 79, 156, 183, 198, 200, 201, 204, 225, 226, 239, 240, 241, 245, 258, 259, 283, 284, 291, 311, 321], "geometr": [1, 4, 5, 12, 16, 22, 23, 223, 228, 230, 232, 235, 236, 237, 246], "last": [1, 3, 4, 5, 29, 30, 60, 62, 68, 69, 70, 78, 81, 82, 83, 84, 86, 87, 88, 91, 142, 143, 144, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 192, 197, 198, 199, 200, 201, 202, 203, 204, 205, 212, 222, 223, 225, 226, 230, 241, 246, 256, 258, 259, 267, 272, 279, 299, 310, 311, 312, 325, 331], "name": [1, 3, 4, 5, 12, 16, 39, 41, 60, 61, 62, 63, 64, 65, 79, 80, 83, 85, 90, 91, 105, 139, 145, 147, 148, 149, 156, 167, 168, 171, 172, 173, 183, 187, 189, 194, 197, 198, 200, 201, 202, 203, 204, 210, 212, 214, 224, 226, 228, 230, 231, 233, 236, 239, 240, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 263, 264, 268, 270, 271, 272, 273, 274, 276, 277, 279, 280, 282, 285, 287, 289, 291, 293, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 330, 331, 335], "e": [1, 2, 3, 4, 5, 12, 13, 14, 15, 16, 17, 18, 26, 27, 28, 29, 30, 33, 35, 36, 60, 61, 63, 68, 69, 70, 78, 79, 81, 82, 84, 86, 87, 91, 167, 183, 201, 210, 211, 212, 213, 223, 224, 225, 226, 228, 229, 230, 235, 237, 238, 239, 240, 243, 244, 245, 246, 248, 251, 252, 255, 257, 262, 269, 271, 272, 277, 279, 280, 282, 289, 292, 298, 299, 301, 302, 307, 308, 309, 311, 312, 320, 321, 322, 326, 328, 330, 331, 332, 333, 334, 335], "henc": [1, 223, 226, 229, 230, 233, 246, 248, 249, 251, 253, 321, 322], "present": [1, 4, 91, 210, 223, 252, 254, 277, 284, 321, 325, 327, 330, 331], "greater": [1, 12, 230, 246, 248], "integ": [1, 4, 192, 197, 201, 204, 222, 228, 230, 235, 238, 240, 246, 287, 290], "along": [1, 4, 5, 34, 35, 39, 57, 58, 60, 183, 210, 223, 224, 230, 235, 241, 243, 244, 246, 247, 248, 249, 251, 254, 277, 280, 301, 304, 311, 314, 327, 328, 329], "respect": [1, 4, 5, 35, 36, 41, 53, 54, 60, 210, 223, 226, 230, 236, 240, 246, 248, 251, 321, 329, 332], "space": [1, 4, 12, 25, 33, 35, 44, 57, 58, 72, 79, 156, 183, 210, 223, 225, 228, 229, 235, 237, 239, 246, 248, 249, 250, 251, 252, 265, 268, 270, 271, 274, 276, 287, 317, 318, 321], "g": [1, 3, 4, 5, 12, 13, 14, 15, 16, 17, 18, 26, 60, 61, 63, 68, 69, 70, 78, 79, 81, 82, 84, 86, 87, 91, 183, 201, 210, 211, 213, 224, 225, 226, 229, 238, 239, 240, 244, 245, 250, 253, 255, 262, 277, 282, 289, 292, 298, 301, 321, 322, 326, 330, 331, 332, 333, 334], "addition": [1, 87, 224, 226, 262, 334, 335], "right": [1, 19, 30, 33, 34, 35, 36, 41, 54, 58, 69, 84, 212, 223, 232, 240, 243, 245, 248, 249, 251, 252, 254, 255, 261, 268, 270, 271, 274, 287, 299, 314, 326, 332, 334], "absenc": [1, 212], "ax": [1, 3, 4, 5, 13, 14, 15, 16, 17, 18, 19, 60, 183, 210, 212, 223, 226, 228, 230, 237, 238, 239, 240, 245, 246, 248, 253, 261, 268, 281, 283, 299, 300, 321, 329], "util": [1, 12, 60, 61, 63, 64, 65, 169, 190, 196, 206, 210, 249, 272, 278, 319, 334], "should": [1, 4, 12, 16, 41, 64, 65, 87, 156, 183, 201, 204, 210, 216, 224, 226, 228, 231, 233, 242, 246, 261, 262, 266, 268, 270, 271, 274, 276, 277, 290, 297, 308, 311, 321, 327, 330, 334, 335], "note": [1, 4, 12, 16, 53, 63, 64, 65, 69, 79, 80, 156, 210, 221, 222, 223, 224, 225, 226, 229, 230, 235, 239, 248, 251, 252, 256, 299, 300, 315, 321, 324, 328, 332, 333, 334, 335], "requir": [1, 2, 4, 12, 16, 62, 79, 84, 87, 88, 156, 170, 210, 211, 224, 226, 227, 228, 229, 230, 232, 246, 260, 261, 262, 265, 267, 277, 281, 289, 290, 299, 300, 301, 306, 321, 332, 334, 335], "keyerror": 1, "least": 1, "miss": [1, 183, 193, 210, 211, 214, 232, 235, 282], "absent": 1, "doe": [1, 4, 12, 60, 61, 64, 65, 145, 168, 183, 197, 198, 199, 200, 201, 202, 203, 204, 210, 221, 222, 226, 229, 235, 237, 239, 240, 243, 245, 248, 261, 262, 267, 270, 271, 276, 278, 283, 286, 291, 294, 301, 306, 311, 318, 321, 322, 331, 332, 334], "grater": 1, "xr": [1, 58, 246, 336], "ones": [1, 12, 60, 210, 233, 239, 246, 328], "float": [1, 3, 4, 5, 29, 150, 175, 197, 201, 204, 205, 207, 208, 210, 223, 246, 277, 287, 331], "arang": [1, 22, 239, 246, 321], "mag": [1, 60, 246, 255], "21": [1, 210, 212, 222, 223, 224, 226, 228, 230, 231, 234, 235, 238, 239, 243, 246, 255, 256, 260, 261, 269, 279, 280, 282, 292, 299, 302, 307, 311, 312, 320, 321, 326, 330, 331, 332], "invers": [1, 4, 183, 223, 280], "ifft": [1, 4], "start": [1, 2, 4, 5, 22, 62, 87, 210, 213, 216, 222, 223, 226, 230, 234, 235, 239, 240, 244, 245, 268, 270, 271, 272, 273, 274, 276, 281, 289, 297, 299, 300, 301, 307, 308, 311, 313, 315, 317, 318, 319, 320, 321, 324, 326, 327, 328, 334], "ifft_field": [1, 223], "v0": [1, 228], "v1": [1, 3, 228], "v2": [1, 3, 228], "v3": [1, 3, 228], "integr": [1, 22, 29, 34, 35, 45, 57, 58, 210, 212, 230, 232, 246, 249, 254, 301, 302, 307, 308, 314, 334], "cumul": [1, 6], "over": [1, 4, 16, 22, 29, 60, 61, 63, 84, 87, 88, 194, 198, 200, 201, 204, 210, 226, 255, 283, 289, 298, 299, 321, 324, 325], "surfac": [1, 5, 83, 215, 249, 315], "flux": [1, 34, 39, 45, 253, 329], "normal": [1, 223, 224, 248, 255, 256, 261, 329, 335], "prior": [1, 12], "see": [1, 16, 19, 87, 210, 212, 222, 223, 224, 225, 226, 228, 229, 230, 233, 235, 238, 240, 243, 245, 250, 251, 252, 256, 267, 269, 272, 289, 298, 299, 305, 310, 311, 312, 313, 315, 319, 321, 324, 326, 327, 328, 331], "resembl": [1, 248], "follow": [1, 2, 4, 12, 16, 69, 84, 85, 87, 88, 156, 210, 214, 221, 222, 223, 224, 226, 228, 229, 230, 234, 235, 236, 237, 240, 246, 256, 257, 258, 259, 262, 280, 287, 291, 298, 305, 319, 321, 323, 324, 325, 328, 330, 332, 333, 334, 335], "here": [1, 35, 57, 58, 62, 84, 88, 211, 213, 216, 223, 224, 226, 228, 232, 236, 240, 243, 244, 245, 248, 249, 250, 251, 253, 256, 258, 259, 260, 261, 266, 267, 289, 297, 306, 308, 312, 314, 315, 316, 321, 324, 327, 332, 333, 335], "int_": [1, 34, 212, 228, 308], "mathrm": [1, 223, 226, 321, 327, 332], "min": [1, 5, 210, 223, 243, 248, 253, 286], "d": [1, 39, 53, 54, 69, 70, 71, 82, 84, 88, 198, 210, 212, 224, 228, 236, 247, 248, 249, 250, 251, 252, 253, 254, 261, 287, 299, 300, 301, 302, 304, 305, 306, 307, 308, 311, 314, 319, 321, 325, 326, 327, 328, 329, 330, 331, 332], "sum": [1, 22, 53, 54, 92, 228, 230, 251, 260, 261, 282, 302, 307, 312, 328, 331], "up": [1, 5, 87, 194, 210, 222, 223, 227, 230, 243, 244, 247, 248, 249, 251, 252, 253, 254, 263, 304, 308, 313, 314, 315, 321, 333], "exclud": [1, 12], "ad": [1, 3, 4, 5, 13, 14, 15, 16, 17, 18, 19, 62, 87, 91, 92, 156, 183, 212, 223, 226, 238, 255, 260, 261, 263, 265, 270, 271, 282, 299, 305, 321, 331, 335], "weight": [1, 332], "volum": [1, 2, 4, 5, 22, 39, 58, 230, 243, 253, 302, 307, 331, 332, 334], "v": [1, 3, 5, 26, 30, 33, 36, 58, 212, 223, 228, 232, 234, 243, 248, 253, 258, 286, 308, 332], "r": [1, 3, 4, 212, 223, 226, 228, 229, 234, 239, 240, 245, 247, 248, 249, 250, 251, 252, 253, 254, 258, 259, 301, 304, 314, 329, 330, 335], "5000": 1, "2000": 1, "3000": 1, "f_plane": 1, "sel": [1, 4, 7, 13, 16, 29, 30, 41, 53, 54, 210, 212, 223, 224, 225, 226, 228, 229, 230, 232, 237, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 264, 269, 270, 272, 273, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 318, 319, 321, 325, 327, 328, 329, 330], "500": [1, 4, 91, 212, 248, 299, 305, 311, 316, 317, 321], "e_z": 1, "300": [1, 36, 224, 248, 291, 311, 329, 331], "x_": 1, "max": [1, 5, 223, 228, 243, 248, 249, 251, 252, 253, 256, 279, 286, 334], "30": [1, 4, 5, 13, 194, 205, 223, 224, 226, 228, 230, 231, 235, 243, 246, 249, 250, 255, 256, 261, 282, 311, 312, 320, 321, 331, 332], "irfft": [1, 183, 280], "line": [1, 4, 5, 10, 12, 16, 17, 18, 156, 210, 212, 215, 223, 225, 239, 240, 242, 243, 245, 248, 249, 267, 278, 304, 305, 312, 314, 321, 327, 329, 331, 333, 335], "given": [1, 2, 4, 12, 22, 23, 26, 28, 29, 33, 34, 41, 54, 192, 223, 231, 232, 233, 235, 248, 249, 252, 260, 261, 321, 327, 329, 332, 334, 335], "posit": [1, 2, 4, 5, 41, 54, 70, 84, 183, 197, 201, 204, 210, 212, 222, 223, 224, 226, 230, 231, 238, 243, 249, 250, 273, 287, 305, 311, 321, 325, 326, 327, 328, 330], "_": [1, 4, 5, 33, 34, 35, 39, 41, 68, 70, 71, 82, 84, 212, 223, 224, 232, 235, 239, 243, 248, 249, 253, 260, 261, 264, 277, 300, 302, 307, 308, 309, 320, 326, 328, 329, 332], "frac": [1, 4, 5, 30, 33, 34, 35, 36, 39, 41, 53, 54, 58, 69, 70, 71, 82, 84, 88, 212, 223, 225, 232, 236, 243, 248, 249, 251, 252, 260, 261, 264, 270, 298, 299, 300, 302, 307, 308, 309, 314, 320, 326, 328, 332], "outsid": [1, 4, 41, 210, 224, 225, 226, 227, 228, 243, 249, 256, 303, 304, 314], "arithmet": [1, 223], "select": [1, 3, 4, 12, 30, 54, 60, 61, 62, 63, 151, 176, 183, 212, 223, 224, 226, 232, 241, 246, 249, 251, 252, 255, 281, 283, 284, 332, 335], "more": [1, 2, 4, 5, 13, 16, 60, 84, 87, 88, 145, 168, 194, 210, 212, 213, 222, 223, 224, 226, 229, 230, 232, 233, 235, 236, 238, 239, 240, 242, 243, 245, 251, 252, 258, 259, 262, 265, 289, 291, 297, 298, 299, 300, 309, 311, 315, 317, 321, 324, 326, 328, 329, 330, 333, 334, 335], "appropri": [1, 3, 4, 5, 13, 14, 16, 17, 18, 183, 223, 299, 305, 321, 327, 335], "entir": [1, 223, 228, 235, 239, 255, 276, 283, 318], "averag": [1, 256, 271, 279, 281, 283, 299, 301, 309, 321, 328, 329, 330], "combin": [1, 12, 16, 54, 60, 61, 63, 165, 210, 222, 230, 251, 254, 255, 277, 321, 329, 334], "reduc": [1, 4, 12, 28, 99, 210, 223, 224, 226, 230, 232], "hold": [1, 281], "55": [1, 223, 226, 228, 261, 272, 331], "pad": [1, 4, 215, 249], "pad_width": [1, 4, 238], "mode": [1, 170, 210, 249], "chosen": [1, 2, 4, 29, 60, 61, 63, 87, 183, 224, 240, 243, 244, 245, 267, 327], "assign": [1, 3, 12, 27, 197, 222, 226, 239, 260, 261, 262, 267, 281, 285, 287, 290, 331], "them": [1, 3, 60, 63, 91, 145, 224, 228, 230, 233, 234, 235, 239, 240, 243, 245, 248, 251, 252, 260, 261, 272, 283, 287, 297, 298, 316, 327, 328, 329, 333], "wai": [1, 4, 16, 149, 173, 183, 211, 222, 223, 224, 225, 226, 228, 229, 231, 233, 235, 236, 237, 239, 240, 245, 248, 260, 261, 265, 268, 270, 271, 274, 276, 281, 283, 289, 291, 299, 305, 307, 310, 315, 318, 321, 328, 330, 331, 332, 335], "go": [1, 4, 5, 16, 79, 212, 222, 223, 226, 228, 231, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 263, 268, 270, 271, 272, 273, 274, 276, 279, 283, 284, 299, 303, 304, 306, 307, 308, 310, 312, 313, 314, 315, 318, 320, 327, 328, 331, 335], "wherea": [1, 4, 16, 87, 139, 239, 240, 241, 245, 268, 270, 271, 274, 279, 284, 313, 319], "neg": [1, 4, 54, 62, 70, 82, 197, 223, 231, 238, 249, 258, 259, 276, 297, 315, 318, 327, 329, 330], "pf": 1, "resampl": [1, 16, 210, 215, 226, 231, 256, 299, 301, 309, 328, 330], "new": [1, 2, 4, 5, 19, 60, 63, 64, 65, 149, 151, 173, 176, 183, 187, 188, 189, 210, 213, 216, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 235, 238, 243, 246, 255, 256, 267, 277, 279, 280, 284, 288, 290, 297, 323, 324, 328, 333, 334, 335], "pmin": [1, 4, 5, 210, 222, 223, 224, 227, 228, 230, 231, 232, 235, 236, 237, 239, 243, 244, 246, 255, 272, 277, 327, 330], "pmax": [1, 4, 5, 210, 222, 223, 224, 227, 228, 230, 231, 232, 235, 236, 237, 239, 243, 244, 246, 255, 272, 277, 327, 330], "stai": [1, 4, 22, 228], "unchang": [1, 228], "taken": [1, 23, 212, 228, 230, 231, 232, 254, 321], "nearest": [1, 4, 12, 210, 228, 230, 232, 246, 332], "old": [1, 5, 183, 184, 210, 228, 229, 230, 281, 282, 283], "interpol": [1, 2, 12, 210, 224, 226, 228, 230, 248, 249, 251, 252, 254, 321, 329], "match": [1, 4, 5, 12, 91, 183, 246, 277, 281, 282, 283], "ndim": [1, 4, 5, 210, 222, 226, 228, 243, 277], "decreas": [1, 226, 302, 307, 321, 327], "down_sampl": 1, "increas": [1, 22, 210, 247, 282], "up_sampl": 1, "15": [1, 4, 5, 183, 210, 212, 222, 223, 224, 225, 226, 228, 230, 231, 232, 234, 235, 239, 240, 243, 245, 248, 249, 255, 256, 260, 261, 268, 270, 271, 274, 276, 277, 282, 289, 292, 298, 299, 303, 305, 308, 311, 315, 318, 319, 320, 321, 325, 326, 327, 328, 329, 330, 331, 332], "rfft": [1, 4, 183, 280], "rotate90": [1, 4, 5, 210], "ax1": [1, 4, 5, 230, 321], "ax2": [1, 4, 5, 230, 321], "k": [1, 4, 5, 33, 35, 41, 47, 54, 68, 86, 90, 100, 223, 230, 248, 249, 251, 252, 253, 254, 261, 265, 292, 298, 302, 304, 305, 306, 307, 308, 311, 313, 314, 315, 321, 325, 327, 329, 332], "reference_point": [1, 4, 5, 230, 235, 243], "inplac": [1, 4, 5, 223, 235, 243], "rotat": [1, 2, 4, 5, 87, 210, 215, 217, 223, 240, 245, 251, 253, 321, 329], "90": [1, 4, 5, 23, 210, 232, 277, 278], "time": [1, 4, 5, 26, 30, 35, 39, 54, 60, 63, 64, 65, 69, 70, 79, 80, 82, 84, 87, 88, 144, 150, 163, 175, 183, 210, 212, 214, 223, 230, 231, 232, 243, 248, 251, 253, 255, 258, 260, 262, 264, 267, 270, 271, 272, 279, 280, 281, 282, 283, 284, 297, 299, 300, 301, 302, 305, 306, 307, 308, 309, 311, 314, 316, 322, 324, 325, 326, 327, 328, 329, 330, 332, 333], "degre": [1, 4, 5, 23, 27, 28, 210, 230, 232, 250, 321], "possibl": [1, 2, 4, 19, 27, 28, 29, 87, 142, 143, 144, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 194, 210, 211, 222, 224, 226, 228, 229, 230, 231, 232, 235, 243, 246, 249, 251, 252, 255, 256, 265, 267, 271, 291, 321, 329], "around": [1, 4, 5, 7, 16, 87, 183, 184, 223, 230, 249], "centr": [1, 4, 5, 210, 212, 223, 225, 231, 235, 237, 239, 243, 299, 300, 330], "place": [1, 4, 5, 210, 212, 235, 269, 316, 323, 329], "runtimeerror": [1, 80, 226], "arg": [1, 2, 4, 60, 183, 289], "part": [1, 4, 12, 63, 199, 210, 213, 223, 224, 230, 231, 235, 243, 248, 249, 255, 268, 270, 271, 274, 276, 277, 281, 300, 309, 314, 325, 328, 330, 334], "axi": [1, 3, 4, 5, 13, 14, 16, 17, 18, 19, 183, 210, 223, 224, 225, 226, 228, 230, 234, 235, 237, 239, 240, 244, 245, 246, 248, 250, 251, 252, 253, 261, 265, 268, 272, 274, 281, 283, 298, 305, 307, 311, 312, 316, 321, 325, 327], "perpendicular": [1, 4, 5, 39, 228, 237, 244, 251, 253, 261, 270, 327], "intersect": [1, 4, 226, 233, 237], "center": [1, 4, 5, 212, 223, 226, 230, 235, 243, 334], "alreadi": [1, 79, 80, 91, 167, 210, 226, 230, 235, 239, 275, 279, 280, 312, 321, 332, 333, 334, 335], "instead": [1, 4, 8, 12, 16, 64, 65, 151, 156, 176, 210, 221, 222, 224, 226, 227, 230, 241, 242, 275, 305, 321, 324, 331, 336], "7e": [1, 4, 69, 223, 235, 237, 255], "sub": [1, 4, 64, 65, 210, 211, 333, 334], "maximum": [1, 4, 5, 23, 27, 57, 183, 192, 207, 210, 232, 241, 243, 248, 249, 254, 279, 282, 284, 286, 298, 330], "specif": [1, 4, 33, 54, 67, 79, 84, 87, 88, 149, 156, 173, 197, 198, 200, 201, 204, 205, 213, 216, 228, 229, 233, 239, 248, 252, 254, 258, 259, 262, 266, 294, 297, 310, 334, 335], "plane_field": 1, "xy": [1, 4, 30, 223, 224, 226, 228, 230, 236, 237, 248, 251, 252, 256, 277, 306, 308, 314, 321], "selected_field": 1, "1d": [1, 16, 235, 243, 277], "to_vtk": 1, "convert": [1, 4, 5, 183, 210, 223, 224, 239, 240, 242, 245, 246, 255, 332], "vtk": [1, 9, 10, 63, 210, 224, 225, 226, 229, 242, 255, 334], "rectilinear": 1, "grid": [1, 223, 226, 230, 298, 299, 301, 309], "conver": 1, "vtkrectilineargrid": 1, "store": [1, 3, 60, 79, 156, 167, 183, 210, 223, 228, 229, 234, 246, 255, 256, 279, 283, 284, 309], "cell_data": 1, "rectilinear_grid": 1, "attributeerror": [1, 90, 91, 142, 143, 144, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 197, 198, 199, 200, 201, 202, 203, 204, 205, 228, 262, 285, 287, 291], "f_vtk": 1, "getnumberofcel": 1, "to_xarrai": [1, 60, 210, 255], "addtion": 1, "update_field_valu": [1, 210, 222, 227, 231], "everi": [1, 63, 64, 65, 210, 222, 235, 243, 255, 256, 265, 280, 289, 301, 335], "python": [1, 4, 87, 197, 199, 210, 226, 228, 235, 239, 258, 259, 265, 268, 274, 276, 278, 287, 289, 291, 303, 315, 318, 323, 324, 328, 329, 330, 333, 334, 335, 336], "final": [1, 2, 212, 223, 228, 229, 230, 235, 239, 240, 243, 245, 250, 254, 264, 268, 270, 271, 273, 274, 276, 279, 282, 283, 298, 299, 301, 304, 308, 310, 312, 314, 318, 322, 327, 335], "also": [1, 4, 17, 60, 87, 149, 156, 167, 173, 198, 199, 200, 201, 204, 210, 212, 216, 223, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 239, 240, 243, 245, 246, 247, 248, 249, 250, 251, 252, 255, 256, 261, 265, 267, 270, 271, 273, 280, 283, 288, 290, 291, 294, 298, 302, 307, 311, 321, 326, 327, 329, 330, 332, 333, 334, 335], "independ": [1, 16, 60, 61, 63, 64, 65, 87, 183, 210, 226, 228, 256, 262, 279, 280, 282, 283, 334, 335], "unsupport": [1, 331], "value_funct": [1, 228], "sub1": 1, "sub2": 1, "s1": 1, "s2": 1, "traceback": [1, 4, 5, 29, 30, 68, 69, 70, 78, 81, 82, 83, 84, 86, 87, 88, 91, 142, 143, 144, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 197, 198, 199, 200, 201, 202, 203, 204, 205, 225, 267, 312, 331], "most": [1, 4, 5, 16, 29, 30, 34, 68, 69, 70, 78, 81, 82, 83, 84, 86, 87, 88, 91, 142, 143, 144, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 197, 198, 199, 200, 201, 202, 203, 204, 205, 210, 224, 225, 230, 232, 243, 248, 249, 267, 280, 291, 312, 321, 331], "recent": [1, 4, 5, 29, 30, 68, 69, 70, 78, 81, 82, 83, 84, 86, 87, 88, 91, 142, 143, 144, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 197, 198, 199, 200, 201, 202, 203, 204, 205, 225, 267, 312, 331], "__hash__": [1, 4, 5, 91, 92], "ones_lik": 1, "conjug": [1, 58, 155, 228, 248], "curl": [1, 210, 298, 308], "nabla": [1, 69, 78, 88, 212, 260, 261, 264, 270, 271, 299, 300, 302, 307, 308, 314, 315, 327, 328], "left": [1, 30, 33, 34, 35, 36, 41, 54, 58, 69, 84, 212, 223, 232, 243, 248, 249, 251, 252, 254, 255, 261, 268, 270, 271, 274, 287, 299, 314, 326, 332, 334], "partial": [1, 30, 34, 41, 69, 212, 232, 248, 249, 261, 270, 314], "v_": [1, 286], "certain": [1, 12, 16, 197, 203, 226, 227, 228, 232, 235, 238, 241, 265, 281, 283, 284, 287, 290, 307, 321, 329], "precis": [1, 4, 13, 16, 79, 145, 156, 167, 168, 210, 223, 226, 239, 240, 242, 245, 258, 259, 289, 291, 315, 330, 335], "assum": [1, 4, 16, 224, 226, 231, 236, 243, 250, 254, 280, 306, 321, 323, 324, 326, 327, 330], "need": [1, 210, 212, 223, 224, 225, 226, 228, 230, 232, 235, 237, 238, 239, 241, 243, 255, 256, 261, 267, 268, 270, 271, 274, 276, 284, 286, 291, 299, 300, 304, 305, 306, 312, 314, 318, 319, 320, 321, 326, 328, 330, 332, 334, 335], "correctli": [1, 226], "2xy": [1, 228], "2y": [1, 246], "5xz": 1, "diverg": [1, 16], "sum_i": 1, "don": [1, 210, 223, 226, 228], "t": [1, 26, 33, 34, 60, 64, 65, 69, 70, 82, 84, 85, 87, 88, 103, 145, 168, 183, 184, 197, 198, 199, 200, 201, 202, 203, 204, 205, 210, 212, 214, 223, 224, 226, 228, 247, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 261, 262, 267, 270, 272, 273, 275, 279, 280, 281, 282, 283, 284, 285, 287, 290, 291, 292, 299, 300, 301, 305, 306, 309, 311, 316, 317, 319, 320, 321, 322, 325, 326, 327, 329, 330, 331, 332], "dimention": 1, "gradient": [1, 155], "x_1": 1, "x_ndim": 1, "contant": 1, "06": [1, 102, 207, 208, 214, 223, 255, 257, 272, 292, 302, 328, 331], "hv": [1, 60, 210, 212, 223, 224, 249, 256, 272, 304, 305, 311, 319, 321, 325], "plot": [1, 3, 4, 5, 7, 12, 13, 14, 15, 16, 17, 18, 43, 44, 45, 46, 47, 48, 49, 50, 51, 60, 183, 184, 210, 212, 213, 218, 222, 223, 230, 232, 234, 235, 239, 241, 243, 246, 247, 248, 250, 251, 252, 253, 270, 272, 273, 280, 283, 284, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 313, 314, 315, 316, 319, 321, 325, 326, 328, 329, 330, 336], "interfac": [1, 60, 210, 221, 224, 226, 256, 324, 334, 336], "holoview": [1, 12, 60, 210, 215, 225, 226, 246, 256, 334], "hvplot": [1, 60, 224, 226, 249], "base": [1, 2, 3, 4, 5, 11, 12, 13, 14, 15, 16, 17, 18, 22, 24, 25, 30, 37, 41, 54, 56, 60, 62, 63, 79, 156, 167, 183, 197, 210, 223, 224, 225, 226, 232, 233, 235, 239, 240, 241, 243, 245, 249, 255, 256, 258, 259, 262, 277, 283, 284, 301, 309, 311, 336], "quickli": [1, 60, 224, 229], "avail": [1, 12, 30, 60, 87, 139, 149, 151, 173, 176, 180, 210, 214, 224, 228, 230, 232, 250, 255, 257, 267, 275, 280, 289, 309, 321, 324, 329, 331, 334, 335], "document": [1, 2, 12, 16, 60, 79, 84, 87, 88, 142, 143, 144, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 170, 210, 223, 224, 225, 226, 228, 229, 230, 233, 250, 254, 256, 258, 259, 265, 277, 288, 297, 309, 321, 324, 329, 331, 333], "link": [1, 60, 335], "shown": [1, 3, 4, 5, 12, 13, 14, 16, 17, 18, 183, 210, 216, 224, 226, 228, 230, 239, 240, 241, 243, 245, 248, 254, 261, 275, 280, 281, 283, 284, 287, 297, 299, 321, 324, 329, 330, 333], "filter": [1, 12, 16, 35, 210, 224, 226, 248, 254, 329], "contour": [1, 12, 16, 60, 210, 248], "kdim": [1, 12, 60, 212, 223, 224, 249, 256, 272, 304, 305, 311, 319, 321, 325], "dynamicmap": [1, 12, 60], "imag": [1, 12, 33, 41, 43, 57, 170, 210, 214, 223, 228, 267, 306, 329, 335], "imaginari": [1, 48, 223, 228], "k3d": [1, 4, 5, 13, 14, 15, 210, 215, 224, 226, 254, 268, 270, 271, 274, 276, 334, 336], "laplac": [1, 308], "laplacian": [1, 210], "sum_": [1, 81, 332], "x_i": 1, "f_": [1, 26, 228, 320], "f_mathrm": 1, "assert": 1, "mpl": [1, 3, 4, 5, 7, 15, 16, 17, 18, 33, 35, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 57, 58, 183, 184, 210, 212, 223, 229, 230, 232, 233, 234, 243, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 264, 269, 270, 272, 273, 280, 281, 283, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 325, 326, 327, 328, 329, 330], "matplotlib": [1, 3, 4, 5, 11, 16, 17, 18, 19, 33, 34, 35, 41, 53, 54, 57, 58, 183, 210, 212, 215, 223, 224, 225, 230, 239, 240, 245, 246, 247, 248, 249, 250, 251, 252, 253, 270, 281, 283, 298, 299, 301, 304, 311, 314, 317, 321, 329, 330, 334], "light": [1, 16, 36, 45, 57, 58, 210, 233, 248, 252, 254, 329], "interpret": [1, 224, 235, 243, 329, 335], "wrong": [1, 68, 69, 70, 78, 81, 82, 83, 84, 86, 87, 88, 210], "addit": [1, 2, 12, 13, 16, 61, 63, 79, 156, 167, 170, 183, 194, 210, 223, 224, 226, 229, 230, 231, 232, 240, 243, 245, 246, 249, 250, 255, 256, 261, 262, 265, 275, 277, 289, 294, 299, 306, 315, 321, 327, 335], "manipul": [1, 182, 225, 246, 279, 319], "orient": [1, 30, 210, 212, 225, 226, 228, 232, 241, 256, 284, 308, 314, 319, 321, 327, 328, 334], "so": [1, 3, 4, 5, 13, 14, 15, 16, 17, 18, 62, 63, 81, 183, 210, 222, 223, 224, 225, 226, 235, 239, 240, 241, 245, 248, 251, 252, 267, 268, 272, 274, 283, 284, 298, 301, 306, 308, 311, 312, 315, 316, 325, 327, 329, 330, 333, 334, 335], "obtain": [1, 5, 16, 22, 34, 57, 87, 145, 210, 224, 226, 228, 230, 237, 241, 243, 246, 247, 248, 249, 251, 252, 253, 254, 255, 267, 279, 280, 284, 299, 301, 305, 327, 328, 329, 332, 334], "remain": [1, 12, 156, 223, 224, 228, 233, 270, 271, 310, 321, 332], "phase": [1, 33, 34, 41, 43, 44, 45, 46, 47, 51, 72, 79, 87, 156, 228, 248, 249, 250, 329], "achiev": [1, 212, 222, 223, 227, 230, 233, 270, 271, 282, 287, 291, 298, 303, 333], "boolean": [1, 233, 277], "construct": 2, "onto": [2, 16, 230], "consecut": [2, 230, 255, 256], "without": [2, 4, 12, 87, 210, 214, 223, 224, 226, 237, 240, 245, 267, 307, 321, 326, 327, 333, 334], "numer": [2, 188, 210, 212, 230, 235, 299, 321, 322, 331, 334], "error": [2, 80, 168, 170, 171, 172, 174, 210, 230, 235, 239, 301, 335], "alwai": [2, 12, 183, 210, 222, 223, 224, 226, 228, 230, 235, 243, 282, 283, 311, 313, 330], "initi": [2, 60, 87, 105, 197, 198, 199, 200, 201, 202, 203, 204, 210, 212, 223, 224, 230, 233, 247, 248, 249, 250, 251, 252, 253, 254, 255, 270, 280, 285, 300, 301, 304, 306, 310, 314, 315, 316, 317, 321, 326, 327, 329], "unrot": [2, 230], "effect": [2, 12, 41, 223, 230, 249, 252, 254, 303, 307, 326, 327, 329, 334], "math": [2, 16, 84, 87, 88, 155, 157, 158, 159, 160, 162, 163, 212, 228, 268, 271, 274, 314, 321, 331], "field_rot": [2, 230, 250, 254], "from_eul": [2, 230, 250], "seq": [2, 230, 250], "clear_rot": [2, 230, 250], "definit": [2, 30, 87, 222, 231, 232, 239, 243, 265, 303, 305, 321, 330, 331, 332, 334], "These": [2, 39, 54, 79, 210, 223, 224, 235, 243, 248, 249, 251, 254, 255, 256, 265, 321, 329, 332], "relev": [2, 54, 230, 248, 249, 250, 251, 254, 299, 309, 321, 332, 333], "explan": [2, 87, 211, 213, 214, 224], "align_vector": [2, 230, 250, 254], "like": [2, 4, 5, 12, 224, 229, 230, 239, 240, 243, 245, 253, 256, 270, 281, 283, 304, 311, 317, 328, 333, 335], "kept": [2, 12, 224, 230, 235, 243], "fix": [2, 4, 5, 156, 230, 235, 243, 277, 297, 321], "consist": [2, 4, 68, 81, 86, 87, 139, 210, 212, 224, 230, 236, 237, 239, 240, 260, 261, 262, 264, 268, 270, 271, 274, 276, 294, 308, 310, 312, 313, 315, 318, 319, 326, 327, 334], "step": [2, 60, 63, 84, 87, 88, 156, 192, 210, 212, 226, 230, 232, 241, 246, 255, 256, 262, 273, 275, 279, 284, 286, 289, 293, 299, 300, 301, 303, 308, 309, 310, 311, 320, 321, 322, 325, 326, 329, 335], "remesh": [2, 230], "produc": [2, 248, 249, 251, 253, 275, 329], "larger": [2, 12, 16, 210, 226, 230, 238, 240, 243, 299], "done": [2, 12, 210, 224, 225, 226, 230, 239, 255, 256, 258, 259, 277, 279, 280, 286, 309, 315, 317, 321, 328, 334], "mostli": [2, 210], "linear": [2, 230, 251, 252], "notebook": [2, 210, 211, 216, 221, 223, 224, 225, 226, 228, 233, 243, 255, 256, 260, 261, 269, 275, 289, 297, 308, 319, 324, 329, 331, 332, 333, 334, 335], "One": [2, 69, 228, 231, 233, 246, 322, 330], "from_quat": [2, 230], "from_matrix": [2, 230], "from_rotvec": [2, 230], "from_mpr": 2, "keep": [2, 222, 228, 230, 237, 269, 310, 326], "point_column": [3, 234], "value_column": [3, 234], "panda": [3, 62, 183, 212, 246, 279, 299], "datafram": [3, 62, 183, 212, 279, 299], "On": [3, 30, 210, 222, 232, 238, 243, 265, 266, 267, 291, 306, 333, 334, 335], "hand": [3, 222, 238, 243, 255, 265, 266, 291, 298], "column": [3, 60, 61, 62, 63, 64, 65, 183, 189, 210, 212, 234, 279, 280, 281, 282, 283, 284, 311, 320, 326, 329], "distanc": [3, 210, 223, 241, 248, 332], "compos": 3, "retriev": [3, 229, 260, 261], "expos": [3, 183, 225, 226, 239, 240, 245, 281, 283, 334], "vx": [3, 231, 234], "vy": [3, 231, 234], "vz": [3, 231, 234], "x1": [3, 5, 222, 235, 243], "x2": [3, 5, 222, 235, 243], "x3": [3, 5, 222, 235, 243], "repr": [3, 85, 90, 91, 170, 171, 172, 173, 174, 183, 243, 258, 259, 260, 261], "figsiz": [3, 4, 5, 16, 17, 18, 183, 226, 234, 239, 240, 245, 269, 273, 283, 298, 299, 301, 303, 305, 308, 310, 312, 313, 315, 318, 319, 321], "yaxi": [3, 234, 281], "xlim": [3, 183, 184, 234, 281, 283, 301], "filenam": [3, 4, 5, 16, 17, 18, 79, 183, 187, 188, 189, 226, 229, 239, 240, 242, 245, 279, 283], "figur": [3, 4, 5, 16, 17, 18, 183, 210, 226, 230, 239, 240, 245, 248, 249, 254, 283, 298, 299, 301, 319, 330], "particular": [3, 4, 12, 16, 60, 63, 167, 183, 210, 228, 246, 262, 267, 290, 299, 306, 334], "horizont": [3, 183, 226, 239, 240, 245, 281, 283, 311, 316], "lenth": [3, 239, 240, 245], "often": [3, 4, 5, 13, 14, 16, 17, 18, 183, 223, 226, 235, 239, 243, 254, 286, 287, 329, 331, 332], "small": [3, 4, 5, 13, 14, 16, 17, 18, 48, 49, 50, 52, 58, 87, 183, 217, 223, 226, 230, 235, 240, 245, 267, 306, 321, 331, 334, 335], "nanoscal": [3, 4, 5, 13, 14, 16, 17, 18, 208], "veri": [3, 4, 5, 12, 13, 14, 16, 17, 18, 210, 211, 224, 235, 242, 255, 256, 321, 328, 332, 333], "larg": [3, 4, 5, 13, 14, 16, 17, 18, 23, 60, 61, 63, 210, 223, 226, 242, 255, 287, 301, 314, 321, 329, 331], "kilomet": [3, 4, 5, 13, 14, 16, 17, 18], "accord": [3, 4, 5, 12, 13, 14, 16, 17, 18, 183, 197, 225], "scale": [3, 4, 5, 13, 14, 16, 17, 18, 183, 210, 223, 226, 249, 251, 252, 298, 303, 304, 314, 317, 329], "text": [3, 4, 5, 13, 14, 16, 17, 18, 69, 70, 71, 79, 82, 84, 87, 88, 156, 167, 183, 210, 212, 225, 226, 228, 229, 231, 235, 237, 239, 240, 243, 245, 260, 261, 264, 265, 268, 270, 271, 273, 274, 276, 283, 286, 298, 299, 300, 301, 302, 305, 307, 308, 309, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 325, 326, 327, 328, 330, 332], "nm": [3, 4, 5, 13, 14, 16, 17, 18, 39, 41, 212, 223, 225, 226, 229, 235, 237, 239, 243, 248, 249, 253, 299, 300, 301, 302, 303, 305, 307, 319, 325, 327, 328, 329, 330, 332], "save": [3, 4, 5, 8, 16, 17, 18, 62, 63, 64, 65, 79, 80, 145, 156, 168, 183, 210, 212, 223, 224, 226, 229, 239, 240, 245, 262, 269, 272, 273, 277, 279, 283, 299, 300, 301, 311, 326], "pdf": [3, 4, 5, 16, 17, 18, 183, 226, 239, 240, 245, 283], "pyplot": [3, 4, 5, 16, 17, 18, 19, 183, 212, 223, 226, 239, 240, 245, 247, 248, 250, 253, 281, 283, 298, 299, 301, 311, 321, 329], "limit": [3, 16, 183, 210, 226, 230, 234, 249, 254, 298, 321], "selector": [3, 4, 62, 183, 234, 255, 281], "interact": [3, 13, 41, 54, 83, 183, 210, 212, 214, 218, 224, 234, 240, 241, 245, 249, 251, 272, 284, 295, 305, 311, 315, 321, 324, 325, 326, 327, 332], "ipywidget": [3, 4, 7, 62, 63, 183, 184, 241, 284], "selectmultipl": [3, 183, 284], "widget": [3, 4, 12, 62, 63, 183, 215, 224, 226, 281, 295], "px": 3, "py": [3, 16, 225, 226, 266, 267, 289, 304, 312, 314, 317], "pz": 3, "slider": [3, 4, 7, 12, 63, 183, 184, 210, 223, 224, 225, 226, 234, 249, 255, 256, 281, 319], "selectionrangeslid": [3, 183], "navig": [3, 183, 241], "descript": [3, 4, 62, 63, 183, 226, 228, 231, 241, 284, 333, 334], "optimum": [3, 183], "denot": [3, 4, 223, 238], "renam": [3, 183, 187, 189, 210, 224, 234, 279], "val": [3, 228], "inappropri": 3, "p0": 3, "index": [3, 4, 91, 210, 235, 239, 246, 255, 272, 311], "my_interesting_valu": 3, "regular": [4, 223], "sinc": [4, 87, 230, 235, 261, 320, 321, 334], "span": [4, 5, 234, 237, 249, 299, 300, 330], "necessari": [4, 12, 223, 224, 225, 226, 227, 231, 237, 239, 244, 263, 270, 271, 282, 285, 287, 291, 298, 305, 307, 310, 317, 319, 326, 335], "variabl": [4, 60, 61, 63, 64, 65, 156, 167, 173, 183, 197, 199, 210, 224, 239, 256, 258, 259, 260, 261, 262, 272, 277, 279, 280, 282, 283, 284, 287, 289, 291, 332, 335], "aggreg": 4, "align": [4, 54, 223, 230, 248, 251, 253, 268, 270, 271, 274, 276, 312, 318, 321, 326, 327, 328], "properli": [4, 278], "cubic": [4, 68, 214, 235, 240, 293, 298, 328, 332], "diagon": [4, 5, 223, 235, 243, 301], "opposit": [4, 5, 232, 235, 243], "d_": [4, 270], "n_": [4, 235], "charact": [4, 199, 236, 335], "neumann": 4, "dirichlet": [4, 236], "well": [4, 87, 210, 230, 234, 235, 237, 239, 240, 243, 245, 246, 248, 260, 261, 272, 281, 291, 301, 309, 311, 315, 330, 334, 335], "ii": [4, 81], "iii": 4, "52": [4, 210, 223, 226, 228, 261, 303, 327, 328, 329, 331], "geometri": [4, 16, 30, 54, 212, 223, 228, 235, 237, 246, 247, 248, 249, 250, 251, 252, 253, 254, 298, 299, 300, 301, 304, 306, 308, 309, 316, 317, 319, 325, 329, 330], "mesh1": [4, 228, 235], "mesh2": [4, 228, 235], "mesh3": [4, 228, 235], "eg": 4, "close": [4, 5, 34, 210], "interv": [4, 210, 282], "inclus": [4, 210], "endpoint": [4, 210], "len": [4, 62, 73, 75, 91, 235, 239, 248, 249, 330, 331], "submesh": [4, 210, 228], "newli": [4, 79], "09": [4, 208, 214, 223, 224, 228, 234, 235, 237, 239, 246, 250, 255, 256, 272, 277, 279, 292, 299, 320, 330], "__len__": [4, 91], "total": [4, 22, 80, 210, 223, 230, 235, 239, 255, 275, 279, 302, 307, 321, 328, 330], "__or__": [4, 5], "enough": [4, 301, 321, 329, 331], "comparison": [4, 5, 210, 223, 321], "smallest": [4, 5], "tolerance_factor": [4, 5, 210, 246, 277], "20e": [4, 5, 212, 224, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 251, 254, 277, 301, 305, 313, 317, 319, 321, 327, 329, 330, 332], "12": [4, 5, 29, 30, 36, 75, 78, 85, 90, 91, 92, 145, 168, 183, 204, 207, 208, 210, 212, 222, 223, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 238, 239, 240, 241, 243, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 292, 299, 300, 301, 302, 303, 304, 305, 307, 308, 310, 311, 313, 314, 315, 318, 319, 320, 321, 325, 326, 327, 328, 329, 330, 331, 332], "11": [4, 78, 85, 91, 92, 204, 207, 212, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 237, 239, 240, 243, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 260, 261, 264, 265, 267, 268, 269, 270, 271, 272, 274, 276, 277, 279, 280, 282, 287, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 314, 315, 318, 320, 321, 326, 327, 328, 330, 331, 332], "axis_selector": [4, 225, 226, 241], "dropdown": [4, 241], "radiobutton": [4, 226, 241], "show": [4, 12, 16, 210, 212, 213, 223, 224, 225, 226, 228, 230, 232, 234, 235, 239, 240, 242, 243, 245, 247, 248, 250, 253, 256, 267, 272, 273, 275, 281, 283, 289, 298, 299, 302, 303, 305, 306, 307, 308, 313, 315, 316, 321, 326, 327, 329, 332, 334, 335], "coordinate_field": [4, 210, 212, 231, 277], "midpoint": [4, 210, 235, 246], "code": [4, 16, 80, 87, 210, 211, 212, 256, 261, 277, 280, 287, 299, 305, 328, 329, 333], "lambda": [4, 23, 33, 36, 84, 210, 212, 223, 226, 248, 251, 252, 256, 272, 315, 321, 332], "prefer": [4, 87, 327], "creation": [4, 12, 210, 228, 277], "much": [4, 210, 211, 226, 228, 240, 245, 321, 326, 333], "better": [4, 210, 239, 256], "cfield": [4, 228], "correct": [4, 12, 64, 65, 210, 280, 287, 309, 323, 332], "fft_mesh": 4, "2d": [4, 16, 224, 233, 240, 243, 245, 258, 270, 308, 328], "demonstr": [4, 223, 226, 230, 236, 238, 255, 256, 262, 267, 275, 281, 283, 297, 302, 309, 312, 315, 321, 327, 332], "work": [4, 12, 79, 156, 210, 223, 226, 228, 230, 239, 240, 245, 256, 283, 331, 333, 334], "signal": [4, 223], "even": [4, 210, 223, 233], "caus": [4, 149, 173, 210, 230, 248, 287], "rectifi": 4, "translat": [4, 5, 210, 223, 243], "back": [4, 212, 223, 224, 228, 230], "desir": [4, 87, 223, 228, 230, 246, 248, 249, 251, 254, 335], "ifft_mesh": 4, "index2point": [4, 235], "i_": [4, 33, 248], "out": [4, 12, 16, 35, 63, 212, 223, 224, 226, 228, 243, 247, 248, 249, 250, 254, 283, 301, 305, 319, 325, 329, 331, 335], "point2index": [4, 235], "is_align": [4, 210, 228, 235], "common": [4, 210, 213, 226, 228, 235, 251, 253, 291, 329, 334], "extent": 4, "misalign": 4, "region1": [4, 5, 68, 69, 70, 78, 81, 82, 84, 86, 87, 210, 231, 235, 244, 265, 268, 270, 271, 274, 276, 291, 331], "45e": 4, "region2": [4, 5, 68, 69, 70, 78, 81, 82, 84, 86, 87, 210, 231, 235, 244, 265, 268, 270, 271, 274, 276, 291], "42e": 4, "13e": [4, 212], "region3": [4, 5, 235], "p_1": [4, 5], "p_2": [4, 5], "p_3": 4, "p_4": 4, "p_5": 4, "p_6": 4, "mesh4": [4, 228], "mesh5": 4, "mesh6": 4, "extend": [4, 211, 238, 258, 259, 330, 334], "padded_mesh": [4, 238], "120": [4, 226, 301, 330], "110": [4, 210], "half": [4, 54, 57, 223, 239, 249, 251, 254], "open": [4, 211, 236, 324, 329, 333], "exclus": 4, "lower": [4, 19, 22, 228, 248, 289, 331], "upper": [4, 228], "bound": 4, "7": [4, 5, 62, 84, 212, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 264, 267, 268, 270, 271, 272, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 287, 291, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 318, 319, 320, 321, 326, 327, 328, 329, 330, 331, 332, 334], "region2slic": 4, "sr": 4, "system": [4, 39, 41, 62, 63, 64, 65, 72, 79, 105, 145, 156, 167, 168, 210, 219, 230, 232, 243, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 268, 269, 270, 271, 272, 273, 274, 275, 276, 280, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 325, 326, 327, 330, 332, 334, 335], "still": [4, 210, 239, 267, 306, 321], "NOT": [4, 223, 248, 251, 252], "user": [4, 13, 63, 64, 65, 79, 87, 156, 210, 213, 214, 224, 230, 239, 267, 306, 321, 322, 333, 334, 335], "task": [4, 233, 333, 334], "updat": [4, 80, 210, 226, 262, 307, 308, 328], "after": [4, 12, 60, 145, 151, 176, 197, 198, 199, 200, 201, 202, 203, 204, 210, 212, 223, 228, 230, 231, 233, 256, 266, 267, 268, 270, 271, 274, 276, 285, 300, 302, 306, 309, 311, 318, 326, 327, 328, 329, 330, 331, 334, 335], "factor": [4, 5, 41, 84, 87, 88, 95, 223, 235, 243, 248, 249, 251, 252, 260, 332], "modifi": [4, 5, 12, 223, 224, 225, 230, 239, 240, 245, 298, 305, 326, 336], "sub_reg": 4, "plane_mesh": [4, 237], "selected_mesh": 4, "selectionslid": [4, 241, 284], "xyz": [4, 202, 223, 228, 236, 251], "experiment": [4, 31, 57, 58, 210, 247, 248, 249, 251, 252, 253, 254, 329, 332, 334], "dv": [4, 39, 253, 308], "color": [4, 5, 12, 13, 14, 15, 16, 17, 18, 224, 225, 226, 239, 240, 245, 248, 249, 251, 252, 253], "colour": [4, 5, 13, 14, 15, 16, 17, 18, 224, 225, 226, 239, 240, 248, 249, 251, 252, 299], "voxel": [4, 5, 13, 14, 15, 225, 239, 240, 245], "wirefram": [4, 5, 13, 14, 15, 239], "palett": [4, 5, 13, 14, 15, 17, 18], "depict": [4, 5, 17, 18, 223, 226, 239, 240, 245], "format": [4, 5, 17, 18, 79, 156, 167, 210, 212, 229, 242, 277, 298, 299, 302], "linewidth": [4, 5, 17, 18, 226, 248, 311], "linestyl": [4, 5, 17, 18, 239, 240, 245, 311], "etc": [4, 5, 16, 17, 18, 222, 228, 239, 240, 245, 283, 292, 334], "box_aspect": [4, 5, 17, 18, 210, 310, 312, 318, 320], "aspect": [4, 5, 17, 18, 210, 223, 230], "ratio": [4, 5, 17, 18, 96, 210, 212, 230, 260, 280, 299, 300, 305, 321, 325, 326], "auto": [4, 5, 17, 18, 210], "namedtupl": [4, 12], "collect": [4, 180, 230, 294, 331, 334, 335], "apart": [4, 227, 279, 335], "overwritten": [4, 288], "vertic": [4, 226, 235, 239, 240, 241, 245, 284, 316], "cuboid": [5, 235, 243, 299, 300, 301, 304, 306, 314, 330], "corner": [5, 223, 230, 235, 240, 243, 245, 250, 268, 270, 271, 274, 276, 304, 306, 314, 318], "_1": [5, 54, 251], "_2": 5, "_i": [5, 35, 248, 332], "p_x": 5, "p_y": 5, "p_z": 5, "x4": [5, 222], "mainli": [5, 210], "m": [5, 24, 26, 30, 33, 35, 36, 39, 41, 54, 58, 68, 69, 70, 71, 78, 82, 84, 85, 86, 87, 88, 97, 105, 208, 210, 212, 222, 223, 224, 227, 228, 230, 231, 232, 235, 236, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 264, 265, 268, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 292, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 325, 326, 327, 328, 329, 330, 331, 332, 334, 335], "adjust": [5, 13, 87, 210, 224, 226], "__contains__": [5, 91, 210], "le": [5, 208, 327, 330], "insid": [5, 210, 225, 226, 227, 228, 229, 230, 249, 256, 262, 266, 267, 281, 304, 306, 314, 328, 332, 334], "usag": [5, 183, 198, 199, 200, 201, 202, 203, 204, 220, 242, 287], "implement": [5, 13, 16, 25, 210, 214, 228, 230, 256, 258, 259, 260, 261, 262, 280, 287, 288, 303, 308, 336], "find": [5, 16, 80, 149, 173, 207, 208, 212, 213, 233, 244, 267, 289, 298], "face": [5, 83, 210, 215, 315], "accuraci": [5, 210, 230, 321], "facing_surfac": [5, 210, 244], "move": [5, 210, 212, 223, 235, 243, 244, 305, 321], "minu": [5, 244, 321], "infin": [5, 244], "enter": [5, 244], "leav": [5, 244], "third": [5, 223, 224, 226, 232, 235, 244, 321], "p11": [5, 244], "p12": [5, 244], "p21": [5, 244], "p22": [5, 244], "30e": [5, 223, 244, 249, 250, 269, 310, 313, 325, 329, 330], "random_point": [5, 227], "random": [5, 223, 247, 248, 249, 251, 252, 253, 254, 268, 270, 271, 274, 276, 312, 313, 315, 318, 321, 329], "uniformli": [5, 309, 313], "to_dict": 5, "middl": [5, 228, 237, 330], "p_c": 5, "l": [5, 298, 301, 305, 308, 321, 327, 328, 332], "l_": [5, 235, 239, 243, 245, 298, 299, 300], "th": [5, 329], "reason": [5, 87, 210, 228, 230, 311, 313, 335], "l_x": 5, "l_y": 5, "l_z": 5, "discrteisedfield": 6, "decor": [7, 184, 197, 198, 199, 200, 201, 202, 203, 204, 205, 281, 296, 334], "wrapper": [7, 184], "packag": [7, 20, 55, 66, 79, 80, 106, 140, 148, 152, 172, 177, 179, 181, 184, 185, 194, 195, 210, 211, 213, 223, 248, 250, 251, 252, 254, 257, 262, 266, 272, 278, 280, 289, 294, 297, 304, 311, 314, 317, 324, 325, 326, 329, 330, 331, 332, 333, 335], "myplot": [7, 184, 225, 226, 234, 299], "load": [8, 210, 229, 279, 280, 301], "modul": [8, 32, 37, 40, 52, 56, 93, 141, 154, 210, 223, 253, 266, 298, 299, 300, 301, 307, 313, 315, 319, 320, 321, 326, 328], "discourag": 8, "write": [8, 79, 80, 156, 170, 210, 211, 215, 227, 262, 277, 315, 321, 331, 334], "fromfil": [8, 183, 184, 210, 279, 280, 281, 282, 283, 284], "ovf": [9, 10, 63, 210, 229, 242, 334], "file": [9, 10, 60, 61, 63, 64, 65, 79, 84, 87, 88, 145, 156, 167, 168, 170, 171, 172, 174, 183, 187, 188, 189, 210, 212, 225, 255, 262, 266, 267, 269, 271, 275, 277, 279, 280, 281, 282, 283, 284, 299, 306, 309, 312, 321, 324, 333, 334, 335], "convers": [9, 10, 63, 210, 242, 323], "command": [10, 79, 149, 173, 210, 224, 242, 278, 289, 324, 328, 332, 335], "key_dim": 12, "callback": [12, 60, 61, 63, 210, 256], "vdim_guess_callback": 12, "visibl": 12, "hv_key_dim": 12, "dynam": [12, 70, 74, 82, 84, 85, 88, 91, 92, 105, 210, 219, 256, 264, 268, 270, 271, 273, 274, 276, 280, 299, 300, 303, 305, 308, 309, 316, 317, 318, 320, 321, 323, 325, 327, 334], "arbitrari": [12, 58, 84, 87, 88, 210, 223, 224, 251, 254, 277, 321, 336], "vdims_guess_callback": 12, "guess": [12, 321, 328], "roi": [12, 224], "scalar_kw": [12, 16, 210, 212, 224, 226, 256, 305, 308, 310, 312, 318, 319, 325], "vector_kw": [12, 16, 210, 224, 226, 256, 303], "optim": [12, 16, 298], "quick": [12, 16, 240, 245, 328], "ignor": [12, 223, 224, 226, 230], "drop": [12, 224], "down": [12, 224, 287, 329], "tri": [12, 149, 173, 210, 333], "hide": [12, 210, 224], "reli": [12, 79, 80, 267, 275], "broadcast": 12, "subplot": [12, 16, 19, 210, 212, 223, 226, 248, 253, 299, 321, 329], "understand": [12, 16, 223, 225, 256, 321, 326, 328, 331], "simpl": [12, 210, 223, 224, 226, 230, 240, 241, 245, 249, 256, 268, 269, 270, 271, 272, 273, 274, 276, 284, 299, 310, 311, 318, 321, 326, 328, 330, 332], "basic": [12, 194, 210, 213, 215, 222, 224, 225, 228, 230, 234, 260, 261, 262, 264, 289, 295, 308, 323, 326, 328, 330, 334], "do": [12, 210, 211, 212, 222, 223, 224, 226, 228, 239, 240, 243, 245, 248, 251, 252, 253, 256, 265, 267, 268, 269, 270, 271, 272, 274, 275, 276, 283, 299, 300, 310, 311, 318, 321, 328, 332, 333, 334, 335], "sort": [12, 210, 211, 249, 321], "just": [12, 212, 224, 228, 236, 243, 249, 251, 252, 328, 330, 331], "pick": [12, 224], "extrem": [12, 224, 321], "equidist": 12, "arrow": [12, 16, 224], "associ": [12, 16, 168, 205, 226, 228, 235], "includ": [12, 84, 87, 88, 211, 223, 230, 231, 236, 248, 251, 252, 280, 289, 305, 335], "output": [12, 57, 60, 63, 64, 65, 79, 80, 156, 167, 210, 212, 223, 224, 242, 248, 249, 254, 256, 262, 275, 299, 309, 326, 331], "level": [12, 16, 194, 224, 226, 248, 269, 277, 289, 293, 334], "panel": [12, 240, 245, 335], "cut": [12, 87, 223, 228, 230, 251, 320], "No": [12, 156, 334], "forward": [12, 224, 246, 321], "opt": [12, 224, 272, 289], "cdim": [12, 224], "use_color": [12, 16, 224, 226, 248], "vectorfield": 12, "co": [12, 53, 54, 58, 223, 226, 250, 253, 298, 321, 329, 331], "encod": [12, 16], "disabl": [12, 16, 224, 226], "vectorplot": 12, "warn": [12, 194, 224, 226, 239, 289], "black": [12, 224], "blue": [12, 224, 230], "nonzero": [13, 225, 254], "5010096": [13, 14, 15], "interactive_field": [13, 225], "befor": [13, 16, 60, 61, 63, 149, 173, 197, 210, 223, 228, 232, 235, 239, 256, 260, 261, 305, 321, 326, 327, 328, 329, 330, 331, 335], "being": [13, 60, 61, 63, 156, 210, 224, 239, 240, 245, 248, 249, 251, 254, 294, 327, 329], "displai": [13, 16, 79, 80, 210, 212, 225, 226, 239, 240, 245, 246, 256, 331], "extern": [13, 79, 80, 87, 105, 210, 212, 249, 253, 261, 262, 276, 280, 299, 300, 301, 307, 311, 316, 317, 318, 320, 321, 326, 327, 328, 329], "normfun": 13, "filter_field": [13, 16, 210, 225, 226], "cmap": [13, 16, 212, 224, 225, 226, 248, 251, 252, 254, 256, 299, 325, 329], "cividi": [13, 224, 226, 256], "colormap": [13, 16, 226, 256], "those": [13, 16, 223, 228, 231, 237, 239, 240, 245, 273, 279, 282, 283, 330], "color_field": [13, 16, 225, 226, 268, 270, 271, 274, 276], "head_siz": 13, "point_siz": 13, "vector_multipli": 13, "head": [13, 22, 212, 309, 311], "fit": 13, "togeth": [13, 225, 226, 248, 260, 261, 281, 321], "14517330": 14, "5613672": 14, "12865106": 14, "8483507": 14, "9664608": 14, "14322627": 14, "9211020": 14, "13416820": 14, "6600141": 14, "ensur": [16, 79, 156, 210, 223, 230, 233, 294, 301, 310, 315, 335], "seealso": [16, 156], "func": [16, 84, 87, 88, 167, 183, 261, 316, 317, 320, 321], "what": [16, 87, 222, 223, 228, 234, 235, 240, 244, 245, 279, 283, 299, 311, 325, 326, 327, 328, 331, 333], "understood": [16, 79, 228], "snippet": [16, 333], "scalar_field": 16, "vector_field": 16, "fig": [16, 19, 212, 223, 226, 239, 240, 245, 248, 253, 283, 299, 321, 329], "plt": [16, 19, 212, 223, 226, 239, 240, 245, 247, 248, 250, 253, 283, 298, 299, 301, 321, 329], "add_subplot": [16, 239, 240, 245, 283], "111": [16, 223, 239, 240, 245, 254, 283], "savefig": 16, "bbox_inch": 16, "tight": 16, "pad_inch": 16, "02": [16, 212, 214, 223, 272, 293, 298, 299, 300, 320], "therefor": [16, 29, 30, 79, 80, 87, 210, 224, 225, 226, 230, 232, 235, 237, 239, 240, 241, 243, 245, 256, 258, 259, 268, 270, 271, 274, 275, 276, 280, 283, 284, 299, 300, 318, 321, 327, 328, 335], "turn": [16, 212, 226], "colorbar": [16, 210, 224, 226, 248], "colorbar_label": [16, 226, 248, 249, 251, 252, 254, 305, 310, 312, 318, 319, 321, 329], "give": [16, 79, 80, 151, 156, 176, 210, 212, 216, 222, 223, 226, 228, 230, 235, 237, 239, 243, 248, 251, 256, 275, 280, 297, 298, 312, 321, 324, 328, 330, 332, 334], "pixel": 16, "hidden": 16, "init_valu": [16, 232], "sin": [16, 53, 54, 58, 87, 88, 223, 226, 228, 250, 253, 261, 298, 316, 317, 320, 321, 329, 331], "lightness_field": [16, 226], "clim": [16, 212, 223, 224, 226, 248, 256, 308, 312, 318, 325], "colorwheel": [16, 19], "colorwheel_xlabel": [16, 226, 248], "colorwheel_ylabel": [16, 226, 248], "colorwheel_arg": [16, 226, 248], "hsv": [16, 19, 225, 226, 248], "hue": 16, "control": [16, 84, 87, 88, 149, 151, 156, 167, 173, 176, 194, 210, 226, 241, 284, 293, 296, 322, 329, 335], "mpl_toolkit": [16, 19, 226], "axes_grid1": [16, 19, 226], "inset_loc": [16, 19, 226], "inset_ax": [16, 19, 226], "symmetric_clim": [16, 210, 226], "symmetr": [16, 81, 223, 226], "preced": 16, "imshow": [16, 226], "been": [16, 156, 173, 210, 223, 224, 228, 230, 256, 267, 280, 331, 332, 333, 334], "quiver": [16, 210, 226, 304, 314, 317], "fail": [16, 210, 224, 229], "sometim": [16, 224, 225, 226, 227, 230, 231, 237, 239, 240, 241, 243, 244, 245, 257, 263, 269, 282, 283, 284, 285, 288, 307, 310], "appear": [16, 246, 248], "resolv": [16, 301, 329, 334], "word": [16, 199, 235, 237, 299], "smaller": [16, 224, 230, 235, 239, 240], "vice": 16, "versa": 16, "1e20": 16, "mpl_scalar": [16, 226], "4c72b0": [17, 18], "dd8452": 17, "55a868": 17, "c44e52": 17, "8172b3": 17, "937860": 17, "da8bc3": 17, "8c8c8c": 17, "ccb974": 17, "64b5cd": 17, "show_region": [17, 239], "width": [19, 57, 224, 226, 239, 240, 245, 248, 249, 254, 299, 300, 304, 305, 314, 317, 321], "height": [19, 224, 226, 239, 240, 245, 248, 249], "loc": [19, 226], "inset": 19, "dfp": 19, "doctest": 19, "skip": 19, "ins_ax": 19, "run": [20, 55, 63, 64, 65, 66, 79, 80, 87, 106, 140, 145, 148, 149, 150, 152, 156, 167, 168, 172, 173, 175, 177, 178, 181, 185, 195, 210, 212, 224, 225, 226, 247, 248, 250, 251, 252, 253, 254, 255, 256, 262, 267, 268, 269, 270, 271, 272, 274, 276, 279, 282, 293, 294, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 324, 325, 326, 327, 328, 329, 332, 333, 335], "bloch": [22, 319, 329, 334], "count": [22, 23, 62, 248, 279, 329], "arrang": 22, "emerg": [22, 26, 319, 329], "magnet": [22, 26, 33, 34, 35, 39, 40, 41, 44, 45, 46, 47, 51, 54, 57, 58, 60, 62, 67, 87, 102, 105, 107, 210, 217, 223, 247, 251, 252, 253, 254, 255, 256, 261, 268, 270, 271, 274, 276, 280, 298, 299, 300, 301, 303, 307, 311, 312, 313, 315, 316, 317, 318, 320, 321, 326, 327, 328, 329, 330, 332, 334], "subvolum": 22, "local": [22, 324, 327], "jump": [22, 256], "tail": [22, 298, 299], "end": [22, 34, 54, 62, 210, 224, 226, 231, 248, 249, 251, 252, 253, 267, 270, 275, 298, 299, 306, 311, 321, 327, 330, 332, 335], "report": [22, 211, 319, 333, 335], "bp": 22, "min_angl": [23, 232], "rad": [23, 27, 28, 232, 253, 329], "neighbour": [23, 27, 28, 210, 232, 270, 321, 327, 332], "abov": [23, 224, 226, 232, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 277, 280, 304, 306, 316, 317, 321, 326, 327, 329, 333, 334, 335], "threshold": 23, "account": [23, 210, 230, 232, 253, 254, 289], "deg": [23, 27, 28, 232, 279], "dft": [23, 24, 26, 27, 28, 29, 30, 228, 232, 256, 314], "tensor": [24, 25, 210], "demagnetis": [24, 71, 212, 214, 238, 249, 299, 300, 303, 328, 329], "demag": [24, 25, 39, 41, 75, 85, 91, 92, 210, 212, 214, 248, 249, 253, 254, 261, 273, 298, 299, 300, 301, 302, 303, 304, 307, 311, 319, 321, 327, 328, 329], "albert": [24, 25, 301], "et": [24, 25, 253, 319], "al": [24, 25, 253, 319], "jmmm": [24, 25], "387": [24, 25], "2015": [24, 25], "http": [24, 25, 84, 87, 88, 142, 143, 144, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 170, 210, 239, 240, 245, 246, 267, 283, 289, 298, 299, 300, 306, 309, 321, 324, 325, 331, 333, 335], "doi": [24, 25, 325, 334], "org": [24, 25, 239, 240, 245, 283, 289, 298, 299, 300, 324, 325, 331, 334], "1016": [24, 25], "j": [24, 25, 26, 30, 81, 84, 98, 99, 100, 103, 210, 212, 228, 232, 253, 265, 268, 270, 271, 274, 279, 298, 299, 300, 301, 302, 305, 307, 321, 325, 327, 328, 332], "03": [24, 25, 212, 214, 223, 272, 277, 293, 299, 300, 320, 328], "081": [24, 25], "magnetis": [24, 35, 39, 41, 53, 54, 57, 58, 60, 61, 63, 64, 65, 79, 80, 85, 105, 156, 167, 210, 212, 226, 232, 246, 248, 249, 250, 251, 252, 253, 254, 255, 264, 268, 270, 271, 272, 273, 274, 276, 280, 281, 283, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 325, 326, 327, 329, 334], "obatain": 24, "demag_tensor": 24, "six": [25, 27], "nxx": 25, "nyi": 25, "nzz": 25, "nxy": 25, "nxz": 25, "nyz": 25, "boldsymbol": [26, 88, 260, 300], "kl": 26, "partial_k": 26, "partial_l": 26, "volovik": 26, "rysti": 26, "m\u00e4kinen": 26, "eltsov": 26, "b": [26, 30, 34, 39, 193, 198, 200, 205, 222, 224, 225, 226, 228, 232, 233, 248, 253, 287, 288, 289, 311, 329, 332], "spin": [26, 53, 54, 84, 88, 156, 210, 251, 269, 279, 305, 310, 321, 325, 326, 327, 329, 332], "orbit": 26, "weyl": 26, "glass": 26, "topolog": [26, 29, 30, 210, 212, 334], "superfluid": 26, "low": [26, 251, 252, 334], "temp": 26, "phy": 26, "196": [26, 210, 279, 280, 299, 320, 326], "82": [26, 210], "101": [26, 197, 205, 210, 280, 309], "2019": [26, 249, 251, 319], "charg": [26, 29, 30, 36, 94, 210, 212, 248, 334], "densiti": [26, 29, 30, 34, 39, 45, 87, 167, 210, 212, 223, 224, 253, 268, 270, 271, 274, 276, 298, 302, 307, 327, 329], "continu": [29, 30, 223, 232, 251, 299, 308], "There": [29, 87, 210, 211, 222, 223, 224, 225, 226, 228, 229, 231, 232, 235, 242, 243, 245, 246, 251, 260, 261, 265, 267, 268, 271, 272, 274, 276, 280, 286, 306, 311, 312, 318, 321, 328, 330, 335], "topological_charge_dens": [29, 212, 232, 256], "berg": [29, 30, 212, 228, 232, 314], "luescher": [29, 30, 212, 228, 232, 314], "q": [30, 41, 53, 54, 212, 232, 249, 251], "found": [30, 62, 63, 64, 65, 79, 147, 148, 149, 171, 172, 173, 207, 208, 210, 223, 224, 226, 228, 231, 232, 246, 250, 254, 258, 259, 278, 298, 299, 300, 301, 331, 335], "statist": [30, 232], "distribut": [30, 224, 232, 248, 317, 335], "lattic": [30, 232, 329, 332], "o": [30, 60, 61, 62, 63, 64, 65, 69, 145, 168, 183, 184, 187, 188, 189, 210, 214, 226, 229, 232, 234, 239, 240, 242, 245, 255, 256, 261, 269, 270, 279, 280, 281, 282, 283, 284, 298, 311, 327, 335], "sigma": [30, 54, 83, 232, 251, 252, 261, 315], "model": [30, 164, 232, 235, 264, 299, 321, 328, 334], "nuclear": [30, 232, 329], "190": [30, 232], "412": [30, 232], "424": [30, 232], "1981": [30, 232], "kim": [30, 232], "mulker": [30, 232, 334], "quantifi": [30, 232], "micromagnet": [30, 59, 85, 145, 167, 168, 210, 212, 219, 229, 232, 260, 261, 262, 279, 299, 302, 305, 307, 321, 322, 326, 327, 328, 329, 330, 334, 335], "approach": [30, 226, 232], "iop": [30, 232], "scinot": [30, 232], "025211": [30, 232], "2020": [30, 232, 254, 334], "topological_charg": [30, 212, 228, 232, 314], "simul": [31, 63, 64, 65, 79, 80, 148, 156, 167, 172, 210, 212, 218, 229, 230, 262, 267, 268, 269, 270, 271, 274, 275, 276, 279, 291, 293, 297, 301, 305, 306, 308, 310, 315, 318, 319, 320, 322, 323, 324, 325, 329, 331, 332, 334, 335], "measur": [31, 41, 57, 58, 210, 223, 247, 248, 249, 252, 253, 254, 301, 329, 332], "lorentz": [32, 217, 250, 334], "transmiss": [32, 217, 250, 329, 334], "electron": [32, 33, 34, 35, 36, 101, 217, 250, 329, 334], "microscopi": [32, 40, 217, 250, 334], "quantiti": [32, 34, 40, 52, 53, 56, 223, 230, 248, 249, 254, 321, 329, 332], "c": [33, 34, 36, 43, 54, 94, 96, 198, 200, 212, 222, 224, 225, 226, 229, 234, 243, 248, 276, 287, 301, 318, 320, 329, 332, 335], "df_length": [33, 34, 43, 248, 329], "0002": [33, 43], "voltag": [33, 34, 36, 43, 248, 250, 329], "wavelength": [33, 36, 43, 223, 248, 251, 252, 254], "defocus": [33, 250, 329], "wavefunct": [33, 248], "shift": [33, 35, 41, 44, 46, 47, 51, 87, 223, 228, 248, 249, 261, 316, 317, 320, 329], "phi_m": [33, 248], "psi_0": [33, 248], "propag": [33, 35, 43, 57, 58, 223, 248, 251, 252, 254, 329], "microscop": [33, 329], "contrast": [33, 41, 248, 249, 250, 327], "transfer": [33, 84, 88, 248, 305], "defocu": [33, 43, 248, 329], "delta": [33, 41, 248, 249, 279, 286, 301, 308, 326], "widetild": [33, 35, 54, 58, 248, 251, 252], "psi": [33, 248], "_0": [33, 54, 248, 251], "c_": [33, 248, 270, 327], "relativist": [33, 36, 248], "spheric": [33, 248], "aberr": [33, 248], "coeffici": 33, "wavevector": [33, 251], "intens": [33, 58, 223, 248, 251, 252, 329], "vert": [33, 58, 248, 252], "psi_": [33, 248], "focu": [33, 223, 248, 333], "acceler": [33, 36, 248, 329], "u": [33, 36, 68, 86, 88, 90, 212, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 248, 249, 253, 254, 258, 259, 260, 261, 262, 265, 267, 269, 270, 271, 272, 276, 279, 281, 282, 283, 284, 286, 288, 290, 291, 292, 298, 300, 301, 302, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 318, 321, 325, 326, 327, 328, 329, 330, 332], "ft_phase": [33, 34, 35, 248, 329], "df_img": [33, 34], "300e3": [33, 34, 36, 248, 250, 329], "8000": [33, 34, 248], "relativistic_wavelength": 33, "beam": [34, 35, 53, 54, 57, 58, 248, 251, 252, 254, 329], "bf": [34, 35, 39, 41, 54, 223, 248, 249, 251, 252, 253, 332], "perp": [34, 35, 248, 332], "phi_0": [34, 248], "begin": [34, 54, 210, 224, 226, 231, 248, 249, 251, 252, 253, 270, 327, 330, 332], "jame": [34, 285, 334], "holographi": [34, 51, 217, 248, 334], "defocus_imag": [34, 43, 248, 329], "imf": [34, 248], "kcx": [35, 43, 44, 45, 46, 248], "kcy": [35, 43, 44, 45, 46, 248], "experienc": 35, "phi": [35, 41, 248, 249, 250], "_m": [35, 248], "k_x": [35, 223, 248], "k_y": [35, 223, 248], "mu_0": [35, 39, 41, 248, 249, 253], "k_": [35, 86, 223, 248, 261, 274, 298, 332], "h": [35, 36, 39, 41, 70, 71, 82, 87, 91, 92, 105, 210, 212, 242, 247, 248, 249, 250, 251, 252, 253, 254, 257, 260, 261, 263, 264, 269, 272, 273, 280, 299, 300, 301, 302, 304, 306, 307, 308, 309, 312, 314, 316, 317, 320, 321, 326, 327, 328, 329, 332, 334], "_z": [35, 248], "k_c": [35, 248], "path": [35, 60, 61, 62, 63, 64, 65, 145, 147, 149, 168, 171, 173, 174, 183, 184, 187, 188, 189, 210, 229, 248, 255, 256, 267, 269, 279, 280, 281, 282, 283, 284, 289, 306, 335], "vacuum": [35, 248], "permeabl": [35, 248], "radiu": [35, 71, 212, 227, 248, 304, 330], "written": [35, 39, 79, 84, 88, 156, 167, 210, 228, 275, 277], "cx": [35, 212, 225, 226, 229], "dk_x": 35, "cy": [35, 212, 225, 226, 229], "dk_y": 35, "resolut": [35, 249, 254, 256, 321], "radii": 35, "tikhonov": [35, 248], "sqrt": [36, 223, 250, 298, 331], "m_e": 36, "mass": [36, 101, 212], "speed": [36, 210, 331], "kv": [36, 248, 329], "9687489006848795e": 36, "techniqu": [37, 223, 247, 248, 249, 251, 252, 253, 254, 334], "textrm": [38, 39, 41], "am": [38, 39, 41, 212, 268, 270, 271, 274, 276, 312, 318], "micromagneticmodel": [38, 39, 41, 53, 54, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 145, 156, 167, 168, 210, 212, 214, 216, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 325, 326, 327, 328, 329, 334, 335], "mm": [38, 39, 41, 53, 54, 68, 69, 70, 71, 73, 75, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 105, 145, 167, 168, 212, 214, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 268, 269, 270, 271, 272, 273, 274, 275, 276, 280, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 325, 326, 327, 328, 329], "1e6": [38, 39, 68, 81, 85, 86, 87, 92, 105, 225, 226, 228, 229, 234, 247, 248, 249, 250, 251, 252, 254, 260, 261, 263, 264, 269, 272, 273, 276, 298, 303, 304, 306, 310, 311, 312, 314, 316, 317, 318, 320, 327], "1000000": [38, 247, 255, 260, 261, 292], "v_fun": [38, 41, 53, 54], "elif": [38, 41, 57, 231, 331], "325269": 38, "11934575": 38, "405269": 38, "1193456": 38, "460000": 38, "tau": [39, 253], "moment": [39, 41, 235, 236, 247, 249, 253, 268, 270, 271, 274, 276, 280, 312, 318, 320, 327, 332], "equat": [39, 54, 85, 91, 105, 164, 210, 212, 214, 219, 248, 249, 251, 252, 253, 263, 264, 268, 270, 271, 274, 276, 280, 299, 300, 301, 305, 307, 308, 310, 312, 315, 318, 320, 321, 323, 332, 334], "app": [39, 253], "box2": [39, 41, 248, 249, 250, 251, 252, 253, 254], "energi": [39, 41, 68, 69, 71, 76, 78, 81, 83, 85, 86, 87, 91, 92, 105, 142, 143, 159, 167, 210, 219, 247, 248, 249, 250, 251, 252, 253, 254, 258, 264, 265, 269, 272, 273, 279, 280, 293, 297, 299, 300, 301, 303, 304, 305, 306, 310, 311, 314, 316, 317, 318, 319, 320, 321, 323, 325, 326, 329, 332, 334], "zeeman": [39, 91, 92, 105, 167, 210, 212, 214, 247, 248, 249, 250, 251, 252, 253, 254, 255, 263, 264, 269, 270, 271, 272, 273, 280, 293, 299, 300, 301, 302, 304, 306, 307, 312, 314, 316, 317, 318, 320, 326, 328, 329, 334], "const": [39, 73, 82, 85, 91, 92, 105, 197, 198, 199, 200, 201, 202, 203, 204, 205, 212, 257, 264, 273, 285, 291, 298, 299, 302, 303, 307, 308, 309, 311, 316, 317, 320, 332], "mu0": [39, 257, 298, 299, 302, 307, 308, 311, 332], "1e12": [39, 84], "forc": [40, 217, 248, 250, 329, 334], "tip_m": [41, 47, 249], "qualiti": [41, 47, 249], "650": [41, 47, 249], "tip_q": [41, 47, 249], "fwhm": [41, 47, 51, 57, 249, 254, 329], "tip": 41, "oscil": [41, 249], "cantilev": [41, 249], "strai": [41, 249, 297], "As": [41, 60, 61, 63, 87, 97, 210, 212, 223, 224, 226, 228, 230, 235, 239, 243, 244, 246, 248, 249, 251, 252, 254, 256, 260, 261, 269, 280, 282, 299, 300, 305, 307, 308, 310, 311, 313, 318, 321, 325, 326, 327, 332, 334], "airbox": [41, 249, 297], "satur": [41, 105, 212, 249, 268, 270, 271, 274, 276, 280, 298, 299, 300, 301, 303, 304, 305, 307, 312, 318, 319, 321, 325, 326, 327, 328, 329, 330], "wish": [41, 249, 332], "driven": [41, 62, 79, 145, 156, 264], "reson": [41, 249, 280], "presenc": [41, 210, 223, 252, 254], "sz": [41, 249], "_t": [41, 249], "spring": [41, 249], "monopol": [41, 249], "dipol": [41, 247, 249], "due": [41, 223, 249, 250, 251, 252, 253, 254, 301, 310, 329], "ms_fun": [41, 304, 311, 319, 325, 327], "po": [41, 212, 225, 226, 227, 228, 229, 231, 247, 248, 249, 250, 251, 252, 254, 268, 270, 271, 274, 276, 298, 300, 303, 304, 305, 306, 312, 314, 318, 321, 325, 327, 329, 330], "384e3": 41, "16": [41, 212, 222, 223, 224, 225, 226, 228, 230, 231, 232, 234, 235, 239, 243, 248, 249, 255, 256, 260, 261, 268, 270, 271, 272, 274, 276, 280, 282, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 327, 330, 331, 332], "40e": [41, 239, 305, 321, 325], "quickplot": [43, 44, 45, 46, 47, 48, 49, 50, 51], "ltem": [43, 44, 45, 46, 47, 51, 329, 334], "integrated_magnetic_flux_dens": [45, 248], "z0": [47, 249], "mfm": [47, 334], "phase_shift": [47, 249], "polaris": [48, 49, 53, 54, 210, 251, 252, 254, 305, 325, 326, 329], "neutron": [48, 49, 52, 54, 217, 334], "scatter": [48, 49, 50, 52, 54, 58, 217, 247, 253, 254, 334], "chiral": [48, 53, 251], "san": [48, 49, 329, 334], "chiral_funct": [48, 251], "pattern": [49, 50, 57, 58, 248, 249, 250, 251, 253, 329], "cross_sect": [49, 251, 252, 298, 329], "rai": [50, 56, 57, 58, 217, 334], "x_rai": [50, 51, 252, 254, 329], "chi": [53, 251], "omega": [53, 54, 88, 251, 252, 321], "flip": [53, 54, 251, 329], "section": [53, 54, 210, 223, 230, 243, 246, 256, 297, 319, 321, 329, 333], "turpl": [53, 54, 183], "incom": [53, 54, 251], "reutron": [53, 54], "frame": [53, 54, 57, 58, 329], "1e5": [53, 54, 68, 70, 82, 86, 88, 249, 261, 265, 268, 272, 273, 274, 308, 312, 314, 315], "cf": 53, "k_z": [53, 54, 223, 251, 329], "sim": [54, 251, 332], "pauli": [54, 251], "bmatrix": [54, 251], "sigma_x": [54, 251], "sigma_i": [54, 251], "sigma_z": [54, 251], "pmatrix": [54, 248, 251], "hat": [54, 69, 228, 251, 261, 270, 325], "further": [54, 87, 223, 225, 246, 254, 265, 267, 306, 329], "unpolaris": [54, 251], "pp": [54, 251, 334], "nn": [54, 251], "pn": [54, 251], "negit": 54, "unpol": [54, 251, 329], "arbitari": 54, "circular": [57, 58, 212, 252, 254, 329], "dichroism": [57, 58, 252, 254, 329], "parallel": [57, 58, 210, 228, 248, 251, 252, 254, 267, 268, 271, 274, 276, 293, 298, 312, 318, 326, 327, 332], "holograph": [57, 254, 329], "convolut": [57, 254, 329], "gaussian": [57, 249, 254, 329], "full": [57, 87, 156, 210, 223, 226, 228, 231, 246, 249, 253, 254, 256, 258, 259, 280, 315, 324, 335], "3e6": [57, 58, 87, 292, 320], "xrh": 57, "xrh2": 57, "m_i": 58, "propto": [58, 252], "qx": 58, "analys": [59, 218, 228, 272, 282, 311], "micromagneticdata": [60, 61, 62, 63, 64, 65, 210, 212, 216, 255, 256, 278, 305, 321, 325, 334, 335], "drive": [60, 61, 62, 64, 65, 72, 79, 80, 145, 156, 167, 168, 169, 210, 212, 247, 248, 249, 250, 251, 252, 253, 254, 262, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 280, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 326, 327, 329, 334], "md": [60, 61, 62, 63, 64, 65, 142, 158, 159, 177, 178, 212, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 268, 269, 270, 271, 272, 274, 275, 276, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 313, 314, 315, 318, 319, 321, 325, 327, 328, 329], "dirnam": [60, 61, 62, 63, 64, 65, 79, 156, 167, 183, 184, 187, 188, 189, 191, 255, 256, 269, 279, 281, 282, 283, 284], "join": [60, 61, 62, 63, 64, 65, 183, 184, 187, 188, 189, 255, 256, 269, 279, 280, 281, 282, 283, 284], "__file__": [60, 61, 62, 63, 64, 65, 183, 184, 187, 188, 189], "test": [60, 61, 62, 63, 64, 65, 107, 108, 139, 151, 156, 176, 178, 183, 184, 187, 188, 189, 255, 256, 266, 279, 281, 282, 283, 284, 294, 334], "test_sampl": [60, 61, 62, 63, 64, 65, 183, 184, 187, 188, 189, 255, 256, 279, 281, 282, 283, 284], "system_nam": [60, 61, 62, 63, 64, 65, 255, 256], "abstract": [60, 63, 72, 77, 79, 80, 91, 92, 148, 172, 262, 312], "concaten": [60, 61, 63, 183, 255], "typic": [60, 61, 63, 156, 167, 210, 222, 239, 248, 329, 331], "timedriv": [60, 61, 63, 145, 168, 210, 212, 214, 255, 256, 272, 273, 279, 280, 299, 300, 301, 305, 309, 316, 317, 320, 321, 325, 326], "tabl": [60, 61, 63, 64, 65, 184, 187, 188, 189, 212, 214, 255, 256, 269, 272, 295, 298, 299, 300, 301, 309, 311, 312, 316, 317, 320, 321, 326, 332], "combineddr": [60, 63, 210], "append": [60, 61, 63, 79, 167, 210, 212, 226, 247, 255, 282, 298, 312, 331], "drive_0": [60, 61, 63], "drive_1": [60, 61, 63], "register_callback": [60, 61, 63, 212, 256, 272], "regist": [60, 61, 63, 210, 256], "export": [60, 156, 210, 215, 335], "four": [60, 223, 224, 228, 246, 332], "comp": 60, "driver": [60, 63, 64, 65, 79, 90, 142, 143, 144, 158, 159, 163, 210, 212, 219, 255, 256, 264, 267, 272, 279, 280, 298, 299, 308, 309, 311, 327, 328], "mai": [60, 248, 298, 333], "extra": [60, 277], "proper": [60, 210, 246], "hysteresisdriv": [60, 210, 247, 256, 311], "b_hysteresi": [60, 61, 64, 65, 183, 210, 256, 311], "bx_hysteresi": [60, 61, 64, 65, 311], "by_hysteresi": [60, 311], "bz_hysteresi": [60, 256, 311], "hysteresi": [60, 61, 64, 65, 158, 192, 210, 296, 297], "while": [60, 156, 223, 228, 233, 246, 251, 301, 327, 332], "rest": [60, 224, 228, 328], "info": [60, 61, 62, 63, 212, 255, 256, 272, 289, 311], "besid": [60, 233], "xr_drive": 60, "isel": 60, "m0": [60, 255, 256], "init": [60, 210, 230], "row": [60, 212, 279, 280, 282, 299, 311, 320, 326], "ubermagt": [60, 61, 63, 183, 210, 216, 255, 278, 279, 280, 281, 282, 283, 284, 334, 335], "abstractdr": 61, "oommfdriv": [61, 62, 63, 210, 255], "directori": [62, 63, 64, 65, 79, 145, 156, 167, 168, 170, 191, 210, 229, 239, 240, 245, 255, 256, 258, 259, 262, 266, 267, 283, 293, 298, 299, 300, 306, 324, 335], "defult": [62, 63, 64, 65], "ioerror": [62, 63, 64, 65], "would": [62, 156, 198, 200, 201, 204, 224, 226, 230, 231, 235, 238, 239, 248, 258, 259, 282, 287, 290, 291, 308, 321, 333, 335], "0th": 62, "1th": 62, "mumax3dr": [62, 63, 210, 255], "6th": 62, "boundedinttext": 62, "mismatch": 62, "nan": [62, 183, 210, 212, 253, 255, 256, 272, 282, 311, 329], "drive_numb": [62, 212, 255, 256, 272, 311], "use_cach": [63, 64, 65], "read": [63, 64, 65, 170, 183, 188, 210, 215, 256, 262, 267, 277, 279, 306, 334], "tabular": [63, 64, 65, 182, 183], "onc": [63, 64, 65, 149, 173, 277, 324, 329], "prevent": [63, 64, 65, 230], "detect": [63, 64, 65, 210, 224], "look": [63, 64, 65, 212, 216, 222, 223, 224, 226, 228, 230, 235, 240, 243, 245, 249, 251, 254, 256, 270, 272, 280, 297, 308, 311, 312, 317, 321, 326, 327, 328, 329, 330, 333, 334, 335], "objet": 63, "subpart": 63, "static": [63, 226, 240, 245, 321], "__new__": 63, "cl": [63, 193], "structur": [63, 212, 223, 225, 247, 248, 249, 250, 251, 252, 253, 254, 277, 329, 332, 334], "subdirectori": [63, 79, 167, 324], "ovf2vtk": [63, 210, 215, 255], "pathlib": [63, 210], "intslid": 63, "calculator_script": [63, 64, 65, 255], "mif": [63, 64, 65, 84, 87, 88, 156, 210, 255, 309, 321, 333], "content": [63, 64, 65, 170, 171, 172, 174, 229, 266], "mx3": [63, 64, 65], "todo": [63, 64, 65, 232, 256], "mumax3": [63, 64, 65, 79, 141, 142, 143, 144, 145, 147, 148, 149, 151, 183, 187, 188, 189, 210, 216, 221, 278, 279, 334, 335], "pre": [63, 64, 65, 84, 87, 88, 262, 280], "cach": [63, 149, 173, 176, 267], "clear": [63, 230], "explicitli": [64, 65, 173, 223, 224, 226, 233, 239, 240, 245, 263, 267, 283, 288], "oommf": [65, 69, 79, 84, 87, 88, 154, 155, 156, 157, 158, 159, 160, 162, 163, 165, 166, 167, 168, 170, 171, 172, 173, 174, 176, 183, 184, 187, 188, 189, 210, 212, 216, 221, 229, 247, 248, 250, 251, 252, 253, 254, 261, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 281, 282, 283, 284, 289, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 326, 327, 328, 329, 334], "languag": [67, 333, 334], "anisotropi": [68, 86, 214, 253, 265, 270, 271, 293, 298, 305, 307, 312, 315, 321, 325, 329], "term": [68, 69, 70, 71, 73, 74, 75, 76, 78, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 97, 105, 167, 210, 212, 219, 223, 249, 277, 293, 297, 299, 300, 305, 306, 308, 317, 318, 321, 326, 327, 328], "w": [68, 69, 71, 78, 81, 86, 87, 226, 248, 291, 301, 302, 305, 307, 308, 321, 326], "5e5": [68, 70, 82, 86, 265, 329], "per": [68, 69, 70, 78, 81, 82, 84, 86, 87, 194, 256, 289, 332], "u1": [68, 246, 255, 261, 268], "u2": [68, 261, 268], "ca": [68, 268], "1e4": [68, 277, 308, 313, 321, 331], "4e5": [68, 311], "dzyaloshinskii": [69, 293, 305, 319, 325, 332], "moriya": [69, 293, 305, 319, 321, 325, 332, 335], "w_x": 69, "cnv": [69, 210, 214, 261, 314, 327], "m_": [69, 71, 81, 87, 212, 226, 261, 264, 268, 270, 271, 274, 276, 298, 299, 300, 301, 302, 307, 308, 312, 314, 318, 319, 326, 327, 328, 332], "w_y": 69, "w_z": 69, "d2d": [69, 210, 214, 261, 327], "unsign": [69, 78, 82, 201, 204, 235, 258, 259, 287], "incompat": [69, 229], "crystalclass": [69, 247, 248, 249, 250, 251, 252, 254, 261, 270, 304, 305, 306, 308, 311, 314, 319, 321, 325, 327, 329], "crystalograph": [69, 327, 335], "cnv_x": [69, 261], "cnv_y": [69, 261], "cnv_z": [69, 250, 261, 270, 304, 305, 306, 314, 321, 325, 327], "d2d_x": [69, 261], "d2d_y": [69, 261], "d2d_z": [69, 261], "sensit": [69, 248, 321, 329], "gamma_": [70, 82, 212, 260, 264, 299, 300, 308, 309, 326], "alpha": [70, 73, 82, 84, 85, 88, 90, 91, 92, 105, 212, 260, 264, 273, 280, 299, 300, 301, 303, 305, 308, 309, 316, 317, 320, 321, 325, 326], "eff": [70, 82, 212, 260, 264, 299, 300, 308, 309, 326], "01": [70, 88, 90, 92, 158, 159, 212, 214, 223, 272, 293, 321, 328], "005": [70, 260, 261, 326], "012": [70, 88], "mu_": [71, 84, 87, 212, 261, 264, 276, 298, 299, 300, 302, 307, 308, 314, 326, 327, 328, 332], "asymptotic_radiu": 71, "asymptot": 71, "precess": [73, 85, 91, 92, 97, 105, 212, 214, 256, 264, 273, 280, 299, 300, 301, 303, 305, 309, 316, 317, 320, 321, 325, 326, 334], "gamma0": [73, 82, 85, 91, 92, 105, 212, 257, 260, 264, 273, 280, 299, 300, 301, 303, 305, 308, 309, 316, 317, 320, 321, 325, 326], "damp": [73, 85, 90, 91, 92, 105, 212, 214, 256, 264, 273, 280, 299, 300, 301, 303, 305, 308, 309, 316, 317, 320, 321, 325, 326, 334], "parent": [74, 76, 193], "exchang": [75, 83, 85, 90, 91, 92, 210, 212, 214, 229, 247, 248, 249, 250, 251, 252, 253, 254, 255, 264, 265, 270, 273, 279, 293, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 310, 311, 314, 315, 319, 320, 321, 325, 328, 329, 334], "123": [78, 210], "runner": [79, 80, 147, 148, 167, 170, 171, 172, 174, 210, 289, 293, 297, 335], "ovf_format": [79, 156, 167, 210], "bin8": [79, 156, 167, 210, 229], "verbos": [79, 80, 167, 210, 212, 247, 249, 253, 293, 329], "director": 79, "could": [79, 156, 224, 226, 228, 235, 243, 279, 289, 315, 321], "drive_kwargs_setup": [79, 156], "workinng": [79, 156, 167], "externalrunn": 79, "tool": [79, 107, 186, 210, 212, 215, 223, 228, 256, 279, 301, 314, 329, 334], "doubl": [79, 156, 167, 210, 327, 331], "bin4": [79, 156, 167, 210, 229], "txt": [79, 156, 167, 183, 187, 188, 189, 210, 229, 279, 334], "runtim": [79, 80, 167, 210, 321], "stdout": [79, 80, 167, 194, 289], "progress": [79, 80, 210], "bar": [79, 80, 210, 226, 249, 251, 252], "snapshot": [79, 80, 210, 334], "disk": [79, 80, 210, 212, 229, 230, 253, 275, 280, 297, 319, 330], "rough": [79, 80, 87, 210, 275], "fileexistserror": 79, "drive_kwarg": [79, 156], "schedul": [79, 156, 210, 255, 262], "cmd": [79, 281], "header": [79, 156, 210], "script_nam": [79, 84, 87, 88, 321], "job": [79, 156, 210, 262], "sh": 79, "submit": [79, 210, 262], "machin": [79, 267, 306, 334, 335], "slurm": [79, 210], "resourc": [79, 210], "respons": [79, 156, 210, 239], "execut": [79, 147, 149, 156, 170, 171, 173, 210, 267, 273, 306, 334, 335], "submiss": [79, 210], "program": [79, 210, 211, 333], "sbatch": 79, "cpu": [79, 156], "memori": [79, 210], "script": [79, 84, 87, 88, 210, 321, 335], "schedule_kwargs_setup": [79, 156], "schedule_kwarg": [79, 156], "argstr": 80, "need_stderr": 80, "glob_nam": 80, "standard": [80, 210, 223, 224, 251, 275, 277, 297, 331], "captur": [80, 223], "glob": 80, "express": [80, 243, 258, 259, 277, 298, 332], "occur": [80, 223, 298, 315, 327], "success": [80, 183, 335], "package_nam": [80, 148, 172], "magneto": [81, 210, 214], "elast": [81, 210, 214], "b_": 81, "epsilon_": 81, "ne": 81, "ij": [81, 332], "b1": 81, "1e7": [81, 87, 226, 330], "5e7": 81, "b2": 81, "e_diag": 81, "e_offdiag": 81, "strain": 81, "matrix": [81, 87, 230, 321], "assembl": [81, 264, 268, 270, 271, 274, 276, 318, 327], "eps11": 81, "eps22": 81, "eps33": 81, "eps23": 81, "eps32": 81, "eps13": 81, "eps31": 81, "eps12": 81, "eps21": 81, "mel": [81, 210], "2e7": 81, "gamma": [82, 84, 97, 260, 305, 325, 326], "2e6": [82, 280, 314, 320, 326, 329, 332], "closest": [83, 315], "mutual": [83, 261, 313, 315], "bilinear": [83, 226], "interfaci": [83, 253, 304, 314, 327], "sigma2": [83, 210, 315], "biquadrat": 83, "torqu": [84, 88, 210, 217, 305, 332], "beta": [84, 88, 260, 300, 305, 321, 325], "epsilon": [84, 332], "hbar": [84, 257], "tm_": 84, "evalu": [84, 87, 88, 212, 321], "dt": [84, 87, 88, 279, 280, 299, 308, 309, 320, 321, 326], "tcl_string": [84, 87, 88, 321], "tcl": [84, 87, 88, 173, 174, 210, 261, 267, 289, 306, 335], "5e12": 84, "3e12": 84, "mp": [84, 321], "35": [84, 210, 223, 226, 228, 235, 261, 270, 272, 279, 282, 299, 300, 311, 312, 321, 331], "eps_prim": 84, "script_arg": [84, 87, 88, 321], "nist": [84, 87, 88, 155, 157, 158, 159, 160, 162, 163, 298, 299, 300, 321, 335], "gov": [84, 87, 88, 155, 157, 158, 159, 160, 162, 163, 298, 299, 300, 321], "doc": [84, 87, 88, 170, 246, 288, 289, 321], "userguide20a3": [84, 87, 88, 321], "userguid": [84, 87, 88, 321], "standard_oxs_ext_child_cla": [84, 87, 88, 321], "sx": [84, 88], "exponenti": [84, 87, 321], "decai": [84, 87, 88, 321], "t_0": [84, 87], "exp": [84, 87, 228, 250, 321], "unnam": 85, "uniqu": [85, 183, 214, 256, 268, 270, 271, 274, 276, 282, 312], "temperatur": [85, 164, 166, 210, 291, 297, 332], "my_cool_system": 85, "dynamicsterm": [85, 258], "yet": [85, 223], "001": [85, 292, 332], "21e5": 85, "221000": 85, "energyterm": [85, 259], "uniaxi": [86, 214, 253, 265, 268, 293, 298, 305, 307, 315, 321, 325], "k1": [86, 223, 261, 274], "k2": [86, 223, 261, 274], "ua": [86, 90, 274], "2e3": 86, "sine": [87, 261, 297, 317, 320, 321], "wave": [87, 223, 248, 251, 252, 261, 316, 317, 320, 321], "puls": [87, 261, 320], "built": [87, 222, 226, 248, 251, 252, 254, 281, 329, 331], "t0": [87, 261, 316, 317, 320, 321], "t_": [87, 261, 320, 332], "off": [87, 183, 212, 248, 249, 301, 320, 321], "separ": [87, 224, 226, 228, 230, 260, 261, 277, 321], "central": [87, 226], "stabl": [87, 246, 319], "guidelin": [87, 335], "nine": [87, 321], "m11": 87, "m12": 87, "m13": 87, "m21": 87, "m22": 87, "m23": 87, "m31": 87, "m32": 87, "m33": 87, "complic": [87, 223, 224, 249, 328], "tz": [87, 321], "flexibl": [87, 156, 230, 233, 329], "sever": [87, 210, 211, 223, 224, 225, 226, 228, 230, 231, 241, 260, 261, 284, 289, 291, 321, 330, 334], "time_depend": [87, 321], "tstep": [87, 321], "easier": [87, 223, 239, 334], "hz": [87, 321], "predefin": [87, 202, 212, 257, 261], "su": [87, 321], "websit": [87, 210, 226, 321, 335], "zhang": [88, 161, 210, 214, 301, 305], "li": [88, 161, 210, 214, 305], "behav": [88, 224, 255, 321], "similar": [88, 210, 223, 224, 226, 231, 232, 234, 235, 237, 239, 240, 241, 245, 255, 256, 271, 272, 274, 284, 291, 299, 300, 321, 324, 329], "slonczewski": [88, 162, 166, 210, 214], "oxs_spinxferevolv": [88, 162], "5e6": [88, 90, 305, 321, 325, 328], "sinusoid": [88, 223, 321], "sin_wav": 88, "evolv": [90, 155, 157, 160, 161, 162, 164, 165, 166, 219, 255, 279, 280, 299, 309, 325], "_allowed_attribut": [90, 142, 143, 144, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 258, 259, 262], "lowercas": [90, 91, 210, 263], "uniaxialanisotropi": [90, 214, 248, 249, 253, 254, 261, 274, 279, 298, 302, 304, 305, 306, 307, 308, 311, 313, 314, 315, 321, 325, 327, 329], "my_damp": 90, "termscontain": 91, "termcontain": 91, "my_exchang": 91, "energy1": 91, "energy2": 91, "dmi": [91, 210, 214, 247, 248, 249, 250, 251, 252, 254, 261, 270, 279, 304, 305, 306, 311, 314, 319, 321, 325, 329, 334], "stt": [91, 297, 300, 321, 325], "indexerror": 91, "6021766208e": [94, 257], "19": [94, 212, 222, 223, 224, 226, 228, 230, 231, 234, 235, 239, 243, 255, 256, 257, 260, 261, 268, 269, 272, 274, 279, 282, 289, 299, 302, 307, 308, 311, 321, 327, 330, 331, 332], "elementari": 94, "00231930436182": [95, 257], "land": 95, "176085964286": [96, 257], "56906": [96, 257], "gyrotrop": [96, 260, 305, 325], "kg": [96, 101], "221276": [97, 257], "14872118403": [97, 257], "llg": [97, 212, 214, 299, 300, 301, 326, 327], "62607004081e": [98, 257], "34": [98, 99, 223, 225, 226, 228, 231, 235, 243, 256, 257, 261, 267, 269, 282, 289, 306, 311, 312, 320, 321, 331], "planck": [98, 99, 334], "0545718002680283e": [99, 257], "3806485279e": [100, 257], "23": [100, 212, 222, 223, 224, 226, 228, 230, 231, 234, 235, 243, 255, 256, 257, 260, 261, 272, 278, 279, 282, 290, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 325, 326, 327, 328, 329, 330, 331, 332], "boltzmann": [100, 332], "1093835611e": [101, 257], "31": [101, 210, 223, 224, 226, 228, 231, 235, 243, 246, 255, 257, 261, 282, 311, 321, 331, 332], "2566370614359173e": [102, 257], "274009992067861e": [103, 257], "24": [103, 183, 210, 223, 224, 226, 228, 231, 234, 235, 243, 247, 255, 256, 257, 260, 261, 277, 279, 282, 292, 299, 311, 321, 330, 331, 332], "bohr": [103, 332], "magneton": [103, 332], "micromagnetictest": [109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 216, 266, 278, 334, 335], "calculatortest": [109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 266], "tmp_path": 134, "mt": [139, 140, 299, 311], "mumax3c": [142, 143, 144, 147, 148, 149, 210, 214, 216, 278, 334, 335], "minimis": [142, 143, 159, 214, 268, 270, 271, 272, 274, 276, 299, 300, 304, 312, 313, 314, 318, 319, 327, 328], "mumax": [142, 143, 144, 210, 214, 216, 279, 335], "github": [142, 143, 144, 210, 211, 333, 335], "io": [142, 143, 144, 210, 242, 333], "mc": [142, 143, 144, 148, 149, 150, 152, 158, 168, 214, 221, 269, 272, 273, 280, 287, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 326, 328], "demagaccuraci": [142, 143, 144], "myarg": [142, 143, 144, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166], "rd": 143, "td": [144, 145, 163, 168, 212, 273, 275, 280, 299, 300, 301, 305, 309, 316, 317, 320, 321, 325, 326], "oommfc": [145, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 170, 171, 172, 173, 174, 194, 210, 212, 214, 216, 221, 247, 248, 249, 250, 251, 252, 253, 254, 255, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 289, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 325, 326, 327, 328, 329, 334, 335], "filenotfounderror": [145, 168], "calc": [145, 279], "macrospin": [145, 148, 150, 167, 168, 172, 175, 275, 280, 321], "mumax3_ex": [147, 149, 335], "statu": [148, 149, 172, 173, 210, 233, 267, 275, 335], "cache_runn": [149, 173, 267, 289], "subsequ": [149, 173, 210, 226, 233, 267, 299, 329, 335], "mumax3runn": [149, 151], "again": [149, 173, 223, 226, 230, 256, 258, 259, 272, 321, 327, 334, 335], "optirun_ex": 149, "optirun": 149, "autoselect_runn": [149, 151, 173, 176, 267, 289], "suitabl": [149, 173, 223, 335], "environmenterror": [149, 173], "host": [149, 173, 210], "isinst": [149, 150, 173, 175, 197, 312], "though": [150, 175, 210], "mumxa3c": 151, "unset": [151, 176, 267], "let": [151, 176, 212, 222, 223, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 243, 244, 245, 258, 259, 260, 261, 262, 265, 268, 269, 270, 271, 272, 274, 276, 281, 282, 283, 286, 288, 290, 291, 305, 306, 310, 311, 312, 314, 318, 321, 326, 327, 328, 330], "reset": [151, 173, 176, 243, 321], "overwrit": [151, 176, 229, 267, 298], "oxs_cgevolv": [155, 255], "oc": [155, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 172, 173, 175, 212, 214, 221, 247, 248, 249, 250, 251, 252, 253, 254, 268, 270, 271, 274, 275, 276, 298, 299, 300, 301, 302, 303, 304, 325, 327, 329], "polak": 155, "ribier": 155, "intend": [156, 294, 328, 335], "fixed_subregion": [156, 310], "output_step": [156, 272], "n_thread": [156, 167, 212, 255, 256, 272, 273, 311], "thread": [156, 167, 273], "environ": [156, 167, 173, 210, 289, 324], "oommf_thread": [156, 167], "instal": [156, 167, 210, 267, 278, 289, 294, 306, 324, 332, 334], "impli": 156, "activ": [156, 224, 324, 335, 336], "conda": [156, 210, 278, 289, 324, 332, 335], "request": 156, "node": 156, "write_mif": [156, 210], "subdirectiori": 156, "encourag": [156, 333], "advanc": [156, 224, 235, 253, 321], "euler": [157, 230], "oxs_eulerevolv": 157, "min_timestep": 157, "oxs_mindriv": [158, 159, 255], "hd": [158, 311], "stopping_mxhxm": [158, 159, 255], "rung": [160, 165], "kutta": [160, 165], "oxs_rungekuttaevolv": 160, "rk4": [160, 161, 162, 165, 166], "anv_spintevolv": 161, "www": [161, 164, 267, 298, 299, 300, 306, 309, 331], "zurich": 161, "ibm": 161, "com": [161, 165, 166, 170, 267, 306, 309, 335], "st": [161, 321], "nanomagnet": 161, "oxs_timedriv": 163, "total_iteration_limit": 163, "langevin": 164, "thetaevolv": [164, 309], "nanosci": [164, 309], "de": [164, 279, 280, 299, 309, 320, 326], "group_r": [164, 309], "stm": [164, 309], "spstm": [164, 309], "project": [164, 179, 210, 224, 226, 239, 240, 245, 287, 309, 333, 334, 336], "download": [164, 267, 306, 309, 334, 335], "shtml": [164, 309], "fixed_timestep": [164, 309], "60": [164, 214, 223, 226, 228, 230, 309, 329, 331], "xf_thermheun": 165, "uhh_thetaevolv": [165, 210], "kelvinxyfong": [165, 166], "wordpress": [165, 166], "research": [165, 166, 334], "interest": [165, 166, 226, 228, 298], "effective_field": [167, 259, 302, 303, 307, 308], "22": [167, 214, 222, 223, 224, 226, 228, 230, 231, 234, 235, 239, 243, 255, 256, 260, 261, 278, 279, 280, 282, 311, 320, 321, 326, 330, 331, 332], "silent": [168, 210], "docker_ex": [170, 173, 267, 289], "docker": [170, 173, 178, 210, 214, 267, 289, 306, 335], "20b0": 170, "selinux": [170, 210], "dockerhub": 170, "20a3": [170, 214], "flag": 170, "mount": 170, "caution": 170, "storag": [170, 223], "bind": 170, "configur": [170, 212, 247, 248, 249, 250, 251, 252, 253, 254, 264, 289, 298, 299, 301, 304, 306, 314, 319, 322, 326, 327, 328], "you": [170, 210, 211, 216, 223, 224, 225, 228, 229, 233, 256, 266, 267, 297, 306, 321, 323, 324, 325, 326, 328, 329, 332, 333, 334, 335], "permiss": 170, "boxsii": [170, 171, 172, 174], "oommf_ex": [171, 173, 267, 289, 306], "platform": [172, 210, 278], "seen": [172, 224, 226, 230, 248, 250, 329], "version": [172, 183, 187, 189, 210, 216, 289, 324, 333, 334, 335], "oommfrunn": [173, 176, 210, 267], "envvar": [173, 267, 289], "oommftcl": [173, 267, 289, 335], "ooommf_ex": 173, "docker_runn": [173, 306], "long": [173, 210, 239, 240, 245, 281, 283, 305], "dockeroommfrunn": [173, 210, 306], "oommf_tcl": [174, 267, 306], "exeoommfrunn": [176, 210, 212, 247, 248, 250, 251, 252, 253, 254, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 325, 326, 327, 328, 329], "usr": 176, "share": [176, 334], "miniconda3": [176, 267, 278, 289, 304, 314, 317, 332], "env": [176, 267, 278, 289, 304, 314, 317, 332], "bin": [176, 210, 229, 267, 278, 289, 335], "meta": [179, 210, 294, 324, 334, 335], "inforamt": 180, "subpackag": [180, 194, 210, 213, 289, 294, 323, 324, 334, 335], "build": [183, 216, 225, 229, 234, 262, 311, 335], "some": [183, 210, 212, 223, 224, 226, 228, 230, 231, 235, 239, 240, 243, 245, 251, 252, 257, 258, 259, 260, 261, 262, 264, 267, 281, 299, 306, 308, 311, 313, 321, 326, 328, 329, 330, 331, 332, 333, 334, 335], "make": [183, 223, 225, 226, 230, 239, 240, 245, 246, 250, 251, 252, 254, 258, 259, 268, 270, 271, 274, 276, 278, 287, 288, 299, 308, 312, 313, 318, 328, 329, 331, 332, 334, 335], "recommend": [183, 213, 226, 321, 324], "odt": [183, 184, 187, 188, 189, 210, 279, 280, 281, 282, 283, 284, 334], "ut": [183, 184, 185, 279, 281, 282, 283, 284], "odtfil": [183, 184, 187, 188, 189, 279, 280, 281, 283, 284], "file1": [183, 184, 187, 188, 189, 242, 282], "merg": [183, 295], "xmax": [183, 253, 279, 282], "odtfile1": [183, 282], "odtfile2": [183, 282], "file2": [183, 189, 242, 279, 281, 282, 283, 284], "table1": [183, 282], "table2": [183, 282], "merged_t": [183, 282], "picosecond": [183, 283, 284], "999": 183, "39": [183, 210, 222, 223, 226, 228, 234, 236, 239, 240, 243, 244, 245, 255, 258, 259, 260, 261, 262, 263, 264, 267, 272, 273, 277, 278, 279, 282, 283, 288, 289, 290, 291, 292, 300, 302, 306, 311, 312, 321, 331], "99": [183, 280], "file3": [183, 188, 242], "fuction": 183, "new_tabl": 183, "shorter": [183, 187, 189, 321, 328, 330], "hysteresis1": 183, "file5": 183, "ifft_tabl": [183, 280], "nanosecond": [183, 321], "fft_tabl": [183, 280], "uu": [187, 188, 189, 192, 195, 207, 208, 247, 248, 249, 251, 252, 253, 254, 286, 292], "ubermag": [190, 194, 210, 211, 212, 213, 216, 221, 225, 226, 228, 236, 247, 248, 249, 251, 252, 253, 254, 267, 269, 278, 280, 289, 297, 306, 308, 311, 312, 315, 323, 324, 327, 329, 330, 331, 332, 333, 336], "context": [191, 210, 232, 233, 235], "manag": [191, 210, 335], "vmin": [192, 251, 252, 286], "vmax": [192, 251, 252, 286], "loop": [192, 235, 237, 247, 256, 286, 298], "copi": 193, "docstr": [193, 331], "__init__": [193, 197, 198, 199, 200, 201, 202, 203, 204, 205, 285, 287, 288, 290, 291], "squar": [193, 223, 287, 309, 331], "__doc__": [193, 288], "package_level": [194, 289], "log": [194, 210, 296, 331], "logger": [194, 289], "fine": [194, 256, 289, 299], "grain": [194, 210, 289], "debug": [194, 210, 289, 294], "ubermagutil": [197, 198, 199, 200, 201, 202, 203, 204, 210, 216, 247, 248, 249, 251, 252, 253, 254, 258, 259, 261, 278, 285, 286, 288, 289, 290, 291, 292, 334, 335], "typesystem": [197, 198, 199, 200, 201, 202, 203, 204, 258, 259, 261, 285, 290, 291, 296, 334, 336], "__set__": [197, 198, 199, 200, 201, 202, 203, 204], "instanti": [197, 258, 259, 287, 290, 291], "delet": [197, 212, 229, 271, 275], "never": [197, 267, 287], "positiveint": 197, "super": 197, "myattribut": [197, 198, 199, 200, 201, 202, 203, 204], "decoratedclass": [197, 198, 199, 200, 201, 202, 203, 204, 205, 290], "dc": [197, 198, 199, 200, 201, 202, 203, 204, 205, 217, 290], "beed": 197, "affect": [197, 198, 199, 200, 201, 204, 222, 243, 256, 290, 327], "__delete__": 197, "nikola": [197, 199, 203, 205, 285, 287], "tesla": [197, 199, 203, 205, 285, 287], "del": [197, 287], "john": [197, 198, 199, 200, 201, 202, 203, 204], "jane": [197, 198, 199, 200, 201, 202, 203, 204], "descriptor": [198, 199, 200, 201, 202, 203, 204, 205, 258, 259, 261, 285, 296, 334], "key_descriptor": 198, "value_descriptor": 198, "allow_empti": 198, "prioriti": [198, 200, 201, 204], "inherit": [198, 199, 200, 201, 202, 203, 204, 288], "identifi": [199, 223, 244, 312, 315, 328], "allowed_char": 199, "split": 199, "object_nam": 199, "newnam": 199, "123newnam": 199, "describ": [200, 224, 226, 232, 277, 332, 334], "abc": [200, 287], "expected_typ": [201, 203, 204, 205, 285, 287], "subset": [201, 204, 261, 287], "neither": [201, 204, 268, 274], "nor": [201, 204, 268, 274], "sample_set": [202, 287], "unpack": [202, 235, 287, 330], "yx": [202, 321], "zyyyyx": 202, "allow_non": 203, "mihajlo": [203, 205, 290], "pupin": [203, 205, 290], "component_typ": 204, "impos": [205, 258, 259, 290, 291, 296], "si": [206, 207, 208, 239, 240, 243, 245, 283, 296], "si_multipli": [207, 292], "largest": [207, 292], "500e": [207, 208, 299, 305, 321], "5000e": 207, "microscal": 208, "picoscal": 208, "si_max_multipli": [208, 248, 292], "avoid": [210, 223, 224, 232, 248, 301, 335], "ambigu": 210, "508": 210, "letter": 210, "513": 210, "now": [210, 212, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 235, 236, 238, 239, 240, 241, 243, 244, 245, 247, 249, 251, 252, 256, 258, 259, 260, 261, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274, 276, 279, 281, 282, 284, 287, 288, 290, 291, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 326, 327, 328, 329, 330, 331, 332, 335], "calendar": 210, "style": [210, 226], "broadli": 210, "inspir": 210, "ubuntu": [210, 335], "year": [210, 334], "month": 210, "patch": [210, 248], "yyyi": 210, "0m": 210, "omit": [210, 212, 224, 226, 231, 242, 333], "releas": [210, 214, 216, 236, 333, 335], "necessarili": 210, "bug": [210, 333], "semant": 210, "refactor": [210, 336], "inconsist": 210, "summari": [210, 335], "fairli": 210, "switch": [210, 321], "replac": [210, 221, 248, 324, 328, 335, 336], "exact": [210, 233, 298, 321], "axispoint": 210, "deprec": 210, "syntax": [210, 331], "longer": [210, 223, 248, 251, 255], "previou": [210, 223, 235, 245, 267, 271, 274, 281, 305, 328, 329, 330], "hole": 210, "from_fil": [210, 229, 277], "to_fil": [210, 229, 277], "anymor": [210, 222, 227, 228, 230], "fill": 210, "materi": [210, 212, 239, 298, 299, 300, 301, 304, 305, 308, 314, 329, 330, 332, 334], "hdf5": [210, 229, 294, 334], "generalis": [210, 228, 336], "norm_filt": 210, "475": 210, "147": 210, "148": 210, "49": [210, 223, 226, 228, 261, 331], "persist": [210, 275], "session": [210, 224, 275, 308, 328, 334], "mu_b": [210, 332], "79": [210, 228], "commit": 210, "b2c334d": 210, "73": [210, 228], "rkky": [210, 214, 297], "142": 210, "inject": 210, "xf_thermspinxferevolv": 210, "136": 210, "219": 210, "extend_scalar": 210, "did": [210, 222, 230, 235, 272, 290, 311, 325, 328], "exceed": 210, "000": 210, "337": 210, "furthermor": [210, 223, 224, 226, 256, 262], "reorganis": 210, "invis": 210, "158": [210, 289], "json": [210, 229], "163": 210, "getitem": 210, "116": [210, 312], "mpl_subregion": [210, 239], "164": 210, "improv": [210, 225, 321, 336], "194": [210, 289], "greatli": [210, 333], "render": [210, 246, 334], "problem": [210, 225, 297, 321, 333, 334], "slow": 210, "might": [210, 213, 224, 324], "4a8fca4": 210, "159": [210, 289], "rewrit": 210, "consumpt": 210, "roughli": 210, "had": [210, 229, 308], "peak": [210, 223, 251, 252], "33": [210, 223, 226, 228, 231, 235, 255, 261, 267, 268, 277, 279, 282, 311, 312, 321, 331], "latex": [210, 260, 261], "landau": [210, 212, 299, 326], "lifshitz": [210, 212, 299, 326], "gilbert": [210, 212, 260, 280, 299, 300, 301, 305, 321, 325, 326], "140": 210, "26": [210, 223, 224, 226, 228, 231, 235, 243, 255, 256, 260, 261, 279, 282, 311, 321, 330, 331, 332], "jupyt": [210, 211, 223, 225, 226, 243, 323, 328, 331, 333, 334, 335], "dynacm": 210, "actual": [210, 222, 230, 233, 237, 243, 267, 328, 335], "104": 210, "sent": 210, "dry_run": 210, "subprocess": 210, "rescal": 210, "149": [210, 334], "mag2exp": [210, 216, 230, 247, 248, 249, 251, 252, 253, 254, 278, 334], "previous": [210, 228, 235, 287, 308, 309, 313, 335], "46": [210, 223, 226, 228, 261, 321, 331], "overhead": 210, "temporari": 210, "cover": [210, 223, 239, 297], "2de6360": 210, "despit": [210, 224], "153": [210, 309], "stop": [210, 321], "keyboardinterrupt": 210, "103": 210, "upon": [210, 223], "complet": [210, 299, 311, 335], "interrupt": 210, "counter": 210, "openh264": 210, "146": 210, "speedup": 210, "135": 210, "stabil": 210, "inaccuraci": [210, 230], "introduc": [210, 213, 230, 239, 301, 320, 323, 329, 331], "133": 210, "overlap": [210, 226, 235, 239, 244], "tick": 210, "dealt": 210, "easili": [210, 230, 249, 332], "fashion": [210, 334], "134": 210, "textual": 210, "xml": [210, 229], "isosurfac": 210, "paraview": [210, 229, 255], "huge": 210, "200": [210, 224, 248, 249, 272, 273, 279, 280, 289, 291, 299, 311, 320, 321, 325, 326], "129": [210, 279], "mathemat": [210, 213, 222, 334], "141": 210, "144": 210, "18": [210, 212, 222, 223, 224, 226, 228, 230, 231, 232, 234, 235, 239, 243, 247, 248, 250, 251, 252, 253, 254, 255, 256, 260, 261, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 279, 280, 282, 292, 299, 308, 311, 318, 321, 327, 328, 330, 331, 332], "drive1": 210, "drive2": 210, "hint": 210, "27": [210, 223, 224, 226, 228, 231, 235, 243, 255, 256, 261, 279, 282, 311, 312, 321, 331, 332], "137": 210, "directiori": 210, "readabl": [210, 328], "writabl": 210, "95": 210, "0a2": [210, 214], "84": 210, "198": [210, 279, 280, 289, 299, 320, 326], "crystallograph": [210, 261, 270, 327], "window": [210, 267, 281, 306, 324, 335], "maco": [210, 281, 324, 335], "linux": [210, 267, 278, 281, 306, 324, 335], "ligh": [210, 226], "fieldrot": [210, 250, 254], "105": [210, 320], "datatyp": 210, "114": [210, 312], "118": 210, "significantli": 210, "10_000": 210, "117": [210, 331], "omf": [210, 229, 242, 255], "million": 210, "files": 210, "9m": 210, "1730": 210, "63000": 210, "56": [210, 223, 226, 228, 261, 298, 320, 326, 327, 331], "1125": 210, "8m": 210, "1860": 210, "64000": 210, "762": 210, "15m": 210, "4920": 210, "401": 210, "69000": 210, "4510": 210, "represen": 210, "121": 210, "77": [210, 228], "anyth": [210, 243, 334], "80": [210, 228, 301], "108": 210, "simultan": [210, 267], "106": 210, "broke": 210, "191": 210, "solv": [210, 213, 235, 297, 334], "issu": [210, 211, 333], "unifi": 210, "sync": 210, "lab": [210, 226, 323, 335], "situat": [210, 224], "dmi_cnv": [210, 279], "dmi_d2d": 210, "dmi_cnv_z": [210, 261], "zhangli": [210, 214, 260, 300, 305, 321, 325], "xf_thermheunevolv": 210, "setup_log": [210, 289], "colourbar": [210, 226], "twice": [210, 249], "139": 210, "pyenv": 210, "172": [210, 279], "magnetoelast": [210, 214], "highli": [211, 223], "welcom": [211, 333, 336], "mani": [211, 226, 228, 243, 247, 273, 315, 328, 329], "skill": 211, "answer": [211, 213, 333], "question": [211, 213, 297, 327, 331, 333, 334], "help": [211, 223, 225, 242, 246, 267, 306, 334, 335], "repositori": [211, 333, 335], "mail": [211, 333, 334], "encount": [211, 304, 314, 317, 333], "reproduc": [211, 315, 334], "pull": [211, 267, 306], "someth": [211, 226], "why": [211, 228, 249], "want": [211, 212, 222, 223, 224, 226, 227, 228, 230, 231, 234, 235, 237, 238, 239, 240, 241, 243, 245, 254, 258, 259, 260, 261, 266, 267, 269, 272, 276, 281, 282, 283, 286, 287, 299, 301, 302, 305, 306, 307, 308, 310, 311, 315, 318, 321, 325, 327, 328, 330, 331, 333, 334, 335], "yourself": 211, "touch": 211, "beforehand": [211, 224], "develop": [212, 333, 336], "abl": [212, 231, 252, 254, 256, 290, 291, 305, 332, 333], "permalloi": [212, 299, 300, 301], "thick": [212, 237, 248, 299, 300, 301, 308, 319, 327, 330], "Its": [212, 222, 239, 240, 245, 268, 270, 271, 274, 276, 294, 318, 327], "ferromagnet": [212, 280], "w_": [212, 268, 270, 271, 274, 276, 327], "pj": [212, 305, 325, 327, 328], "govern": [212, 299, 326], "211": [212, 299, 300, 305, 325, 326], "state": [212, 223, 226, 248, 280, 299, 300, 301, 302, 307, 313, 315, 321, 327, 328, 329], "config": 212, "inlinebackend": 212, "figure_format": 212, "svg": 212, "pd": 212, "max_row": 212, "float_format": 212, "8e5": [212, 268, 270, 271, 274, 276, 299, 300, 301, 302, 303, 305, 307, 312, 318, 321, 325], "gyromagnet": [212, 280, 299, 300, 305, 321, 325, 326], "vortex_dynam": [212, 256], "m_init": [212, 298, 304, 306, 314, 325], "ms_func": 212, "investig": [212, 222, 251, 252, 253, 327], "carri": [212, 228, 246, 247, 325, 329, 331, 335], "calul": 212, "mindriv": [212, 214, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 268, 269, 270, 271, 274, 275, 276, 293, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 318, 319, 321, 325, 327, 328, 329], "2023": [212, 247, 248, 250, 251, 252, 253, 254, 255, 256, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 325, 326, 327, 328, 329], "17": [212, 214, 222, 223, 224, 226, 228, 230, 231, 232, 234, 235, 239, 243, 249, 255, 256, 260, 261, 268, 269, 271, 272, 274, 276, 282, 299, 308, 311, 318, 320, 321, 327, 330, 331, 332], "next": [212, 225, 229, 235, 256, 264, 301, 303, 308, 321, 326, 328, 335], "4e4": 212, "took": [212, 275], "00e": [212, 235, 238], "18e": 212, "03e": 212, "82e": 212, "94e": 212, "27e": [212, 310], "92e": 212, "07e": 212, "89e": 212, "26e": 212, "63e": 212, "90e": 212, "86e": 212, "60e": [212, 313, 315], "05e": [212, 238], "84e": [212, 332], "83e": 212, "57e": 212, "97e": 212, "66e": 212, "80e": [212, 239], "idea": [212, 228, 298], "mdata": 212, "date": [212, 214, 255, 256, 272, 277, 311, 336], "40": [212, 223, 224, 226, 228, 235, 243, 250, 261, 274, 278, 311, 321, 330, 331], "41": [212, 223, 226, 228, 235, 261, 275, 276, 311, 321, 331], "inspect": [212, 225, 269, 299, 319, 326, 327, 330, 331], "viridi": 212, "wind": 212, "iint": 212, "42290507": 212, "commonli": [212, 249, 321, 329], "naiv": 212, "5024556893362209": 212, "rho": [212, 250], "24115027e": 212, "54330909e": 212, "compute_vortex_centr": 212, "x_coord": 212, "y_coord": 212, "tcd": 212, "centre_of_mass": 212, "pos_pol_plu": 212, "top": [212, 221, 223, 224, 226, 239, 240, 245, 249, 277, 315, 319], "yellow": 212, "lt": [212, 226, 235, 237, 246, 255, 256, 289, 300, 312, 321, 332], "line2d": [212, 321], "0x7ff4e412a500": 212, "gt": [212, 225, 226, 235, 237, 246, 255, 256, 267, 289, 300, 312, 321, 331, 332], "tutori": [213, 215, 226, 230, 233, 234, 235, 243, 245, 247, 248, 250, 253, 254, 262, 264, 267, 272, 273, 281, 293, 297, 298, 302, 304, 305, 306, 309, 311, 313, 314, 315, 317, 318, 320, 323, 324, 326, 327, 328, 331], "concept": [213, 216, 297, 321, 323], "technic": [213, 216, 297, 334], "api": [213, 223, 228, 231, 233, 239, 240, 245, 246, 262, 283, 297, 329, 334], "faq": 213, "short": [213, 256, 260, 261, 327, 335], "difficult": [213, 225, 251, 252, 256, 329], "summaris": [214, 255, 311], "abbrevi": 214, "partli": 214, "Not": [214, 226], "cubicanisotropi": [214, 261, 268], "relax": [214, 247, 248, 249, 250, 251, 252, 253, 254, 299, 300, 303, 304, 305, 306, 307, 310, 311, 314, 315, 319, 321, 325, 327, 328, 329], "relaxdriv": [214, 255, 256], "evolut": [214, 280, 299, 301, 321, 326], "66": [214, 226, 228, 277], "2022": [214, 253, 289, 311, 334], "0b0": [214, 278], "65": [214, 226, 228, 278, 280, 326], "07": [214, 223, 228, 235, 236, 237, 238, 239, 243, 244, 255, 256, 277, 299, 304, 306, 318, 319, 330, 332], "0a3": [214, 289], "64": [214, 226, 228, 278, 311, 335], "63": [214, 226, 228, 278], "29": [214, 223, 224, 226, 228, 231, 235, 243, 248, 255, 256, 261, 279, 282, 299, 311, 321, 331, 332], "62": [214, 226, 228, 278, 311], "61": [214, 226, 228, 278, 279], "2021": [214, 334], "20a2": 214, "51": [214, 223, 226, 228, 261, 280, 289, 309, 325, 326, 329, 331], "0a1": 214, "featur": [216, 224, 226, 230, 233, 248, 251, 252, 275, 297, 321, 329, 333], "gentl": [216, 297, 334], "introduct": [216, 230, 297, 324, 331, 334], "compat": [216, 221, 230], "page": [216, 321, 331, 334], "overview": 216, "licens": 216, "under": [216, 248, 249, 254, 280, 334, 335], "latest": [216, 224, 335], "coverag": 216, "binder": [216, 334], "magnetometri": [217, 332], "your": [221, 224, 239, 266, 306, 321, 324, 334, 335], "everyth": [221, 308, 331, 335], "main": [222, 226, 229, 231, 235, 240, 242, 245, 260, 261, 262, 264, 278, 294, 306, 321, 330, 336], "simpli": [222, 226, 235, 237, 239, 249, 298, 332], "far": [222, 226, 272, 311, 327, 333], "70710678": 222, "our": [222, 223, 224, 228, 229, 231, 233, 235, 236, 238, 239, 240, 243, 244, 245, 249, 250, 253, 254, 256, 267, 269, 281, 283, 290, 303, 306, 308, 312, 313, 315, 319, 320, 321, 323, 324, 326, 327, 330, 333, 335], "guid": 223, "effici": 223, "algorithm": [223, 298], "decompos": 223, "dataset": [223, 277], "primari": [223, 246], "explain": [223, 224, 230, 321, 324, 326, 333, 335], "studi": [223, 224, 326, 327, 334], "metr": 223, "spectrum": 223, "stand": 223, "thu": [223, 230, 250, 301], "known": [223, 230, 248, 267, 306, 329], "transit": [223, 298], "525": 223, "47500000000000003": 223, "With": [223, 255, 299, 334], "applic": [223, 232, 233], "notabl": 223, "transpos": 223, "consequ": [223, 230, 335], "meter": [223, 254], "signifi": 223, "prepend": 223, "maintain": 223, "neq": [223, 248, 251, 252, 332], "although": [223, 228], "possess": 223, "undergo": 223, "highlight": 223, "prefix": [223, 239, 240, 243, 245, 283, 296], "assist": [223, 267, 306], "distinguish": 223, "serv": [223, 301], "practic": 223, "purpos": [223, 230, 241, 262, 284, 294, 331], "spectral": 223, "psd": [223, 301], "essenc": 223, "magnitud": [223, 228, 249, 299, 301, 304, 311, 326], "observ": [223, 321], "promin": 223, "pm": 223, "confirm": [223, 303], "anticip": 223, "firstli": [223, 226, 229, 249, 250, 254, 264, 298, 300, 301, 332, 335], "notat": [223, 256], "secondli": [223, 226, 300], "revert": [223, 224], "reflect": 223, "awar": 223, "loss": 223, "inher": 223, "characterist": [223, 253, 299, 303], "disregard": [223, 233], "locat": [223, 224, 235, 327, 330, 335, 336], "almost": [223, 321], "reveal": [223, 251, 252, 253], "ident": [223, 230, 313], "discrep": 223, "stem": [223, 321], "primarili": 223, "lead": [223, 332], "imprecis": 223, "compris": 223, "contribut": [223, 232, 251, 327, 333, 335, 336], "subtl": 223, "offer": [223, 311], "visual": [223, 246], "rfft_field": 223, "011111111111111112": 223, "odd": 223, "halv": 223, "hermitian": 223, "suffici": [223, 301], "irfft_field": 223, "500000000000004": 223, "44": [223, 226, 228, 261, 280, 321, 326, 331], "aris": [223, 253], "reconcil": 223, "552713678800501e": 223, "good": [223, 240, 245, 246, 321, 329], "earlier": [223, 235, 243, 326, 328], "fft_field_freq": 223, "easiest": [223, 321], "166592653589793": 223, "141592653589793": [223, 331], "116592653589793": 223, "expand": 223, "prepar": [223, 334], "intric": 223, "showcas": 223, "worri": [223, 328], "made": [223, 268, 270, 271, 274, 276, 280, 318], "distinct": 223, "nois": [223, 321], "helix": 223, "xz": [223, 321], "k3": 223, "challeng": [223, 288], "struggl": 223, "pictur": 223, "variat": [223, 248, 301], "circumst": 223, "examin": [223, 233, 249, 251, 280, 325, 329], "textur": [223, 248, 249, 250, 251, 252, 254, 329], "1016666666": 223, "6666667": 223, "983333333": 223, "3333334": 223, "resid": 223, "straightforward": 223, "ly": [223, 239, 299, 300, 301], "28": [223, 224, 226, 228, 231, 235, 243, 255, 256, 261, 272, 279, 282, 311, 321, 327, 331, 332], "But": 223, "cartesian": [223, 243], "15e8": 223, "clearli": 223, "plai": [223, 233], "sure": [223, 225, 245, 258, 259, 278, 288, 313, 328, 335], "rather": [223, 250, 329], "bottom": [223, 224, 256, 315, 319], "vft_x": 223, "vft_y": 223, "vft_z": 223, "000000e": [223, 234, 255, 256, 272, 279, 280, 282, 299, 309, 320, 326], "00": [223, 228, 234, 272, 277, 280, 330], "016667e": 223, "533123e": 223, "967": 223, "133826": 223, "288057e": 223, "871359e": 223, "827684e": 223, "847779e": 223, "1158": 223, "211500": 223, "352008e": 223, "174272e": 223, "488701e": 223, "947446e": 223, "4409": 223, "870244": 223, "265669e": 223, "761408e": 223, "149718e": 223, "304691e": 223, "562": 223, "386254": 223, "033242e": 223, "348543e": 223, "810734e": 223, "980885e": 223, "682": 223, "398721": 223, "901236e": 223, "935679e": 223, "471751e": 223, "188206e": 223, "2177": 223, "488013": 223, "383882e": 223, "522815e": 223, "132768e": 223, "382068e": 223, "1556": 223, "538399": 223, "629643e": 223, "109951e": 223, "793785e": 223, "283730e": 223, "909728": 223, "189914e": 223, "697087e": 223, "454802e": 223, "769435e": 223, "1683": 223, "641055": 223, "109827e": 223, "284223e": 223, "115819e": 223, "637889e": 223, "3599": 223, "612375": 223, "371286e": 223, "776836e": 223, "212858e": 223, "81": [223, 311], "808281": 223, "167806e": 223, "458495e": 223, "437853e": 223, "499259e": 223, "1453": 223, "503092": 223, "171385e": 223, "045630e": 223, "098870e": 223, "549571e": 223, "3877": 223, "647581": 223, "529764e": 223, "632766e": 223, "759887e": 223, "796901e": 223, "6730": 223, "064855": 223, "402915e": 223, "219902e": 223, "420904e": 223, "278498e": 223, "3391": 223, "607301": 223, "417761e": 223, "807038e": 223, "081921e": 223, "345894e": 223, "529": 223, "881944": 223, "418821e": 223, "394174e": 223, "742938e": 223, "493517e": 223, "428": [223, 301], "868239": 223, "075442e": 223, "981310e": 223, "403955e": 223, "094941e": 223, "838": 223, "860841": 223, "024590e": 223, "056845e": 223, "064972e": 223, "956192e": 223, "1430": [223, 280, 326], "065794": 223, "318671e": 223, "115558e": 223, "725989e": 223, "263918e": 223, "1234": 223, "678006": 223, "904181e": 223, "387006e": 223, "192933e": 223, "2959": 223, "557627": 223, "674751e": 223, "232985e": 223, "048023e": 223, "265783e": 223, "4182": 223, "300782": 223, "237929e": 223, "291699e": 223, "709040e": 223, "921405e": 223, "2750": 223, "472104": 223, "690839e": 223, "350412e": 223, "370056e": 223, "059326e": 223, "96": [223, 280], "690581": 223, "470224e": 223, "04": [223, 255, 272, 293, 299, 301, 305, 320], "409126e": 223, "031073e": 223, "051780e": 223, "2841": 223, "657226": 223, "013952e": 223, "467840e": 223, "692090e": 223, "454145e": 223, "2922": 223, "751065": 223, "601955e": 223, "526553e": 223, "353107e": 223, "188864e": 223, "2110": 223, "892584": 223, "974571e": 223, "585267e": 223, "014124e": 223, "252956e": 223, "2065": 223, "062863": 223, "671110e": 223, "643980e": 223, "751412e": 223, "059485e": 223, "7540": 223, "272416": 223, "641762e": 223, "702694e": 223, "361582e": 223, "920847e": 223, "363": 223, "959313": 223, "525691e": 223, "824859e": 223, "768406e": 223, "709852": 223, "876681e": 223, "820121e": 223, "418079e": 223, "32": [223, 226, 228, 231, 235, 243, 255, 261, 277, 278, 282, 311, 321, 331, 332, 335], "878835e": 223, "807910e": 223, "937548e": 223, "019774e": 223, "996262e": 223, "358757e": 223, "054976e": 223, "697740e": 223, "36": [223, 226, 228, 235, 261, 271, 282, 311, 321, 331], "113689e": 223, "036723e": 223, "37": [223, 226, 228, 261, 272, 280, 282, 311, 321, 326, 331], "172403e": 223, "375706e": 223, "38": [223, 226, 228, 261, 272, 277, 282, 311, 321, 331], "231116e": 223, "714689e": 223, "289830e": 223, "053672e": 223, "392655e": 223, "407257e": 223, "731638e": 223, "42": [223, 226, 228, 235, 261, 275, 321, 331], "465971e": 223, "070621e": 223, "43": [223, 226, 228, 261, 321, 331], "524684e": 223, "409605e": 223, "583398e": 223, "748588e": 223, "642111e": 223, "087571e": 223, "700825e": 223, "426554e": 223, "47": [223, 226, 228, 255, 256, 261, 301, 311, 321, 331], "759539e": 223, "765537e": 223, "48": [223, 226, 228, 261, 311, 320, 331], "818252e": 223, "104520e": 223, "876966e": 223, "443503e": 223, "782486e": 223, "994393e": 223, "121469e": 223, "053107e": 223, "460452e": 223, "53": [223, 226, 228, 261, 331], "111820e": 223, "799435e": 223, "54": [223, 226, 228, 261, 272, 331], "170534e": 223, "138418e": 223, "229247e": 223, "477401e": 223, "287961e": 223, "816384e": 223, "57": [223, 226, 228, 248, 261, 298, 331], "346674e": 223, "155367e": 223, "58": [223, 226, 228, 261, 272, 280, 326, 331, 334], "405388e": 223, "494350e": 223, "59": [223, 226, 228, 261, 331], "464102e": 223, "833333e": [223, 234], "meaning": 223, "760918e": 223, "702205e": 223, "643491e": 223, "584778e": 223, "526064e": 223, "467350e": 223, "408637e": 223, "349923e": 223, "291210e": 223, "232496e": 223, "173782e": 223, "115069e": 223, "056355e": 223, "976417e": 223, "389281e": 223, "802145e": 223, "215009e": 223, "627873e": 223, "040738e": 223, "453602e": 223, "866466e": 223, "279330e": 223, "692194e": 223, "105058e": 223, "517922e": 223, "930787e": 223, "343651e": 223, "756515e": 223, "169379e": 223, "822431e": 223, "892799e": 223, "920287e": 223, "179165e": 223, "766300e": 223, "353436e": 223, "940572e": 223, "527708e": 223, "114844e": 223, "701980e": 223, "289116e": 223, "876251e": 223, "463387e": 223, "050523e": 223, "637659e": 223, "224795e": 223, "811931e": 223, "399067e": 223, "986203e": 223, "057334e": 223, "116047e": 223, "174761e": 223, "233475e": 223, "292188e": 223, "350902e": 223, "409615e": 223, "468329e": 223, "527043e": 223, "585756e": 223, "644470e": 223, "703183e": 223, "titl": [223, 228, 334], "set_xlabel": [223, 239, 240, 245, 253, 283, 329], "set_ylabel": [223, 239, 240, 245, 253, 283, 329], "arb": [223, 251], "librari": [224, 225, 226, 277], "pyvista": [224, 225, 226], "elipt": 224, "cylind": [224, 225, 226, 229, 304, 314], "vortex": [224, 226, 256, 298, 300, 334], "core": 224, "swap": [224, 226], "sign": [224, 232, 319, 333], "web": 224, "directon": 224, "colourmap": 224, "symmetri": [224, 250, 301, 304, 314], "discuss": [224, 228, 230, 235, 243], "come": [224, 247, 278, 335], "plasma": [224, 226, 256], "rare": [224, 238], "accomplish": 224, "potenti": [224, 229, 249, 321], "care": [224, 229, 230, 231, 333], "know": [224, 235, 240, 245, 286, 334, 335], "field_2d": 224, "confus": 224, "wouldn": 224, "field_4d": [224, 228], "coolwarm": [224, 256, 325], "layout": 224, "bokeh": [224, 256], "widget_loc": [224, 256], "userwarn": [224, 226], "compet": 224, "toolbar": 224, "active_drag": 224, "simplefilt": 224, "scalar_z": 224, "contour_z": 224, "plasma_r": 224, "show_legend": 224, "vector_z": 224, "turbo": [224, 226], "frame_height": 224, "experi": [225, 230, 248, 254, 329, 333], "googl": 225, "chrome": 225, "sai": [225, 226, 227, 228, 229, 235, 237, 238, 239, 243, 258, 259, 260, 261, 265, 268, 269, 270, 271, 274, 276, 281, 286, 288, 290, 291, 311, 312, 318, 330], "ellipsoid": 225, "cz": [225, 226, 229], "norm_fun": [225, 226, 229, 303], "mous": 225, "0x27ae60": 225, "repo": [225, 226, 267, 289, 312], "devtool": [225, 226, 267, 289, 312, 335], "k3d_field": 225, "248": 225, "k3dfield": 225, "246": 225, "247": 225, "msg": [225, 312], "250": [225, 255, 256, 291], "251": 225, "cascad": 225, "factori": 225, "deactiv": 225, "plese": [225, 265], "plot1": 225, "continuous_upd": [225, 226, 234], "getattr": [225, 226, 307, 312], "nanocylind": 226, "diametr": 226, "15e": [226, 234, 249, 277, 305, 321, 325, 329], "vortex_field": 226, "discertisedfield": 226, "probabl": [226, 242, 328], "lose": 226, "notic": [226, 246, 305], "simplifi": [226, 231, 248, 321, 332, 335], "plane_xi": 226, "plane_yz": 226, "got": [226, 235, 243, 325], "reconstruct": [226, 246, 254, 329], "layer": [226, 313, 315, 319], "arround": 226, "asign": 226, "red": [226, 230, 248], "magma": [226, 299], "headwidth": 226, "plane_2d": 226, "home": [226, 267, 278, 289, 304, 314, 317, 331, 332, 335], "mlang": [226, 267, 278, 304, 314, 317, 332], "mpl_field": 226, "670": 226, "sens": [226, 239], "scheme": 226, "m_x": [226, 248, 326], "m_y": [226, 248, 310, 312, 318, 319, 326], "lighness_field": 226, "draw": 226, "separatli": 226, "add_colorwheel": 226, "axeshostax": 226, "widht": 226, "briefli": [226, 321], "respectivli": 226, "Then": [226, 230, 239, 321, 330], "nrow": 226, "ncol": 226, "white": 226, "set_titl": 226, "suptitl": 226, "fontsiz": 226, "xx": [226, 321], "tight_layout": 226, "init_m": 226, "dpi": [226, 253, 329], "spline16": [226, 248, 249, 251, 252, 254, 329], "75": [226, 228, 235, 243, 248, 298], "bfbfbf": 226, "ipython": 226, "nbval_ignore_output": [226, 230, 235, 237, 239, 280, 281, 298], "explor": [226, 240, 245, 260, 261, 318, 326, 327, 328], "field_valu": 226, "m_z": [226, 247, 252, 254, 305, 319, 321, 326], "xlabel": [226, 247, 298, 300, 301], "ylabel": [226, 247, 298, 301], "legend": [226, 248, 298], "0x7fa0cb618d60": 226, "73205081": 227, "57735027": 227, "09950494": 227, "pyhton": [227, 235], "sphere": [227, 330], "norm_funct": 227, "sphere_field": 227, "312": 228, "625": [228, 231], "7812": 228, "x_compon": 228, "overrid": 228, "portion": 228, "dimes": 228, "faster": [228, 308], "That": [228, 287], "937": 228, "1875": 228, "23437": 228, "5j": 228, "3j": 228, "98279372": 228, "wise": [228, 233, 331], "67": 228, "y_": 228, "68": 228, "integrand": 228, "mind": [228, 328], "69": 228, "skyrmion": [228, 250, 297, 306, 308, 314, 325, 329, 334], "dxdy": [228, 314], "70": [228, 251, 332], "Or": [228, 235], "71": [228, 253], "72": [228, 252, 300], "74": 228, "76": 228, "2246468e": 228, "78": [228, 311], "14159265": 228, "71828183": 228, "mayavi": 229, "nanospher": 229, "ohf": 229, "h5": [229, 277], "vtkfilenam": 229, "my_vtk_fil": 229, "isfil": 229, "omffilenam": 229, "my_omf_fil": 229, "ascii": 229, "hdf5filenam": 229, "read_field": 229, "previouli": [229, 231, 334], "freedom": [229, 239, 335], "read_fil": 229, "our_field": 229, "Be": 229, "principl": 230, "own": [230, 334], "predominantli": 230, "mayb": 230, "systemat": 230, "accumul": 230, "special": [230, 231, 233, 267, 306], "princip": [230, 298], "dedic": 230, "enhanc": [230, 333], "rotated_field": 230, "180": [230, 232], "handl": [230, 246, 321, 332], "rotation_quaternion": 230, "transfom": 230, "from_mrp": 230, "slightli": [230, 301], "000000000000007": 230, "000000000000004": 230, "jag": 230, "maximis": 230, "mention": [230, 313, 321], "illustr": [230, 233, 305], "rfield": 230, "stripe": 230, "inner": 230, "subsect": 230, "procc": 230, "fulli": [230, 299], "enclos": [230, 333], "quadrat": 230, "grow": [230, 287], "clearer": 230, "princibl": 230, "theoret": 230, "nx": 230, "ny": 230, "nz": 230, "resiz": 230, "round": [230, 331], "aproxim": 230, "linearli": 230, "satisfi": [231, 291, 332], "criteria": 231, "discertis": 231, "my_value_funct": 231, "vector_value_funct": 231, "15625": 231, "emploi": [231, 298, 301], "regions_funct": 231, "And": [231, 304, 305, 315, 321], "region_valu": 231, "explicit": [231, 306, 309], "new_mesh": 231, "new_field": 231, "coord_field": 231, "specialis": 232, "convenic": 232, "usecas": 232, "focus": 232, "triangul": 232, "triangl": 232, "everywher": [232, 233], "useful": [232, 239], "cancel": 232, "angles_x": 232, "neighbouring_cell_angl": 232, "angles_i": 232, "treat": [232, 330], "angle_max": 232, "max_neighbouring_cell_angl": 232, "threashold": 232, "connect": 232, "count_large_cell_angle_region": 232, "design": [233, 248, 249, 254, 329, 331, 334], "recogn": 233, "pivot": 233, "role": [233, 249], "delv": 233, "variou": [233, 291, 299], "shed": 233, "fact": 233, "multidimension": 233, "field_2": 233, "utilis": [233, 246], "modif": 233, "convent": [233, 331], "field_3": 233, "attent": 233, "logic": 233, "AND": 233, "982466": 234, "610991": 234, "103417": 234, "537999": 234, "155126": 234, "306999": 234, "041667e": 234, "958333e": 234, "978240": 234, "074002": 234, "115087": 234, "067530": 234, "172630": 234, "601295": 234, "083333e": 234, "916667e": 234, "972305": 234, "585328": 234, "129640": 234, "744710": 234, "194461": 234, "117066": 234, "125000e": 234, "875000e": 234, "963624": 234, "111659": 234, "148249": 234, "863332": 234, "222374": 234, "794998": 234, "166667e": 234, "950255": 234, "268139": 234, "172773": 234, "685116": 234, "259160": 234, "527674": 234, "208333e": 234, "791667e": 234, "928279": 234, "121633": 234, "206284": 234, "249252": 234, "309426": 234, "373878": 234, "250000e": [234, 320], "750000e": 234, "889000": 234, "889001": 234, "254000": 234, "381000": 234, "381001": 234, "291667e": 234, "708333e": 234, "811107": 234, "105654": 234, "324442": 234, "842262": 234, "486664": 234, "263392": 234, "333333e": 234, "666667e": 234, "639602": 234, "149067": 234, "426401": 234, "432711": 234, "375000e": 234, "267261": 234, "241912": 234, "534522": 234, "483825": 234, "801783": 234, "725737": 234, "145833e": 234, "458333e": 234, "500000e": [234, 255, 256, 280, 282, 320, 326], "354167e": 234, "541667e": 234, "583333e": 234, "562500e": 234, "625000e": 234, "770833e": 234, "979167e": 234, "985578": 234, "834374": 234, "93864": 234, "650893": 234, "140796": 234, "976339": 234, "187500e": 234, "987934": 234, "593051": 234, "85907": 234, "355918": 234, "128861": 234, "033876": 234, "989759": 234, "478081": 234, "79180": 234, "758246": 234, "118771": 234, "137370": 234, "395833e": 234, "991201": 234, "182589": 234, "73422": 234, "309821": 234, "110133": 234, "464732": 234, "992359": 234, "570702": 234, "68438": 234, "591083": 234, "102657": 234, "886624": 234, "xval": 234, "yval": 234, "zval": 234, "marker": [234, 239, 240, 245, 283, 311, 327], "deal": 235, "chunk": 235, "cube": [235, 250, 298, 302, 303, 307, 328], "piec": [235, 282], "decid": [235, 267], "0e": [235, 237, 239, 243, 277], "exactli": [235, 286, 308], "whatsoev": 235, "saw": [235, 308], "lenght": [235, 240, 283], "conclud": 235, "0x7f187843d3c0": 235, "fifth": 235, "thing": [235, 258, 259, 262, 282, 315, 328], "75e": [235, 255], "6e": [235, 237, 247, 248, 249, 250, 251, 252, 254, 255, 292, 299, 304, 306, 314, 320, 332], "71e": 235, "0000000000000004e": [235, 237], "000000000000001e": [235, 237], "8e": [235, 237, 255, 300, 327, 329], "mesh_sam": 235, "mesh_differ": 235, "9999999": 235, "00000002": 235, "4999999625": 235, "375e": 235, "dictat": 235, "strict": 235, "4d": 235, "x0": [235, 243], "boudari": 236, "At": [236, 280, 328], "futur": [236, 336], "0x7f856491c970": 237, "2000000000000002e": 237, "4000000000000001e": 237, "8000000000000002e": 237, "usual": [237, 240, 242, 245, 249, 250, 261, 269, 272, 300, 302, 307, 311, 321, 329], "later": [237, 239, 240, 245, 267, 268, 270, 271, 274, 276, 318, 328], "disctionari": 238, "life": 239, "dash": [239, 240, 245, 311], "bottom_subregion": 239, "top_subregion": 239, "lx": [239, 299, 300, 301], "lz": [239, 299, 300, 301], "bottom_region": 239, "top_region": 239, "lot": [239, 287, 331], "regard": 239, "800": [239, 272, 299, 311], "400": [239, 279, 280, 305, 311, 321, 325, 326], "k3d_subregion": 239, "rgb": [239, 240, 245], "hex": [239, 240, 245], "onlin": [239, 240, 245, 324, 334], "cycl": 239, "f33f00": 239, "0000cf": 239, "micro": [239, 240, 245, 283, 292], "mu": [239, 240, 245, 332], "_as_gen": [239, 240, 245, 283], "__": [239, 240, 245, 246, 283], "customis": [239, 240, 245, 281, 283], "ourselv": [239, 240, 245, 283, 328], "set_zlabel": [239, 240, 245], "alltogeth": 239, "12345": 239, "54321": 239, "trick": [240, 245], "matploltlib": [240, 245], "proport": [240, 245], "thinner": [240, 245, 248], "impress": [240, 245], "disadvatag": [240, 245], "zoom": [240, 245], "contol": [240, 245], "pair": [240, 321, 323], "9400d3": [240, 245], "0000ff": 240, "754321": 240, "123456": 240, "opac": [240, 245], "slide": 241, "picomet": 241, "menu": 241, "radio": 241, "button": 241, "python3": [242, 304, 314, 317, 332, 335], "messag": [242, 289], "exit": [242, 248], "simplest": [242, 248, 326, 327], "fie": 242, "infil": 242, "simplic": [243, 249], "alia": [243, 244, 245, 331], "obvious": 243, "999999999999998e": 243, "200e": [243, 329], "region_sam": 243, "region_differ": 243, "\u03bcm": 243, "region_1d": 243, "xn": 243, "thought": 245, "654321": 245, "dev": [246, 335], "en": 246, "multi": [246, 333], "candid": 246, "metadata": [246, 277], "x27": [246, 255], "12xarrai": 246, "2z": 246, "2vdim": 246, "0arrai": 246, "float642": [246, 255], "09unit": 246, "marrai": [246, 255], "xpandasindexpandasindex": [246, 255], "500000000000001e": [246, 255], "ypandasindexpandasindex": [246, 255], "zpandasindexpandasindex": [246, 255], "vdimspandasindexpandasindex": [246, 255], "nonecel": 246, "3tolerance_factor": 246, "prove": 246, "xarray_2": 246, "field_new": 246, "xdr": 246, "09arrai": 246, "3cell": 246, "field_xdr": 246, "entri": 246, "lastli": 246, "advis": 246, "softwar": [247, 248, 253, 333], "magnetomet": 247, "varieti": [247, 329, 332], "vibrat": 247, "superconduct": 247, "quantum": [247, 248], "interfer": [247, 248, 254, 329], "devic": 247, "abil": [247, 251, 254], "congruent": [247, 251, 253], "inlin": [247, 248, 252, 333], "seed": [247, 248, 249, 251, 252, 253, 254, 312, 313, 315, 321, 329], "150e": [247, 248, 252, 253, 254, 319, 325], "m_fun": [247, 248, 249, 251, 252, 254, 268, 270, 271, 274, 276, 312, 318, 329], "rand": [247, 248, 249, 251, 252, 254, 329], "minim": [247, 248, 249, 250, 251, 252, 253, 254, 301, 304, 314, 324, 327], "net": 247, "3518": 247, "05948763": 247, "8389": 247, "38785114": 247, "25604": 247, "58114354": 247, "mimic": [247, 329], "procedur": 247, "mag_arr": 247, "h_arr": 247, "linspac": [247, 253, 298, 329], "recov": [248, 329], "incid": [248, 251, 254, 329], "particl": [248, 298], "deflect": [248, 250, 329], "specimen": 248, "travel": [248, 329], "excess": 248, "defici": 248, "blank": 248, "wire": 248, "biprism": 248, "bring": 248, "worth": 248, "veloc": [248, 260, 300, 305, 321, 325], "magntic": [248, 249, 251], "51e6": [248, 254, 304, 306], "2e5": [248, 249, 250, 251, 252, 254, 304, 306], "ref": [248, 252, 254, 298, 299, 300, 301], "beleggia": 248, "2010": 248, "singular": 248, "view": [248, 250, 251, 252, 254, 311, 319, 321], "grai": [248, 251, 252, 329], "quick_plot": [248, 249, 250, 254, 329], "easi": [248, 249, 254, 298, 305, 321, 325, 329, 332], "intermediari": [248, 249, 254], "hood": [248, 249, 254], "theme": [248, 249, 254], "ltem_phas": 248, "circl": 248, "high": [248, 251, 252, 253], "obliter": 248, "signific": [248, 277], "angular": [248, 251, 252], "ellips": 248, "centre_region": 248, "30e6": 248, "add_patch": 248, "edgecolor": 248, "facecolor": 248, "frameon": 248, "ltem_ft_phas": 248, "free": [248, 310, 321, 334], "bonevich": 248, "1994": 248, "electromagnet": 248, "featureless": 248, "ltem_defocus_imag": 248, "ltem_defocu": [248, 250], "rule": [248, 291], "thumb": 248, "rm": [248, 253, 277], "1f": 248, "tanas": 248, "2009": 248, "ltem_integrated_mfd": 248, "flat": 249, "dual": 249, "raster": 249, "scan": 249, "topographi": 249, "tap": 249, "omega_0": 249, "kazakova": 249, "lift": 249, "z_0": 249, "probe": [249, 329], "characteris": [249, 329], "ten": 249, "nanometr": [249, 329], "put": [249, 281, 313], "m_field": 249, "harmon": 249, "motion": [249, 297, 321], "rememb": [249, 334, 335], "sub_region": 249, "phase_shift_2": 249, "phase_shift_3": 249, "recreat": [249, 251], "convolv": 249, "conv_phas": 249, "gaussian_filt": 249, "mfm_phase_shift": 249, "boundarynorm": 249, "sub_phas": 249, "conv_mag2exp": 249, "ncolor": 249, "256": 249, "n\u00e9el": 250, "magentis": [250, 328], "knowledg": [250, 254], "topic": [250, 254], "rho_func": 250, "s_size": 250, "differnt": 250, "phi_func": 250, "n_top": 250, "m_fun_2": 250, "theta": [250, 331], "arctan2": 250, "box": [250, 303], "overal": 250, "break": [250, 301, 304, 314], "reciproc": [251, 252], "mesoscop": [251, 252], "atom": [251, 332], "impact": 251, "approxim": [251, 252, 254, 331], "m\u00fchlbauer": 251, "predict": [251, 329], "160e": 251, "logarithm": [251, 252], "diffract": [251, 252], "lognorm": [251, 252], "sans_region": 251, "40e6": [251, 252], "2i": 251, "asymmetri": 251, "circularli": [252, 254, 329], "absorb": [252, 254], "tune": [252, 254, 299], "absorpt": [252, 254], "van": 252, "der": 252, "laan": 252, "300e": 252, "1e40": 252, "saxs_region": 252, "rewritten": 253, "65e5": 253, "h_mag": [253, 329], "38e6": [253, 329], "78e": [253, 308, 319, 327], "18e6": 253, "torque_val_x": [253, 329], "full_lik": [253, 329], "torque_val_i": 253, "torque_val_z": 253, "enumer": [253, 329], "hline": 253, "xmin": 253, "set_xlim": [253, 329], "jackson": 253, "classic": 253, "electrodynam": 253, "1999": 253, "dunsmor": 253, "coupl": [253, 313, 315], "nife": 253, "coo": 253, "bilay": 253, "aip": 253, "coher": [254, 329], "slit": [254, 329], "hologram": [254, 329], "detector": [254, 329], "duckworth": 254, "2011": [254, 332], "turnbul": 254, "holo": [254, 329], "rdbu": 254, "holo2": 254, "x_ray_holographi": [254, 329], "creata": [255, 256], "setopt": 255, "basenam": 255, "scalar_output_format": 255, "12g": 255, "scalar_field_output_format": 255, "vector_field_output_format": 255, "boxatla": 255, "total_atla": 255, "oxs_boxatla": 255, "xrang": 255, "yrang": 255, "zrang": 255, "entire_atla": 255, "multiatla": 255, "oxs_multiatla": 255, "main_atla": 255, "atla": 255, "rectangularmesh": 255, "oxs_rectangularmesh": 255, "cellsiz": [255, 298], "uniformexchang": [255, 279], "oxs_uniformexchang": 255, "fixedzeeman": 255, "oxs_fixedzeeman": 255, "oxs_filevectorfield": 255, "m0_norm": 255, "oxs_vecmagscalarfield": 255, "cgevolv": 255, "destin": 255, "mmarchiv": 255, "datat": [255, 299, 326], "drive_select": 255, "50067876e": 255, "98022376e": 255, "73831082e": 255, "33701946e": 255, "65389694e": 255, "00000000e": 255, "nonexarrai": 255, "14x": 255, "20y": 255, "10z": 255, "4vdim": 255, "501e": 255, "98e": 255, "738e": 255, "337e": 255, "654e": 255, "05arrai": 255, "08unit": 255, "float640": 255, "0unit": 255, "7499999999999995e": 255, "249999999999999e": 255, "7499999999999998e": 255, "5000000000000025e": 255, "499999999999996e": 255, "499999999999994e": 255, "749999999999999e": 255, "2499999999999996e": 255, "7499999999999988e": 255, "499999999999998e": 255, "4999999999999992e": 255, "500000000000004e": 255, "2500000000000003e": 255, "iterationpandasindexpandasindex": 255, "6date": 255, "07time": 255, "26driver": 255, "mindrivern_thread": 255, "side": 255, "290": 255, "27584": 255, "49540021": 255, "658579": 255, "77501927": 255, "453334": 255, "06616874": 255, "797212": 255, "875": 255, "51317": 255, "65625": 255, "42639": 255, "36328125": 255, "423e": 255, "445e": 255, "466e": 255, "timedriverxarrai": 255, "290x": 255, "758e": 255, "586e": 255, "533e": 255, "972e": 255, "132e": 255, "264e": 255, "04arrai": 255, "float641": 255, "10unit": 255, "sarrai": 255, "423237e": 255, "444648e": 255, "466095e": 255, "tpandasindexpandasindex": 255, "274341343923693e": 255, "295508787856869e": 255, "316709274718813e": 255, "337945031788918e": 255, "35921453911558e": 255, "380518487416173e": 255, "40186032847568e": 255, "423237090369723e": 255, "444647973734903e": 255, "466094681270549e": 255, "logo": 256, "time_dr": [256, 325], "colorlimit": 256, "800000": 256, "throughout": [256, 332], "full_time_dr": 256, "resulut": 256, "coarser": 256, "seri": 256, "5th": 256, "familiar": [256, 323], "afterward": [256, 321], "time_drive_tcd_1": 256, "repeat": [256, 321, 326], "select_plan": 256, "time_drive_tcd_2": 256, "funtion": 256, "explanatori": 256, "__main__": 256, "hmin": [256, 311], "hmax": [256, 311], "795774": [256, 311], "7154594767": [256, 311], "stage": [256, 269, 272, 279, 280, 300, 309, 311, 312, 320, 326], "fundament": 257, "me": 257, "kb": 257, "mub": 257, "specialdynam": 258, "xi": 258, "ge": [258, 259, 332], "sd": 258, "_reprlatex": [258, 259], "dmdt": 258, "specialenergi": 259, "se": 259, "valid_nam": 259, "211e5": [260, 280, 299, 300, 301, 305, 321, 325, 326], "221100": 260, "adiabat": [260, 300, 305, 321, 325], "mydynamicsterm": 260, "hamiltonian": [260, 261, 268, 270, 271, 274, 276, 299, 300, 301, 302, 304, 314, 326, 327, 332], "nydynamicsterm": 260, "arbitratri": 261, "ghz": [261, 301, 316, 317, 321], "zeeman_sin": 261, "1000000000": [261, 292], "zeeman_sinc": 261, "100000": [261, 312], "1e3": [261, 274, 302, 307], "dm": [261, 270, 279, 327], "mandatori": [261, 330], "dmi_cnv_x": 261, "dmi_cnv_i": 261, "dmi_t": 261, "dmi_d2d_x": 261, "dmi_d2d_i": 261, "dmi_d2d_z": 261, "sigma_": 261, "subregion1": [261, 318], "subregion2": [261, 318], "0001": 261, "dzyaloshinkii": [261, 305, 321, 325, 335], "myenergi": 261, "myexchang": 261, "Their": 262, "mydriv": 262, "_x": 262, "arg1": 262, "arg2": 262, "_allowed_kwarg": 262, "rase": 262, "arg3": 262, "externaldriv": 262, "zeeman1": [263, 312], "zeeman2": [263, 312], "my_zeeman_term": 263, "entiti": 264, "discretisationfield": 264, "mysystem": 264, "times10": [265, 268, 270, 271, 274, 276, 312, 318, 327], "3e5": 265, "colon": [265, 313], "ot": [265, 272], "trivial": 265, "manner": 265, "testdmi": 266, "testexchang": 266, "conftest": 266, "fixtur": 266, "pytest": 266, "scope": 266, "global": 267, "member": 267, "ex": [267, 298, 306, 327, 332, 335], "cloud": [267, 306], "destroi": [267, 306], "happen": [267, 269, 306, 326], "background": [267, 269, 280, 306], "desktop": [267, 306], "delai": [267, 306], "ubermagdev310": [267, 278, 304, 314, 317, 332], "tcloommfrunn": [267, 306], "couldn": [267, 306], "441": 267, "438": 267, "setter": [267, 287], "439": 267, "440": 267, "442": 267, "_runner": 267, "expectedli": 267, "paragraph": 267, "choosen": [267, 321], "search": 267, "sucessfulli": 267, "tend": [268, 270, 271, 274, 276, 327], "antiparallel": [268, 274, 312, 327], "chain": [268, 270, 271, 274, 276, 312, 318, 320, 327], "cubicanisotropy_constant_k_u": 268, "jm": [268, 270, 271, 274, 332], "cubicanisotropy_dict_k": 268, "spatailli": [268, 274], "nbsphinx": [268, 271, 274], "k_fun": 268, "cubicanisotropy_field_u": 268, "organis": 269, "my_simul": 269, "instruct": [269, 324, 335], "my_project": 269, "isdir": 269, "max_mxhxm": [269, 272, 311, 312], "delta_": [269, 272, 279, 280, 299, 309, 311, 312, 320, 326], "bracket_count": [269, 272, 311, 312], "line_min_count": [269, 272, 311, 312], "conjugate_cycle_count": [269, 272, 311, 312], "cycle_count": [269, 272, 311, 312], "cycle_sub_count": [269, 272, 311, 312], "energy_calc_count": [269, 272, 311, 312], "e_zeeman": [269, 272, 280, 299, 317, 320, 326], "stage_iter": [269, 272, 279, 280, 299, 309, 311, 312, 320, 326], "733391e": 269, "785840e": 269, "350143e": 269, "ll": 270, "nv": [270, 327], "dzyaloshinksii": 270, "dmi_constant_d": 270, "orthogon": 270, "unlik": [270, 271], "dmi_dict_d": 270, "exchange_constant_a": 271, "exchange_dict_a": 271, "allign": 271, "a_fun": 271, "exchange_field_a": 271, "mindriver_step": [272, 273], "relex": 272, "000000": 272, "999996e": 272, "206285e": 272, "000873": 272, "848078e": 272, "400340e": 272, "388277e": 272, "173648": 272, "396926e": 272, "727747e": 272, "327407e": 272, "342020": 272, "660254e": 272, "911504e": 272, "183757e": 272, "500000": 272, "660444e": 272, "885258e": 272, "973754e": 272, "642788": 272, "427876e": 272, "058904e": 272, "703780e": 272, "766044": 272, "197108e": 272, "382038e": 272, "866025": 272, "464669e": 272, "296684e": 272, "957653e": 272, "938062": 272, "420201e": 272, "298938e": 272, "253721e": 272, "939693": 272, "981052e": 272, "354905e": 272, "596679e": 272, "980181": 272, "736482e": 272, "361301e": 272, "395896e": 272, "984808": 272, "305027e": 272, "379550e": 272, "824996e": 272, "998010": 272, "143399e": 272, "382301e": 272, "750291e": 272, "fecault": 272, "creationg": 272, "frame_width": 272, "uniaxialanisotropy_constant_k_u": 274, "uniaxialanisotropy_dict_k": 274, "u_fun": 274, "uniaxialanisotropy_field_u": 274, "uniaxialanisotropy_higher_ord": 274, "screen": [275, 289], "sole": 275, "accross": 275, "cleanup": [275, 277], "zeeman_constant_h": [276, 318], "zeeman_dict_h": [276, 318], "h_fun": [276, 318], "zeeman_field_h": [276, 318], "root": [277, 298, 331, 335], "utc": 277, "iso": 277, "8601": 277, "involv": [277, 329], "__version__": [277, 278, 333], "h5glanc": 277, "nest": 277, "hdf5_exampl": 277, "20t13": 277, "subregion_nam": 277, "utf": 277, "enum": 277, "mark": [277, 312, 331], "h5py": 277, "field_1d_scalar": 277, "field_1d": 277, "field_1d_vector": 277, "sr1": 277, "sr2": 277, "init_norm": 277, "field_3d": 277, "privat": 277, "_h5_save_structur": 277, "_h5_save_data": 277, "former": 277, "latter": 277, "lack": [277, 329], "metapackag": [278, 289], "debug_info": 278, "forg": [278, 335], "jun": 278, "gcc": 278, "e_calc_count": [279, 280, 299, 309, 320, 326], "max_dmdt": [279, 309], "average_u": [279, 321], "e_exchang": [279, 299, 311, 320], "max_spin_ang_exchang": [279, 299, 320], "stage_max_spin_ang_exchang": [279, 299, 320], "run_max_spin_ang_exchang": [279, 299, 320], "e_dmi": 279, "e_uniaxialanisotropi": 279, "last_time_step": [279, 280, 299, 309, 320, 326], "138757e": 279, "5105": 279, "786662": 279, "131548e": 279, "234439e": 279, "819720e": 279, "981919": 279, "791404e": 279, "955566e": 279, "004356": 279, "001711": 279, "779309": 279, "146802e": 279, "123365e": 279, "92": 279, "5393": 279, "820357": 279, "881778e": 279, "714936e": 279, "859070e": 279, "999114": 279, "795166e": 279, "969222e": 279, "007399": 279, "002527": 279, "779212": 279, "481817e": 279, "101629e": 279, "5478": 279, "105937": 279, "410525e": 279, "525909e": 279, "908188e": 279, "839540": 279, "800156e": 279, "991741e": 279, "010058": 279, "002596": 279, "779103": 279, "371456e": 279, "075651e": 279, "5775": 279, "596117": 279, "750961e": 279, "026333e": 279, "963184e": 279, "523018": 279, "806035e": 279, "021517e": 279, "012243": 279, "002078": 279, "779037": 279, "397143e": 279, "046980e": 279, "209": 279, "6099": 279, "408455": 279, "938665e": 279, "417659e": 279, "020796e": 279, "968494": 279, "812650e": 279, "058726e": 279, "013915": 279, "001139": 279, "779058": 279, "838847e": 279, "195": [279, 280, 299, 320, 326], "666219e": 279, "7786": 279, "6419": 279, "713717": 279, "798949e": 279, "373560e": 279, "222876e": 279, "279242": 279, "396487": 279, "740702": 279, "937412e": 279, "678731e": 279, "1372": 279, "007893": 279, "008017": 279, "899229": 279, "094469e": 279, "960000e": 279, "634379e": 279, "7829": 279, "6444": 279, "188876": 279, "763562e": 279, "564748e": 279, "222846e": 279, "358338": 279, "936677e": 279, "674871e": 279, "1379": 279, "007885": 279, "008007": 279, "899298": 279, "044352e": 279, "970000e": 279, "197": [279, 280, 289, 299, 320, 326], "601751e": 279, "7866": 279, "6397": 279, "295744": 279, "905618e": 279, "926693e": 279, "222790e": 279, "418283": 279, "935846e": 279, "670387e": 279, "1386": 279, "007876": 279, "007998": 279, "899383": 279, "101084e": 279, "980000e": 279, "568193e": 279, "7909": 279, "6374": 279, "587944": 279, "124776e": 279, "795553e": 279, "222710e": 279, "397007": 279, "419861": 279, "934920e": 279, "665281e": 279, "1393": 279, "007866": 279, "007989": 279, "899482": 279, "961504e": 279, "990000e": 279, "199": [279, 280, 299, 320, 326], "533615e": 279, "7946": 279, "6479": 279, "674566": 279, "377564e": 279, "490729e": 279, "222607e": 279, "301311": 279, "933899e": 279, "659556e": 279, "1400": 279, "007854": 279, "007981": 279, "899595": 279, "547542e": 279, "shorten": 279, "table_not_renam": 279, "spintevolv": 279, "ang": 279, "knew": 279, "phenomena": 280, "8e6": [280, 313, 315, 326, 327, 328, 330], "indepent": 280, "max_dm": [280, 299, 320, 326], "400762e": [280, 326], "25204": [280, 326], "415522": [280, 326], "798712e": [280, 326], "269612e": [280, 326], "975901": [280, 326], "217115": [280, 326], "021888": [280, 326], "715017e": [280, 326], "797309e": [280, 326], "25186": [280, 326], "311578": [280, 326], "786077e": [280, 326], "396547e": [280, 326], "904810": [280, 326], "423562": [280, 326], "043754": [280, 326], "318544e": [280, 326], "25156": [280, 326], "186455": [280, 326], "765071e": [280, 326], "388134e": [280, 326], "790286": [280, 326], "609218": [280, 326], "065579": [280, 326], "756100e": [280, 326], "25114": [280, 326], "112032": [280, 326], "735776e": [280, 326], "375555e": [280, 326], "638055": [280, 326], "765021": [280, 326], "087341": [280, 326], "191985e": [280, 326], "25060": [280, 326], "188355": [280, 326], "698302e": [280, 326], "358857e": [280, 326], "455710": [280, 326], "883427": [280, 326], "109020": [280, 326], "009865e": [280, 326], "1402": [280, 326], "690": [280, 326], "438568": [280, 326], "602614e": [280, 326], "374608e": [280, 326], "396": [280, 326], "013011": [280, 326], "024099": [280, 326], "999625": [280, 326], "800000e": [280, 282, 299, 326], "009897e": [280, 326], "1409": [280, 326], "675": [280, 326], "493807": [280, 326], "319876e": [280, 326], "230101e": [280, 326], "398": [280, 326], "017545": [280, 326], "020251": [280, 326], "999641": [280, 326], "850000e": [280, 299, 326], "009928e": [280, 326], "1416": [280, 326], "660": [280, 326], "872303": [280, 326], "049242e": [280, 326], "091780e": [280, 326], "021059": [280, 326], "015612": [280, 326], "999656": [280, 326], "900000e": [280, 282, 299, 320, 326], "009958e": [280, 326], "1423": [280, 326], "646": [280, 326], "567078": [280, 326], "790193e": [280, 326], "959381e": [280, 326], "402": [280, 326], "023428": [280, 326], "010435": [280, 326], "999671": [280, 326], "950000e": [280, 299, 320, 326], "009986e": [280, 326], "632": [280, 326], "571305": [280, 326], "542233e": [280, 326], "832649e": [280, 326], "404": [280, 326], "024591": [280, 326], "004988": [280, 326], "999685": [280, 326], "ft_mx": 280, "ft_my": 280, "521315": 280, "000000j": 280, "487159": 280, "543484": 280, "663425j": 280, "585720": 280, "150552j": 280, "616125": 280, "426352j": 280, "912330": 280, "322464j": 280, "759313": 280, "452269j": 280, "590649": 280, "544779j": 280, "989438": 280, "140613j": 280, "995293": 280, "839505j": 280, "600000e": [280, 282], "487614": 280, "030294j": 280, "055860": 280, "006899j": 280, "97": 280, "700000e": [280, 282], "487593": 280, "022707j": 280, "055952": 280, "005171j": 280, "98": 280, "487579": 280, "015131j": 280, "056017": 280, "003446j": 280, "487570": 280, "007564j": 280, "056056": 280, "001722j": 280, "487567": 280, "056069": 280, "ft_mz": 280, "168": 280, "841749": 280, "166086": 280, "032844j": 280, "088546": 280, "908290j": 280, "313478": 280, "167120j": 280, "9890680": 280, "7393600j": 280, "4943940": 280, "0307590j": 280, "4943850": 280, "0230560j": 280, "4943780": 280, "0153640j": 280, "4943740": 280, "0076800j": 280, "4943730": 280, "0000000j": 280, "my_interactive_plot": 281, "ctrl": 281, "4999999999999994e": 282, "999999999999999e": 282, "monoton": 282, "100000e": 282, "200000e": 282, "300000e": 282, "400000e": 282, "restrict": [283, 284], "12e": [283, 315], "forbid": [285, 291], "person": 285, "clerk": 285, "maxwel": 285, "fuinction": 286, "hysteresis_valu": 286, "_a": 287, "repetit": 287, "myclass": 287, "reject": [287, 291], "ihnerit": 288, "method1": 288, "method2": 288, "blass": 288, "howto": 289, "setup": [289, 334], "wanr": 289, "martin": [289, 334], "phd": 289, "510": 289, "523": 289, "548": 289, "554": 289, "ouput": 289, "ubermagdev": 289, "201": 289, "573": 289, "279": 289, "575": 289, "completedprocess": 289, "boxsi": 289, "fg": 289, "exitondon": 289, "kill": 289, "returncod": 289, "stderr": 289, "51622": 289, "noommf": 289, "lookup": 289, "failur": [289, 321], "156": 289, "157": 289, "244": 289, "51659": 289, "otheriws": 290, "satisi": 291, "weather": 291, "pico": 292, "mega": 292, "si_prefix": 292, "ordereddict": 292, "1000000000000": 292, "1000000000000000": 292, "inherit_doc": 296, "tailor": [297, 334], "concis": 297, "fmr": 297, "induc": 297, "wall": [297, 310, 321, 323], "flower": 298, "splai": 298, "intrins": 298, "magnetostat": 298, "initiais": 298, "m_init_flow": 298, "norm_squar": 298, "m_init_vortex": 298, "minimise_system_energi": 298, "__name__": 298, "cubes": 298, "lex": 298, "km": 298, "stdprob3": 298, "occurr": 298, "l_arrai": 298, "vortex_energi": 298, "flower_energi": 298, "4l_": 298, "6l_": 298, "bisect": 298, "energy_differ": 298, "xtol": 298, "nthe": 298, "425": 298, "4375": 298, "\u00b5mag": [298, 299, 300], "site": [298, 299, 300, 304, 314, 317, 332], "ctcm": [298, 299, 300], "rdm": [298, 299, 300], "mumag": [298, 299, 300], "125": [299, 331], "underbrac": [299, 326], "equlibrium": [299, 328], "125e": 299, "stdprob4": 299, "littl": 299, "bit": [299, 321, 335], "resulot": 299, "ni": 299, "73766211e": 299, "98568590e": 299, "15994532e": 299, "99979276e": 299, "75829308e": 299, "03057845e": 299, "h1": [299, 312], "drove": 299, "e_demag": 299, "676342e": 299, "3736": 299, "1162": 299, "540569": 299, "697359e": 299, "278389e": 299, "548545e": 299, "913558": 299, "281302": 299, "612838": 299, "530166e": 299, "624844e": 299, "784": 299, "984260": 299, "010971": 299, "033987": 299, "374339e": 299, "685463e": 299, "3755": 299, "1260": 299, "312851": 299, "935225e": 299, "621610e": 299, "637446e": 299, "157988": 299, "844369e": 299, "656275e": 299, "788": 299, "987086": 299, "021592": 299, "039286": 299, "373845e": 299, "695498e": 299, "3774": 299, "1384": 299, "782329": 299, "057789e": 299, "813912e": 299, "039753e": 299, "727728": 299, "074607e": 299, "683357e": 299, "792": 299, "988092": 299, "057824": 299, "042604": 299, "373937e": 299, "705827e": 299, "3793": 299, "1351": 299, "611492": 299, "053171e": 299, "832075e": 299, "586011e": 299, "669400": 299, "772024": 299, "220444e": 299, "703732e": 299, "796": 299, "986964": 299, "095870": 299, "043794": 299, "374355e": 299, "715833e": 299, "3812": 299, "1191": 299, "086303": 299, "931645e": 299, "687311e": 299, "141300e": 299, "354488": 299, "291427e": 299, "716389e": 299, "983765": 299, "133793": 299, "042832": 299, "375197e": 299, "snap": 299, "shot": 299, "fluctuat": 299, "pydata": 299, "u_": 300, "ux": [300, 305, 321, 325], "stdprob5": 300, "m_vortex": 300, "displac": 300, "choic": 301, "irregular": 301, "neglect": [301, 321], "008": 301, "bia": 301, "ka": 301, "715": 301, "degener": 301, "eigenmod": 301, "converg": 301, "equilibrium": 301, "quasistat": 301, "alter": 301, "record": [301, 329, 334], "120e": [301, 330], "8e4": 301, "81345856316858023": 301, "58162287266553481": 301, "stdprobfmr": 301, "81923192051904048": 301, "57346234436332832": 301, "4000": 301, "log10": [301, 331], "f_axi": 301, "fftfreq": 301, "psa": 301, "baker": 301, "beg": [301, 319, 334], "ashton": 301, "chernyshenko": 301, "wang": 301, "bisotti": 301, "franchin": 301, "hu": 301, "stamp": 301, "hesjed": 301, "fangohr": [301, 333, 334, 335, 336], "magn": 301, "mater": 301, "421": 301, "2017": 301, "intialis": [302, 307], "hex_eff": [302, 307], "3470795322e": [302, 307], "35285533145e": [302, 307], "12170191751e": [302, 307], "total_energi": [302, 307], "352855331462e": [302, 307], "edgl": 303, "airbox_method": 303, "stray_field": 303, "confin": 304, "cylindr": 304, "50nm": 304, "10nm": [304, 314], "magnets": [304, 314], "lib": [304, 314, 317, 332], "645": [304, 314, 317], "runtimewarn": [304, 314, 317], "widthu_per_lenu": [304, 314, 317], "49e": [304, 314], "mj": [305, 325], "domain_wall_pair": 305, "dw": [305, 321], "m_valu": [305, 321, 330], "solut": [305, 326, 330], "domain_wal": [305, 321], "tcl_runner": 306, "exe_runn": 306, "tell": 306, "energy_comput": 307, "m3": 307, "heff": [307, 308], "simpler": [307, 321], "84e5": [308, 319, 327], "58e": [308, 319, 327], "m_initi": [308, 327], "wdf": 308, "wmc": 308, "edf": 308, "emc": 308, "rerr": 308, "03472186e": 308, "03472185984e": 308, "62901158e": 308, "hdf": 308, "hmc": 308, "2k": 308, "0433559e": 308, "04335590117e": 308, "9679366e": 308, "2a": 308, "74383742e": 308, "74383742377e": 308, "26145966e": 308, "volume_integr": 308, "35058832e": 308, "35058832385e": 308, "88329253e": 308, "heff_funct": 308, "dmdt_function": 308, "soon": 309, "publish": 309, "60k": 309, "1700e3": 309, "timestep": [309, 321], "offici": [309, 335], "68871": 309, "265081": 309, "842372": 309, "002361": 309, "003408": 309, "102": 309, "69924": 309, "226300": 309, "710945": 309, "001004": 309, "001404": 309, "78886": 309, "820644": 309, "152": 309, "600855": 309, "002175": 309, "005869": 309, "204": 309, "67798": 309, "361453": 309, "203": 309, "502902": 309, "003426": 309, "002623": 309, "255": 309, "75905": 309, "774117": 309, "254": 309, "425940": 309, "003645": 309, "007141": 309, "fixed1": 310, "fixed2": 310, "fixed_spin": 310, "duri": 310, "neel": 310, "081187": 311, "296243e": 311, "944305e": 311, "178506e": 311, "890111e": 311, "478572e": 311, "998400": 311, "079349": 311, "769135e": 311, "888609e": 311, "301416e": 311, "900": 311, "375221e": 311, "067033e": 311, "998216": 311, "056383": 311, "242133e": 311, "860761e": 311, "445097e": 311, "584726e": 311, "167584e": 311, "997999": 311, "086409": 311, "715256e": 311, "972152e": 311, "614662e": 311, "700": 311, "652693e": 311, "100550e": 311, "997739": 311, "053104": 311, "188531e": 311, "816966e": 311, "600": 311, "166650e": 311, "997422": 311, "bz": 311, "h2": 312, "multiple_term": 312, "115": 312, "113": 312, "_container_class": 312, "378": 312, "369": 312, "370": 312, "__class__": 312, "371": 312, "_term": 312, "372": 312, "373": 312, "374": 312, "375": 312, "376": 312, "377": 312, "379": 312, "380": 312, "e_zeeman_zeeman1": 312, "e_zeeman_zeeman2": 312, "003228": 312, "843445e": 312, "222237e": 312, "421723e": 312, "707107": 312, "445158e": 312, "gave": 312, "plan": [313, 335, 336], "antiferomagnet": 313, "r3": 313, "negative_a": 313, "adict": 313, "m_random": 313, "antiferromagnet": [313, 315], "infinit": 314, "92414447": 314, "9241444720743723": 314, "0001397845194369": 314, "spacer": 315, "22e": 315, "sine_hysteresi": 316, "1e2": 316, "2e9": [316, 317], "bz_zeeman": [316, 320, 321], "space_time_varying_field": 317, "hspace": 317, "scientif": [319, 334], "7959": 319, "150": 319, "hb": 319, "ht": 319, "bloch_point": 319, "vortic": 319, "closer": 319, "amp": 320, "time_dependent_field": 320, "by_zeeman": [320, 321], "297563e": 320, "434031e": 320, "147568e": 320, "812700e": 320, "931627e": 320, "897440e": 320, "758989": 320, "183653": 320, "624666": 320, "515634e": 320, "562001e": 320, "766104e": 320, "954602e": 320, "204656e": 320, "766444e": 320, "164967e": 320, "090633": 320, "038564": 320, "995137": 320, "425770e": 320, "759093e": 320, "290846e": 320, "636140e": 320, "221901e": 320, "141003e": 320, "711504e": 320, "784284": 320, "261449": 320, "562622": 320, "631440e": 320, "863542e": 320, "184": 320, "673341e": 320, "207088e": 320, "112468e": 320, "477265e": 320, "215898e": 320, "015202": 320, "010857": 320, "999825": 320, "449728e": 320, "848036e": 320, "299": 320, "014752e": 320, "675974e": 320, "915541e": 320, "777153e": 320, "665730e": 320, "497085": 320, "051994": 320, "866143": 320, "913664e": 320, "436379e": 320, "20614": 320, "906705e": 320, "837992e": 320, "268306e": 320, "3450": 320, "020176": 320, "114665": 320, "993199": 320, "918021e": 320, "422674e": 320, "20687": 320, "474584e": 320, "221479e": 320, "046823e": 320, "3463": 320, "848044": 320, "209072": 320, "486939": 320, "197700e": 320, "925000e": 320, "328011e": 320, "20742": 320, "004530e": 320, "502211e": 320, "083878e": 320, "3473": 320, "063640": 320, "149399": 320, "986727": 320, "412896e": 320, "178128e": 320, "20779": 320, "087140e": 320, "673789e": 320, "358762e": 320, "3480": 320, "822805": 320, "116178": 320, "556322": 320, "059389e": 320, "975000e": 320, "088592e": 320, "20804": 320, "629445e": 320, "731610e": 320, "217703e": 320, "032019e": 320, "048028e": 320, "3485": 320, "041748": 320, "107200": 320, "993361": 320, "687671e": 320, "bx_zeeman": [320, 321], "cardin": 320, "prefactor": 321, "mechan": 321, "nevertheless": 321, "micromagnetimodel": 321, "correstpond": 321, "coars": 321, "somewher": 321, "userguide12b3": 321, "differen": 321, "amplitud": 321, "toi": 321, "exter": 321, "durat": 321, "particularli": 321, "5e4": 321, "ninti": 321, "t_func": 321, "macrospin_puls": 321, "macrospin_pulse_dr": 321, "tion": 321, "offset": 321, "macrospin_sin": 321, "macrospin_sinc": 321, "profil": 321, "artif": 321, "smooth": 321, "t_sampl": 321, "1001": 321, "10n": 321, "10p": 321, "measured_time_depend": 321, "randn": 321, "26263374": 321, "32470813": 321, "18966045": 321, "19483294": 321, "0x7f2ddf90c730": 321, "wrap": 321, "interp": 321, "macrospin_measur": 321, "userguide20a2": 321, "r_": 321, "yy": 321, "zx": 321, "zy": 321, "zz": 321, "h_field": 321, "system_tcl": 321, "custom_tcl": 321, "oxs_transformzeeman": 321, "proc": 321, "timefunct": 321, "total_tim": 321, "expr": 321, "atan": 321, "ct": 321, "mct": 321, "cosin": 321, "mst": 321, "time_func": 321, "5t": 321, "movement": 321, "2e12": 321, "average_j": 321, "influenc": 322, "learn": [323, 324, 334], "exercis": 323, "newer": 324, "anaconda": [324, 335], "prompt": [324, 335], "termin": [324, 335], "pip": [324, 332, 335], "venv": [324, 335], "ubermag_env": [324, 335], "browser": [324, 334], "tab": [324, 335], "ui": 324, "click": 324, "screenshot": 324, "narrow": 325, "constrain": 325, "zhou": 325, "ezawa": 325, "2014": 325, "revers": 325, "junction": 325, "natur": [325, 329, 331], "commun": [325, 332, 333, 334, 335], "1038": 325, "ncomms5652": 325, "dw_pair_convers": 325, "35e": [325, 330], "wider": 325, "excit": 326, "initial_m": 326, "41e6": 326, "intuit": 326, "uniaxial_anisotropi": 327, "6e6": 327, "aniostropi": 327, "preferenti": 327, "aim": [327, 332], "hamiltoninan": 327, "exchange_and_zeeman": 327, "plu": 327, "approx": 327, "exchange_and_dmi": 327, "28e": 327, "00628": 327, "strength": [327, 332], "diamet": [327, 330], "goal": [328, 336], "comfort": 328, "eventu": 328, "skeleton": 328, "difer": 328, "first_ubermag_simul": 328, "simulaton": 328, "mistak": 328, "human": 328, "sligtli": 328, "workshop": [328, 333, 334], "reinitialis": 328, "86015824e": 328, "25800930e": 328, "14204192e": 328, "82519780e": 328, "82251136e": 328, "05391260e": 328, "realist": 329, "world": 329, "virtual": [329, 335], "depth": 329, "mag2exp_demo": 329, "mnsi": 329, "580e3": 329, "corrobor": 329, "popular": [329, 334], "lamella": 329, "textbf": 329, "acquir": 329, "becom": [329, 334], "df_imag": 329, "complmentari": 329, "advantag": 329, "helper": [329, 335], "outcom": 329, "trade": 329, "eas": 329, "against": 329, "wide": 329, "bulk": 329, "hard": 329, "avenu": 329, "computation": 329, "simult": 329, "sequenc": [330, 335], "quantitit": 330, "8000000": 330, "discrectis": 330, "ms_valu": 330, "decim": 331, "quot": 331, "bracket": 331, "send": 331, "3333333333333335": 331, "live": 331, "14159": 331, "65358979335273e": 331, "9999999999964793": 331, "51000": 331, "mutabl": 331, "new_el": 331, "23606798": 331, "41421356": 331, "16227766": 331, "region797": 331, "branch": 331, "sum_of_el": 331, "syntaxerror": 331, "indentationerror": 331, "block": [331, 333], "my_var": 331, "nameerror": 331, "scpy": 331, "typo": 331, "my_object": 331, "signatur": 331, "builtin_function_or_method": 331, "scientist": 331, "engin": [331, 334], "mixtur": 332, "convin": 332, "astropi": 332, "astrophys": 332, "sake": 332, "pyerfa": 332, "pyyaml": 332, "initalis": 332, "gauss": 332, "field2": 332, "magnetic_mo": 332, "erg": 332, "detach": 332, "numerv": 332, "t_k": 332, "temperature_energi": 332, "7296934": 332, "induct": 332, "induction_field": 332, "7957": 332, "7472": 332, "cal": 332, "j_": 332, "_j": 332, "lvert": 332, "rvert": 332, "normais": 332, "curi": 332, "3k_": 332, "garanin": 332, "1996": 332, "tc_to_j": 332, "tc": 332, "t_c": 332, "fcc": 332, "808": 332, "271810024752475e": 332, "correl": 332, "zjl": 332, "12v": 332, "heisenberg": 332, "neighbor": 332, "crystal": 332, "j_to_a": 332, "24e": 332, "922285495270508e": 332, "tc_to_a": 332, "922285495270509e": 332, "zdl": 332, "d_to_d": 332, "01e": 332, "137678571428571e": 332, "helic": 332, "p_to_d": 332, "d_to_p": 332, "7699111843077517e": 332, "converst": 332, "formula": 332, "ms_mub_to_am": 332, "24375e": 332, "33066": 332, "10835716991": 332, "ms_to_mu": 332, "6e5": 332, "3440000000000002e": 332, "k_to_k": 332, "fege": 332, "fe": 332, "6995": 332, "\u00e5": 332, "881": 332, "wilhelm": 332, "2007": 332, "yamada": 332, "2003": 332, "278": 332, "lebech": 332, "1989": 332, "yu": 332, "6995e": 332, "881e": 332, "ms_orig": 332, "70e": 332, "594746713121875e": 332, "382433": 332, "88973569183": 332, "644": 332, "76621650209023e": 332, "000855629185622006": 332, "public": [333, 334], "zulip": [333, 334], "chat": [333, 334], "everyon": 333, "subscrib": [333, 334], "announc": [333, 334], "archiv": 333, "perhap": 333, "ideal": 333, "upload": [333, 334], "confidenti": 333, "backtick": 333, "inline_cod": 333, "excerpt": 333, "chanc": 333, "who": 333, "patient": 333, "repli": 333, "immedi": 333, "suggest": 333, "phrase": 333, "smartquest": 333, "anyon": 333, "fellow": 333, "buid": 333, "micromagnetic simul": 334, "finite differ": 334, "lorentz transmission electron microscopi": 334, "small-angle neutron scatt": 334, "small angle x-ray scatt": 334, "sax": 334, "magnetic force microscopi": 334, "torque magnetometri": 334, "dc magnetometry x-ray holographi": 334, "fluid": 334, "framework": 334, "sit": 334, "\u00fcber": 334, "backend": [334, 335], "ecosystem": 334, "readili": 334, "deleg": 334, "toward": 334, "spacif": 334, "blender": 334, "june": 334, "spintalk": 334, "ieee": 334, "societi": 334, "ieeemagnet": 334, "youtub": 334, "badg": 334, "scratch": 334, "marijan": 334, "lang": 334, "samuel": 334, "holt": 334, "ryan": 334, "pepper": 334, "thoma": 334, "kluyver": 334, "loudon": 334, "hicken": 334, "david": 334, "cort\u00e9": 334, "ortu\u00f1o": 334, "jeroen": 334, "jonathan": 334, "leliaert": 334, "han": 334, "depart": 334, "earth": 334, "scienc": 334, "imperi": 334, "colleg": 334, "london": 334, "sw7": 334, "2az": 334, "kingdom": 334, "faculti": 334, "univers": [334, 336], "southampton": [334, 336], "so17": 334, "1bj": 334, "institut": 334, "matter": 334, "lurup": 334, "chausse": 334, "22761": 334, "hamburg": [334, 336], "germani": [334, 336], "warwick": 334, "coventri": 334, "cv4": 334, "7al": 334, "european": 334, "xfel": 334, "gmbh": 334, "holzkoppel": 334, "22869": 334, "schenefeld": 334, "metallurgi": 334, "cambridg": 334, "cb3": 334, "0f": 334, "durham": 334, "dh1": 334, "3le": 334, "ghent": 334, "krijgslaan": 334, "281": 334, "s12": 334, "9000": 334, "belgium": 334, "laser": 334, "workflow": 334, "transact": 334, "vol": 334, "feb": 334, "art": 334, "7300205": 334, "1109": 334, "tmag": 334, "3078896": 334, "articl": 334, "beg2022": 334, "journal": 334, "bsd": 334, "claus": 334, "revis": 334, "horizon": 334, "infrastructur": 334, "opendreamkit": 334, "id": 334, "676541": 334, "fond": 334, "wetenschappelijk": 334, "onderzoek": 334, "fwo": 334, "vlaanderen": 334, "g098917n": 334, "postdoctor": 334, "fellowship": 334, "scien": 334, "council": 334, "epsrc": 334, "ukri": 334, "programm": 334, "grant": 334, "ep": 334, "n032128": 334, "pypi": 335, "ubermagdata": 335, "ubermag_venv": 335, "folder": 335, "bat": 335, "sourc": 335, "channel": 335, "raw": 335, "backslash": 335, "escap": 335, "upgrad": 335, "unzip": 335, "among": 335, "step2": 335, "compil": 335, "xcode": 335, "appstor": 335, "git": 335, "clone": 335, "cd": 335, "bash_profil": 335, "edit": 335, "refresh": 335, "bashrc": 335, "reopen": 335, "privileg": 335, "sudo": 335, "apt": 335, "tk": 335, "reporsitori": 335, "emd": 335, "until": 335, "deamon": 335, "feasibl": 335, "peopl": 335, "dissemin": 336, "decemb": 336, "8th": 336, "15th": 336, "uk": 336, "contact": 336, "soton": 336, "ac": 336, "port": 336, "dataclass": 336, "brainstorm": 336, "august": 336, "22nd": 336, "27th": 336, "mpsd": 336}, "objects": {"": [[0, 0, 0, "-", "discretisedfield"], [31, 0, 0, "-", "mag2exp"], [59, 0, 0, "-", "micromagneticdata"], [67, 0, 0, "-", "micromagneticmodel"], [107, 0, 0, "-", "micromagnetictests"], [141, 0, 0, "-", "mumax3c"], [154, 0, 0, "-", "oommfc"], [179, 0, 0, "-", "ubermag"], [182, 0, 0, "-", "ubermagtable"], [190, 0, 0, "-", "ubermagutil"]], "discretisedfield": [[1, 1, 1, "", "Field"], [2, 1, 1, "", "FieldRotator"], [3, 1, 1, "", "Line"], [4, 1, 1, "", "Mesh"], [5, 1, 1, "", "Region"], [6, 5, 1, "", "integrate"], [7, 5, 1, "", "interact"], [8, 0, 0, "-", "io"], [11, 0, 0, "-", "plotting"], [20, 5, 1, "", "test"], [21, 0, 0, "-", "tools"]], "discretisedfield.Field": [[1, 2, 1, "", "__abs__"], [1, 2, 1, "", "__add__"], [1, 2, 1, "", "__array_ufunc__"], [1, 2, 1, "", "__call__"], [1, 2, 1, "", "__dir__"], [1, 2, 1, "", "__eq__"], [1, 2, 1, "", "__getattr__"], [1, 2, 1, "", "__getitem__"], [1, 3, 1, "", "__hash__"], [1, 2, 1, "", "__iter__"], [1, 2, 1, "", "__lshift__"], [1, 2, 1, "", "__mul__"], [1, 2, 1, "", "__neg__"], [1, 2, 1, "", "__pos__"], [1, 2, 1, "", "__pow__"], [1, 2, 1, "", "__repr__"], [1, 2, 1, "", "__sub__"], [1, 2, 1, "", "__truediv__"], [1, 4, 1, "", "abs"], [1, 2, 1, "", "allclose"], [1, 2, 1, "", "angle"], [1, 4, 1, "", "array"], [1, 4, 1, "", "conjugate"], [1, 2, 1, "", "cross"], [1, 4, 1, "", "curl"], [1, 2, 1, "", "diff"], [1, 4, 1, "", "div"], [1, 2, 1, "", "dot"], [1, 2, 1, "", "fftn"], [1, 2, 1, "", "from_xarray"], [1, 4, 1, "", "grad"], [1, 4, 1, "", "hv"], [1, 2, 1, "", "ifftn"], [1, 4, 1, "", "imag"], [1, 2, 1, "", "integrate"], [1, 2, 1, "", "irfftn"], [1, 4, 1, "", "k3d"], [1, 4, 1, "", "laplace"], [1, 2, 1, "", "line"], [1, 2, 1, "", "mean"], [1, 4, 1, "", "mesh"], [1, 4, 1, "", "mpl"], [1, 4, 1, "", "norm"], [1, 4, 1, "", "nvdim"], [1, 4, 1, "", "orientation"], [1, 2, 1, "", "pad"], [1, 4, 1, "", "phase"], [1, 4, 1, "", "real"], [1, 2, 1, "", "resample"], [1, 2, 1, "", "rfftn"], [1, 2, 1, "", "rotate90"], [1, 2, 1, "", "sel"], [1, 2, 1, "", "to_vtk"], [1, 2, 1, "", "to_xarray"], [1, 4, 1, "", "unit"], [1, 2, 1, "", "update_field_values"], [1, 4, 1, "", "valid"], [1, 4, 1, "", "vdim_mapping"], [1, 4, 1, "", "vdims"]], "discretisedfield.FieldRotator": [[2, 2, 1, "", "__repr__"], [2, 2, 1, "", "clear_rotation"], [2, 4, 1, "", "field"], [2, 2, 1, "", "rotate"]], "discretisedfield.Line": [[3, 2, 1, "", "__repr__"], [3, 4, 1, "", "length"], [3, 2, 1, "", "mpl"], [3, 4, 1, "", "point_columns"], [3, 2, 1, "", "selector"], [3, 2, 1, "", "slider"], [3, 4, 1, "", "value_columns"]], "discretisedfield.Mesh": [[4, 2, 1, "", "__dir__"], [4, 2, 1, "", "__eq__"], [4, 2, 1, "", "__getattr__"], [4, 2, 1, "", "__getitem__"], [4, 3, 1, "", "__hash__"], [4, 2, 1, "", "__iter__"], [4, 2, 1, "", "__len__"], [4, 2, 1, "", "__or__"], [4, 2, 1, "", "__repr__"], [4, 2, 1, "", "allclose"], [4, 2, 1, "", "axis_selector"], [4, 4, 1, "", "bc"], [4, 4, 1, "", "cell"], [4, 2, 1, "", "coordinate_field"], [4, 4, 1, "", "dV"], [4, 2, 1, "", "fftn"], [4, 2, 1, "", "ifftn"], [4, 2, 1, "", "index2point"], [4, 4, 1, "", "indices"], [4, 2, 1, "", "is_aligned"], [4, 4, 1, "", "k3d"], [4, 2, 1, "", "line"], [4, 4, 1, "", "mpl"], [4, 4, 1, "", "n"], [4, 2, 1, "", "pad"], [4, 2, 1, "", "point2index"], [4, 4, 1, "", "points"], [4, 4, 1, "", "region"], [4, 2, 1, "", "region2slices"], [4, 2, 1, "", "rotate90"], [4, 2, 1, "", "scale"], [4, 2, 1, "", "sel"], [4, 2, 1, "", "slider"], [4, 4, 1, "", "subregions"], [4, 2, 1, "", "translate"], [4, 4, 1, "", "vertices"]], "discretisedfield.Region": [[5, 2, 1, "", "__contains__"], [5, 2, 1, "", "__eq__"], [5, 3, 1, "", "__hash__"], [5, 2, 1, "", "__or__"], [5, 2, 1, "", "__repr__"], [5, 2, 1, "", "allclose"], [5, 4, 1, "", "center"], [5, 4, 1, "", "dims"], [5, 4, 1, "", "edges"], [5, 2, 1, "", "facing_surface"], [5, 4, 1, "", "k3d"], [5, 4, 1, "", "mpl"], [5, 4, 1, "", "multiplier"], [5, 4, 1, "", "ndim"], [5, 4, 1, "", "pmax"], [5, 4, 1, "", "pmin"], [5, 2, 1, "", "random_point"], [5, 2, 1, "", "rotate90"], [5, 2, 1, "", "scale"], [5, 2, 1, "", "to_dict"], [5, 4, 1, "", "tolerance_factor"], [5, 2, 1, "", "translate"], [5, 4, 1, "", "units"], [5, 4, 1, "", "volume"]], "discretisedfield.io": [[9, 0, 0, "-", "ovf2vtk"]], "discretisedfield.io.ovf2vtk": [[10, 5, 1, "", "ovf2vtk"]], "discretisedfield.plotting": [[12, 1, 1, "", "Hv"], [13, 1, 1, "", "K3dField"], [14, 1, 1, "", "K3dMesh"], [15, 1, 1, "", "K3dRegion"], [16, 1, 1, "", "MplField"], [17, 1, 1, "", "MplMesh"], [18, 1, 1, "", "MplRegion"], [19, 5, 1, "", "add_colorwheel"]], "discretisedfield.plotting.Hv": [[12, 2, 1, "", "__call__"], [12, 2, 1, "", "contour"], [12, 2, 1, "", "scalar"], [12, 2, 1, "", "vector"]], "discretisedfield.plotting.K3dField": [[13, 2, 1, "", "__dir__"], [13, 2, 1, "", "nonzero"], [13, 2, 1, "", "scalar"], [13, 2, 1, "", "vector"]], "discretisedfield.plotting.K3dMesh": [[14, 2, 1, "", "__call__"], [14, 2, 1, "", "subregions"]], "discretisedfield.plotting.K3dRegion": [[15, 2, 1, "", "__call__"]], "discretisedfield.plotting.MplField": [[16, 2, 1, "", "__call__"], [16, 2, 1, "", "__dir__"], [16, 2, 1, "", "contour"], [16, 2, 1, "", "lightness"], [16, 2, 1, "", "scalar"], [16, 2, 1, "", "vector"]], "discretisedfield.plotting.MplMesh": [[17, 2, 1, "", "__call__"], [17, 2, 1, "", "subregions"]], "discretisedfield.plotting.MplRegion": [[18, 2, 1, "", "__call__"]], "discretisedfield.tools": [[22, 5, 1, "", "count_bps"], [23, 5, 1, "", "count_large_cell_angle_regions"], [24, 5, 1, "", "demag_field"], [25, 5, 1, "", "demag_tensor"], [26, 5, 1, "", "emergent_magnetic_field"], [27, 5, 1, "", "max_neighbouring_cell_angle"], [28, 5, 1, "", "neighbouring_cell_angle"], [29, 5, 1, "", "topological_charge"], [30, 5, 1, "", "topological_charge_density"]], "mag2exp": [[32, 0, 0, "-", "ltem"], [37, 0, 0, "-", "magnetometry"], [40, 0, 0, "-", "mfm"], [42, 0, 0, "-", "quick_plots"], [52, 0, 0, "-", "sans"], [55, 5, 1, "", "test"], [56, 0, 0, "-", "x_ray"]], "mag2exp.ltem": [[33, 5, 1, "", "defocus_image"], [34, 5, 1, "", "integrated_magnetic_flux_density"], [35, 5, 1, "", "phase"], [36, 5, 1, "", "relativistic_wavelength"]], "mag2exp.magnetometry": [[38, 5, 1, "", "magnetisation"], [39, 5, 1, "", "torque"]], "mag2exp.mfm": [[41, 5, 1, "", "phase_shift"]], "mag2exp.quick_plots": [[43, 5, 1, "", "ltem_defocus"], [44, 5, 1, "", "ltem_ft_phase"], [45, 5, 1, "", "ltem_integrated_mfd"], [46, 5, 1, "", "ltem_phase"], [47, 5, 1, "", "mfm_phase_shift"], [48, 5, 1, "", "sans_chiral_function"], [49, 5, 1, "", "sans_cross_section"], [50, 5, 1, "", "saxs"], [51, 5, 1, "", "x_ray_holography"]], "mag2exp.sans": [[53, 5, 1, "", "chiral_function"], [54, 5, 1, "", "cross_section"]], "mag2exp.x_ray": [[57, 5, 1, "", "holography"], [58, 5, 1, "", "saxs"]], "micromagneticdata": [[60, 1, 1, "", "AbstractDrive"], [61, 1, 1, "", "CombinedDrive"], [62, 1, 1, "", "Data"], [63, 1, 1, "", "Drive"], [64, 1, 1, "", "Mumax3Drive"], [65, 1, 1, "", "OOMMFDrive"], [66, 5, 1, "", "test"]], "micromagneticdata.AbstractDrive": [[60, 2, 1, "", "__getitem__"], [60, 2, 1, "", "__iter__"], [60, 2, 1, "", "__lshift__"], [60, 2, 1, "", "__repr__"], [60, 4, 1, "", "callbacks"], [60, 4, 1, "", "hv"], [60, 4, 1, "", "info"], [60, 4, 1, "", "m0"], [60, 4, 1, "", "n"], [60, 2, 1, "", "register_callback"], [60, 4, 1, "", "table"], [60, 2, 1, "", "to_xarray"], [60, 4, 1, "", "x"]], "micromagneticdata.CombinedDrive": [[61, 2, 1, "", "__lshift__"], [61, 2, 1, "", "__repr__"], [61, 4, 1, "", "info"], [61, 2, 1, "", "register_callback"], [61, 4, 1, "", "table"], [61, 4, 1, "", "x"]], "micromagneticdata.Data": [[62, 2, 1, "", "__getitem__"], [62, 2, 1, "", "__iter__"], [62, 2, 1, "", "__repr__"], [62, 4, 1, "", "info"], [62, 4, 1, "", "n"], [62, 2, 1, "", "selector"]], "micromagneticdata.Drive": [[63, 2, 1, "", "__getitem__"], [63, 2, 1, "", "__lshift__"], [63, 2, 1, "", "__new__"], [63, 4, 1, "", "calculator_script"], [63, 4, 1, "", "info"], [63, 2, 1, "", "ovf2vtk"], [63, 2, 1, "", "register_callback"], [63, 2, 1, "", "slider"], [63, 4, 1, "", "table"], [63, 4, 1, "", "use_cache"]], "micromagneticdata.Mumax3Drive": [[64, 2, 1, "", "__repr__"], [64, 4, 1, "", "calculator_script"], [64, 4, 1, "", "x"]], "micromagneticdata.OOMMFDrive": [[65, 2, 1, "", "__repr__"], [65, 4, 1, "", "calculator_script"], [65, 4, 1, "", "x"]], "micromagneticmodel": [[68, 1, 1, "", "CubicAnisotropy"], [69, 1, 1, "", "DMI"], [70, 1, 1, "", "Damping"], [71, 1, 1, "", "Demag"], [72, 1, 1, "", "Driver"], [73, 1, 1, "", "Dynamics"], [74, 1, 1, "", "DynamicsTerm"], [75, 1, 1, "", "Energy"], [76, 1, 1, "", "EnergyTerm"], [77, 1, 1, "", "Evolver"], [78, 1, 1, "", "Exchange"], [79, 1, 1, "", "ExternalDriver"], [80, 1, 1, "", "ExternalRunner"], [81, 1, 1, "", "MagnetoElastic"], [82, 1, 1, "", "Precession"], [83, 1, 1, "", "RKKY"], [84, 1, 1, "", "Slonczewski"], [85, 1, 1, "", "System"], [86, 1, 1, "", "UniaxialAnisotropy"], [87, 1, 1, "", "Zeeman"], [88, 1, 1, "", "ZhangLi"], [89, 0, 0, "-", "abstract"], [93, 0, 0, "-", "consts"], [104, 0, 0, "-", "examples"], [106, 5, 1, "", "test"]], "micromagneticmodel.Driver": [[72, 2, 1, "", "drive"]], "micromagneticmodel.ExternalDriver": [[79, 2, 1, "", "drive"], [79, 2, 1, "", "drive_kwargs_setup"], [79, 2, 1, "", "schedule"], [79, 2, 1, "", "schedule_kwargs_setup"]], "micromagneticmodel.ExternalRunner": [[80, 2, 1, "", "call"], [80, 4, 1, "", "package_name"]], "micromagneticmodel.System": [[85, 2, 1, "", "__repr__"], [85, 4, 1, "", "dynamics"], [85, 4, 1, "", "energy"]], "micromagneticmodel.abstract": [[90, 1, 1, "", "Abstract"], [91, 1, 1, "", "Container"], [92, 1, 1, "", "Term"]], "micromagneticmodel.abstract.Abstract": [[90, 2, 1, "", "__iter__"], [90, 2, 1, "", "__repr__"], [90, 4, 1, "", "name"]], "micromagneticmodel.abstract.Container": [[91, 2, 1, "", "__add__"], [91, 2, 1, "", "__contains__"], [91, 2, 1, "", "__dir__"], [91, 2, 1, "", "__eq__"], [91, 2, 1, "", "__getattr__"], [91, 2, 1, "", "__getitem__"], [91, 3, 1, "", "__hash__"], [91, 2, 1, "", "__iter__"], [91, 2, 1, "", "__len__"], [91, 2, 1, "", "__repr__"], [91, 2, 1, "", "__sub__"], [91, 2, 1, "", "get"]], "micromagneticmodel.abstract.Term": [[92, 2, 1, "", "__add__"], [92, 2, 1, "", "__eq__"], [92, 3, 1, "", "__hash__"]], "micromagneticmodel.consts": [[94, 6, 1, "", "e"], [95, 6, 1, "", "g"], [96, 6, 1, "", "gamma"], [97, 6, 1, "", "gamma0"], [98, 6, 1, "", "h"], [99, 6, 1, "", "hbar"], [100, 6, 1, "", "kB"], [101, 6, 1, "", "me"], [102, 6, 1, "", "mu0"], [103, 6, 1, "", "muB"]], "micromagneticmodel.examples": [[105, 5, 1, "", "macrospin"]], "micromagnetictests": [[108, 0, 0, "-", "calculatortests"], [139, 5, 1, "", "get_tests"], [140, 5, 1, "", "test"]], "micromagnetictests.calculatortests": [[109, 1, 1, "", "TestCompute"], [110, 1, 1, "", "TestCubicAnisotropy"], [111, 1, 1, "", "TestDMI"], [112, 1, 1, "", "TestDamping"], [113, 1, 1, "", "TestDemag"], [114, 1, 1, "", "TestDynamics"], [115, 1, 1, "", "TestEnergy"], [116, 1, 1, "", "TestExchange"], [117, 1, 1, "", "TestFixedSubregions"], [118, 1, 1, "", "TestHysteresisDriver"], [119, 1, 1, "", "TestMesh"], [120, 1, 1, "", "TestMinDriver"], [121, 1, 1, "", "TestPrecession"], [122, 1, 1, "", "TestRKKY"], [123, 1, 1, "", "TestSlonczewski"], [124, 1, 1, "", "TestThreads"], [125, 1, 1, "", "TestTimeDriver"], [126, 1, 1, "", "TestUniaxialAnisotropy"], [127, 1, 1, "", "TestZeeman"], [128, 1, 1, "", "TestZhangLi"], [129, 5, 1, "", "test_dirname"], [130, 5, 1, "", "test_format"], [131, 5, 1, "", "test_info_file"], [132, 5, 1, "", "test_multiple_drives"], [133, 5, 1, "", "test_outputstep"], [134, 5, 1, "", "test_schedule"], [135, 5, 1, "", "test_skyrmion"], [136, 5, 1, "", "test_stdprob3"], [137, 5, 1, "", "test_stdprob4"], [138, 5, 1, "", "test_stdprob5"]], "mumax3c": [[142, 1, 1, "", "MinDriver"], [143, 1, 1, "", "RelaxDriver"], [144, 1, 1, "", "TimeDriver"], [145, 5, 1, "", "delete"], [146, 0, 0, "-", "mumax3"], [151, 6, 1, "", "runner"], [152, 5, 1, "", "test"], [153, 5, 1, "", "test_docker"]], "mumax3c.mumax3": [[147, 1, 1, "", "ExeMumax3Runner"], [148, 1, 1, "", "Mumax3Runner"], [149, 1, 1, "", "Runner"], [150, 5, 1, "", "overhead"]], "mumax3c.mumax3.Mumax3Runner": [[148, 4, 1, "", "package_name"], [148, 4, 1, "", "status"]], "mumax3c.mumax3.Runner": [[149, 2, 1, "", "autoselect_runner"], [149, 4, 1, "", "runner"]], "oommfc": [[155, 1, 1, "", "CGEvolver"], [156, 1, 1, "", "Driver"], [157, 1, 1, "", "EulerEvolver"], [158, 1, 1, "", "HysteresisDriver"], [159, 1, 1, "", "MinDriver"], [160, 1, 1, "", "RungeKuttaEvolver"], [161, 1, 1, "", "SpinTEvolver"], [162, 1, 1, "", "SpinXferEvolver"], [163, 1, 1, "", "TimeDriver"], [164, 1, 1, "", "UHH_ThetaEvolver"], [165, 1, 1, "", "Xf_ThermHeunEvolver"], [166, 1, 1, "", "Xf_ThermSpinXferEvolver"], [167, 5, 1, "", "compute"], [168, 5, 1, "", "delete"], [169, 0, 0, "-", "oommf"], [176, 6, 1, "", "runner"], [177, 5, 1, "", "test"], [178, 5, 1, "", "test_docker"]], "oommfc.Driver": [[156, 2, 1, "", "drive_kwargs_setup"], [156, 2, 1, "", "schedule_kwargs_setup"], [156, 2, 1, "", "write_mif"]], "oommfc.oommf": [[170, 1, 1, "", "DockerOOMMFRunner"], [171, 1, 1, "", "ExeOOMMFRunner"], [172, 1, 1, "", "OOMMFRunner"], [173, 1, 1, "", "Runner"], [174, 1, 1, "", "TclOOMMFRunner"], [175, 5, 1, "", "overhead"]], "oommfc.oommf.DockerOOMMFRunner": [[170, 2, 1, "", "__repr__"], [170, 2, 1, "", "errors"]], "oommfc.oommf.ExeOOMMFRunner": [[171, 2, 1, "", "__repr__"], [171, 2, 1, "", "errors"]], "oommfc.oommf.OOMMFRunner": [[172, 2, 1, "", "__repr__"], [172, 2, 1, "", "errors"], [172, 4, 1, "", "package_name"], [172, 4, 1, "", "platform"], [172, 4, 1, "", "status"], [172, 4, 1, "", "version"]], "oommfc.oommf.Runner": [[173, 2, 1, "", "__repr__"], [173, 2, 1, "", "autoselect_runner"], [173, 4, 1, "", "runner"]], "oommfc.oommf.TclOOMMFRunner": [[174, 2, 1, "", "__repr__"], [174, 2, 1, "", "errors"]], "ubermag": [[180, 5, 1, "", "debug_info"], [181, 5, 1, "", "test"]], "ubermagtable": [[183, 1, 1, "", "Table"], [184, 5, 1, "", "interact"], [185, 5, 1, "", "test"], [186, 0, 0, "-", "util"]], "ubermagtable.Table": [[183, 2, 1, "", "__lshift__"], [183, 2, 1, "", "__repr__"], [183, 2, 1, "", "apply"], [183, 4, 1, "", "dx"], [183, 2, 1, "", "fromfile"], [183, 2, 1, "", "irfft"], [183, 2, 1, "", "mpl"], [183, 2, 1, "", "rfft"], [183, 2, 1, "", "selector"], [183, 2, 1, "", "slider"], [183, 4, 1, "", "x"], [183, 4, 1, "", "xmax"], [183, 4, 1, "", "y"]], "ubermagtable.util": [[187, 5, 1, "", "columns"], [188, 5, 1, "", "data"], [189, 5, 1, "", "units"]], "ubermagutil": [[191, 5, 1, "", "changedir"], [192, 5, 1, "", "hysteresis_values"], [193, 5, 1, "", "inherit_docs"], [194, 5, 1, "", "setup_logging"], [195, 5, 1, "", "test"], [196, 0, 0, "-", "typesystem"], [206, 0, 0, "-", "units"]], "ubermagutil.typesystem": [[197, 1, 1, "", "Descriptor"], [198, 1, 1, "", "Dictionary"], [199, 1, 1, "", "Name"], [200, 1, 1, "", "Parameter"], [201, 1, 1, "", "Scalar"], [202, 1, 1, "", "Subset"], [203, 1, 1, "", "Typed"], [204, 1, 1, "", "Vector"], [205, 5, 1, "", "typesystem"]], "ubermagutil.typesystem.Descriptor": [[197, 2, 1, "", "__delete__"], [197, 2, 1, "", "__set__"]], "ubermagutil.typesystem.Dictionary": [[198, 2, 1, "", "__set__"]], "ubermagutil.typesystem.Name": [[199, 2, 1, "", "__set__"]], "ubermagutil.typesystem.Parameter": [[200, 2, 1, "", "__set__"]], "ubermagutil.typesystem.Scalar": [[201, 2, 1, "", "__set__"]], "ubermagutil.typesystem.Subset": [[202, 2, 1, "", "__set__"]], "ubermagutil.typesystem.Typed": [[203, 2, 1, "", "__set__"]], "ubermagutil.typesystem.Vector": [[204, 2, 1, "", "__set__"]], "ubermagutil.units": [[207, 5, 1, "", "si_max_multiplier"], [208, 5, 1, "", "si_multiplier"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function", "6": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "data", "Python data"]}, "titleterms": {"discretisedfield": [0, 6, 7, 8, 9, 10, 11, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 210, 215, 223, 246, 265, 268, 271, 274, 276, 277], "field": [1, 212, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 246, 265, 268, 271, 274, 276, 277, 299, 302, 303, 308, 317, 320, 321, 330], "fieldrot": [2, 230], "line": [3, 224, 226, 228, 234, 237, 275], "mesh": [4, 228, 230, 231, 235, 236, 237, 238, 239, 240, 241, 277, 330], "region": [5, 228, 230, 231, 243, 244, 245, 265, 277, 330], "integr": [6, 228, 248], "interact": [7, 184, 225, 226, 256, 281], "io": [8, 9, 10], "ovf2vtk": [9, 10, 242], "plot": [11, 19, 224, 225, 226, 233, 240, 245, 249, 254, 256, 281, 311], "hv": 12, "k3dfield": 13, "k3dmesh": 14, "k3dregion": 15, "mplfield": 16, "mplmesh": 17, "mplregion": 18, "add_colorwheel": 19, "test": [20, 55, 66, 106, 140, 152, 177, 181, 185, 195, 335], "tool": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 232, 242], "count_bp": 22, "count_large_cell_angle_region": 23, "demag_field": 24, "demag_tensor": 25, "emergent_magnetic_field": 26, "max_neighbouring_cell_angl": 27, "neighbouring_cell_angl": 28, "topological_charg": 29, "topological_charge_dens": 30, "mag2exp": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 217, 250, 329], "ltem": [32, 33, 34, 35, 36, 248, 250], "defocus_imag": 33, "integrated_magnetic_flux_dens": 34, "phase": 35, "relativistic_wavelength": 36, "magnetometri": [37, 38, 39, 247, 253, 329], "magnetis": [38, 247, 256, 298, 308, 328, 330, 332], "torqu": [39, 253, 329], "mfm": [40, 41, 249], "phase_shift": 41, "quick_plot": [42, 43, 44, 45, 46, 47, 48, 49, 50, 51], "ltem_defocu": 43, "ltem_ft_phas": 44, "ltem_integrated_mfd": 45, "ltem_phas": 46, "mfm_phase_shift": 47, "sans_chiral_funct": 48, "sans_cross_sect": 49, "sax": [50, 58, 252], "x_ray_holographi": 51, "san": [52, 53, 54, 251], "chiral_funct": 53, "cross_sect": 54, "x_rai": [56, 57, 58], "holographi": [57, 254, 329], "micromagneticdata": [59, 66, 218, 272, 277, 311], "abstractdr": 60, "combineddr": [61, 255], "data": [62, 188, 212, 255, 256], "drive": [63, 255, 256, 328], "mumax3dr": 64, "oommfdriv": 65, "micromagneticmodel": [67, 89, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 219], "cubicanisotropi": 68, "dmi": [69, 308, 327, 332], "damp": [70, 260], "demag": [71, 232], "driver": [72, 156, 214, 262], "dynam": [73, 212, 214, 258, 260, 301, 326], "dynamicsterm": 74, "energi": [75, 212, 214, 259, 261, 263, 268, 270, 271, 274, 276, 298, 302, 307, 308, 312, 313, 315, 327, 328], "energyterm": 76, "evolv": [77, 214, 262], "exchang": [78, 261, 271, 308, 313, 327, 332], "externaldriv": 79, "externalrunn": 80, "magnetoelast": 81, "precess": [82, 257, 260], "rkky": [83, 261, 315], "slonczewski": [84, 321], "system": [85, 212, 264, 302, 328, 329], "uniaxialanisotropi": 86, "zeeman": [87, 261, 276, 308, 321, 327], "zhangli": 88, "abstract": [89, 90], "contain": [91, 277], "term": [92, 214, 257, 258, 259, 260, 261, 263, 265, 268, 270, 271, 274, 276, 302, 307, 312, 315], "const": [93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103], "e": 94, "g": [95, 257], "gamma": [96, 257], "gamma0": 97, "h": [98, 276, 318], "hbar": 99, "kb": 100, "me": 101, "mu0": 102, "mub": 103, "exampl": [104, 105, 228, 256, 277, 297, 330, 332], "macrospin": [105, 326], "micromagnetictest": [107, 108, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 220], "calculatortest": [108, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "testcomput": 109, "testcubicanisotropi": 110, "testdmi": 111, "testdamp": 112, "testdemag": 113, "testdynam": 114, "testenergi": 115, "testexchang": 116, "testfixedsubregion": 117, "testhysteresisdriv": 118, "testmesh": 119, "testmindriv": 120, "testprecess": 121, "testrkki": 122, "testslonczewski": 123, "testthread": 124, "testtimedriv": 125, "testuniaxialanisotropi": 126, "testzeeman": 127, "testzhangli": 128, "test_dirnam": 129, "test_format": 130, "test_info_fil": 131, "test_multiple_dr": 132, "test_outputstep": 133, "test_schedul": 134, "test_skyrmion": 135, "test_stdprob3": 136, "test_stdprob4": 137, "test_stdprob5": 138, "get_test": 139, "mumax3c": [141, 145, 146, 150, 151, 152, 153, 221], "mindriv": [142, 159, 272], "relaxdriv": 143, "timedriv": [144, 163, 275, 322], "delet": [145, 168, 287], "mumax3": [146, 150, 214], "exemumax3runn": 147, "mumax3runn": 148, "runner": [149, 151, 173, 176, 267, 306], "overhead": [150, 175], "test_dock": [153, 178], "oommfc": [154, 167, 168, 169, 175, 176, 177, 178, 293], "cgevolv": 155, "eulerevolv": 157, "hysteresisdriv": 158, "rungekuttaevolv": 160, "spintevolv": 161, "spinxferevolv": 162, "uhh_thetaevolv": [164, 309], "xf_thermheunevolv": [165, 309], "xf_thermspinxferevolv": [166, 309], "comput": [167, 228, 248, 249, 250, 251, 252, 253, 254, 256, 302, 307], "oommf": [169, 175, 214, 335], "dockeroommfrunn": 170, "exeoommfrunn": 171, "oommfrunn": 172, "tcloommfrunn": 174, "ubermag": [179, 180, 181, 214, 277, 294, 328, 334, 335], "debug_info": 180, "ubermagt": [182, 184, 185, 186, 187, 188, 189, 295], "tabl": [183, 279, 280, 281, 282, 283, 284], "util": [186, 187, 188, 189], "column": 187, "unit": [189, 206, 207, 208, 222, 332], "ubermagutil": [190, 191, 192, 193, 194, 195, 196, 205, 206, 207, 208, 287, 296], "changedir": 191, "hysteresis_valu": 192, "inherit_doc": [193, 288], "setup_log": 194, "typesystem": [196, 205, 287], "descriptor": [197, 291], "dictionari": [198, 268, 271, 274, 276, 331], "name": [199, 222, 269], "paramet": [200, 265, 291, 318, 319, 332], "scalar": [201, 222, 224, 226, 321], "subset": 202, "type": [203, 267, 290, 331], "vector": [204, 222, 224, 226, 228, 230, 321], "si_max_multipli": 207, "si_multipli": 208, "api": 209, "refer": [209, 247, 248, 249, 251, 252, 253, 254, 298, 299, 300, 301, 325], "changelog": 210, "2023": 210, "11": 210, "nov": 210, "25": 210, "modifi": 210, "fix": [210, 211, 310], "10": [210, 257], "oct": 210, "23": 210, "break": 210, "chang": [210, 267, 277], "ad": 210, "0": [210, 277], "66": 210, "1": [210, 230, 232, 242, 256, 257, 260, 261, 265, 268, 277, 299, 318, 326, 328, 331], "feb": 210, "3": [210, 230, 232, 242, 257, 260, 261, 265, 298, 326, 331], "20": 210, "2022": [210, 336], "65": 210, "jul": 210, "17": 210, "64": 210, "03": [210, 274], "63": 210, "jun": 210, "29": 210, "62": 210, "09": 210, "mai": 210, "22": 210, "remov": 210, "61": 210, "2": [210, 228, 230, 232, 242, 256, 257, 260, 261, 265, 308, 319, 326, 328, 331], "mar": 210, "gener": 210, "60": 210, "2021": 210, "51": 210, "contribut": 211, "bug": 211, "featur": [211, 214, 334], "request": [211, 333], "document": [211, 213, 216, 334], "demo": 212, "vortex": 212, "initialis": 212, "minimis": 212, "displac": 212, "magnet": [212, 232, 248, 249, 257], "free": 212, "relax": [212, 298, 301, 302], "analysi": [212, 272, 311], "spatial": [212, 231, 268, 270, 271, 274, 276, 317, 318, 319, 330], "averag": 212, "resolv": 212, "trajectori": 212, "core": 212, "compat": 214, "support": 214, "version": [214, 277], "packag": [216, 334], "defin": [222, 264, 265, 290, 321], "uniform": 222, "norm": 222, "compon": [222, 228], "fft": [223, 280], "tutori": [223, 268, 270, 271, 274, 276, 329, 334], "setup": 223, "method": [223, 230, 246, 303], "ifft": 223, "rfft": 223, "irfft": 223, "angular": 223, "frequenc": 223, "visualis": [223, 224, 225, 226, 234, 239, 240, 245, 256, 283], "analys": [223, 255], "us": [224, 225, 226, 231, 246, 250, 265, 287, 303, 305, 331], "holoview": 224, "contour": [224, 226], "combin": [224, 226, 256], "multipl": [224, 225, 230, 242, 256, 263, 277, 312, 331], "k3d": [225, 239, 240, 245], "same": [225, 263, 312], "matplotlib": 226, "mpl": [226, 239, 240, 245], "avail": 226, "function": [226, 228, 231, 321, 331], "2d": 226, "hsl": 226, "light": 226, "colorwheel": 226, "build": 226, "custom": [226, 269], "deprec": 226, "valu": [226, 230, 231, 284, 286, 302, 330, 331], "along": [226, 228], "normalis": [227, 256], "oper": [228, 233, 308, 331], "sampl": 228, "extract": [228, 292], "smaller": 228, "subfield": 228, "align": [228, 235], "ani": 228, "mean": 228, "iter": [228, 331], "through": [228, 331], "intersect": 228, "plane": [228, 237], "select": [228, 256], "part": [228, 256], "cascad": 228, "complex": 228, "algebra": 228, "compund": 228, "product": 228, "dot": 228, "cross": [228, 251, 252, 298], "calculu": 228, "direct": [228, 230], "deriv": [228, 256, 258, 259, 262, 302], "left": 228, "frac": 228, "partial": 228, "x_": 228, "i": [228, 277, 331, 333, 334], "f": 228, "right": 228, "gradient": 228, "nabla": 228, "diverg": 228, "cdot": 228, "curl": 228, "time": [228, 256, 261, 277, 317, 320, 321, 331], "laplac": 228, "volum": 228, "surfac": [228, 244], "resampl": 228, "appli": 228, "numpi": [228, 331], "univers": 228, "other": [228, 231, 235, 243, 333], "read": [229, 331], "write": 229, "file": [229, 242, 322], "subregion": [229, 239, 310], "rotat": [230, 250, 254], "origin": 230, "rotate90": 230, "90": 230, "about": 230, "arbitrari": 230, "angl": [230, 232, 251, 252, 329], "point": 230, "certain": 230, "detail": 230, "process": 230, "vari": [231, 268, 270, 271, 274, 276, 317, 318, 319, 320, 330], "python": [231, 321, 331], "anoth": 231, "object": [231, 234, 265, 328, 331], "creat": 231, "coordin": 231, "topolog": [232, 256], "charg": [232, 256, 257], "densiti": [232, 248, 256, 308], "between": 232, "cell": 232, "emerg": 232, "count": 232, "bp": 232, "4": [232, 257, 261, 299, 331], "tensor": 232, "valid": 233, "basic": [235, 240, 243, 245, 279, 331], "scale": [235, 243], "translat": 235, "dimens": [235, 243], "boundari": [236, 314], "condit": [236, 314, 331], "period": [236, 314], "experiment": [236, 321], "neumann": 236, "dirichet": 236, "pad": 238, "advanc": [240, 245, 335], "widget": [241, 255, 284], "slider": [241, 284], "axi": 241, "selector": [241, 284], "singl": [242, 277, 305], "wildcard": 242, "face": 244, "import": [246, 331], "export": 246, "from": [246, 260, 261], "xarrai": 246, "dataarrai": 246, "few": 246, "to_xarrai": 246, "except": 246, "from_xarrai": 246, "expect": 246, "properti": [246, 287], "input": 246, "dc": 247, "frame": [247, 248, 249, 251, 252, 253, 254], "The": [247, 248, 249, 251, 252, 253, 254, 267, 277, 328], "micromagnet": [247, 248, 249, 251, 252, 253, 254, 264, 308, 332], "simul": [247, 248, 249, 251, 252, 253, 254, 255, 256, 273, 298, 299, 300, 302, 309, 311, 321, 326, 328], "lorentz": [248, 329], "transmiss": 248, "electron": [248, 257], "microscopi": [248, 249, 329], "imag": [248, 249, 250, 254], "defocus": 248, "flux": 248, "forc": 249, "finit": [249, 309], "size": 249, "tip": 249, "quick": [249, 254], "small": [251, 252, 329], "neutron": [251, 329], "scatter": [251, 252, 329], "section": [251, 252], "x": [252, 254, 329], "rai": [252, 254, 329], "recreat": 253, "experi": 253, "result": [255, 326], "evolut": 256, "quantiti": 256, "onli": [256, 275], "hysteresi": [256, 286, 311, 316], "constant": [257, 265, 268, 270, 271, 274, 276, 285, 313, 318], "elementari": 257, "": [257, 330], "mass": 257, "boltzmann": 257, "5": [257, 261, 300, 331], "planck": 257, "6": [257, 261, 331], "land": 257, "factor": 257, "7": [257, 261], "reduc": 257, "8": 257, "gyrotrop": 257, "ratio": 257, "9": 257, "bohr": 257, "magneton": 257, "llg": 257, "an": [259, 287, 303, 331], "equat": [260, 261, 326, 327, 328], "zhang": [260, 321], "li": [260, 321], "acces": [260, 261], "individu": [260, 261, 302], "independ": 261, "depend": [261, 321], "uniaxi": [261, 274, 308, 327], "anisotropi": [261, 268, 274, 308, 327, 332], "demagnetis": 261, "dzyaloshinskii": [261, 270, 327], "moriya": [261, 270, 327], "cubic": [261, 268], "class": [262, 263, 287, 312], "per": 265, "usag": 266, "control": [267, 289], "default": [267, 275, 331], "differ": 267, "go": 267, "back": 267, "05": 268, "k_": 268, "mathbf": [268, 274, 276, 299, 318], "u": [268, 274], "k": [268, 274], "_": [268, 299], "directori": 269, "04": 270, "d": 270, "02": 271, "A": 271, "step": 272, "run": [273, 275], "parallel": 273, "higher": 274, "order": 274, "verbos": 275, "level": 275, "One": 275, "summari": 275, "silent": 275, "progress": 275, "bar": 275, "01": 276, "hdf5": 277, "specif": [277, 298, 299, 300, 301], "first": [277, 299, 328], "group": 277, "call": 277, "It": 277, "second": [277, 299], "third": 277, "seri": 277, "intern": 277, "note": 277, "collect": 278, "debug": 278, "inform": 278, "merg": 282, "attribut": [285, 287], "impos": 287, "decor": 288, "log": 289, "otherwis": 290, "si": [292, 332], "prefix": 292, "standard": [298, 299, 300, 301, 335], "problem": [298, 299, 300, 301, 305, 325], "state": 298, "stage": [299, 301], "b": [299, 331], "postprocess": [299, 301], "spin": 300, "polaris": 300, "current": [300, 305, 321], "fmr": 301, "effect": [302, 308], "calcul": [303, 308, 335], "strai": 303, "airbox": 303, "skyrmion": [304, 327], "disk": [304, 322, 327], "induc": 305, "domain": [305, 325], "wall": [305, 325], "motion": 305, "stt": 305, "descript": [305, 325], "pair": [305, 325], "choos": 306, "t": 308, "oversimplifi": 308, "temperatur": 309, "loop": 311, "neg": 313, "sine": 316, "both": 317, "how": [321, 333, 334, 335], "properli": 321, "thi": 321, "puls": 321, "pre": 321, "measur": 321, "tcl": 321, "faq": 322, "number": [322, 331], "written": 322, "get": [323, 331], "start": 323, "jupyt": 324, "lab": 324, "exercis": [325, 326, 330], "convers": [325, 332], "solut": 325, "competit": 327, "our": 328, "main": 328, "initi": 328, "inspect": 328, "set": 329, "up": 329, "techniqu": 329, "tem": 329, "reciproc": 329, "space": 329, "m_": 330, "mathrm": 330, "variabl": 331, "arithmet": 331, "addit": 331, "c": 331, "subtract": 331, "divis": 331, "power": 331, "more": 331, "complic": 331, "sequenc": 331, "list": 331, "tupl": 331, "index": 331, "length": 331, "element": 331, "unpack": 331, "arrai": 331, "execut": 331, "argument": 331, "access": 331, "modul": 331, "common": 331, "mistak": 331, "No": 331, "colon": 331, "lack": 331, "indent": 331, "mix": 331, "incompat": 331, "undefin": 331, "orient": 331, "program": 331, "help": [331, 333], "further": 331, "cg": 332, "equival": 332, "atomist": 332, "micromagent": 332, "satur": 332, "work": 332, "prepar": 333, "your": 333, "render": 333, "output": 333, "similar": 333, "what": 334, "cloud": 334, "author": 334, "cite": 334, "licens": 334, "acknowledg": 334, "instal": 335, "recommend": 335, "environ": 335, "updat": 335, "check": 335, "doe": 335, "find": 335, "develop": 335, "new": 336, "winter": 336, "workshop": 336, "summer": 336, "code": 336, "sprint": 336}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"discretisedfield": [[0, "module-discretisedfield"], [215, "discretisedfield"], [215, null]], "Field": [[1, "field"], [330, "Field"]], "FieldRotator": [[2, "fieldrotator"], [230, "FieldRotator"]], "Line": [[3, "line"]], "Mesh": [[4, "mesh"], [330, "Mesh"]], "Region": [[5, "region"], [330, "Region"]], "discretisedfield.integrate": [[6, "discretisedfield-integrate"]], "discretisedfield.interact": [[7, "discretisedfield-interact"]], "discretisedfield.io": [[8, "module-discretisedfield.io"]], "discretisedfield.io.ovf2vtk": [[9, "module-discretisedfield.io.ovf2vtk"]], "discretisedfield.io.ovf2vtk.ovf2vtk": [[10, "discretisedfield-io-ovf2vtk-ovf2vtk"]], "discretisedfield.plotting": [[11, "module-discretisedfield.plotting"]], "Hv": [[12, "hv"]], "K3dField": [[13, "k3dfield"]], "K3dMesh": [[14, "k3dmesh"]], "K3dRegion": [[15, "k3dregion"]], "MplField": [[16, "mplfield"]], "MplMesh": [[17, "mplmesh"]], "MplRegion": [[18, "mplregion"]], "discretisedfield.plotting.add_colorwheel": [[19, "discretisedfield-plotting-add-colorwheel"]], "discretisedfield.test": [[20, "discretisedfield-test"]], "discretisedfield.tools": [[21, "module-discretisedfield.tools"]], "discretisedfield.tools.count_bps": [[22, "discretisedfield-tools-count-bps"]], "discretisedfield.tools.count_large_cell_angle_regions": [[23, "discretisedfield-tools-count-large-cell-angle-regions"]], "discretisedfield.tools.demag_field": [[24, "discretisedfield-tools-demag-field"]], "discretisedfield.tools.demag_tensor": [[25, "discretisedfield-tools-demag-tensor"]], "discretisedfield.tools.emergent_magnetic_field": [[26, "discretisedfield-tools-emergent-magnetic-field"]], "discretisedfield.tools.max_neighbouring_cell_angle": [[27, "discretisedfield-tools-max-neighbouring-cell-angle"]], "discretisedfield.tools.neighbouring_cell_angle": [[28, "discretisedfield-tools-neighbouring-cell-angle"]], "discretisedfield.tools.topological_charge": [[29, "discretisedfield-tools-topological-charge"]], "discretisedfield.tools.topological_charge_density": [[30, "discretisedfield-tools-topological-charge-density"]], "mag2exp": [[31, "module-mag2exp"], [217, "mag2exp"], [217, null]], "mag2exp.ltem": [[32, "module-mag2exp.ltem"]], "mag2exp.ltem.defocus_image": [[33, "mag2exp-ltem-defocus-image"]], "mag2exp.ltem.integrated_magnetic_flux_density": [[34, "mag2exp-ltem-integrated-magnetic-flux-density"]], "mag2exp.ltem.phase": [[35, "mag2exp-ltem-phase"]], "mag2exp.ltem.relativistic_wavelength": [[36, "mag2exp-ltem-relativistic-wavelength"]], "mag2exp.magnetometry": [[37, "module-mag2exp.magnetometry"]], "mag2exp.magnetometry.magnetisation": [[38, "mag2exp-magnetometry-magnetisation"]], "mag2exp.magnetometry.torque": [[39, "mag2exp-magnetometry-torque"]], "mag2exp.mfm": [[40, "module-mag2exp.mfm"]], "mag2exp.mfm.phase_shift": [[41, "mag2exp-mfm-phase-shift"]], "mag2exp.quick_plots": [[42, "module-mag2exp.quick_plots"]], "mag2exp.quick_plots.ltem_defocus": [[43, "mag2exp-quick-plots-ltem-defocus"]], "mag2exp.quick_plots.ltem_ft_phase": [[44, "mag2exp-quick-plots-ltem-ft-phase"]], "mag2exp.quick_plots.ltem_integrated_mfd": [[45, "mag2exp-quick-plots-ltem-integrated-mfd"]], "mag2exp.quick_plots.ltem_phase": [[46, "mag2exp-quick-plots-ltem-phase"]], "mag2exp.quick_plots.mfm_phase_shift": [[47, "mag2exp-quick-plots-mfm-phase-shift"]], "mag2exp.quick_plots.sans_chiral_function": [[48, "mag2exp-quick-plots-sans-chiral-function"]], "mag2exp.quick_plots.sans_cross_section": [[49, "mag2exp-quick-plots-sans-cross-section"]], "mag2exp.quick_plots.saxs": [[50, "mag2exp-quick-plots-saxs"]], "mag2exp.quick_plots.x_ray_holography": [[51, "mag2exp-quick-plots-x-ray-holography"]], "mag2exp.sans": [[52, "module-mag2exp.sans"]], "mag2exp.sans.chiral_function": [[53, "mag2exp-sans-chiral-function"]], "mag2exp.sans.cross_section": [[54, "mag2exp-sans-cross-section"]], "mag2exp.test": [[55, "mag2exp-test"]], "mag2exp.x_ray": [[56, "module-mag2exp.x_ray"]], "mag2exp.x_ray.holography": [[57, "mag2exp-x-ray-holography"]], "mag2exp.x_ray.saxs": [[58, "mag2exp-x-ray-saxs"]], "micromagneticdata": [[59, "module-micromagneticdata"], [218, "micromagneticdata"], [218, null]], "AbstractDrive": [[60, "abstractdrive"]], "CombinedDrive": [[61, "combineddrive"], [255, "CombinedDrive"]], "Data": [[62, "data"], [255, "Data"]], "Drive": [[63, "drive"], [255, "Drive"]], "Mumax3Drive": [[64, "mumax3drive"]], "OOMMFDrive": [[65, "oommfdrive"]], "micromagneticdata.test": [[66, "micromagneticdata-test"]], "micromagneticmodel": [[67, "module-micromagneticmodel"], [219, "micromagneticmodel"], [219, null]], "CubicAnisotropy": [[68, "cubicanisotropy"]], "DMI": [[69, "dmi"], [332, "DMI"]], "Damping": [[70, "damping"]], "Demag": [[71, "demag"]], "Driver": [[72, "driver"], [156, "driver"]], "Dynamics": [[73, "dynamics"]], "DynamicsTerm": [[74, "dynamicsterm"]], "Energy": [[75, "energy"], [308, "Energy"], [308, "id2"], [308, "id5"], [308, "id8"]], "EnergyTerm": [[76, "energyterm"]], "Evolver": [[77, "evolver"]], "Exchange": [[78, "exchange"], [308, "Exchange"], [332, "Exchange"]], "ExternalDriver": [[79, "externaldriver"]], "ExternalRunner": [[80, "externalrunner"]], "MagnetoElastic": [[81, "magnetoelastic"]], "Precession": [[82, "precession"]], "RKKY": [[83, "rkky"]], "Slonczewski": [[84, "slonczewski"]], "System": [[85, "system"]], "UniaxialAnisotropy": [[86, "uniaxialanisotropy"]], "Zeeman": [[87, "zeeman"], [308, "Zeeman"]], "ZhangLi": [[88, "zhangli"]], "micromagneticmodel.abstract": [[89, "module-micromagneticmodel.abstract"]], "Abstract": [[90, "abstract"]], "Container": [[91, "container"]], "Term": [[92, "term"]], "micromagneticmodel.consts": [[93, "module-micromagneticmodel.consts"]], "micromagneticmodel.consts.e": [[94, "micromagneticmodel-consts-e"]], "micromagneticmodel.consts.g": [[95, "micromagneticmodel-consts-g"]], "micromagneticmodel.consts.gamma": [[96, "micromagneticmodel-consts-gamma"]], "micromagneticmodel.consts.gamma0": [[97, "micromagneticmodel-consts-gamma0"]], "micromagneticmodel.consts.h": [[98, "micromagneticmodel-consts-h"]], "micromagneticmodel.consts.hbar": [[99, "micromagneticmodel-consts-hbar"]], "micromagneticmodel.consts.kB": [[100, "micromagneticmodel-consts-kb"]], "micromagneticmodel.consts.me": [[101, "micromagneticmodel-consts-me"]], "micromagneticmodel.consts.mu0": [[102, "micromagneticmodel-consts-mu0"]], "micromagneticmodel.consts.muB": [[103, "micromagneticmodel-consts-mub"]], "micromagneticmodel.examples": [[104, "module-micromagneticmodel.examples"]], "micromagneticmodel.examples.macrospin": [[105, "micromagneticmodel-examples-macrospin"]], "micromagneticmodel.test": [[106, "micromagneticmodel-test"]], "micromagnetictests": [[107, "module-micromagnetictests"], [220, "micromagnetictests"], [220, null]], "micromagnetictests.calculatortests": [[108, "module-micromagnetictests.calculatortests"]], "TestCompute": [[109, "testcompute"]], "TestCubicAnisotropy": [[110, "testcubicanisotropy"]], "TestDMI": [[111, "testdmi"]], "TestDamping": [[112, "testdamping"]], "TestDemag": [[113, "testdemag"]], "TestDynamics": [[114, "testdynamics"]], "TestEnergy": [[115, "testenergy"]], "TestExchange": [[116, "testexchange"]], "TestFixedSubregions": [[117, "testfixedsubregions"]], "TestHysteresisDriver": [[118, "testhysteresisdriver"]], "TestMesh": [[119, "testmesh"]], "TestMinDriver": [[120, "testmindriver"]], "TestPrecession": [[121, "testprecession"]], "TestRKKY": [[122, "testrkky"]], "TestSlonczewski": [[123, "testslonczewski"]], "TestThreads": [[124, "testthreads"]], "TestTimeDriver": [[125, "testtimedriver"]], "TestUniaxialAnisotropy": [[126, "testuniaxialanisotropy"]], "TestZeeman": [[127, "testzeeman"]], "TestZhangLi": [[128, "testzhangli"]], "micromagnetictests.calculatortests.test_dirname": [[129, "micromagnetictests-calculatortests-test-dirname"]], "micromagnetictests.calculatortests.test_format": [[130, "micromagnetictests-calculatortests-test-format"]], "micromagnetictests.calculatortests.test_info_file": [[131, "micromagnetictests-calculatortests-test-info-file"]], "micromagnetictests.calculatortests.test_multiple_drives": [[132, "micromagnetictests-calculatortests-test-multiple-drives"]], "micromagnetictests.calculatortests.test_outputstep": [[133, "micromagnetictests-calculatortests-test-outputstep"]], "micromagnetictests.calculatortests.test_schedule": [[134, "micromagnetictests-calculatortests-test-schedule"]], "micromagnetictests.calculatortests.test_skyrmion": [[135, "micromagnetictests-calculatortests-test-skyrmion"]], "micromagnetictests.calculatortests.test_stdprob3": [[136, "micromagnetictests-calculatortests-test-stdprob3"]], "micromagnetictests.calculatortests.test_stdprob4": [[137, "micromagnetictests-calculatortests-test-stdprob4"]], "micromagnetictests.calculatortests.test_stdprob5": [[138, "micromagnetictests-calculatortests-test-stdprob5"]], "micromagnetictests.get_tests": [[139, "micromagnetictests-get-tests"]], "micromagnetictests.test": [[140, "micromagnetictests-test"]], "mumax3c": [[141, "module-mumax3c"], [221, "mumax3c"]], "MinDriver": [[142, "mindriver"], [159, "mindriver"]], "RelaxDriver": [[143, "relaxdriver"]], "TimeDriver": [[144, "timedriver"], [163, "timedriver"]], "mumax3c.delete": [[145, "mumax3c-delete"]], "mumax3c.mumax3": [[146, "module-mumax3c.mumax3"]], "ExeMumax3Runner": [[147, "exemumax3runner"]], "Mumax3Runner": [[148, "mumax3runner"]], "Runner": [[149, "runner"], [173, "runner"]], "mumax3c.mumax3.overhead": [[150, "mumax3c-mumax3-overhead"]], "mumax3c.runner": [[151, "mumax3c-runner"]], "mumax3c.test": [[152, "mumax3c-test"]], "mumax3c.test_docker": [[153, "mumax3c-test-docker"]], "oommfc": [[154, "module-oommfc"], [293, "oommfc"], [293, null]], "CGEvolver": [[155, "cgevolver"]], "EulerEvolver": [[157, "eulerevolver"]], "HysteresisDriver": [[158, "hysteresisdriver"]], "RungeKuttaEvolver": [[160, "rungekuttaevolver"]], "SpinTEvolver": [[161, "spintevolver"]], "SpinXferEvolver": [[162, "spinxferevolver"]], "UHH_ThetaEvolver": [[164, "uhh-thetaevolver"], [309, "UHH_ThetaEvolver"]], "Xf_ThermHeunEvolver": [[165, "xf-thermheunevolver"], [309, "Xf_ThermHeunEvolver"]], "Xf_ThermSpinXferEvolver": [[166, "xf-thermspinxferevolver"], [309, "Xf_ThermSpinXferEvolver"]], "oommfc.compute": [[167, "oommfc-compute"]], "oommfc.delete": [[168, "oommfc-delete"]], "oommfc.oommf": [[169, "module-oommfc.oommf"]], "DockerOOMMFRunner": [[170, "dockeroommfrunner"]], "ExeOOMMFRunner": [[171, "exeoommfrunner"]], "OOMMFRunner": [[172, "oommfrunner"]], "TclOOMMFRunner": [[174, "tcloommfrunner"]], "oommfc.oommf.overhead": [[175, "oommfc-oommf-overhead"]], "oommfc.runner": [[176, "oommfc-runner"]], "oommfc.test": [[177, "oommfc-test"]], "oommfc.test_docker": [[178, "oommfc-test-docker"]], "ubermag": [[179, "module-ubermag"], [294, "ubermag"], [294, null]], "ubermag.debug_info": [[180, "ubermag-debug-info"]], "ubermag.test": [[181, "ubermag-test"]], "ubermagtable": [[182, "module-ubermagtable"], [295, "ubermagtable"], [295, null]], "Table": [[183, "table"]], "ubermagtable.interact": [[184, "ubermagtable-interact"]], "ubermagtable.test": [[185, "ubermagtable-test"]], "ubermagtable.util": [[186, "module-ubermagtable.util"]], "ubermagtable.util.columns": [[187, "ubermagtable-util-columns"]], "ubermagtable.util.data": [[188, "ubermagtable-util-data"]], "ubermagtable.util.units": [[189, "ubermagtable-util-units"]], "ubermagutil": [[190, "module-ubermagutil"], [296, "ubermagutil"], [296, null]], "ubermagutil.changedir": [[191, "ubermagutil-changedir"]], "ubermagutil.hysteresis_values": [[192, "ubermagutil-hysteresis-values"]], "ubermagutil.inherit_docs": [[193, "ubermagutil-inherit-docs"]], "ubermagutil.setup_logging": [[194, "ubermagutil-setup-logging"]], "ubermagutil.test": [[195, "ubermagutil-test"]], "ubermagutil.typesystem": [[196, "module-ubermagutil.typesystem"]], "Descriptor": [[197, "descriptor"]], "Dictionary": [[198, "dictionary"], [268, "Dictionary"], [271, "Dictionary"], [274, "Dictionary"], [276, "Dictionary"]], "Name": [[199, "name"]], "Parameter": [[200, "parameter"]], "Scalar": [[201, "scalar"], [321, "Scalar"]], "Subset": [[202, "subset"]], "Typed": [[203, "typed"]], "Vector": [[204, "vector"], [321, "Vector"]], "ubermagutil.typesystem.typesystem": [[205, "ubermagutil-typesystem-typesystem"]], "ubermagutil.units": [[206, "module-ubermagutil.units"]], "ubermagutil.units.si_max_multiplier": [[207, "ubermagutil-units-si-max-multiplier"]], "ubermagutil.units.si_multiplier": [[208, "ubermagutil-units-si-multiplier"]], "API Reference": [[209, "api-reference"]], "Changelog": [[210, "changelog"]], "2023.11 (Nov 25, 2023)": [[210, "nov-25-2023"]], "modified": [[210, "modified"]], "fixed": [[210, "fixed"]], "2023.10 (Oct 23, 2023)": [[210, "oct-23-2023"]], "Breaking changes in discretisedfield": [[210, "breaking-changes-in-discretisedfield"]], "Added": [[210, "added"], [210, "id3"], [210, "id7"], [210, "id11"], [210, "id14"], [210, "id18"]], "Changed": [[210, "changed"], [210, "id4"], [210, "id6"], [210, "id8"], [210, "id15"]], "Fixed": [[210, "id1"], [210, "id2"], [210, "id5"], [210, "id9"], [210, "id10"], [210, "id12"], [210, "id13"], [210, "id16"], [210, "id19"]], "0.66.1 (Feb 3, 2023)": [[210, "feb-3-2023"]], "0.66.0 (Oct 20, 2022)": [[210, "oct-20-2022"]], "0.65.0 (Jul 17, 2022)": [[210, "jul-17-2022"]], "0.64.0 (Jul 03, 2022)": [[210, "jul-03-2022"]], "0.63.0 (Jun 29, 2022)": [[210, "jun-29-2022"]], "0.62.1 (Jun 09, 2022)": [[210, "jun-09-2022"]], "0.62.0 (May 22, 2022)": [[210, "may-22-2022"]], "Removed": [[210, "removed"]], "0.61.2 (Mar 17, 2022)": [[210, "mar-17-2022"]], "0.61.0 (Feb 22, 2022)": [[210, "feb-22-2022"]], "General": [[210, "general"], [210, "id17"]], "0.60.0 (Oct 1, 2021)": [[210, "oct-1-2021"]], "0.51 (Feb 10, 2021)": [[210, "feb-10-2021"]], "Contributing": [[211, "contributing"]], "Bugs": [[211, "bugs"]], "Fixing a Bug": [[211, "fixing-a-bug"]], "Feature requests": [[211, "feature-requests"]], "Documentation": [[211, "documentation"], [213, "documentation"]], "Demo": [[212, "Demo"]], "Vortex dynamics": [[212, "Vortex-dynamics"]], "System initialisation": [[212, "System-initialisation"]], "Energy minimisation": [[212, "Energy-minimisation"]], "Displacement with magnetic field": [[212, "Displacement-with-magnetic-field"]], "Free relaxation": [[212, "Free-relaxation"]], "Data analysis": [[212, "Data-analysis"]], "Spatially averaged data": [[212, "Spatially-averaged-data"]], "Spatially resolved data": [[212, "Spatially-resolved-data"]], "Trajectory of the vortex core": [[212, "Trajectory-of-the-vortex-core"]], "Compatibility: Ubermag - OOMMF - mumax3": [[214, "compatibility-ubermag-oommf-mumax3"]], "Supported features": [[214, "supported-features"]], "Energy Terms": [[214, "energy-terms"]], "Dynamics Terms": [[214, "dynamics-terms"]], "Drivers & Evolvers": [[214, "drivers-evolvers"]], "Compatible versions": [[214, "compatible-versions"]], "Package documentation": [[216, "package-documentation"]], "Defining a uniform field": [[222, "Defining-a-uniform-field"]], "Scalar field": [[222, "Scalar-field"]], "Vector field": [[222, "Vector-field"]], "Norm": [[222, "Norm"]], "Naming components": [[222, "Naming-components"]], "Field units": [[222, "Field-units"]], "FFT Tutorial with discretisedfield": [[223, "FFT-Tutorial-with-discretisedfield"]], "Setup field": [[223, "Setup-field"]], "FFT Methods": [[223, "FFT-Methods"]], "FFT": [[223, "FFT"]], "iFFT": [[223, "iFFT"]], "rFFT": [[223, "rFFT"]], "irFFT": [[223, "irFFT"]], "Angular frequency": [[223, "Angular-frequency"]], "Visualising and analysing FFTs": [[223, "Visualising-and-analysing-FFTs"]], "Visualising field using holoviews": [[224, "Visualising-field-using-holoviews"]], "Scalar plot": [[224, "Scalar-plot"]], "Vector plot": [[224, "Vector-plot"]], "Contour lines": [[224, "Contour-lines"]], "Combining multiple plots": [[224, "Combining-multiple-plots"]], "Field visualisation using k3d": [[225, "Field-visualisation-using-k3d"]], "Multiple visualisation on the same plot": [[225, "Multiple-visualisation-on-the-same-plot"]], "k3d interactive plots": [[225, "k3d-interactive-plots"]], "Visualising field using matplotlib": [[226, "Visualising-field-using-matplotlib"]], "Plotting using Field.mpl()": [[226, "Plotting-using-Field.mpl()"]], "Available plotting functions": [[226, "Available-plotting-functions"]], "Scalar field visualisation \u2013 mpl.scalar": [[226, "Scalar-field-visualisation-\u2013-mpl.scalar"]], "Vector field visualisation \u2013 mpl.vector": [[226, "Vector-field-visualisation-\u2013-mpl.vector"]], "2d vector fields": [[226, "2d-vector-fields"]], "Contour line plots \u2013 mpl.contour": [[226, "Contour-line-plots-\u2013-mpl.contour"]], "HSL plots \u2013 mpl.lightness": [[226, "HSL-plots-\u2013-mpl.lightness"]], "colorwheel": [[226, "colorwheel"]], "Combining scalar and vector plots \u2013 mpl()": [[226, "Combining-scalar-and-vector-plots-\u2013-mpl()"]], "Building a custom plot": [[226, "Building-a-custom-plot"]], "[DEPRECATED] Interactive plots": [[226, "[DEPRECATED]-Interactive-plots"]], "Plotting field values along the line": [[226, "Plotting-field-values-along-the-line"]], "Field normalisation": [[227, "Field-normalisation"]], "Field operations": [[228, "Field-operations"]], "Sampling the field": [[228, "Sampling-the-field"]], "Extracting the component of a vector field": [[228, "Extracting-the-component-of-a-vector-field"]], "Extracting smaller region": [[228, "Extracting-smaller-region"]], "Extracting subfield on aligned mesh": [[228, "Extracting-subfield-on-aligned-mesh"]], "Extracting field on any mesh": [[228, "Extracting-field-on-any-mesh"]], "Computing the mean": [[228, "Computing-the-mean"]], "Iterating through the field": [[228, "Iterating-through-the-field"]], "Sampling the field along the line": [[228, "Sampling-the-field-along-the-line"]], "Intersecting the field with a plane": [[228, "Intersecting-the-field-with-a-plane"]], "Selecting part of the field": [[228, "Selecting-part-of-the-field"]], "Cascading the operations": [[228, "Cascading-the-operations"]], "Complex fields": [[228, "Complex-fields"]], "Algebra operations": [[228, "Algebra-operations"]], "+ operation": [[228, "+-operation"]], "- operation": [[228, "--operation"]], "* operation": [[228, "*-operation"]], "/ operation": [[228, "/-operation"]], "** operator": [[228, "**-operator"]], "Compund operations": [[228, "Compund-operations"]], "Vector products": [[228, "Vector-products"]], "Dot product": [[228, "Dot-product"]], "Cross product": [[228, "Cross-product"]], "Vector calculus": [[228, "Vector-calculus"]], "Directional derivative \\left(\\frac{\\partial}{\\partial x_{i}}f\\right)": [[228, "Directional-derivative-\\left(\\frac{\\partial}{\\partial-x_{i}}f\\right)"]], "Gradient (\\nabla f)": [[228, "Gradient-(\\nabla-f)"]], "Divergence (\\nabla \\cdot f)": [[228, "Divergence-(\\nabla-\\cdot-f)"]], "Curl (\\nabla \\times f)": [[228, "Curl-(\\nabla-\\times-f)"]], "Laplace operator (\\nabla^{2} f)": [[228, "Laplace-operator-(\\nabla^{2}-f)"]], "Integrals": [[228, "Integrals"]], "Volume integral": [[228, "Volume-integral"]], "Surface integral": [[228, "Surface-integral"]], "Line integrals": [[228, "Line-integrals"]], "Example": [[228, "Example"], [330, "Example"]], "Resampling the field": [[228, "Resampling-the-field"]], "Applying numpys universal functions": [[228, "Applying-numpys-universal-functions"]], "Other": [[228, "Other"], [231, "Other"]], "Reading and writing fields": [[229, "Reading-and-writing-fields"]], "Writing the field to a file": [[229, "Writing-the-field-to-a-file"]], "Reading files": [[229, "Reading-files"]], "Subregions": [[229, "Subregions"]], "Field rotation": [[230, "Field-rotation"]], "Rotating a field": [[230, "Rotating-a-field"]], "Original field": [[230, "Original-field"]], "rotate90": [[230, "rotate90"]], "Rotation methods": [[230, "Rotation-methods"]], "Rotations by multiples of 90\u00b0": [[230, "Rotations-by-multiples-of-90\u00b0"]], "Rotations about arbitrary angles": [[230, "Rotations-about-arbitrary-angles"]], "Rotating a vector to point in a certain direction": [[230, "Rotating-a-vector-to-point-in-a-certain-direction"]], "Details of the rotation process": [[230, "Details-of-the-rotation-process"]], "1. Rotation of the region": [[230, "1.-Rotation-of-the-region"]], "2. Rotation of the mesh": [[230, "2.-Rotation-of-the-mesh"]], "3. Rotation of the field values": [[230, "3.-Rotation-of-the-field-values"]], "Spatially varying fields": [[231, "Spatially-varying-fields"]], "Using a Python function": [[231, "Using-a-Python-function"]], "Using mesh regions": [[231, "Using-mesh-regions"]], "Using another Field object": [[231, "Using-another-Field-object"]], "Creating a field with coordinate values": [[231, "Creating-a-field-with-coordinate-values"]], "Field tools": [[232, "Field-tools"]], "1. Topological charge/topological charge density": [[232, "1.-Topological-charge/topological-charge-density"]], "2. Angles between cells": [[232, "2.-Angles-between-cells"]], "3. Emergent magnetic field and counting of BPs": [[232, "3.-Emergent-magnetic-field-and-counting-of-BPs"]], "4. Demag tensor": [[232, "4.-Demag-tensor"]], "Field Valid": [[233, "Field-Valid"]], "Plotting": [[233, "Plotting"]], "Operations": [[233, "Operations"]], "Line object": [[234, "Line-object"]], "Line visualisation": [[234, "Line-visualisation"]], "Mesh basics": [[235, "Mesh-basics"]], "Scale and translate": [[235, "Scale-and-translate"]], "Mesh alignment": [[235, "Mesh-alignment"]], "Other dimensions": [[235, "Other-dimensions"], [243, "Other-dimensions"]], "Mesh boundary conditions": [[236, "Mesh-boundary-conditions"]], "Periodic boundary conditions": [[236, "Periodic-boundary-conditions"], [314, "Periodic-boundary-conditions"]], "Experimental: Neumann and Dirichet boundary conditions": [[236, "Experimental:-Neumann-and-Dirichet-boundary-conditions"]], "Mesh plane and line": [[237, "Mesh-plane-and-line"]], "Plane mesh": [[237, "Plane-mesh"]], "Mesh pad": [[238, "Mesh-pad"]], "Mesh subregions": [[239, "Mesh-subregions"]], "Mesh subregions visualisation": [[239, "Mesh-subregions-visualisation"]], "mpl": [[239, "mpl"], [240, "mpl"], [245, "mpl"]], "k3d": [[239, "k3d"], [240, "k3d"], [245, "k3d"]], "Mesh visualisation": [[240, "Mesh-visualisation"]], "Basic plotting": [[240, "Basic-plotting"], [245, "Basic-plotting"]], "Advanced plotting": [[240, "Advanced-plotting"], [245, "Advanced-plotting"]], "Mesh widgets": [[241, "Mesh-widgets"]], "Slider": [[241, "Slider"], [284, "Slider"]], "Axis selector": [[241, "Axis-selector"]], "ovf2vtk tool": [[242, "ovf2vtk-tool"]], "1. Single file": [[242, "1.-Single-file"]], "2. Multiple files": [[242, "2.-Multiple-files"]], "3. Wildcard": [[242, "3.-Wildcard"]], "Region basics": [[243, "Region-basics"]], "Scale": [[243, "Scale"]], "Region facing surfaces": [[244, "Region-facing-surfaces"]], "Region visualisation": [[245, "Region-visualisation"]], "Importing/Exporting field from/to xarray.DataArray": [[246, "Importing/Exporting-field-from/to-xarray.DataArray"]], "Exporting discretisedfield.Field to xarray.DataArray": [[246, "Exporting-discretisedfield.Field-to-xarray.DataArray"]], "Few useful xarray.DataArray methods": [[246, "Few-useful-xarray.DataArray-methods"]], "to_xarray exceptions": [[246, "to_xarray-exceptions"]], "from_xarray exceptions and expected properties of input xarray.DataArray": [[246, "from_xarray-exceptions-and-expected-properties-of-input-xarray.DataArray"]], "DC magnetometry": [[247, "DC-magnetometry"]], "Magnetometry Reference frame": [[247, "Magnetometry-Reference-frame"], [253, "Magnetometry-Reference-frame"]], "The micromagnetic simulation": [[247, "The-micromagnetic-simulation"], [248, "The-micromagnetic-simulation"], [249, "The-micromagnetic-simulation"], [251, "The-micromagnetic-simulation"], [252, "The-micromagnetic-simulation"], [253, "The-micromagnetic-simulation"], [254, "The-micromagnetic-simulation"]], "DC Magnetisation": [[247, "DC-Magnetisation"]], "Lorentz Transmission Electron Microscopy": [[248, "Lorentz-Transmission-Electron-Microscopy"]], "LTEM Reference frame": [[248, "LTEM-Reference-frame"]], "Computing LTEM images": [[248, "Computing-LTEM-images"], [250, "Computing-LTEM-images"]], "Defocused Imaging": [[248, "Defocused-Imaging"]], "Integrated magnetic flux density": [[248, "Integrated-magnetic-flux-density"]], "Magnetic Force Microscopy": [[249, "Magnetic-Force-Microscopy"]], "MFM Reference frame": [[249, "MFM-Reference-frame"]], "Computing MFM images": [[249, "Computing-MFM-images"]], "The finite size of the tip": [[249, "The-finite-size-of-the-tip"]], "Quick plots": [[249, "Quick-plots"], [254, "Quick-plots"]], "Using Rotations with mag2exp": [[250, "Using-Rotations-with-mag2exp"]], "Small Angle Neutron Scattering": [[251, "Small-Angle-Neutron-Scattering"], [329, "Small-Angle-Neutron-Scattering"]], "SANS Reference frame": [[251, "SANS-Reference-frame"]], "Computing SANS Cross-sections": [[251, "Computing-SANS-Cross-sections"]], "Small Angle X-ray Scattering": [[252, "Small-Angle-X-ray-Scattering"]], "SAXS Reference frame": [[252, "SAXS-Reference-frame"]], "Computing SAXS Cross-sections": [[252, "Computing-SAXS-Cross-sections"]], "Torque magnetometry": [[253, "Torque-magnetometry"], [329, "Torque-magnetometry"]], "Computing Torque Magnetometry": [[253, "Computing-Torque-Magnetometry"]], "Recreating experiments": [[253, "Recreating-experiments"]], "References": [[253, "References"], [298, "References"], [299, "References"], [300, "References"], [301, "References"], [325, "References"]], "X-ray Holography": [[254, "X-ray-Holography"], [329, "X-ray-Holography"]], "X-ray holography reference frame": [[254, "X-ray-holography-reference-frame"]], "Computing X-ray holography images": [[254, "Computing-X-ray-holography-images"]], "Rotations": [[254, "Rotations"]], "Analysing simulation results": [[255, "Analysing-simulation-results"]], "Widgets": [[255, "Widgets"]], "Interactive plots": [[256, "Interactive-plots"]], "Visualising computed magnetisation data": [[256, "Visualising-computed-magnetisation-data"]], "Time evolution of the magnetisation": [[256, "Time-evolution-of-the-magnetisation"], [256, "id1"], [256, "id2"]], "Combining multiple drives": [[256, "Combining-multiple-drives"]], "Computing derived quantities": [[256, "Computing-derived-quantities"]], "Selecting only a part of the drive": [[256, "Selecting-only-a-part-of-the-drive"]], "Normalised magnetisation": [[256, "Normalised-magnetisation"]], "Topological charge density - example 1": [[256, "Topological-charge-density---example-1"]], "Topological charge density - example 2": [[256, "Topological-charge-density---example-2"]], "Hysteresis simulation": [[256, "Hysteresis-simulation"]], "Constants": [[257, "Constants"]], "1. Magnetic constant": [[257, "1.-Magnetic-constant"]], "2. Elementary charge": [[257, "2.-Elementary-charge"]], "3. Electron\u2019s mass": [[257, "3.-Electron's-mass"]], "4. Boltzmann constant": [[257, "4.-Boltzmann-constant"]], "5. Planck\u2019s constant": [[257, "5.-Planck's-constant"]], "6. Lande g-factor": [[257, "6.-Lande-g-factor"]], "7. Reduced Planck constant": [[257, "7.-Reduced-Planck-constant"]], "8. Gyrotropic ratio": [[257, "8.-Gyrotropic-ratio"]], "9. Bohr magneton": [[257, "9.-Bohr-magneton"]], "10. LLG precession term gamma": [[257, "10.-LLG-precession-term-gamma"]], "Deriving a dynamics term": [[258, "Deriving-a-dynamics-term"]], "Deriving an energy term": [[259, "Deriving-an-energy-term"]], "Dynamics terms and dynamics equation": [[260, "Dynamics-terms-and-dynamics-equation"]], "Dynamics terms": [[260, "Dynamics-terms"]], "1. Precession": [[260, "1.-Precession"]], "2. Damping": [[260, "2.-Damping"]], "3. Zhang-Li term": [[260, "3.-Zhang-Li-term"]], "Dynamics equation": [[260, "Dynamics-equation"], [326, "Dynamics-equation"]], "Accesing individual dynamics terms from the dynamics equation": [[260, "Accesing-individual-dynamics-terms-from-the-dynamics-equation"]], "Energy terms and energy equation": [[261, "Energy-terms-and-energy-equation"]], "Energy terms": [[261, "Energy-terms"]], "1. Exchange energy": [[261, "1.-Exchange-energy"]], "2. Zeeman energy": [[261, "2.-Zeeman-energy"]], "Time-independent": [[261, "Time-independent"]], "Time-dependent": [[261, "Time-dependent"]], "3. Uniaxial anisotropy": [[261, "3.-Uniaxial-anisotropy"]], "4. Demagnetisation energy": [[261, "4.-Demagnetisation-energy"]], "5. Dzyaloshinskii-Moriya energy": [[261, "5.-Dzyaloshinskii-Moriya-energy"]], "6. Cubic anisotropy": [[261, "6.-Cubic-anisotropy"]], "7. RKKY": [[261, "7.-RKKY"]], "Energy equation": [[261, "Energy-equation"], [327, "Energy-equation"]], "Accesing the individual energy terms from the energy equation": [[261, "Accesing-the-individual-energy-terms-from-the-energy-equation"]], "Deriving evolver and driver classes": [[262, "Deriving-evolver-and-driver-classes"]], "Multiple energy terms of the same class": [[263, "Multiple-energy-terms-of-the-same-class"], [312, "Multiple-energy-terms-of-the-same-class"]], "Defining micromagnetic system": [[264, "Defining-micromagnetic-system"]], "Term parameters": [[265, "Term-parameters"]], "1. Constant parameters": [[265, "1.-Constant-parameters"]], "2. Parameters defined \u201cper region\u201d": [[265, "2.-Parameters-defined-%22per-region%22"]], "3. Parameters defined using discretisedfield.Field object": [[265, "3.-Parameters-defined-using-discretisedfield.Field-object"]], "Usage": [[266, "Usage"]], "Controlling the default runner": [[267, "Controlling-the-default-runner"]], "Different runners": [[267, "Different-runners"]], "The default runner": [[267, "The-default-runner"]], "Defaults for the different runner types": [[267, "Defaults-for-the-different-runner-types"]], "Changing the default runner": [[267, "Changing-the-default-runner"]], "Going back to the default runner": [[267, "Going-back-to-the-default-runner"]], "Tutorial 05: Cubic anisotropy energy term": [[268, "Tutorial-05:-Cubic-anisotropy-energy-term"]], "Spatially constant K_{1} and \\mathbf{u}": [[268, "Spatially-constant-K_{1}-and-\\mathbf{u}"]], "Spatially varying \\mathbf{K}_{1}": [[268, "Spatially-varying-\\mathbf{K}_{1}"]], "discretisedfield.Field": [[268, "discretisedfield.Field"], [271, "discretisedfield.Field"], [274, "discretisedfield.Field"], [276, "discretisedfield.Field"]], "Custom directory name": [[269, "Custom-directory-name"]], "Tutorial 04: Dzyaloshinskii-Moriya energy term": [[270, "Tutorial-04:-Dzyaloshinskii-Moriya-energy-term"]], "Spatially constant D": [[270, "Spatially-constant-D"]], "Spatially varying D": [[270, "Spatially-varying-D"]], "Tutorial 02: Exchange energy term": [[271, "Tutorial-02:-Exchange-energy-term"]], "Spatially constant A": [[271, "Spatially-constant-A"]], "Spatially varying A": [[271, "Spatially-varying-A"]], "MinDriver steps": [[272, "MinDriver-steps"]], "micromagneticdata analysis": [[272, "micromagneticdata-analysis"], [311, "micromagneticdata-analysis"]], "Running simulations in parallel": [[273, "Running-simulations-in-parallel"]], "Tutorial 03: Uniaxial anisotropy energy term": [[274, "Tutorial-03:-Uniaxial-anisotropy-energy-term"]], "Spatially constant K and \\mathbf{u}": [[274, "Spatially-constant-K-and-\\mathbf{u}"]], "Spatially varying \\mathbf{K}": [[274, "Spatially-varying-\\mathbf{K}"]], "Higher-order uniaxial anisotropy": [[274, "Higher-order-uniaxial-anisotropy"]], "Verbosity levels": [[275, "Verbosity-levels"]], "One summary line (default)": [[275, "One-summary-line-(default)"]], "Silent run": [[275, "Silent-run"]], "Progress bar (TimeDriver only)": [[275, "Progress-bar-(TimeDriver-only)"]], "Tutorial 01: Zeeman energy term": [[276, "Tutorial-01:-Zeeman-energy-term"]], "Spatially constant \\mathbf{H}": [[276, "Spatially-constant-\\mathbf{H}"], [318, "Spatially-constant-\\mathbf{H}"]], "Spatially varying \\mathbf{H}": [[276, "Spatially-varying-\\mathbf{H}"]], "HDF5 specification in Ubermag": [[277, "HDF5-specification-in-Ubermag"]], "Version 0.1": [[277, "Version-0.1"]], "Single field: discretisedfield": [[277, "Single-field:-discretisedfield"]], "The first group is called field. It contains:": [[277, "The-first-group-is-called-field.-It-contains:"]], "The second group is called mesh. It contains:": [[277, "The-second-group-is-called-mesh.-It-contains:"]], "The third group is called region. It contains:": [[277, "The-third-group-is-called-region.-It-contains:"]], "Examples:": [[277, "Examples:"]], "Multiple fields or time series: micromagneticdata": [[277, "Multiple-fields-or-time-series:-micromagneticdata"]], "Internal notes:": [[277, "Internal-notes:"]], "Changes": [[277, "Changes"]], "Collecting debug information": [[278, "Collecting-debug-information"]], "Table basics": [[279, "Table-basics"]], "Table FFT": [[280, "Table-FFT"]], "Table interactive plot": [[281, "Table-interactive-plot"]], "Table merge": [[282, "Table-merge"]], "Table visualisation": [[283, "Table-visualisation"]], "Table widgets": [[284, "Table-widgets"]], "Value selector": [[284, "Value-selector"]], "Constant attributes": [[285, "Constant-attributes"]], "Hysteresis values": [[286, "Hysteresis-values"]], "Imposing typesystem on a class": [[287, "Imposing-typesystem-on-a-class"]], "Properties": [[287, "Properties"]], "Imposing typesystem using ubermagutil.typesystem": [[287, "Imposing-typesystem-using-ubermagutil.typesystem"]], "Deleting an attribute": [[287, "Deleting-an-attribute"]], "inherit_docs decorator": [[288, "inherit_docs-decorator"]], "Logging control": [[289, "Logging-control"]], "Defining otherwise type": [[290, "Defining-otherwise-type"]], "Parameter descriptor": [[291, "Parameter-descriptor"]], "Extracting the SI prefix": [[292, "Extracting-the-SI-prefix"]], "Examples": [[297, "examples"]], "Standard problem 3": [[298, "Standard-problem-3"]], "Problem specification": [[298, "Problem-specification"], [299, "Problem-specification"], [300, "Problem-specification"], [301, "Problem-specification"]], "Simulation": [[298, "Simulation"], [299, "Simulation"], [300, "Simulation"], [302, "Simulation"]], "Relaxed magnetisation states": [[298, "Relaxed-magnetisation-states"]], "Energy crossing": [[298, "Energy-crossing"]], "Standard problem 4": [[299, "Standard-problem-4"]], "First stage": [[299, "First-stage"]], "Second stage: field \\mathbf{B}_{1}": [[299, "Second-stage:-field-\\mathbf{B}_{1}"]], "Postprocessing": [[299, "Postprocessing"], [301, "Postprocessing"]], "Standard problem 5": [[300, "Standard-problem-5"]], "Spin-polarised current": [[300, "Spin-polarised-current"]], "FMR standard problem": [[301, "FMR-standard-problem"]], "Relaxation stage": [[301, "Relaxation-stage"]], "Dynamic stage": [[301, "Dynamic-stage"]], "Deriving energy values": [[302, "Deriving-energy-values"]], "Effective field": [[302, "Effective-field"], [308, "Effective-field"], [308, "id3"], [308, "id6"], [308, "id9"]], "Relax the system": [[302, "Relax-the-system"]], "Computing energies of individual term": [[302, "Computing-energies-of-individual-term"]], "Calculating a stray field using an airbox method": [[303, "Calculating-a-stray-field-using-an-airbox-method"]], "Skyrmion in a disk": [[304, "Skyrmion-in-a-disk"], [327, "Skyrmion-in-a-disk"]], "Current induced domain wall motion using STT": [[305, "Current-induced-domain-wall-motion-using-STT"]], "Problem description": [[305, "Problem-description"], [325, "Problem-description"]], "Domain-wall pair": [[305, "Domain-wall-pair"]], "Single domain wall": [[305, "Single-domain-wall"]], "Choosing runner": [[306, "Choosing-runner"]], "Energy term computations": [[307, "Energy-term-computations"]], "Field operations 2": [[308, "Field-operations-2"]], "Magnetisation": [[308, "Magnetisation"]], "Energy density": [[308, "Energy-density"], [308, "id1"], [308, "id4"], [308, "id7"]], "Uniaxial anisotropy": [[308, "Uniaxial-anisotropy"], [327, "Uniaxial-anisotropy"]], "DMI (T)": [[308, "DMI-(T)"]], "(Oversimplified) micromagnetic calculator": [[308, "(Oversimplified)-micromagnetic-calculator"]], "Simulation at finite temperature": [[309, "Simulation-at-finite-temperature"]], "Fixed subregions": [[310, "Fixed-subregions"]], "Hysteresis simulations": [[311, "Hysteresis-simulations"]], "Plotting hysteresis loop": [[311, "Plotting-hysteresis-loop"]], "Negative exchange energy constant": [[313, "Negative-exchange-energy-constant"]], "RKKY energy term": [[315, "RKKY-energy-term"]], "Sine-hysteresis": [[316, "Sine-hysteresis"]], "Both spatially and time varying field": [[317, "Both-spatially-and-time-varying-field"]], "Spatially varying parameters 1": [[318, "Spatially-varying-parameters-1"]], "Spatially varying H": [[318, "Spatially-varying-H"]], "Spatially varying parameters 2": [[319, "Spatially-varying-parameters-2"]], "Time-varying field": [[320, "Time-varying-field"]], "Time-dependent fields and currents": [[321, "Time-dependent-fields-and-currents"]], "Zeeman field": [[321, "Zeeman-field"]], "Python function": [[321, "Python-function"], [321, "id1"]], "How to properly simulate this field pulse": [[321, "How-to-properly-simulate-this-field-pulse"]], "Pre-defined functions": [[321, "Pre-defined-functions"]], "Experimentally measured time-dependence": [[321, "Experimentally-measured-time-dependence"]], "Tcl": [[321, "Tcl"], [321, "id2"]], "Slonczewski and Zhang-Li currents": [[321, "Slonczewski-and-Zhang-Li-currents"]], "FAQ": [[322, "faq"]], "Number of files written to disk with TimeDriver": [[322, "number-of-files-written-to-disk-with-timedriver"]], "Getting started": [[323, "getting-started"]], "Jupyter lab": [[324, "jupyter-lab"]], "Exercise: Domain wall pair conversion": [[325, "Exercise:-Domain-wall-pair-conversion"]], "Solution": [[325, "Solution"]], "Macrospin": [[326, "Macrospin"]], "Dynamics simulation": [[326, "Dynamics-simulation"]], "Simulation results": [[326, "Simulation-results"]], "Exercise 1": [[326, "Exercise-1"]], "Exercise 2": [[326, "Exercise-2"]], "Exercise 3": [[326, "Exercise-3"]], "Zeeman energy": [[327, "Zeeman-energy"]], "Exchange energy": [[327, "Exchange-energy"]], "Dzyaloshinskii-Moriya energy": [[327, "Dzyaloshinskii-Moriya-energy"]], "Exchange and Zeeman energies": [[327, "Exchange-and-Zeeman-energies"]], "Competition of DMI and exchange": [[327, "Competition-of-DMI-and-exchange"]], "Our first ubermag simulation": [[328, "Our-first-ubermag-simulation"]], "The main object in Ubermag: System object": [[328, "The-main-object-in-Ubermag:-System-object"]], "1. Energy equation": [[328, "1.-Energy-equation"]], "2. Initial magnetisation": [[328, "2.-Initial-magnetisation"]], "Inspecting system object": [[328, "Inspecting-system-object"]], "Driving the system": [[328, "Driving-the-system"]], "Tutorial: mag2exp": [[329, "Tutorial:-mag2exp"]], "Setting up a system": [[329, "Setting-up-a-system"]], "Microscopy techniques": [[329, "Microscopy-techniques"]], "Lorentz TEM": [[329, "Lorentz-TEM"]], "Reciprocal space": [[329, "Reciprocal-space"]], "Magnetometry": [[329, "Magnetometry"]], "Magnetisation field": [[330, "Magnetisation-field"]], "Spatially varying field value": [[330, "Spatially-varying-field-value"]], "Spatially varying M_\\mathrm{s}": [[330, "Spatially-varying-M_\\mathrm{s}"]], "Exercise": [[330, "Exercise"]], "Python basics": [[331, "Python-basics"]], "Variables": [[331, "Variables"]], "Basic arithmetic operations": [[331, "Basic-arithmetic-operations"]], "1. Addition c = a + b": [[331, "1.-Addition-c-=-a-+-b"]], "2. Subtraction: a - b": [[331, "2.-Subtraction:-a---b"]], "3. Multiplication: a \\times b": [[331, "3.-Multiplication:-a-\\times-b"]], "4. Division: a / b": [[331, "4.-Division:-a-/-b"]], "5. Power a^{b}": [[331, "5.-Power-a^{b}"]], "6. More complicated operations": [[331, "6.-More-complicated-operations"]], "Sequences: lists and tuples": [[331, "Sequences:-lists-and-tuples"]], "Indexing": [[331, "Indexing"]], "Length (the number of elements in a sequence)": [[331, "Length-(the-number-of-elements-in-a-sequence)"]], "Unpacking": [[331, "Unpacking"]], "Sequences: numpy arrays": [[331, "Sequences:-numpy-arrays"]], "Dictionaries": [[331, "Dictionaries"]], "Conditional execution": [[331, "Conditional-execution"]], "Iteration": [[331, "Iteration"]], "Functions": [[331, "Functions"]], "Default values for arguments": [[331, "Default-values-for-arguments"]], "Accessing modules through import": [[331, "Accessing-modules-through-import"]], "Common mistakes": [[331, "Common-mistakes"]], "1. No colon": [[331, "1.-No-colon"]], "2. Lack of indentation": [[331, "2.-Lack-of-indentation"]], "3. Mixing incompatible types": [[331, "3.-Mixing-incompatible-types"]], "4. Using an undefined variable": [[331, "4.-Using-an-undefined-variable"]], "5. Module is not imported": [[331, "5.-Module-is-not-imported"]], "Object oriented programming basics": [[331, "Object-oriented-programming-basics"]], "Getting help": [[331, "Getting-help"]], "Further reading": [[331, "Further-reading"]], "Unit Conversions": [[332, "Unit-Conversions"]], "CGS to SI": [[332, "CGS-to-SI"]], "Equivalencies": [[332, "Equivalencies"]], "Parameters": [[332, "Parameters"]], "Atomistic": [[332, "Atomistic"], [332, "id1"], [332, "id2"], [332, "id4"]], "Micromagnetic": [[332, "Micromagnetic"], [332, "id3"]], "Micromagentic": [[332, "Micromagentic"]], "Saturation Magnetisation": [[332, "Saturation-Magnetisation"]], "Micromagnetics": [[332, "Micromagnetics"]], "Anisotropy": [[332, "Anisotropy"]], "Worked Example": [[332, "Worked-Example"]], "Help": [[333, "help"]], "How to prepare your request for help": [[333, "how-to-prepare-your-request-for-help"]], "rendered output is similar to": [[333, null], [333, null], [333, null]], "Help others": [[333, "help-others"]], "Ubermag": [[334, "ubermag"]], "Features and packages": [[334, "features-and-packages"]], "What is ubermag?": [[334, "what-is-ubermag"]], "Documentation and tutorials": [[334, "documentation-and-tutorials"]], "ubermag in the cloud": [[334, "ubermag-in-the-cloud"]], "Authors": [[334, "authors"]], "How to cite": [[334, "how-to-cite"]], "License": [[334, "license"]], "Acknowledgements": [[334, "acknowledgements"]], "Installation": [[335, "installation"], [335, "id1"]], "Standard installation \u2013 recommended": [[335, "standard-installation-recommended"]], "Installation environment": [[335, "installation-environment"]], "Installing a calculator": [[335, "installing-a-calculator"]], "Testing": [[335, "testing"]], "Update": [[335, "update"]], "Advanced installation": [[335, "advanced-installation"]], "Check the installation": [[335, "check-the-installation"]], "How does Ubermag find OOMMF?": [[335, "how-does-ubermag-find-oommf"]], "Development installation": [[335, "development-installation"]], "News": [[336, "news"]], "2022 winter workshop": [[336, "winter-workshop"]], "2022 summer code sprint": [[336, "summer-code-sprint"]]}, "indexentries": {"discretisedfield": [[0, "module-discretisedfield"]], "module": [[0, "module-discretisedfield"], [8, "module-discretisedfield.io"], [9, "module-discretisedfield.io.ovf2vtk"], [11, "module-discretisedfield.plotting"], [21, "module-discretisedfield.tools"], [31, "module-mag2exp"], [32, "module-mag2exp.ltem"], [37, "module-mag2exp.magnetometry"], [40, "module-mag2exp.mfm"], [42, "module-mag2exp.quick_plots"], [52, "module-mag2exp.sans"], [56, "module-mag2exp.x_ray"], [59, "module-micromagneticdata"], [67, "module-micromagneticmodel"], [89, "module-micromagneticmodel.abstract"], [93, "module-micromagneticmodel.consts"], [104, "module-micromagneticmodel.examples"], [107, "module-micromagnetictests"], [108, "module-micromagnetictests.calculatortests"], [141, "module-mumax3c"], [146, "module-mumax3c.mumax3"], [154, "module-oommfc"], [169, "module-oommfc.oommf"], [179, "module-ubermag"], [182, "module-ubermagtable"], [186, "module-ubermagtable.util"], [190, "module-ubermagutil"], [196, "module-ubermagutil.typesystem"], [206, "module-ubermagutil.units"]], "field (class in discretisedfield)": [[1, "discretisedfield.Field"]], "__abs__() (discretisedfield.field method)": [[1, "discretisedfield.Field.__abs__"]], "__add__() (discretisedfield.field method)": [[1, "discretisedfield.Field.__add__"]], "__array_ufunc__() (discretisedfield.field method)": [[1, "discretisedfield.Field.__array_ufunc__"]], "__call__() (discretisedfield.field method)": [[1, "discretisedfield.Field.__call__"]], "__dir__() (discretisedfield.field method)": [[1, "discretisedfield.Field.__dir__"]], "__eq__() (discretisedfield.field method)": [[1, "discretisedfield.Field.__eq__"]], "__getattr__() (discretisedfield.field method)": [[1, "discretisedfield.Field.__getattr__"]], "__getitem__() (discretisedfield.field method)": [[1, "discretisedfield.Field.__getitem__"]], "__hash__ (discretisedfield.field attribute)": [[1, "discretisedfield.Field.__hash__"]], "__iter__() (discretisedfield.field method)": [[1, "discretisedfield.Field.__iter__"]], "__lshift__() (discretisedfield.field method)": [[1, "discretisedfield.Field.__lshift__"]], "__mul__() (discretisedfield.field method)": [[1, "discretisedfield.Field.__mul__"]], "__neg__() (discretisedfield.field method)": [[1, "discretisedfield.Field.__neg__"]], "__pos__() (discretisedfield.field method)": [[1, "discretisedfield.Field.__pos__"]], "__pow__() (discretisedfield.field method)": [[1, "discretisedfield.Field.__pow__"]], "__repr__() (discretisedfield.field method)": [[1, "discretisedfield.Field.__repr__"]], "__sub__() (discretisedfield.field method)": [[1, "discretisedfield.Field.__sub__"]], "__truediv__() (discretisedfield.field method)": [[1, "discretisedfield.Field.__truediv__"]], "abs (discretisedfield.field property)": [[1, "discretisedfield.Field.abs"]], "allclose() (discretisedfield.field method)": [[1, "discretisedfield.Field.allclose"]], "angle() (discretisedfield.field method)": [[1, "discretisedfield.Field.angle"]], "array (discretisedfield.field property)": [[1, "discretisedfield.Field.array"]], "conjugate (discretisedfield.field property)": [[1, "discretisedfield.Field.conjugate"]], "cross() (discretisedfield.field method)": [[1, "discretisedfield.Field.cross"]], "curl (discretisedfield.field property)": [[1, "discretisedfield.Field.curl"]], "diff() (discretisedfield.field method)": [[1, "discretisedfield.Field.diff"]], "div (discretisedfield.field property)": [[1, "discretisedfield.Field.div"]], "dot() (discretisedfield.field method)": [[1, "discretisedfield.Field.dot"]], "fftn() (discretisedfield.field method)": [[1, "discretisedfield.Field.fftn"]], "from_xarray() (discretisedfield.field class method)": [[1, "discretisedfield.Field.from_xarray"]], "grad (discretisedfield.field property)": [[1, "discretisedfield.Field.grad"]], "hv (discretisedfield.field property)": [[1, "discretisedfield.Field.hv"]], "ifftn() (discretisedfield.field method)": [[1, "discretisedfield.Field.ifftn"]], "imag (discretisedfield.field property)": [[1, "discretisedfield.Field.imag"]], "integrate() (discretisedfield.field method)": [[1, "discretisedfield.Field.integrate"]], "irfftn() (discretisedfield.field method)": [[1, "discretisedfield.Field.irfftn"]], "k3d (discretisedfield.field property)": [[1, "discretisedfield.Field.k3d"]], "laplace (discretisedfield.field property)": [[1, "discretisedfield.Field.laplace"]], "line() (discretisedfield.field method)": [[1, "discretisedfield.Field.line"]], "mean() (discretisedfield.field method)": [[1, "discretisedfield.Field.mean"]], "mesh (discretisedfield.field property)": [[1, "discretisedfield.Field.mesh"]], "mpl (discretisedfield.field property)": [[1, "discretisedfield.Field.mpl"]], "norm (discretisedfield.field property)": [[1, "discretisedfield.Field.norm"]], "nvdim (discretisedfield.field property)": [[1, "discretisedfield.Field.nvdim"]], "orientation (discretisedfield.field property)": [[1, "discretisedfield.Field.orientation"]], "pad() (discretisedfield.field method)": [[1, "discretisedfield.Field.pad"]], "phase (discretisedfield.field property)": [[1, "discretisedfield.Field.phase"]], "real (discretisedfield.field property)": [[1, "discretisedfield.Field.real"]], "resample() (discretisedfield.field method)": [[1, "discretisedfield.Field.resample"]], "rfftn() (discretisedfield.field method)": [[1, "discretisedfield.Field.rfftn"]], "rotate90() (discretisedfield.field method)": [[1, "discretisedfield.Field.rotate90"]], "sel() (discretisedfield.field method)": [[1, "discretisedfield.Field.sel"]], "to_vtk() (discretisedfield.field method)": [[1, "discretisedfield.Field.to_vtk"]], "to_xarray() (discretisedfield.field method)": [[1, "discretisedfield.Field.to_xarray"]], "unit (discretisedfield.field property)": [[1, "discretisedfield.Field.unit"]], "update_field_values() (discretisedfield.field method)": [[1, "discretisedfield.Field.update_field_values"]], "valid (discretisedfield.field property)": [[1, "discretisedfield.Field.valid"]], "vdim_mapping (discretisedfield.field property)": [[1, "discretisedfield.Field.vdim_mapping"]], "vdims (discretisedfield.field property)": [[1, "discretisedfield.Field.vdims"]], "fieldrotator (class in discretisedfield)": [[2, "discretisedfield.FieldRotator"]], "__repr__() (discretisedfield.fieldrotator method)": [[2, "discretisedfield.FieldRotator.__repr__"]], "clear_rotation() (discretisedfield.fieldrotator method)": [[2, "discretisedfield.FieldRotator.clear_rotation"]], "field (discretisedfield.fieldrotator property)": [[2, "discretisedfield.FieldRotator.field"]], "rotate() (discretisedfield.fieldrotator method)": [[2, "discretisedfield.FieldRotator.rotate"]], "line (class in discretisedfield)": [[3, "discretisedfield.Line"]], "__repr__() (discretisedfield.line method)": [[3, "discretisedfield.Line.__repr__"]], "length (discretisedfield.line property)": [[3, "discretisedfield.Line.length"]], "mpl() (discretisedfield.line method)": [[3, "discretisedfield.Line.mpl"]], "point_columns (discretisedfield.line property)": [[3, "discretisedfield.Line.point_columns"]], "selector() (discretisedfield.line method)": [[3, "discretisedfield.Line.selector"]], "slider() (discretisedfield.line method)": [[3, "discretisedfield.Line.slider"]], "value_columns (discretisedfield.line property)": [[3, "discretisedfield.Line.value_columns"]], "mesh (class in discretisedfield)": [[4, "discretisedfield.Mesh"]], "__dir__() (discretisedfield.mesh method)": [[4, "discretisedfield.Mesh.__dir__"]], "__eq__() (discretisedfield.mesh method)": [[4, "discretisedfield.Mesh.__eq__"]], "__getattr__() (discretisedfield.mesh method)": [[4, "discretisedfield.Mesh.__getattr__"]], "__getitem__() (discretisedfield.mesh method)": [[4, "discretisedfield.Mesh.__getitem__"]], "__hash__ (discretisedfield.mesh attribute)": [[4, "discretisedfield.Mesh.__hash__"]], "__iter__() (discretisedfield.mesh method)": [[4, "discretisedfield.Mesh.__iter__"]], "__len__() (discretisedfield.mesh method)": [[4, "discretisedfield.Mesh.__len__"]], "__or__() (discretisedfield.mesh method)": [[4, "discretisedfield.Mesh.__or__"]], "__repr__() (discretisedfield.mesh method)": [[4, "discretisedfield.Mesh.__repr__"]], "allclose() (discretisedfield.mesh method)": [[4, "discretisedfield.Mesh.allclose"]], "axis_selector() (discretisedfield.mesh method)": [[4, "discretisedfield.Mesh.axis_selector"]], "bc (discretisedfield.mesh property)": [[4, "discretisedfield.Mesh.bc"]], "cell (discretisedfield.mesh property)": [[4, "discretisedfield.Mesh.cell"]], "coordinate_field() (discretisedfield.mesh method)": [[4, "discretisedfield.Mesh.coordinate_field"]], "dv (discretisedfield.mesh property)": [[4, "discretisedfield.Mesh.dV"]], "fftn() (discretisedfield.mesh method)": [[4, "discretisedfield.Mesh.fftn"]], "ifftn() (discretisedfield.mesh method)": [[4, "discretisedfield.Mesh.ifftn"]], "index2point() (discretisedfield.mesh method)": [[4, "discretisedfield.Mesh.index2point"]], "indices (discretisedfield.mesh property)": [[4, "discretisedfield.Mesh.indices"]], "is_aligned() (discretisedfield.mesh method)": [[4, "discretisedfield.Mesh.is_aligned"]], "k3d (discretisedfield.mesh property)": [[4, "discretisedfield.Mesh.k3d"]], "line() (discretisedfield.mesh method)": [[4, "discretisedfield.Mesh.line"]], "mpl (discretisedfield.mesh property)": [[4, "discretisedfield.Mesh.mpl"]], "n (discretisedfield.mesh property)": [[4, "discretisedfield.Mesh.n"]], "pad() (discretisedfield.mesh method)": [[4, "discretisedfield.Mesh.pad"]], "point2index() (discretisedfield.mesh method)": [[4, "discretisedfield.Mesh.point2index"]], "points (discretisedfield.mesh property)": [[4, "discretisedfield.Mesh.points"]], "region (discretisedfield.mesh property)": [[4, "discretisedfield.Mesh.region"]], "region2slices() (discretisedfield.mesh method)": [[4, "discretisedfield.Mesh.region2slices"]], "rotate90() (discretisedfield.mesh method)": [[4, "discretisedfield.Mesh.rotate90"]], "scale() (discretisedfield.mesh method)": [[4, "discretisedfield.Mesh.scale"]], "sel() (discretisedfield.mesh method)": [[4, "discretisedfield.Mesh.sel"]], "slider() (discretisedfield.mesh method)": [[4, "discretisedfield.Mesh.slider"]], "subregions (discretisedfield.mesh property)": [[4, "discretisedfield.Mesh.subregions"]], "translate() (discretisedfield.mesh method)": [[4, "discretisedfield.Mesh.translate"]], "vertices (discretisedfield.mesh property)": [[4, "discretisedfield.Mesh.vertices"]], "region (class in discretisedfield)": [[5, "discretisedfield.Region"]], "__contains__() (discretisedfield.region method)": [[5, "discretisedfield.Region.__contains__"]], "__eq__() (discretisedfield.region method)": [[5, "discretisedfield.Region.__eq__"]], "__hash__ (discretisedfield.region attribute)": [[5, "discretisedfield.Region.__hash__"]], "__or__() (discretisedfield.region method)": [[5, "discretisedfield.Region.__or__"]], "__repr__() (discretisedfield.region method)": [[5, "discretisedfield.Region.__repr__"]], "allclose() (discretisedfield.region method)": [[5, "discretisedfield.Region.allclose"]], "center (discretisedfield.region property)": [[5, "discretisedfield.Region.center"]], "dims (discretisedfield.region property)": [[5, "discretisedfield.Region.dims"]], "edges (discretisedfield.region property)": [[5, "discretisedfield.Region.edges"]], "facing_surface() (discretisedfield.region method)": [[5, "discretisedfield.Region.facing_surface"]], "k3d (discretisedfield.region property)": [[5, "discretisedfield.Region.k3d"]], "mpl (discretisedfield.region property)": [[5, "discretisedfield.Region.mpl"]], "multiplier (discretisedfield.region property)": [[5, "discretisedfield.Region.multiplier"]], "ndim (discretisedfield.region property)": [[5, "discretisedfield.Region.ndim"]], "pmax (discretisedfield.region property)": [[5, "discretisedfield.Region.pmax"]], "pmin (discretisedfield.region property)": [[5, "discretisedfield.Region.pmin"]], "random_point() (discretisedfield.region method)": [[5, "discretisedfield.Region.random_point"]], "rotate90() (discretisedfield.region method)": [[5, "discretisedfield.Region.rotate90"]], "scale() (discretisedfield.region method)": [[5, "discretisedfield.Region.scale"]], "to_dict() (discretisedfield.region method)": [[5, "discretisedfield.Region.to_dict"]], "tolerance_factor (discretisedfield.region property)": [[5, "discretisedfield.Region.tolerance_factor"]], "translate() (discretisedfield.region method)": [[5, "discretisedfield.Region.translate"]], "units (discretisedfield.region property)": [[5, "discretisedfield.Region.units"]], "volume (discretisedfield.region property)": [[5, "discretisedfield.Region.volume"]], "integrate() (in module discretisedfield)": [[6, "discretisedfield.integrate"]], "interact() (in module discretisedfield)": [[7, "discretisedfield.interact"]], "discretisedfield.io": [[8, "module-discretisedfield.io"]], "discretisedfield.io.ovf2vtk": [[9, "module-discretisedfield.io.ovf2vtk"]], "ovf2vtk() (in module discretisedfield.io.ovf2vtk)": [[10, "discretisedfield.io.ovf2vtk.ovf2vtk"]], "discretisedfield.plotting": [[11, "module-discretisedfield.plotting"]], "hv (class in discretisedfield.plotting)": [[12, "discretisedfield.plotting.Hv"]], "__call__() (discretisedfield.plotting.hv method)": [[12, "discretisedfield.plotting.Hv.__call__"]], "contour() (discretisedfield.plotting.hv method)": [[12, "discretisedfield.plotting.Hv.contour"]], "scalar() (discretisedfield.plotting.hv method)": [[12, "discretisedfield.plotting.Hv.scalar"]], "vector() (discretisedfield.plotting.hv method)": [[12, "discretisedfield.plotting.Hv.vector"]], "k3dfield (class in discretisedfield.plotting)": [[13, "discretisedfield.plotting.K3dField"]], "__dir__() (discretisedfield.plotting.k3dfield method)": [[13, "discretisedfield.plotting.K3dField.__dir__"]], "nonzero() (discretisedfield.plotting.k3dfield method)": [[13, "discretisedfield.plotting.K3dField.nonzero"]], "scalar() (discretisedfield.plotting.k3dfield method)": [[13, "discretisedfield.plotting.K3dField.scalar"]], "vector() (discretisedfield.plotting.k3dfield method)": [[13, "discretisedfield.plotting.K3dField.vector"]], "k3dmesh (class in discretisedfield.plotting)": [[14, "discretisedfield.plotting.K3dMesh"]], "__call__() (discretisedfield.plotting.k3dmesh method)": [[14, "discretisedfield.plotting.K3dMesh.__call__"]], "subregions() (discretisedfield.plotting.k3dmesh method)": [[14, "discretisedfield.plotting.K3dMesh.subregions"]], "k3dregion (class in discretisedfield.plotting)": [[15, "discretisedfield.plotting.K3dRegion"]], "__call__() (discretisedfield.plotting.k3dregion method)": [[15, "discretisedfield.plotting.K3dRegion.__call__"]], "mplfield (class in discretisedfield.plotting)": [[16, "discretisedfield.plotting.MplField"]], "__call__() (discretisedfield.plotting.mplfield method)": [[16, "discretisedfield.plotting.MplField.__call__"]], "__dir__() (discretisedfield.plotting.mplfield method)": [[16, "discretisedfield.plotting.MplField.__dir__"]], "contour() (discretisedfield.plotting.mplfield method)": [[16, "discretisedfield.plotting.MplField.contour"]], "lightness() (discretisedfield.plotting.mplfield method)": [[16, "discretisedfield.plotting.MplField.lightness"]], "scalar() (discretisedfield.plotting.mplfield method)": [[16, "discretisedfield.plotting.MplField.scalar"]], "vector() (discretisedfield.plotting.mplfield method)": [[16, "discretisedfield.plotting.MplField.vector"]], "mplmesh (class in discretisedfield.plotting)": [[17, "discretisedfield.plotting.MplMesh"]], "__call__() (discretisedfield.plotting.mplmesh method)": [[17, "discretisedfield.plotting.MplMesh.__call__"]], "subregions() (discretisedfield.plotting.mplmesh method)": [[17, "discretisedfield.plotting.MplMesh.subregions"]], "mplregion (class in discretisedfield.plotting)": [[18, "discretisedfield.plotting.MplRegion"]], "__call__() (discretisedfield.plotting.mplregion method)": [[18, "discretisedfield.plotting.MplRegion.__call__"]], "add_colorwheel() (in module discretisedfield.plotting)": [[19, "discretisedfield.plotting.add_colorwheel"]], "test() (in module discretisedfield)": [[20, "discretisedfield.test"]], "discretisedfield.tools": [[21, "module-discretisedfield.tools"]], "count_bps() (in module discretisedfield.tools)": [[22, "discretisedfield.tools.count_bps"]], "count_large_cell_angle_regions() (in module discretisedfield.tools)": [[23, "discretisedfield.tools.count_large_cell_angle_regions"]], "demag_field() (in module discretisedfield.tools)": [[24, "discretisedfield.tools.demag_field"]], "demag_tensor() (in module discretisedfield.tools)": [[25, "discretisedfield.tools.demag_tensor"]], "emergent_magnetic_field() (in module discretisedfield.tools)": [[26, "discretisedfield.tools.emergent_magnetic_field"]], "max_neighbouring_cell_angle() (in module discretisedfield.tools)": [[27, "discretisedfield.tools.max_neighbouring_cell_angle"]], "neighbouring_cell_angle() (in module discretisedfield.tools)": [[28, "discretisedfield.tools.neighbouring_cell_angle"]], "topological_charge() (in module discretisedfield.tools)": [[29, "discretisedfield.tools.topological_charge"]], "topological_charge_density() (in module discretisedfield.tools)": [[30, "discretisedfield.tools.topological_charge_density"]], "mag2exp": [[31, "module-mag2exp"]], "mag2exp.ltem": [[32, "module-mag2exp.ltem"]], "defocus_image() (in module mag2exp.ltem)": [[33, "mag2exp.ltem.defocus_image"]], "integrated_magnetic_flux_density() (in module mag2exp.ltem)": [[34, "mag2exp.ltem.integrated_magnetic_flux_density"]], "phase() (in module mag2exp.ltem)": [[35, "mag2exp.ltem.phase"]], "relativistic_wavelength() (in module mag2exp.ltem)": [[36, "mag2exp.ltem.relativistic_wavelength"]], "mag2exp.magnetometry": [[37, "module-mag2exp.magnetometry"]], "magnetisation() (in module mag2exp.magnetometry)": [[38, "mag2exp.magnetometry.magnetisation"]], "torque() (in module mag2exp.magnetometry)": [[39, "mag2exp.magnetometry.torque"]], "mag2exp.mfm": [[40, "module-mag2exp.mfm"]], "phase_shift() (in module mag2exp.mfm)": [[41, "mag2exp.mfm.phase_shift"]], "mag2exp.quick_plots": [[42, "module-mag2exp.quick_plots"]], "ltem_defocus() (in module mag2exp.quick_plots)": [[43, "mag2exp.quick_plots.ltem_defocus"]], "ltem_ft_phase() (in module mag2exp.quick_plots)": [[44, "mag2exp.quick_plots.ltem_ft_phase"]], "ltem_integrated_mfd() (in module mag2exp.quick_plots)": [[45, "mag2exp.quick_plots.ltem_integrated_mfd"]], "ltem_phase() (in module mag2exp.quick_plots)": [[46, "mag2exp.quick_plots.ltem_phase"]], "mfm_phase_shift() (in module mag2exp.quick_plots)": [[47, "mag2exp.quick_plots.mfm_phase_shift"]], "sans_chiral_function() (in module mag2exp.quick_plots)": [[48, "mag2exp.quick_plots.sans_chiral_function"]], "sans_cross_section() (in module mag2exp.quick_plots)": [[49, "mag2exp.quick_plots.sans_cross_section"]], "saxs() (in module mag2exp.quick_plots)": [[50, "mag2exp.quick_plots.saxs"]], "x_ray_holography() (in module mag2exp.quick_plots)": [[51, "mag2exp.quick_plots.x_ray_holography"]], "mag2exp.sans": [[52, "module-mag2exp.sans"]], "chiral_function() (in module mag2exp.sans)": [[53, "mag2exp.sans.chiral_function"]], "cross_section() (in module mag2exp.sans)": [[54, "mag2exp.sans.cross_section"]], "test() (in module mag2exp)": [[55, "mag2exp.test"]], "mag2exp.x_ray": [[56, "module-mag2exp.x_ray"]], "holography() (in module mag2exp.x_ray)": [[57, "mag2exp.x_ray.holography"]], "saxs() (in module mag2exp.x_ray)": [[58, "mag2exp.x_ray.saxs"]], "micromagneticdata": [[59, "module-micromagneticdata"]], "abstractdrive (class in micromagneticdata)": [[60, "micromagneticdata.AbstractDrive"]], "__getitem__() (micromagneticdata.abstractdrive method)": [[60, "micromagneticdata.AbstractDrive.__getitem__"]], "__iter__() (micromagneticdata.abstractdrive method)": [[60, "micromagneticdata.AbstractDrive.__iter__"]], "__lshift__() (micromagneticdata.abstractdrive method)": [[60, "micromagneticdata.AbstractDrive.__lshift__"]], "__repr__() (micromagneticdata.abstractdrive method)": [[60, "micromagneticdata.AbstractDrive.__repr__"]], "callbacks (micromagneticdata.abstractdrive property)": [[60, "micromagneticdata.AbstractDrive.callbacks"]], "hv (micromagneticdata.abstractdrive property)": [[60, "micromagneticdata.AbstractDrive.hv"]], "info (micromagneticdata.abstractdrive property)": [[60, "micromagneticdata.AbstractDrive.info"]], "m0 (micromagneticdata.abstractdrive property)": [[60, "micromagneticdata.AbstractDrive.m0"]], "n (micromagneticdata.abstractdrive property)": [[60, "micromagneticdata.AbstractDrive.n"]], "register_callback() (micromagneticdata.abstractdrive method)": [[60, "micromagneticdata.AbstractDrive.register_callback"]], "table (micromagneticdata.abstractdrive property)": [[60, "micromagneticdata.AbstractDrive.table"]], "to_xarray() (micromagneticdata.abstractdrive method)": [[60, "micromagneticdata.AbstractDrive.to_xarray"]], "x (micromagneticdata.abstractdrive property)": [[60, "micromagneticdata.AbstractDrive.x"]], "combineddrive (class in micromagneticdata)": [[61, "micromagneticdata.CombinedDrive"]], "__lshift__() (micromagneticdata.combineddrive method)": [[61, "micromagneticdata.CombinedDrive.__lshift__"]], "__repr__() (micromagneticdata.combineddrive method)": [[61, "micromagneticdata.CombinedDrive.__repr__"]], "info (micromagneticdata.combineddrive property)": [[61, "micromagneticdata.CombinedDrive.info"]], "register_callback() (micromagneticdata.combineddrive method)": [[61, "micromagneticdata.CombinedDrive.register_callback"]], "table (micromagneticdata.combineddrive property)": [[61, "micromagneticdata.CombinedDrive.table"]], "x (micromagneticdata.combineddrive property)": [[61, "micromagneticdata.CombinedDrive.x"]], "data (class in micromagneticdata)": [[62, "micromagneticdata.Data"]], "__getitem__() (micromagneticdata.data method)": [[62, "micromagneticdata.Data.__getitem__"]], "__iter__() (micromagneticdata.data method)": [[62, "micromagneticdata.Data.__iter__"]], "__repr__() (micromagneticdata.data method)": [[62, "micromagneticdata.Data.__repr__"]], "info (micromagneticdata.data property)": [[62, "micromagneticdata.Data.info"]], "n (micromagneticdata.data property)": [[62, "micromagneticdata.Data.n"]], "selector() (micromagneticdata.data method)": [[62, "micromagneticdata.Data.selector"]], "drive (class in micromagneticdata)": [[63, "micromagneticdata.Drive"]], "__getitem__() (micromagneticdata.drive method)": [[63, "micromagneticdata.Drive.__getitem__"]], "__lshift__() (micromagneticdata.drive method)": [[63, "micromagneticdata.Drive.__lshift__"]], "__new__() (micromagneticdata.drive static method)": [[63, "micromagneticdata.Drive.__new__"]], "calculator_script (micromagneticdata.drive property)": [[63, "micromagneticdata.Drive.calculator_script"]], "info (micromagneticdata.drive property)": [[63, "micromagneticdata.Drive.info"]], "ovf2vtk() (micromagneticdata.drive method)": [[63, "micromagneticdata.Drive.ovf2vtk"]], "register_callback() (micromagneticdata.drive method)": [[63, "micromagneticdata.Drive.register_callback"]], "slider() (micromagneticdata.drive method)": [[63, "micromagneticdata.Drive.slider"]], "table (micromagneticdata.drive property)": [[63, "micromagneticdata.Drive.table"]], "use_cache (micromagneticdata.drive property)": [[63, "micromagneticdata.Drive.use_cache"]], "mumax3drive (class in micromagneticdata)": [[64, "micromagneticdata.Mumax3Drive"]], "__repr__() (micromagneticdata.mumax3drive method)": [[64, "micromagneticdata.Mumax3Drive.__repr__"]], "calculator_script (micromagneticdata.mumax3drive property)": [[64, "micromagneticdata.Mumax3Drive.calculator_script"]], "x (micromagneticdata.mumax3drive property)": [[64, "micromagneticdata.Mumax3Drive.x"]], "oommfdrive (class in micromagneticdata)": [[65, "micromagneticdata.OOMMFDrive"]], "__repr__() (micromagneticdata.oommfdrive method)": [[65, "micromagneticdata.OOMMFDrive.__repr__"]], "calculator_script (micromagneticdata.oommfdrive property)": [[65, "micromagneticdata.OOMMFDrive.calculator_script"]], "x (micromagneticdata.oommfdrive property)": [[65, "micromagneticdata.OOMMFDrive.x"]], "test() (in module micromagneticdata)": [[66, "micromagneticdata.test"]], "micromagneticmodel": [[67, "module-micromagneticmodel"]], "cubicanisotropy (class in micromagneticmodel)": [[68, "micromagneticmodel.CubicAnisotropy"]], "dmi (class in micromagneticmodel)": [[69, "micromagneticmodel.DMI"]], "damping (class in micromagneticmodel)": [[70, "micromagneticmodel.Damping"]], "demag (class in micromagneticmodel)": [[71, "micromagneticmodel.Demag"]], "driver (class in micromagneticmodel)": [[72, "micromagneticmodel.Driver"]], "drive() (micromagneticmodel.driver method)": [[72, "micromagneticmodel.Driver.drive"]], "dynamics (class in micromagneticmodel)": [[73, "micromagneticmodel.Dynamics"]], "dynamicsterm (class in micromagneticmodel)": [[74, "micromagneticmodel.DynamicsTerm"]], "energy (class in micromagneticmodel)": [[75, "micromagneticmodel.Energy"]], "energyterm (class in micromagneticmodel)": [[76, "micromagneticmodel.EnergyTerm"]], "evolver (class in micromagneticmodel)": [[77, "micromagneticmodel.Evolver"]], "exchange (class in micromagneticmodel)": [[78, "micromagneticmodel.Exchange"]], "externaldriver (class in micromagneticmodel)": [[79, "micromagneticmodel.ExternalDriver"]], "drive() (micromagneticmodel.externaldriver method)": [[79, "micromagneticmodel.ExternalDriver.drive"]], "drive_kwargs_setup() (micromagneticmodel.externaldriver method)": [[79, "micromagneticmodel.ExternalDriver.drive_kwargs_setup"]], "schedule() (micromagneticmodel.externaldriver method)": [[79, "micromagneticmodel.ExternalDriver.schedule"]], "schedule_kwargs_setup() (micromagneticmodel.externaldriver method)": [[79, "micromagneticmodel.ExternalDriver.schedule_kwargs_setup"]], "externalrunner (class in micromagneticmodel)": [[80, "micromagneticmodel.ExternalRunner"]], "call() (micromagneticmodel.externalrunner method)": [[80, "micromagneticmodel.ExternalRunner.call"]], "package_name (micromagneticmodel.externalrunner property)": [[80, "micromagneticmodel.ExternalRunner.package_name"]], "magnetoelastic (class in micromagneticmodel)": [[81, "micromagneticmodel.MagnetoElastic"]], "precession (class in micromagneticmodel)": [[82, "micromagneticmodel.Precession"]], "rkky (class in micromagneticmodel)": [[83, "micromagneticmodel.RKKY"]], "slonczewski (class in micromagneticmodel)": [[84, "micromagneticmodel.Slonczewski"]], "system (class in micromagneticmodel)": [[85, "micromagneticmodel.System"]], "__repr__() (micromagneticmodel.system method)": [[85, "micromagneticmodel.System.__repr__"]], "dynamics (micromagneticmodel.system property)": [[85, "micromagneticmodel.System.dynamics"]], "energy (micromagneticmodel.system property)": [[85, "micromagneticmodel.System.energy"]], "uniaxialanisotropy (class in micromagneticmodel)": [[86, "micromagneticmodel.UniaxialAnisotropy"]], "zeeman (class in micromagneticmodel)": [[87, "micromagneticmodel.Zeeman"]], "zhangli (class in micromagneticmodel)": [[88, "micromagneticmodel.ZhangLi"]], "micromagneticmodel.abstract": [[89, "module-micromagneticmodel.abstract"]], "abstract (class in micromagneticmodel.abstract)": [[90, "micromagneticmodel.abstract.Abstract"]], "__iter__() (micromagneticmodel.abstract.abstract method)": [[90, "micromagneticmodel.abstract.Abstract.__iter__"]], "__repr__() (micromagneticmodel.abstract.abstract method)": [[90, "micromagneticmodel.abstract.Abstract.__repr__"]], "name (micromagneticmodel.abstract.abstract property)": [[90, "micromagneticmodel.abstract.Abstract.name"]], "container (class in micromagneticmodel.abstract)": [[91, "micromagneticmodel.abstract.Container"]], "__add__() (micromagneticmodel.abstract.container method)": [[91, "micromagneticmodel.abstract.Container.__add__"]], "__contains__() (micromagneticmodel.abstract.container method)": [[91, "micromagneticmodel.abstract.Container.__contains__"]], "__dir__() (micromagneticmodel.abstract.container method)": [[91, "micromagneticmodel.abstract.Container.__dir__"]], "__eq__() (micromagneticmodel.abstract.container method)": [[91, "micromagneticmodel.abstract.Container.__eq__"]], "__getattr__() (micromagneticmodel.abstract.container method)": [[91, "micromagneticmodel.abstract.Container.__getattr__"]], "__getitem__() (micromagneticmodel.abstract.container method)": [[91, "micromagneticmodel.abstract.Container.__getitem__"]], "__hash__ (micromagneticmodel.abstract.container attribute)": [[91, "micromagneticmodel.abstract.Container.__hash__"]], "__iter__() (micromagneticmodel.abstract.container method)": [[91, "micromagneticmodel.abstract.Container.__iter__"]], "__len__() (micromagneticmodel.abstract.container method)": [[91, "micromagneticmodel.abstract.Container.__len__"]], "__repr__() (micromagneticmodel.abstract.container method)": [[91, "micromagneticmodel.abstract.Container.__repr__"]], "__sub__() (micromagneticmodel.abstract.container method)": [[91, "micromagneticmodel.abstract.Container.__sub__"]], "get() (micromagneticmodel.abstract.container method)": [[91, "micromagneticmodel.abstract.Container.get"]], "term (class in micromagneticmodel.abstract)": [[92, "micromagneticmodel.abstract.Term"]], "__add__() (micromagneticmodel.abstract.term method)": [[92, "micromagneticmodel.abstract.Term.__add__"]], "__eq__() (micromagneticmodel.abstract.term method)": [[92, "micromagneticmodel.abstract.Term.__eq__"]], "__hash__ (micromagneticmodel.abstract.term attribute)": [[92, "micromagneticmodel.abstract.Term.__hash__"]], "micromagneticmodel.consts": [[93, "module-micromagneticmodel.consts"]], "e (in module micromagneticmodel.consts)": [[94, "micromagneticmodel.consts.e"]], "g (in module micromagneticmodel.consts)": [[95, "micromagneticmodel.consts.g"]], "gamma (in module micromagneticmodel.consts)": [[96, "micromagneticmodel.consts.gamma"]], "gamma0 (in module micromagneticmodel.consts)": [[97, "micromagneticmodel.consts.gamma0"]], "h (in module micromagneticmodel.consts)": [[98, "micromagneticmodel.consts.h"]], "hbar (in module micromagneticmodel.consts)": [[99, "micromagneticmodel.consts.hbar"]], "kb (in module micromagneticmodel.consts)": [[100, "micromagneticmodel.consts.kB"]], "me (in module micromagneticmodel.consts)": [[101, "micromagneticmodel.consts.me"]], "mu0 (in module micromagneticmodel.consts)": [[102, "micromagneticmodel.consts.mu0"]], "mub (in module micromagneticmodel.consts)": [[103, "micromagneticmodel.consts.muB"]], "micromagneticmodel.examples": [[104, "module-micromagneticmodel.examples"]], "macrospin() (in module micromagneticmodel.examples)": [[105, "micromagneticmodel.examples.macrospin"]], "test() (in module micromagneticmodel)": [[106, "micromagneticmodel.test"]], "micromagnetictests": [[107, "module-micromagnetictests"]], "micromagnetictests.calculatortests": [[108, "module-micromagnetictests.calculatortests"]], "testcompute (class in micromagnetictests.calculatortests)": [[109, "micromagnetictests.calculatortests.TestCompute"]], "testcubicanisotropy (class in micromagnetictests.calculatortests)": [[110, "micromagnetictests.calculatortests.TestCubicAnisotropy"]], "testdmi (class in micromagnetictests.calculatortests)": [[111, "micromagnetictests.calculatortests.TestDMI"]], "testdamping (class in micromagnetictests.calculatortests)": [[112, "micromagnetictests.calculatortests.TestDamping"]], "testdemag (class in micromagnetictests.calculatortests)": [[113, "micromagnetictests.calculatortests.TestDemag"]], "testdynamics (class in micromagnetictests.calculatortests)": [[114, "micromagnetictests.calculatortests.TestDynamics"]], "testenergy (class in micromagnetictests.calculatortests)": [[115, "micromagnetictests.calculatortests.TestEnergy"]], "testexchange (class in micromagnetictests.calculatortests)": [[116, "micromagnetictests.calculatortests.TestExchange"]], "testfixedsubregions (class in micromagnetictests.calculatortests)": [[117, "micromagnetictests.calculatortests.TestFixedSubregions"]], "testhysteresisdriver (class in micromagnetictests.calculatortests)": [[118, "micromagnetictests.calculatortests.TestHysteresisDriver"]], "testmesh (class in micromagnetictests.calculatortests)": [[119, "micromagnetictests.calculatortests.TestMesh"]], "testmindriver (class in micromagnetictests.calculatortests)": [[120, "micromagnetictests.calculatortests.TestMinDriver"]], "testprecession (class in micromagnetictests.calculatortests)": [[121, "micromagnetictests.calculatortests.TestPrecession"]], "testrkky (class in micromagnetictests.calculatortests)": [[122, "micromagnetictests.calculatortests.TestRKKY"]], "testslonczewski (class in micromagnetictests.calculatortests)": [[123, "micromagnetictests.calculatortests.TestSlonczewski"]], "testthreads (class in micromagnetictests.calculatortests)": [[124, "micromagnetictests.calculatortests.TestThreads"]], "testtimedriver (class in micromagnetictests.calculatortests)": [[125, "micromagnetictests.calculatortests.TestTimeDriver"]], "testuniaxialanisotropy (class in micromagnetictests.calculatortests)": [[126, "micromagnetictests.calculatortests.TestUniaxialAnisotropy"]], "testzeeman (class in micromagnetictests.calculatortests)": [[127, "micromagnetictests.calculatortests.TestZeeman"]], "testzhangli (class in micromagnetictests.calculatortests)": [[128, "micromagnetictests.calculatortests.TestZhangLi"]], "test_dirname() (in module micromagnetictests.calculatortests)": [[129, "micromagnetictests.calculatortests.test_dirname"]], "test_format() (in module micromagnetictests.calculatortests)": [[130, "micromagnetictests.calculatortests.test_format"]], "test_info_file() (in module micromagnetictests.calculatortests)": [[131, "micromagnetictests.calculatortests.test_info_file"]], "test_multiple_drives() (in module micromagnetictests.calculatortests)": [[132, "micromagnetictests.calculatortests.test_multiple_drives"]], "test_outputstep() (in module micromagnetictests.calculatortests)": [[133, "micromagnetictests.calculatortests.test_outputstep"]], "test_schedule() (in module micromagnetictests.calculatortests)": [[134, "micromagnetictests.calculatortests.test_schedule"]], "test_skyrmion() (in module micromagnetictests.calculatortests)": [[135, "micromagnetictests.calculatortests.test_skyrmion"]], "test_stdprob3() (in module micromagnetictests.calculatortests)": [[136, "micromagnetictests.calculatortests.test_stdprob3"]], "test_stdprob4() (in module micromagnetictests.calculatortests)": [[137, "micromagnetictests.calculatortests.test_stdprob4"]], "test_stdprob5() (in module micromagnetictests.calculatortests)": [[138, "micromagnetictests.calculatortests.test_stdprob5"]], "get_tests() (in module micromagnetictests)": [[139, "micromagnetictests.get_tests"]], "test() (in module micromagnetictests)": [[140, "micromagnetictests.test"]], "mumax3c": [[141, "module-mumax3c"]], "mindriver (class in mumax3c)": [[142, "mumax3c.MinDriver"]], "relaxdriver (class in mumax3c)": [[143, "mumax3c.RelaxDriver"]], "timedriver (class in mumax3c)": [[144, "mumax3c.TimeDriver"]], "delete() (in module mumax3c)": [[145, "mumax3c.delete"]], "mumax3c.mumax3": [[146, "module-mumax3c.mumax3"]], "exemumax3runner (class in mumax3c.mumax3)": [[147, "mumax3c.mumax3.ExeMumax3Runner"]], "mumax3runner (class in mumax3c.mumax3)": [[148, "mumax3c.mumax3.Mumax3Runner"]], "package_name (mumax3c.mumax3.mumax3runner property)": [[148, "mumax3c.mumax3.Mumax3Runner.package_name"]], "status (mumax3c.mumax3.mumax3runner property)": [[148, "mumax3c.mumax3.Mumax3Runner.status"]], "runner (class in mumax3c.mumax3)": [[149, "mumax3c.mumax3.Runner"]], "autoselect_runner() (mumax3c.mumax3.runner method)": [[149, "mumax3c.mumax3.Runner.autoselect_runner"]], "runner (mumax3c.mumax3.runner property)": [[149, "mumax3c.mumax3.Runner.runner"]], "overhead() (in module mumax3c.mumax3)": [[150, "mumax3c.mumax3.overhead"]], "runner (in module mumax3c)": [[151, "mumax3c.runner"]], "test() (in module mumax3c)": [[152, "mumax3c.test"]], "test_docker() (in module mumax3c)": [[153, "mumax3c.test_docker"]], "oommfc": [[154, "module-oommfc"]], "cgevolver (class in oommfc)": [[155, "oommfc.CGEvolver"]], "driver (class in oommfc)": [[156, "oommfc.Driver"]], "drive_kwargs_setup() (oommfc.driver method)": [[156, "oommfc.Driver.drive_kwargs_setup"]], "schedule_kwargs_setup() (oommfc.driver method)": [[156, "oommfc.Driver.schedule_kwargs_setup"]], "write_mif() (oommfc.driver method)": [[156, "oommfc.Driver.write_mif"]], "eulerevolver (class in oommfc)": [[157, "oommfc.EulerEvolver"]], "hysteresisdriver (class in oommfc)": [[158, "oommfc.HysteresisDriver"]], "mindriver (class in oommfc)": [[159, "oommfc.MinDriver"]], "rungekuttaevolver (class in oommfc)": [[160, "oommfc.RungeKuttaEvolver"]], "spintevolver (class in oommfc)": [[161, "oommfc.SpinTEvolver"]], "spinxferevolver (class in oommfc)": [[162, "oommfc.SpinXferEvolver"]], "timedriver (class in oommfc)": [[163, "oommfc.TimeDriver"]], "uhh_thetaevolver (class in oommfc)": [[164, "oommfc.UHH_ThetaEvolver"]], "xf_thermheunevolver (class in oommfc)": [[165, "oommfc.Xf_ThermHeunEvolver"]], "xf_thermspinxferevolver (class in oommfc)": [[166, "oommfc.Xf_ThermSpinXferEvolver"]], "compute() (in module oommfc)": [[167, "oommfc.compute"]], "delete() (in module oommfc)": [[168, "oommfc.delete"]], "oommfc.oommf": [[169, "module-oommfc.oommf"]], "dockeroommfrunner (class in oommfc.oommf)": [[170, "oommfc.oommf.DockerOOMMFRunner"]], "__repr__() (oommfc.oommf.dockeroommfrunner method)": [[170, "oommfc.oommf.DockerOOMMFRunner.__repr__"]], "errors() (oommfc.oommf.dockeroommfrunner method)": [[170, "oommfc.oommf.DockerOOMMFRunner.errors"]], "exeoommfrunner (class in oommfc.oommf)": [[171, "oommfc.oommf.ExeOOMMFRunner"]], "__repr__() (oommfc.oommf.exeoommfrunner method)": [[171, "oommfc.oommf.ExeOOMMFRunner.__repr__"]], "errors() (oommfc.oommf.exeoommfrunner method)": [[171, "oommfc.oommf.ExeOOMMFRunner.errors"]], "oommfrunner (class in oommfc.oommf)": [[172, "oommfc.oommf.OOMMFRunner"]], "__repr__() (oommfc.oommf.oommfrunner method)": [[172, "oommfc.oommf.OOMMFRunner.__repr__"]], "errors() (oommfc.oommf.oommfrunner method)": [[172, "oommfc.oommf.OOMMFRunner.errors"]], "package_name (oommfc.oommf.oommfrunner property)": [[172, "oommfc.oommf.OOMMFRunner.package_name"]], "platform (oommfc.oommf.oommfrunner property)": [[172, "oommfc.oommf.OOMMFRunner.platform"]], "status (oommfc.oommf.oommfrunner property)": [[172, "oommfc.oommf.OOMMFRunner.status"]], "version (oommfc.oommf.oommfrunner property)": [[172, "oommfc.oommf.OOMMFRunner.version"]], "runner (class in oommfc.oommf)": [[173, "oommfc.oommf.Runner"]], "__repr__() (oommfc.oommf.runner method)": [[173, "oommfc.oommf.Runner.__repr__"]], "autoselect_runner() (oommfc.oommf.runner method)": [[173, "oommfc.oommf.Runner.autoselect_runner"]], "runner (oommfc.oommf.runner property)": [[173, "oommfc.oommf.Runner.runner"]], "tcloommfrunner (class in oommfc.oommf)": [[174, "oommfc.oommf.TclOOMMFRunner"]], "__repr__() (oommfc.oommf.tcloommfrunner method)": [[174, "oommfc.oommf.TclOOMMFRunner.__repr__"]], "errors() (oommfc.oommf.tcloommfrunner method)": [[174, "oommfc.oommf.TclOOMMFRunner.errors"]], "overhead() (in module oommfc.oommf)": [[175, "oommfc.oommf.overhead"]], "runner (in module oommfc)": [[176, "oommfc.runner"]], "test() (in module oommfc)": [[177, "oommfc.test"]], "test_docker() (in module oommfc)": [[178, "oommfc.test_docker"]], "ubermag": [[179, "module-ubermag"]], "debug_info() (in module ubermag)": [[180, "ubermag.debug_info"]], "test() (in module ubermag)": [[181, "ubermag.test"]], "ubermagtable": [[182, "module-ubermagtable"]], "table (class in ubermagtable)": [[183, "ubermagtable.Table"]], "__lshift__() (ubermagtable.table method)": [[183, "ubermagtable.Table.__lshift__"]], "__repr__() (ubermagtable.table method)": [[183, "ubermagtable.Table.__repr__"]], "apply() (ubermagtable.table method)": [[183, "ubermagtable.Table.apply"]], "dx (ubermagtable.table property)": [[183, "ubermagtable.Table.dx"]], "fromfile() (ubermagtable.table class method)": [[183, "ubermagtable.Table.fromfile"]], "irfft() (ubermagtable.table method)": [[183, "ubermagtable.Table.irfft"]], "mpl() (ubermagtable.table method)": [[183, "ubermagtable.Table.mpl"]], "rfft() (ubermagtable.table method)": [[183, "ubermagtable.Table.rfft"]], "selector() (ubermagtable.table method)": [[183, "ubermagtable.Table.selector"]], "slider() (ubermagtable.table method)": [[183, "ubermagtable.Table.slider"]], "x (ubermagtable.table property)": [[183, "ubermagtable.Table.x"]], "xmax (ubermagtable.table property)": [[183, "ubermagtable.Table.xmax"]], "y (ubermagtable.table property)": [[183, "ubermagtable.Table.y"]], "interact() (in module ubermagtable)": [[184, "ubermagtable.interact"]], "test() (in module ubermagtable)": [[185, "ubermagtable.test"]], "ubermagtable.util": [[186, "module-ubermagtable.util"]], "columns() (in module ubermagtable.util)": [[187, "ubermagtable.util.columns"]], "data() (in module ubermagtable.util)": [[188, "ubermagtable.util.data"]], "units() (in module ubermagtable.util)": [[189, "ubermagtable.util.units"]], "ubermagutil": [[190, "module-ubermagutil"]], "changedir() (in module ubermagutil)": [[191, "ubermagutil.changedir"]], "hysteresis_values() (in module ubermagutil)": [[192, "ubermagutil.hysteresis_values"]], "inherit_docs() (in module ubermagutil)": [[193, "ubermagutil.inherit_docs"]], "setup_logging() (in module ubermagutil)": [[194, "ubermagutil.setup_logging"]], "test() (in module ubermagutil)": [[195, "ubermagutil.test"]], "ubermagutil.typesystem": [[196, "module-ubermagutil.typesystem"]], "descriptor (class in ubermagutil.typesystem)": [[197, "ubermagutil.typesystem.Descriptor"]], "__delete__() (ubermagutil.typesystem.descriptor method)": [[197, "ubermagutil.typesystem.Descriptor.__delete__"]], "__set__() (ubermagutil.typesystem.descriptor method)": [[197, "ubermagutil.typesystem.Descriptor.__set__"]], "dictionary (class in ubermagutil.typesystem)": [[198, "ubermagutil.typesystem.Dictionary"]], "__set__() (ubermagutil.typesystem.dictionary method)": [[198, "ubermagutil.typesystem.Dictionary.__set__"]], "name (class in ubermagutil.typesystem)": [[199, "ubermagutil.typesystem.Name"]], "__set__() (ubermagutil.typesystem.name method)": [[199, "ubermagutil.typesystem.Name.__set__"]], "parameter (class in ubermagutil.typesystem)": [[200, "ubermagutil.typesystem.Parameter"]], "__set__() (ubermagutil.typesystem.parameter method)": [[200, "ubermagutil.typesystem.Parameter.__set__"]], "scalar (class in ubermagutil.typesystem)": [[201, "ubermagutil.typesystem.Scalar"]], "__set__() (ubermagutil.typesystem.scalar method)": [[201, "ubermagutil.typesystem.Scalar.__set__"]], "subset (class in ubermagutil.typesystem)": [[202, "ubermagutil.typesystem.Subset"]], "__set__() (ubermagutil.typesystem.subset method)": [[202, "ubermagutil.typesystem.Subset.__set__"]], "typed (class in ubermagutil.typesystem)": [[203, "ubermagutil.typesystem.Typed"]], "__set__() (ubermagutil.typesystem.typed method)": [[203, "ubermagutil.typesystem.Typed.__set__"]], "vector (class in ubermagutil.typesystem)": [[204, "ubermagutil.typesystem.Vector"]], "__set__() (ubermagutil.typesystem.vector method)": [[204, "ubermagutil.typesystem.Vector.__set__"]], "typesystem() (in module ubermagutil.typesystem)": [[205, "ubermagutil.typesystem.typesystem"]], "ubermagutil.units": [[206, "module-ubermagutil.units"]], "si_max_multiplier() (in module ubermagutil.units)": [[207, "ubermagutil.units.si_max_multiplier"]], "si_multiplier() (in module ubermagutil.units)": [[208, "ubermagutil.units.si_multiplier"]]}})