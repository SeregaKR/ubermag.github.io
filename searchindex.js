Search.setIndex({"docnames": ["api/_autosummary/discretisedfield", "api/_autosummary/discretisedfield.DValue", "api/_autosummary/discretisedfield.Field", "api/_autosummary/discretisedfield.FieldRotator", "api/_autosummary/discretisedfield.Line", "api/_autosummary/discretisedfield.Mesh", "api/_autosummary/discretisedfield.Region", "api/_autosummary/discretisedfield.integral", "api/_autosummary/discretisedfield.interact", "api/_autosummary/discretisedfield.io", "api/_autosummary/discretisedfield.io.field_from_hdf5", "api/_autosummary/discretisedfield.io.field_from_ovf", "api/_autosummary/discretisedfield.io.field_from_vtk", "api/_autosummary/discretisedfield.io.field_to_hdf5", "api/_autosummary/discretisedfield.io.field_to_ovf", "api/_autosummary/discretisedfield.io.field_to_vtk", "api/_autosummary/discretisedfield.io.ovf2vtk", "api/_autosummary/discretisedfield.io.ovf2vtk.ovf2vtk", "api/_autosummary/discretisedfield.plotting", "api/_autosummary/discretisedfield.plotting.Hv", "api/_autosummary/discretisedfield.plotting.K3dField", "api/_autosummary/discretisedfield.plotting.K3dMesh", "api/_autosummary/discretisedfield.plotting.K3dRegion", "api/_autosummary/discretisedfield.plotting.MplField", "api/_autosummary/discretisedfield.plotting.MplMesh", "api/_autosummary/discretisedfield.plotting.MplRegion", "api/_autosummary/discretisedfield.plotting.add_colorwheel", "api/_autosummary/discretisedfield.test", "api/_autosummary/discretisedfield.tools", "api/_autosummary/discretisedfield.tools.count_bps", "api/_autosummary/discretisedfield.tools.count_large_cell_angle_regions", "api/_autosummary/discretisedfield.tools.demag_field", "api/_autosummary/discretisedfield.tools.demag_tensor", "api/_autosummary/discretisedfield.tools.emergent_magnetic_field", "api/_autosummary/discretisedfield.tools.max_neigbouring_cell_angle", "api/_autosummary/discretisedfield.tools.neigbouring_cell_angle", "api/_autosummary/discretisedfield.tools.topological_charge", "api/_autosummary/discretisedfield.tools.topological_charge_density", "api/_autosummary/mag2exp", "api/_autosummary/mag2exp.ltem", "api/_autosummary/mag2exp.ltem.defocus_image", "api/_autosummary/mag2exp.ltem.integrated_magnetic_flux_density", "api/_autosummary/mag2exp.ltem.phase", "api/_autosummary/mag2exp.ltem.relativistic_wavelength", "api/_autosummary/mag2exp.magnetometry", "api/_autosummary/mag2exp.magnetometry.magnetisation", "api/_autosummary/mag2exp.magnetometry.torque", "api/_autosummary/mag2exp.mfm", "api/_autosummary/mag2exp.mfm.phase_shift", "api/_autosummary/mag2exp.quick_plots", "api/_autosummary/mag2exp.quick_plots.ltem_defocus", "api/_autosummary/mag2exp.quick_plots.ltem_ft_phase", "api/_autosummary/mag2exp.quick_plots.ltem_integrated_mfd", "api/_autosummary/mag2exp.quick_plots.ltem_phase", "api/_autosummary/mag2exp.quick_plots.mfm_phase_shift", "api/_autosummary/mag2exp.quick_plots.sans_chiral_function", "api/_autosummary/mag2exp.quick_plots.sans_cross_section", "api/_autosummary/mag2exp.quick_plots.saxs", "api/_autosummary/mag2exp.quick_plots.x_ray_holography", "api/_autosummary/mag2exp.sans", "api/_autosummary/mag2exp.sans.chiral_function", "api/_autosummary/mag2exp.sans.cross_section", "api/_autosummary/mag2exp.test", "api/_autosummary/mag2exp.x_ray", "api/_autosummary/mag2exp.x_ray.holography", "api/_autosummary/mag2exp.x_ray.saxs", "api/_autosummary/micromagneticdata", "api/_autosummary/micromagneticdata.AbstractDrive", "api/_autosummary/micromagneticdata.CombinedDrive", "api/_autosummary/micromagneticdata.Data", "api/_autosummary/micromagneticdata.Drive", "api/_autosummary/micromagneticdata.Mumax3Drive", "api/_autosummary/micromagneticdata.OOMMFDrive", "api/_autosummary/micromagneticdata.test", "api/_autosummary/micromagneticmodel", "api/_autosummary/micromagneticmodel.CubicAnisotropy", "api/_autosummary/micromagneticmodel.DMI", "api/_autosummary/micromagneticmodel.Damping", "api/_autosummary/micromagneticmodel.Demag", "api/_autosummary/micromagneticmodel.Driver", "api/_autosummary/micromagneticmodel.Dynamics", "api/_autosummary/micromagneticmodel.DynamicsTerm", "api/_autosummary/micromagneticmodel.Energy", "api/_autosummary/micromagneticmodel.EnergyTerm", "api/_autosummary/micromagneticmodel.Evolver", "api/_autosummary/micromagneticmodel.Exchange", "api/_autosummary/micromagneticmodel.ExternalDriver", "api/_autosummary/micromagneticmodel.ExternalRunner", "api/_autosummary/micromagneticmodel.MagnetoElastic", "api/_autosummary/micromagneticmodel.Precession", "api/_autosummary/micromagneticmodel.RKKY", "api/_autosummary/micromagneticmodel.Slonczewski", "api/_autosummary/micromagneticmodel.System", "api/_autosummary/micromagneticmodel.UniaxialAnisotropy", "api/_autosummary/micromagneticmodel.Zeeman", "api/_autosummary/micromagneticmodel.ZhangLi", "api/_autosummary/micromagneticmodel.abstract", "api/_autosummary/micromagneticmodel.abstract.Abstract", "api/_autosummary/micromagneticmodel.abstract.Container", "api/_autosummary/micromagneticmodel.abstract.Term", "api/_autosummary/micromagneticmodel.consts", "api/_autosummary/micromagneticmodel.consts.e", "api/_autosummary/micromagneticmodel.consts.g", "api/_autosummary/micromagneticmodel.consts.gamma", "api/_autosummary/micromagneticmodel.consts.gamma0", "api/_autosummary/micromagneticmodel.consts.h", "api/_autosummary/micromagneticmodel.consts.hbar", "api/_autosummary/micromagneticmodel.consts.kB", "api/_autosummary/micromagneticmodel.consts.me", "api/_autosummary/micromagneticmodel.consts.mu0", "api/_autosummary/micromagneticmodel.consts.muB", "api/_autosummary/micromagneticmodel.examples", "api/_autosummary/micromagneticmodel.examples.macrospin", "api/_autosummary/micromagneticmodel.test", "api/_autosummary/micromagnetictests", "api/_autosummary/micromagnetictests.calculatortests", "api/_autosummary/micromagnetictests.calculatortests.TestCompute", "api/_autosummary/micromagnetictests.calculatortests.TestCubicAnisotropy", "api/_autosummary/micromagnetictests.calculatortests.TestDMI", "api/_autosummary/micromagnetictests.calculatortests.TestDamping", "api/_autosummary/micromagnetictests.calculatortests.TestDemag", "api/_autosummary/micromagnetictests.calculatortests.TestDynamics", "api/_autosummary/micromagnetictests.calculatortests.TestEnergy", "api/_autosummary/micromagnetictests.calculatortests.TestExchange", "api/_autosummary/micromagnetictests.calculatortests.TestFixedSubregions", "api/_autosummary/micromagnetictests.calculatortests.TestHysteresisDriver", "api/_autosummary/micromagnetictests.calculatortests.TestMesh", "api/_autosummary/micromagnetictests.calculatortests.TestMinDriver", "api/_autosummary/micromagnetictests.calculatortests.TestPrecession", "api/_autosummary/micromagnetictests.calculatortests.TestRKKY", "api/_autosummary/micromagnetictests.calculatortests.TestSlonczewski", "api/_autosummary/micromagnetictests.calculatortests.TestThreads", "api/_autosummary/micromagnetictests.calculatortests.TestTimeDriver", "api/_autosummary/micromagnetictests.calculatortests.TestUniaxialAnisotropy", "api/_autosummary/micromagnetictests.calculatortests.TestZeeman", "api/_autosummary/micromagnetictests.calculatortests.TestZhangLi", "api/_autosummary/micromagnetictests.calculatortests.test_dirname", "api/_autosummary/micromagnetictests.calculatortests.test_format", "api/_autosummary/micromagnetictests.calculatortests.test_info_file", "api/_autosummary/micromagnetictests.calculatortests.test_multiple_drives", "api/_autosummary/micromagnetictests.calculatortests.test_outputstep", "api/_autosummary/micromagnetictests.calculatortests.test_schedule", "api/_autosummary/micromagnetictests.calculatortests.test_skyrmion", "api/_autosummary/micromagnetictests.calculatortests.test_stdprob3", "api/_autosummary/micromagnetictests.calculatortests.test_stdprob4", "api/_autosummary/micromagnetictests.calculatortests.test_stdprob5", "api/_autosummary/micromagnetictests.get_tests", "api/_autosummary/micromagnetictests.test", "api/_autosummary/oommfc", "api/_autosummary/oommfc.CGEvolver", "api/_autosummary/oommfc.Driver", "api/_autosummary/oommfc.EulerEvolver", "api/_autosummary/oommfc.HysteresisDriver", "api/_autosummary/oommfc.MinDriver", "api/_autosummary/oommfc.RungeKuttaEvolver", "api/_autosummary/oommfc.SpinTEvolver", "api/_autosummary/oommfc.SpinXferEvolver", "api/_autosummary/oommfc.TimeDriver", "api/_autosummary/oommfc.UHH_ThetaEvolver", "api/_autosummary/oommfc.Xf_ThermHeunEvolver", "api/_autosummary/oommfc.Xf_ThermSpinXferEvolver", "api/_autosummary/oommfc.compute", "api/_autosummary/oommfc.delete", "api/_autosummary/oommfc.oommf", "api/_autosummary/oommfc.oommf.DockerOOMMFRunner", "api/_autosummary/oommfc.oommf.ExeOOMMFRunner", "api/_autosummary/oommfc.oommf.OOMMFRunner", "api/_autosummary/oommfc.oommf.Runner", "api/_autosummary/oommfc.oommf.TclOOMMFRunner", "api/_autosummary/oommfc.oommf.overhead", "api/_autosummary/oommfc.runner", "api/_autosummary/oommfc.test", "api/_autosummary/oommfc.test_docker", "api/_autosummary/ubermag", "api/_autosummary/ubermag.test", "api/_autosummary/ubermagtable", "api/_autosummary/ubermagtable.Table", "api/_autosummary/ubermagtable.interact", "api/_autosummary/ubermagtable.test", "api/_autosummary/ubermagtable.util", "api/_autosummary/ubermagtable.util.columns", "api/_autosummary/ubermagtable.util.data", "api/_autosummary/ubermagtable.util.units", "api/_autosummary/ubermagutil", "api/_autosummary/ubermagutil.changedir", "api/_autosummary/ubermagutil.hysteresis_values", "api/_autosummary/ubermagutil.inherit_docs", "api/_autosummary/ubermagutil.setup_logging", "api/_autosummary/ubermagutil.test", "api/_autosummary/ubermagutil.typesystem", "api/_autosummary/ubermagutil.typesystem.Descriptor", "api/_autosummary/ubermagutil.typesystem.Dictionary", "api/_autosummary/ubermagutil.typesystem.Name", "api/_autosummary/ubermagutil.typesystem.Parameter", "api/_autosummary/ubermagutil.typesystem.Scalar", "api/_autosummary/ubermagutil.typesystem.Subset", "api/_autosummary/ubermagutil.typesystem.Typed", "api/_autosummary/ubermagutil.typesystem.Vector", "api/_autosummary/ubermagutil.typesystem.typesystem", "api/_autosummary/ubermagutil.units", "api/_autosummary/ubermagutil.units.si_max_multiplier", "api/_autosummary/ubermagutil.units.si_multiplier", "api/index", "changelog", "contributing", "demo", "documentation", "documentation/compatibility", "documentation/discretisedfield", "documentation/index", "documentation/mag2exp", "documentation/micromagneticdata", "documentation/micromagneticmodel", "documentation/micromagnetictests", "documentation/mumax3c", "documentation/notebooks/discretisedfield/field-definition", "documentation/notebooks/discretisedfield/field-holoviews-visualisation", "documentation/notebooks/discretisedfield/field-k3d-visualisation", "documentation/notebooks/discretisedfield/field-matplotlib-visualisation", "documentation/notebooks/discretisedfield/field-normalisation", "documentation/notebooks/discretisedfield/field-operations", "documentation/notebooks/discretisedfield/field-read-write", "documentation/notebooks/discretisedfield/field-rotations", "documentation/notebooks/discretisedfield/field-spatially-varying", "documentation/notebooks/discretisedfield/field-tools", "documentation/notebooks/discretisedfield/line", "documentation/notebooks/discretisedfield/mesh-basics", "documentation/notebooks/discretisedfield/mesh-bc", "documentation/notebooks/discretisedfield/mesh-line-plane", "documentation/notebooks/discretisedfield/mesh-pad", "documentation/notebooks/discretisedfield/mesh-subregions", "documentation/notebooks/discretisedfield/mesh-visualisation", "documentation/notebooks/discretisedfield/mesh-widgets", "documentation/notebooks/discretisedfield/ovf2vtk", "documentation/notebooks/discretisedfield/region-basics", "documentation/notebooks/discretisedfield/region-facing-surfaces", "documentation/notebooks/discretisedfield/region-visualisation", "documentation/notebooks/discretisedfield/xarray-usage", "documentation/notebooks/mag2exp/DC_magnetometry", "documentation/notebooks/mag2exp/Lorentz_TEM", "documentation/notebooks/mag2exp/Magnetic_Force_Microscopy", "documentation/notebooks/mag2exp/Rotations_Lorentz_Microscopy", "documentation/notebooks/mag2exp/SANS", "documentation/notebooks/mag2exp/SAXS", "documentation/notebooks/mag2exp/Torque_magnetometry", "documentation/notebooks/mag2exp/Unit_converter", "documentation/notebooks/mag2exp/X_ray_Holography", "documentation/notebooks/micromagneticdata/documentation", "documentation/notebooks/micromagneticdata/interactive_plotting", "documentation/notebooks/micromagneticmodel/constants", "documentation/notebooks/micromagneticmodel/deriving-dynamics-term", "documentation/notebooks/micromagneticmodel/deriving-energy-term", "documentation/notebooks/micromagneticmodel/dynamics-terms", "documentation/notebooks/micromagneticmodel/energy-terms", "documentation/notebooks/micromagneticmodel/evolver-driver", "documentation/notebooks/micromagneticmodel/same-class-terms", "documentation/notebooks/micromagneticmodel/system", "documentation/notebooks/micromagneticmodel/term-parameters", "documentation/notebooks/micromagnetictests/usage", "documentation/notebooks/oommfc/controlling-default-runner", "documentation/notebooks/oommfc/cubicanisotropy", "documentation/notebooks/oommfc/dirname", "documentation/notebooks/oommfc/dmi", "documentation/notebooks/oommfc/exchange", "documentation/notebooks/oommfc/mindriver-steps", "documentation/notebooks/oommfc/parallel", "documentation/notebooks/oommfc/uniaxialanisotropy", "documentation/notebooks/oommfc/verbosity_levels", "documentation/notebooks/oommfc/zeeman", "documentation/notebooks/ubermag/ubermag-version", "documentation/notebooks/ubermagtable/table-basics", "documentation/notebooks/ubermagtable/table-fft", "documentation/notebooks/ubermagtable/table-interactive-plot", "documentation/notebooks/ubermagtable/table-merge", "documentation/notebooks/ubermagtable/table-visualisation", "documentation/notebooks/ubermagtable/table-widgets", "documentation/notebooks/ubermagutil/constant-attributes", "documentation/notebooks/ubermagutil/hysteresis", "documentation/notebooks/ubermagutil/imposing-typesystem", "documentation/notebooks/ubermagutil/inherit-docs", "documentation/notebooks/ubermagutil/logging", "documentation/notebooks/ubermagutil/otherwise-type", "documentation/notebooks/ubermagutil/parameter-descriptor", "documentation/notebooks/ubermagutil/si-prefix", "documentation/oommfc", "documentation/ubermag", "documentation/ubermagtable", "documentation/ubermagutil", "examples/index", "examples/notebooks/07-tutorial-standard-problem3", "examples/notebooks/08-tutorial-standard-problem4", "examples/notebooks/09-tutorial-standard-problem5", "examples/notebooks/10-tutorial-standard-problem-fmr", "examples/notebooks/11-tutorial-deriving-fields", "examples/notebooks/12-tutorial-stray-field", "examples/notebooks/13-tutorial-skyrmion", "examples/notebooks/choosing-runner", "examples/notebooks/energy-term-computations", "examples/notebooks/field-operations2", "examples/notebooks/finite-temperature", "examples/notebooks/fixed-subregions", "examples/notebooks/hysteresis", "examples/notebooks/multiple-terms", "examples/notebooks/negative-A", "examples/notebooks/periodic-boundary-conditions", "examples/notebooks/rkky", "examples/notebooks/sine-hysteresis", "examples/notebooks/space-time-field", "examples/notebooks/spatially-varying-parameters1", "examples/notebooks/spatially-varying-parameters2", "examples/notebooks/time-dependent-field", "examples/notebooks/time-dependent-field-current", "faq", "getting-started/index", "getting-started/jupyter-basics", "getting-started/notebooks/driving-dw", "getting-started/notebooks/dw-pair-conversion", "getting-started/notebooks/dynamics-equation", "getting-started/notebooks/energy-equation", "getting-started/notebooks/first-ubermag-simulation", "getting-started/notebooks/magnetisation-field", "getting-started/notebooks/python-basics", "help", "index", "installation", "news"], "filenames": ["api/_autosummary/discretisedfield.rst", "api/_autosummary/discretisedfield.DValue.rst", "api/_autosummary/discretisedfield.Field.rst", "api/_autosummary/discretisedfield.FieldRotator.rst", "api/_autosummary/discretisedfield.Line.rst", "api/_autosummary/discretisedfield.Mesh.rst", "api/_autosummary/discretisedfield.Region.rst", "api/_autosummary/discretisedfield.integral.rst", "api/_autosummary/discretisedfield.interact.rst", "api/_autosummary/discretisedfield.io.rst", "api/_autosummary/discretisedfield.io.field_from_hdf5.rst", "api/_autosummary/discretisedfield.io.field_from_ovf.rst", "api/_autosummary/discretisedfield.io.field_from_vtk.rst", "api/_autosummary/discretisedfield.io.field_to_hdf5.rst", "api/_autosummary/discretisedfield.io.field_to_ovf.rst", "api/_autosummary/discretisedfield.io.field_to_vtk.rst", "api/_autosummary/discretisedfield.io.ovf2vtk.rst", "api/_autosummary/discretisedfield.io.ovf2vtk.ovf2vtk.rst", "api/_autosummary/discretisedfield.plotting.rst", "api/_autosummary/discretisedfield.plotting.Hv.rst", "api/_autosummary/discretisedfield.plotting.K3dField.rst", "api/_autosummary/discretisedfield.plotting.K3dMesh.rst", "api/_autosummary/discretisedfield.plotting.K3dRegion.rst", "api/_autosummary/discretisedfield.plotting.MplField.rst", "api/_autosummary/discretisedfield.plotting.MplMesh.rst", "api/_autosummary/discretisedfield.plotting.MplRegion.rst", "api/_autosummary/discretisedfield.plotting.add_colorwheel.rst", "api/_autosummary/discretisedfield.test.rst", "api/_autosummary/discretisedfield.tools.rst", "api/_autosummary/discretisedfield.tools.count_bps.rst", "api/_autosummary/discretisedfield.tools.count_large_cell_angle_regions.rst", "api/_autosummary/discretisedfield.tools.demag_field.rst", "api/_autosummary/discretisedfield.tools.demag_tensor.rst", "api/_autosummary/discretisedfield.tools.emergent_magnetic_field.rst", "api/_autosummary/discretisedfield.tools.max_neigbouring_cell_angle.rst", "api/_autosummary/discretisedfield.tools.neigbouring_cell_angle.rst", "api/_autosummary/discretisedfield.tools.topological_charge.rst", "api/_autosummary/discretisedfield.tools.topological_charge_density.rst", "api/_autosummary/mag2exp.rst", "api/_autosummary/mag2exp.ltem.rst", "api/_autosummary/mag2exp.ltem.defocus_image.rst", "api/_autosummary/mag2exp.ltem.integrated_magnetic_flux_density.rst", "api/_autosummary/mag2exp.ltem.phase.rst", "api/_autosummary/mag2exp.ltem.relativistic_wavelength.rst", "api/_autosummary/mag2exp.magnetometry.rst", "api/_autosummary/mag2exp.magnetometry.magnetisation.rst", "api/_autosummary/mag2exp.magnetometry.torque.rst", "api/_autosummary/mag2exp.mfm.rst", "api/_autosummary/mag2exp.mfm.phase_shift.rst", "api/_autosummary/mag2exp.quick_plots.rst", "api/_autosummary/mag2exp.quick_plots.ltem_defocus.rst", "api/_autosummary/mag2exp.quick_plots.ltem_ft_phase.rst", "api/_autosummary/mag2exp.quick_plots.ltem_integrated_mfd.rst", "api/_autosummary/mag2exp.quick_plots.ltem_phase.rst", "api/_autosummary/mag2exp.quick_plots.mfm_phase_shift.rst", "api/_autosummary/mag2exp.quick_plots.sans_chiral_function.rst", "api/_autosummary/mag2exp.quick_plots.sans_cross_section.rst", "api/_autosummary/mag2exp.quick_plots.saxs.rst", "api/_autosummary/mag2exp.quick_plots.x_ray_holography.rst", "api/_autosummary/mag2exp.sans.rst", "api/_autosummary/mag2exp.sans.chiral_function.rst", "api/_autosummary/mag2exp.sans.cross_section.rst", "api/_autosummary/mag2exp.test.rst", "api/_autosummary/mag2exp.x_ray.rst", "api/_autosummary/mag2exp.x_ray.holography.rst", "api/_autosummary/mag2exp.x_ray.saxs.rst", "api/_autosummary/micromagneticdata.rst", "api/_autosummary/micromagneticdata.AbstractDrive.rst", "api/_autosummary/micromagneticdata.CombinedDrive.rst", "api/_autosummary/micromagneticdata.Data.rst", "api/_autosummary/micromagneticdata.Drive.rst", "api/_autosummary/micromagneticdata.Mumax3Drive.rst", "api/_autosummary/micromagneticdata.OOMMFDrive.rst", "api/_autosummary/micromagneticdata.test.rst", "api/_autosummary/micromagneticmodel.rst", "api/_autosummary/micromagneticmodel.CubicAnisotropy.rst", "api/_autosummary/micromagneticmodel.DMI.rst", "api/_autosummary/micromagneticmodel.Damping.rst", "api/_autosummary/micromagneticmodel.Demag.rst", "api/_autosummary/micromagneticmodel.Driver.rst", "api/_autosummary/micromagneticmodel.Dynamics.rst", "api/_autosummary/micromagneticmodel.DynamicsTerm.rst", "api/_autosummary/micromagneticmodel.Energy.rst", "api/_autosummary/micromagneticmodel.EnergyTerm.rst", "api/_autosummary/micromagneticmodel.Evolver.rst", "api/_autosummary/micromagneticmodel.Exchange.rst", "api/_autosummary/micromagneticmodel.ExternalDriver.rst", "api/_autosummary/micromagneticmodel.ExternalRunner.rst", "api/_autosummary/micromagneticmodel.MagnetoElastic.rst", "api/_autosummary/micromagneticmodel.Precession.rst", "api/_autosummary/micromagneticmodel.RKKY.rst", "api/_autosummary/micromagneticmodel.Slonczewski.rst", "api/_autosummary/micromagneticmodel.System.rst", "api/_autosummary/micromagneticmodel.UniaxialAnisotropy.rst", "api/_autosummary/micromagneticmodel.Zeeman.rst", "api/_autosummary/micromagneticmodel.ZhangLi.rst", "api/_autosummary/micromagneticmodel.abstract.rst", "api/_autosummary/micromagneticmodel.abstract.Abstract.rst", "api/_autosummary/micromagneticmodel.abstract.Container.rst", "api/_autosummary/micromagneticmodel.abstract.Term.rst", "api/_autosummary/micromagneticmodel.consts.rst", "api/_autosummary/micromagneticmodel.consts.e.rst", "api/_autosummary/micromagneticmodel.consts.g.rst", "api/_autosummary/micromagneticmodel.consts.gamma.rst", "api/_autosummary/micromagneticmodel.consts.gamma0.rst", "api/_autosummary/micromagneticmodel.consts.h.rst", "api/_autosummary/micromagneticmodel.consts.hbar.rst", "api/_autosummary/micromagneticmodel.consts.kB.rst", "api/_autosummary/micromagneticmodel.consts.me.rst", "api/_autosummary/micromagneticmodel.consts.mu0.rst", "api/_autosummary/micromagneticmodel.consts.muB.rst", "api/_autosummary/micromagneticmodel.examples.rst", "api/_autosummary/micromagneticmodel.examples.macrospin.rst", "api/_autosummary/micromagneticmodel.test.rst", "api/_autosummary/micromagnetictests.rst", "api/_autosummary/micromagnetictests.calculatortests.rst", "api/_autosummary/micromagnetictests.calculatortests.TestCompute.rst", "api/_autosummary/micromagnetictests.calculatortests.TestCubicAnisotropy.rst", "api/_autosummary/micromagnetictests.calculatortests.TestDMI.rst", "api/_autosummary/micromagnetictests.calculatortests.TestDamping.rst", "api/_autosummary/micromagnetictests.calculatortests.TestDemag.rst", "api/_autosummary/micromagnetictests.calculatortests.TestDynamics.rst", "api/_autosummary/micromagnetictests.calculatortests.TestEnergy.rst", "api/_autosummary/micromagnetictests.calculatortests.TestExchange.rst", "api/_autosummary/micromagnetictests.calculatortests.TestFixedSubregions.rst", "api/_autosummary/micromagnetictests.calculatortests.TestHysteresisDriver.rst", "api/_autosummary/micromagnetictests.calculatortests.TestMesh.rst", "api/_autosummary/micromagnetictests.calculatortests.TestMinDriver.rst", "api/_autosummary/micromagnetictests.calculatortests.TestPrecession.rst", "api/_autosummary/micromagnetictests.calculatortests.TestRKKY.rst", "api/_autosummary/micromagnetictests.calculatortests.TestSlonczewski.rst", "api/_autosummary/micromagnetictests.calculatortests.TestThreads.rst", "api/_autosummary/micromagnetictests.calculatortests.TestTimeDriver.rst", "api/_autosummary/micromagnetictests.calculatortests.TestUniaxialAnisotropy.rst", "api/_autosummary/micromagnetictests.calculatortests.TestZeeman.rst", "api/_autosummary/micromagnetictests.calculatortests.TestZhangLi.rst", "api/_autosummary/micromagnetictests.calculatortests.test_dirname.rst", "api/_autosummary/micromagnetictests.calculatortests.test_format.rst", "api/_autosummary/micromagnetictests.calculatortests.test_info_file.rst", "api/_autosummary/micromagnetictests.calculatortests.test_multiple_drives.rst", "api/_autosummary/micromagnetictests.calculatortests.test_outputstep.rst", "api/_autosummary/micromagnetictests.calculatortests.test_schedule.rst", "api/_autosummary/micromagnetictests.calculatortests.test_skyrmion.rst", "api/_autosummary/micromagnetictests.calculatortests.test_stdprob3.rst", "api/_autosummary/micromagnetictests.calculatortests.test_stdprob4.rst", "api/_autosummary/micromagnetictests.calculatortests.test_stdprob5.rst", "api/_autosummary/micromagnetictests.get_tests.rst", "api/_autosummary/micromagnetictests.test.rst", "api/_autosummary/oommfc.rst", "api/_autosummary/oommfc.CGEvolver.rst", "api/_autosummary/oommfc.Driver.rst", "api/_autosummary/oommfc.EulerEvolver.rst", "api/_autosummary/oommfc.HysteresisDriver.rst", "api/_autosummary/oommfc.MinDriver.rst", "api/_autosummary/oommfc.RungeKuttaEvolver.rst", "api/_autosummary/oommfc.SpinTEvolver.rst", "api/_autosummary/oommfc.SpinXferEvolver.rst", "api/_autosummary/oommfc.TimeDriver.rst", "api/_autosummary/oommfc.UHH_ThetaEvolver.rst", "api/_autosummary/oommfc.Xf_ThermHeunEvolver.rst", "api/_autosummary/oommfc.Xf_ThermSpinXferEvolver.rst", "api/_autosummary/oommfc.compute.rst", "api/_autosummary/oommfc.delete.rst", "api/_autosummary/oommfc.oommf.rst", "api/_autosummary/oommfc.oommf.DockerOOMMFRunner.rst", "api/_autosummary/oommfc.oommf.ExeOOMMFRunner.rst", "api/_autosummary/oommfc.oommf.OOMMFRunner.rst", "api/_autosummary/oommfc.oommf.Runner.rst", "api/_autosummary/oommfc.oommf.TclOOMMFRunner.rst", "api/_autosummary/oommfc.oommf.overhead.rst", "api/_autosummary/oommfc.runner.rst", "api/_autosummary/oommfc.test.rst", "api/_autosummary/oommfc.test_docker.rst", "api/_autosummary/ubermag.rst", "api/_autosummary/ubermag.test.rst", "api/_autosummary/ubermagtable.rst", "api/_autosummary/ubermagtable.Table.rst", "api/_autosummary/ubermagtable.interact.rst", "api/_autosummary/ubermagtable.test.rst", "api/_autosummary/ubermagtable.util.rst", "api/_autosummary/ubermagtable.util.columns.rst", "api/_autosummary/ubermagtable.util.data.rst", "api/_autosummary/ubermagtable.util.units.rst", "api/_autosummary/ubermagutil.rst", "api/_autosummary/ubermagutil.changedir.rst", "api/_autosummary/ubermagutil.hysteresis_values.rst", "api/_autosummary/ubermagutil.inherit_docs.rst", "api/_autosummary/ubermagutil.setup_logging.rst", "api/_autosummary/ubermagutil.test.rst", "api/_autosummary/ubermagutil.typesystem.rst", "api/_autosummary/ubermagutil.typesystem.Descriptor.rst", "api/_autosummary/ubermagutil.typesystem.Dictionary.rst", "api/_autosummary/ubermagutil.typesystem.Name.rst", "api/_autosummary/ubermagutil.typesystem.Parameter.rst", "api/_autosummary/ubermagutil.typesystem.Scalar.rst", "api/_autosummary/ubermagutil.typesystem.Subset.rst", "api/_autosummary/ubermagutil.typesystem.Typed.rst", "api/_autosummary/ubermagutil.typesystem.Vector.rst", "api/_autosummary/ubermagutil.typesystem.typesystem.rst", "api/_autosummary/ubermagutil.units.rst", "api/_autosummary/ubermagutil.units.si_max_multiplier.rst", "api/_autosummary/ubermagutil.units.si_multiplier.rst", "api/index.rst", "changelog.rst", "contributing.rst", "demo.ipynb", "documentation.rst", "documentation/compatibility.rst", "documentation/discretisedfield.rst", "documentation/index.rst", "documentation/mag2exp.rst", "documentation/micromagneticdata.rst", "documentation/micromagneticmodel.rst", "documentation/micromagnetictests.rst", "documentation/mumax3c.rst", "documentation/notebooks/discretisedfield/field-definition.ipynb", "documentation/notebooks/discretisedfield/field-holoviews-visualisation.ipynb", "documentation/notebooks/discretisedfield/field-k3d-visualisation.ipynb", "documentation/notebooks/discretisedfield/field-matplotlib-visualisation.ipynb", "documentation/notebooks/discretisedfield/field-normalisation.ipynb", "documentation/notebooks/discretisedfield/field-operations.ipynb", "documentation/notebooks/discretisedfield/field-read-write.ipynb", "documentation/notebooks/discretisedfield/field-rotations.ipynb", "documentation/notebooks/discretisedfield/field-spatially-varying.ipynb", "documentation/notebooks/discretisedfield/field-tools.ipynb", "documentation/notebooks/discretisedfield/line.ipynb", "documentation/notebooks/discretisedfield/mesh-basics.ipynb", "documentation/notebooks/discretisedfield/mesh-bc.ipynb", "documentation/notebooks/discretisedfield/mesh-line-plane.ipynb", "documentation/notebooks/discretisedfield/mesh-pad.ipynb", "documentation/notebooks/discretisedfield/mesh-subregions.ipynb", "documentation/notebooks/discretisedfield/mesh-visualisation.ipynb", "documentation/notebooks/discretisedfield/mesh-widgets.ipynb", "documentation/notebooks/discretisedfield/ovf2vtk.ipynb", "documentation/notebooks/discretisedfield/region-basics.ipynb", "documentation/notebooks/discretisedfield/region-facing-surfaces.ipynb", "documentation/notebooks/discretisedfield/region-visualisation.ipynb", "documentation/notebooks/discretisedfield/xarray-usage.ipynb", "documentation/notebooks/mag2exp/DC_magnetometry.ipynb", "documentation/notebooks/mag2exp/Lorentz_TEM.ipynb", "documentation/notebooks/mag2exp/Magnetic_Force_Microscopy.ipynb", "documentation/notebooks/mag2exp/Rotations_Lorentz_Microscopy.ipynb", "documentation/notebooks/mag2exp/SANS.ipynb", "documentation/notebooks/mag2exp/SAXS.ipynb", "documentation/notebooks/mag2exp/Torque_magnetometry.ipynb", "documentation/notebooks/mag2exp/Unit_converter.ipynb", "documentation/notebooks/mag2exp/X_ray_Holography.ipynb", "documentation/notebooks/micromagneticdata/documentation.ipynb", "documentation/notebooks/micromagneticdata/interactive_plotting.ipynb", "documentation/notebooks/micromagneticmodel/constants.ipynb", "documentation/notebooks/micromagneticmodel/deriving-dynamics-term.ipynb", "documentation/notebooks/micromagneticmodel/deriving-energy-term.ipynb", "documentation/notebooks/micromagneticmodel/dynamics-terms.ipynb", "documentation/notebooks/micromagneticmodel/energy-terms.ipynb", "documentation/notebooks/micromagneticmodel/evolver-driver.ipynb", "documentation/notebooks/micromagneticmodel/same-class-terms.ipynb", "documentation/notebooks/micromagneticmodel/system.ipynb", "documentation/notebooks/micromagneticmodel/term-parameters.ipynb", "documentation/notebooks/micromagnetictests/usage.ipynb", "documentation/notebooks/oommfc/controlling-default-runner.ipynb", "documentation/notebooks/oommfc/cubicanisotropy.ipynb", "documentation/notebooks/oommfc/dirname.ipynb", "documentation/notebooks/oommfc/dmi.ipynb", "documentation/notebooks/oommfc/exchange.ipynb", "documentation/notebooks/oommfc/mindriver-steps.ipynb", "documentation/notebooks/oommfc/parallel.ipynb", "documentation/notebooks/oommfc/uniaxialanisotropy.ipynb", "documentation/notebooks/oommfc/verbosity_levels.ipynb", "documentation/notebooks/oommfc/zeeman.ipynb", "documentation/notebooks/ubermag/ubermag-version.ipynb", "documentation/notebooks/ubermagtable/table-basics.ipynb", "documentation/notebooks/ubermagtable/table-fft.ipynb", "documentation/notebooks/ubermagtable/table-interactive-plot.ipynb", "documentation/notebooks/ubermagtable/table-merge.ipynb", "documentation/notebooks/ubermagtable/table-visualisation.ipynb", "documentation/notebooks/ubermagtable/table-widgets.ipynb", "documentation/notebooks/ubermagutil/constant-attributes.ipynb", "documentation/notebooks/ubermagutil/hysteresis.ipynb", "documentation/notebooks/ubermagutil/imposing-typesystem.ipynb", "documentation/notebooks/ubermagutil/inherit-docs.ipynb", "documentation/notebooks/ubermagutil/logging.ipynb", "documentation/notebooks/ubermagutil/otherwise-type.ipynb", "documentation/notebooks/ubermagutil/parameter-descriptor.ipynb", "documentation/notebooks/ubermagutil/si-prefix.ipynb", "documentation/oommfc.rst", "documentation/ubermag.rst", "documentation/ubermagtable.rst", "documentation/ubermagutil.rst", "examples/index.rst", "examples/notebooks/07-tutorial-standard-problem3.ipynb", "examples/notebooks/08-tutorial-standard-problem4.ipynb", "examples/notebooks/09-tutorial-standard-problem5.ipynb", "examples/notebooks/10-tutorial-standard-problem-fmr.ipynb", "examples/notebooks/11-tutorial-deriving-fields.ipynb", "examples/notebooks/12-tutorial-stray-field.ipynb", "examples/notebooks/13-tutorial-skyrmion.ipynb", "examples/notebooks/choosing-runner.ipynb", "examples/notebooks/energy-term-computations.ipynb", "examples/notebooks/field-operations2.ipynb", "examples/notebooks/finite-temperature.ipynb", "examples/notebooks/fixed-subregions.ipynb", "examples/notebooks/hysteresis.ipynb", "examples/notebooks/multiple-terms.ipynb", "examples/notebooks/negative-A.ipynb", "examples/notebooks/periodic-boundary-conditions.ipynb", "examples/notebooks/rkky.ipynb", "examples/notebooks/sine-hysteresis.ipynb", "examples/notebooks/space-time-field.ipynb", "examples/notebooks/spatially-varying-parameters1.ipynb", "examples/notebooks/spatially-varying-parameters2.ipynb", "examples/notebooks/time-dependent-field.ipynb", "examples/notebooks/time-dependent-field-current.ipynb", "faq.rst", "getting-started/index.rst", "getting-started/jupyter-basics.rst", "getting-started/notebooks/driving-dw.ipynb", "getting-started/notebooks/dw-pair-conversion.ipynb", "getting-started/notebooks/dynamics-equation.ipynb", "getting-started/notebooks/energy-equation.ipynb", "getting-started/notebooks/first-ubermag-simulation.ipynb", "getting-started/notebooks/magnetisation-field.ipynb", "getting-started/notebooks/python-basics.ipynb", "help.rst", "index.rst", "installation.rst", "news.rst"], "titles": ["discretisedfield", "DValue", "Field", "FieldRotator", "Line", "Mesh", "Region", "discretisedfield.integral", "discretisedfield.interact", "discretisedfield.io", "discretisedfield.io.field_from_hdf5", "discretisedfield.io.field_from_ovf", "discretisedfield.io.field_from_vtk", "discretisedfield.io.field_to_hdf5", "discretisedfield.io.field_to_ovf", "discretisedfield.io.field_to_vtk", "discretisedfield.io.ovf2vtk", "discretisedfield.io.ovf2vtk.ovf2vtk", "discretisedfield.plotting", "Hv", "K3dField", "K3dMesh", "K3dRegion", "MplField", "MplMesh", "MplRegion", "discretisedfield.plotting.add_colorwheel", "discretisedfield.test", "discretisedfield.tools", "discretisedfield.tools.count_bps", "discretisedfield.tools.count_large_cell_angle_regions", "discretisedfield.tools.demag_field", "discretisedfield.tools.demag_tensor", "discretisedfield.tools.emergent_magnetic_field", "discretisedfield.tools.max_neigbouring_cell_angle", "discretisedfield.tools.neigbouring_cell_angle", "discretisedfield.tools.topological_charge", "discretisedfield.tools.topological_charge_density", "mag2exp", "mag2exp.ltem", "mag2exp.ltem.defocus_image", "mag2exp.ltem.integrated_magnetic_flux_density", "mag2exp.ltem.phase", "mag2exp.ltem.relativistic_wavelength", "mag2exp.magnetometry", "mag2exp.magnetometry.magnetisation", "mag2exp.magnetometry.torque", "mag2exp.mfm", "mag2exp.mfm.phase_shift", "mag2exp.quick_plots", "mag2exp.quick_plots.ltem_defocus", "mag2exp.quick_plots.ltem_ft_phase", "mag2exp.quick_plots.ltem_integrated_mfd", "mag2exp.quick_plots.ltem_phase", "mag2exp.quick_plots.mfm_phase_shift", "mag2exp.quick_plots.sans_chiral_function", "mag2exp.quick_plots.sans_cross_section", "mag2exp.quick_plots.saxs", "mag2exp.quick_plots.x_ray_holography", "mag2exp.sans", "mag2exp.sans.chiral_function", "mag2exp.sans.cross_section", "mag2exp.test", "mag2exp.x_ray", "mag2exp.x_ray.holography", "mag2exp.x_ray.saxs", "micromagneticdata", "AbstractDrive", "CombinedDrive", "Data", "Drive", "Mumax3Drive", "OOMMFDrive", "micromagneticdata.test", "micromagneticmodel", "CubicAnisotropy", "DMI", "Damping", "Demag", "Driver", "Dynamics", "DynamicsTerm", "Energy", "EnergyTerm", "Evolver", "Exchange", "ExternalDriver", "ExternalRunner", "MagnetoElastic", "Precession", "RKKY", "Slonczewski", "System", "UniaxialAnisotropy", "Zeeman", "ZhangLi", "micromagneticmodel.abstract", "Abstract", "Container", "Term", "micromagneticmodel.consts", "micromagneticmodel.consts.e", "micromagneticmodel.consts.g", "micromagneticmodel.consts.gamma", "micromagneticmodel.consts.gamma0", "micromagneticmodel.consts.h", "micromagneticmodel.consts.hbar", "micromagneticmodel.consts.kB", "micromagneticmodel.consts.me", "micromagneticmodel.consts.mu0", "micromagneticmodel.consts.muB", "micromagneticmodel.examples", "micromagneticmodel.examples.macrospin", "micromagneticmodel.test", "micromagnetictests", "micromagnetictests.calculatortests", "TestCompute", "TestCubicAnisotropy", "TestDMI", "TestDamping", "TestDemag", "TestDynamics", "TestEnergy", "TestExchange", "TestFixedSubregions", "TestHysteresisDriver", "TestMesh", "TestMinDriver", "TestPrecession", "TestRKKY", "TestSlonczewski", "TestThreads", "TestTimeDriver", "TestUniaxialAnisotropy", "TestZeeman", "TestZhangLi", "micromagnetictests.calculatortests.test_dirname", "micromagnetictests.calculatortests.test_format", "micromagnetictests.calculatortests.test_info_file", "micromagnetictests.calculatortests.test_multiple_drives", "micromagnetictests.calculatortests.test_outputstep", "micromagnetictests.calculatortests.test_schedule", "micromagnetictests.calculatortests.test_skyrmion", "micromagnetictests.calculatortests.test_stdprob3", "micromagnetictests.calculatortests.test_stdprob4", "micromagnetictests.calculatortests.test_stdprob5", "micromagnetictests.get_tests", "micromagnetictests.test", "oommfc", "CGEvolver", "Driver", "EulerEvolver", "HysteresisDriver", "MinDriver", "RungeKuttaEvolver", "SpinTEvolver", "SpinXferEvolver", "TimeDriver", "UHH_ThetaEvolver", "Xf_ThermHeunEvolver", "Xf_ThermSpinXferEvolver", "oommfc.compute", "oommfc.delete", "oommfc.oommf", "DockerOOMMFRunner", "ExeOOMMFRunner", "OOMMFRunner", "Runner", "TclOOMMFRunner", "oommfc.oommf.overhead", "oommfc.runner", "oommfc.test", "oommfc.test_docker", "ubermag", "ubermag.test", "ubermagtable", "Table", "ubermagtable.interact", "ubermagtable.test", "ubermagtable.util", "ubermagtable.util.columns", "ubermagtable.util.data", "ubermagtable.util.units", "ubermagutil", "ubermagutil.changedir", "ubermagutil.hysteresis_values", "ubermagutil.inherit_docs", "ubermagutil.setup_logging", "ubermagutil.test", "ubermagutil.typesystem", "Descriptor", "Dictionary", "Name", "Parameter", "Scalar", "Subset", "Typed", "Vector", "ubermagutil.typesystem.typesystem", "ubermagutil.units", "ubermagutil.units.si_max_multiplier", "ubermagutil.units.si_multiplier", "API Reference", "Changelog", "Contributing", "Demo", "Documentation", "Compatibility: Ubermag - OOMMF - mumax<sup>3</sup>", "discretisedfield", "Package documentation", "mag2exp", "micromagneticdata", "micromagneticmodel", "micromagnetictests", "mumax3c", "Defining a uniform field", "Visualising field using <code class=\"docutils literal notranslate\"><span class=\"pre\">holoviews</span></code>", "Field visualisation using <code class=\"docutils literal notranslate\"><span class=\"pre\">k3d</span></code>", "Visualising field using <code class=\"docutils literal notranslate\"><span class=\"pre\">matplotlib</span></code>", "Field normalisation", "Field operations", "Reading and writing fields", "Field rotation", "Spatially varying fields", "Field tools", "Line object", "Mesh basics", "Mesh boundary conditions", "Mesh plane and line", "Mesh pad", "Mesh subregions", "Mesh visualisation", "Mesh widgets", "<code class=\"docutils literal notranslate\"><span class=\"pre\">ovf2vtk</span></code> tool", "Region basics", "Region facing surfaces", "Region visualisation", "Importing/Exporting field from/to <code class=\"docutils literal notranslate\"><span class=\"pre\">xarray.DataArray</span></code>", "DC magnetometry", "Lorentz Transmission Electron Microscopy", "Magnetic Force Microscopy", "Using Rotations with <code class=\"docutils literal notranslate\"><span class=\"pre\">mag2exp</span></code>", "Small Angle Neutron Scattering", "Small Angle X-ray Scattering", "Torque magnetometry", "Unit Conversions", "X-ray Holography", "Analysing simulation results", "Interactive plots", "Constants", "Deriving a dynamics term", "Deriving an energy term", "Dynamics terms and dynamics equation", "Energy terms and energy equation", "Deriving evolver and driver classes", "Multiple energy terms of the same class", "Defining micromagnetic system", "Term parameters", "Usage", "Controlling the default runner", "Tutorial 05: Cubic anisotropy energy term", "Custom directory name", "Tutorial 04: Dzyaloshinskii-Moriya energy term", "Tutorial 02: Exchange energy term", "<code class=\"docutils literal notranslate\"><span class=\"pre\">MinDriver</span></code> steps", "Running simulations in parallel", "Tutorial 03: Uniaxial anisotropy energy term", "Verbosity levels", "Tutorial 01: Zeeman energy term", "&lt;no title&gt;", "Table basics", "Table FFT", "Table interactive plot", "Table merge", "Table visualisation", "Table widgets", "Constant attributes", "Hysteresis values", "Imposing <code class=\"docutils literal notranslate\"><span class=\"pre\">typesystem</span></code> on a class", "<code class=\"docutils literal notranslate\"><span class=\"pre\">inherit_docs</span></code> decorator", "Logging control", "Defining <code class=\"docutils literal notranslate\"><span class=\"pre\">otherwise</span></code> type", "<code class=\"docutils literal notranslate\"><span class=\"pre\">Parameter</span></code> descriptor", "Extracting the SI prefix", "oommfc", "ubermag", "ubermagtable", "ubermagutil", "Examples", "Standard problem 3", "Standard problem 4", "Standard problem 5", "FMR standard problem", "Deriving energy values", "Calculating a stray field using an airbox method", "Skyrmion in a disk", "Choosing runner", "Energy term computations", "Field operations 2", "Simulation at finite temperature", "Fixed subregions", "Hysteresis simulations", "Multiple energy terms of the same class", "Negative exchange energy constant", "Periodic boundary conditions", "RKKY energy term", "Sine-hysteresis", "Both spatially and time varying field", "Spatially varying parameters 1", "Spatially varying parameters 2", "Time-varying field", "Time-dependent fields and currents", "FAQ", "Getting started", "Jupyter lab", "Exercise: Current induced domain wall motion", "Exercise: Domain wall pair conversion", "Dynamics equation", "Energy equation", "Our first ubermag simulation", "Magnetisation field", "Python basics", "Help", "Ubermag", "Installation", "News"], "terms": {"finit": [0, 2, 5, 158, 160, 203, 215, 222, 226, 234, 288, 292, 319, 320, 323], "differ": [0, 2, 3, 5, 6, 19, 23, 24, 25, 32, 37, 67, 68, 69, 94, 98, 167, 169, 170, 203, 205, 206, 209, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 230, 231, 233, 234, 236, 240, 243, 245, 246, 248, 252, 253, 255, 256, 257, 260, 263, 266, 267, 268, 270, 280, 282, 292, 296, 301, 302, 303, 305, 308, 309, 311, 317, 318, 319, 320, 321, 323, 324], "field": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 19, 20, 23, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 64, 65, 67, 68, 70, 75, 76, 77, 85, 88, 89, 91, 92, 93, 94, 95, 112, 161, 176, 177, 203, 208, 225, 228, 229, 230, 234, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 253, 256, 261, 262, 264, 265, 271, 288, 289, 291, 292, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 313, 315, 316, 317, 318, 319, 323, 325], "class": [0, 1, 2, 3, 4, 5, 6, 18, 19, 20, 21, 22, 23, 24, 25, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 166, 167, 168, 175, 176, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 203, 206, 212, 215, 221, 223, 224, 237, 241, 250, 251, 253, 262, 270, 276, 279, 281, 282, 287, 288, 311, 317, 318, 320, 321, 324, 325], "function": [0, 1, 2, 3, 4, 6, 7, 8, 9, 12, 16, 17, 18, 19, 23, 28, 29, 34, 36, 38, 39, 40, 44, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 66, 67, 74, 86, 94, 111, 114, 115, 146, 148, 162, 163, 167, 173, 175, 176, 177, 179, 183, 187, 189, 191, 192, 193, 194, 195, 196, 197, 199, 203, 205, 206, 216, 217, 219, 222, 224, 226, 230, 231, 234, 236, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 253, 257, 260, 266, 268, 270, 271, 272, 274, 277, 280, 285, 289, 290, 291, 293, 295, 297, 298, 299, 301, 304, 305, 306, 308, 310, 320, 323], "submodul": [0, 9, 38, 39, 44, 47, 59, 63, 74, 114, 148, 175, 183, 203], "discretisedfield": [1, 2, 3, 4, 5, 6, 19, 20, 21, 22, 23, 24, 25, 40, 41, 42, 45, 46, 48, 60, 61, 64, 65, 67, 70, 75, 76, 77, 85, 88, 89, 91, 92, 93, 94, 95, 161, 203, 205, 209, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 250, 251, 256, 261, 262, 264, 265, 271, 280, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 314, 315, 316, 317, 318, 319, 320, 323, 324, 325], "infinitesimali": 1, "small": [1, 4, 5, 6, 20, 21, 23, 24, 25, 55, 56, 57, 59, 65, 94, 176, 210, 218, 222, 226, 231, 236, 259, 296, 311, 323, 324], "valu": [1, 2, 3, 4, 5, 6, 8, 13, 14, 15, 19, 20, 21, 23, 24, 25, 30, 33, 34, 35, 36, 37, 40, 41, 42, 45, 46, 48, 60, 61, 64, 65, 67, 68, 69, 70, 71, 72, 75, 76, 77, 85, 88, 89, 90, 91, 92, 93, 94, 95, 97, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 176, 182, 185, 187, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 203, 205, 215, 216, 217, 219, 220, 221, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 252, 253, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 276, 278, 280, 281, 282, 283, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 315, 316, 317, 318, 319, 324], "differenti": [1, 94, 158, 242, 243, 246, 311], "thi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 17, 19, 20, 21, 22, 23, 24, 25, 30, 34, 35, 36, 37, 41, 48, 50, 52, 60, 67, 68, 69, 70, 71, 72, 76, 86, 87, 90, 92, 94, 99, 150, 162, 164, 167, 176, 177, 182, 187, 191, 192, 193, 194, 195, 196, 197, 203, 205, 206, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 228, 229, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 265, 267, 270, 271, 272, 274, 275, 277, 278, 279, 280, 282, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 308, 309, 310, 312, 313, 314, 315, 317, 318, 319, 320, 321, 323, 324], "i": [1, 2, 3, 4, 5, 6, 8, 9, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 64, 65, 67, 68, 69, 70, 71, 72, 75, 76, 77, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 97, 98, 99, 112, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 170, 176, 177, 185, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 203, 204, 205, 206, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 324], "us": [1, 2, 3, 4, 5, 6, 9, 12, 14, 15, 17, 19, 20, 21, 22, 23, 24, 25, 30, 36, 37, 40, 41, 42, 43, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 64, 65, 67, 69, 70, 71, 72, 75, 76, 77, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 150, 161, 164, 165, 167, 168, 170, 176, 183, 187, 200, 203, 204, 205, 206, 208, 210, 214, 215, 219, 220, 221, 222, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 256, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 280, 282, 283, 285, 288, 289, 290, 291, 292, 293, 296, 297, 298, 299, 301, 303, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325], "defin": [1, 2, 3, 4, 5, 6, 10, 12, 13, 14, 15, 19, 23, 24, 33, 36, 37, 42, 60, 61, 64, 65, 70, 75, 76, 77, 78, 80, 82, 85, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 176, 190, 191, 193, 194, 195, 197, 203, 205, 208, 212, 216, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 230, 234, 236, 237, 238, 239, 240, 242, 243, 244, 246, 248, 253, 254, 260, 262, 263, 264, 265, 266, 267, 268, 271, 272, 274, 278, 282, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 317, 318, 319, 320, 321, 323], "comput": [1, 2, 4, 5, 6, 20, 23, 29, 32, 33, 34, 35, 36, 37, 69, 70, 71, 72, 74, 86, 94, 114, 150, 176, 200, 201, 203, 205, 218, 222, 224, 229, 238, 260, 262, 263, 266, 268, 271, 288, 289, 290, 292, 294, 295, 298, 304, 311, 314, 318, 319, 321, 322, 323, 324], "integr": [1, 2, 29, 36, 41, 42, 52, 64, 65, 203, 205, 222, 224, 237, 240, 246, 292, 293, 297, 298, 304, 323], "For": [1, 2, 3, 4, 5, 6, 7, 8, 19, 20, 21, 22, 23, 24, 25, 36, 67, 69, 75, 76, 77, 85, 86, 87, 88, 89, 91, 93, 94, 98, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 170, 176, 177, 203, 215, 216, 217, 218, 220, 222, 223, 224, 226, 227, 228, 230, 231, 232, 234, 235, 236, 240, 242, 243, 245, 246, 248, 250, 251, 252, 253, 257, 258, 264, 272, 274, 278, 281, 288, 290, 293, 295, 296, 297, 299, 301, 302, 303, 306, 307, 310, 311, 314, 318, 319, 320, 321, 322, 323, 324], "instanc": [1, 2, 4, 5, 6, 20, 21, 23, 24, 25, 99, 176, 190, 191, 192, 193, 194, 195, 196, 197, 203, 215, 217, 220, 223, 226, 227, 228, 230, 231, 232, 234, 235, 236, 250, 251, 252, 253, 257, 258, 264, 272, 274, 278, 281, 290, 293, 297, 301, 303, 320, 321, 322], "dv": [1, 2, 5, 46, 220, 244, 298], "dx": [1, 2, 5, 176, 205, 220, 222, 291, 292, 304], "surfac": [1, 2, 5, 6, 90, 208, 240, 305], "vector": [1, 2, 3, 4, 5, 12, 14, 15, 19, 20, 23, 29, 30, 33, 34, 35, 36, 37, 42, 52, 61, 67, 75, 76, 88, 91, 93, 94, 95, 203, 217, 219, 221, 223, 224, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 250, 252, 253, 256, 257, 260, 262, 263, 266, 268, 278, 281, 290, 292, 294, 295, 296, 304, 308, 309, 315, 317, 318, 319, 320, 323, 325], "d": [1, 2, 5, 46, 60, 61, 76, 77, 78, 89, 91, 95, 191, 205, 216, 220, 227, 238, 239, 240, 241, 242, 243, 244, 245, 246, 253, 278, 290, 291, 292, 293, 295, 296, 297, 298, 301, 304, 309, 311, 315, 316, 317, 318, 319, 320, 321], "etc": [1, 5, 6, 23, 24, 25, 230, 231, 236, 274, 283, 323], "paramet": [1, 2, 3, 4, 5, 6, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 45, 46, 48, 60, 61, 64, 65, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 80, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 150, 161, 162, 164, 165, 167, 168, 176, 180, 181, 182, 185, 187, 190, 191, 192, 194, 195, 196, 197, 200, 201, 205, 212, 215, 216, 218, 224, 230, 231, 232, 236, 240, 250, 251, 252, 253, 254, 256, 260, 262, 263, 266, 268, 274, 275, 281, 287, 288, 289, 290, 291, 292, 298, 303, 305, 311, 312, 315, 316, 317, 319, 320, 321], "python": [1, 2, 5, 94, 190, 192, 203, 218, 220, 226, 230, 233, 250, 251, 257, 260, 266, 268, 278, 280, 282, 294, 305, 308, 313, 314, 319, 320, 322, 323, 324, 325], "A": [1, 2, 4, 5, 6, 12, 19, 23, 24, 25, 34, 35, 80, 81, 82, 83, 85, 91, 92, 95, 97, 98, 99, 109, 161, 170, 176, 186, 198, 203, 204, 205, 215, 216, 218, 220, 222, 226, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 253, 256, 257, 259, 260, 262, 264, 265, 266, 268, 271, 275, 279, 281, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 308, 309, 310, 311, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324], "which": [1, 2, 4, 5, 6, 19, 20, 21, 22, 23, 24, 25, 29, 35, 36, 37, 48, 67, 68, 69, 70, 71, 72, 75, 86, 88, 90, 93, 94, 97, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 165, 176, 190, 191, 192, 200, 201, 203, 209, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 246, 247, 253, 254, 256, 259, 260, 262, 263, 265, 266, 268, 270, 271, 272, 274, 275, 277, 280, 282, 288, 289, 290, 291, 292, 294, 295, 296, 298, 300, 301, 302, 303, 304, 305, 307, 308, 309, 310, 311, 317, 318, 319, 320, 321, 323, 324], "take": [1, 2, 19, 23, 61, 86, 150, 176, 203, 216, 220, 221, 222, 223, 226, 228, 229, 237, 239, 240, 242, 246, 253, 259, 260, 262, 263, 266, 268, 270, 271, 289, 293, 296, 297, 301, 308, 311, 318, 320], "object": [1, 2, 3, 4, 5, 6, 7, 9, 19, 20, 21, 22, 23, 24, 25, 67, 68, 69, 70, 71, 72, 86, 97, 98, 99, 146, 150, 162, 166, 167, 176, 203, 205, 208, 215, 216, 219, 220, 221, 222, 224, 226, 228, 230, 231, 232, 234, 236, 237, 239, 240, 241, 242, 243, 246, 247, 248, 250, 251, 254, 255, 256, 259, 260, 262, 263, 264, 265, 266, 268, 271, 272, 274, 275, 289, 290, 291, 292, 293, 295, 296, 297, 299, 301, 304, 307, 308, 309, 310, 311, 317, 318, 320, 323], "an": [1, 2, 5, 6, 10, 11, 13, 14, 15, 19, 20, 23, 26, 34, 37, 40, 43, 48, 67, 68, 70, 75, 76, 77, 79, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 98, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 167, 176, 180, 181, 182, 190, 191, 198, 203, 204, 205, 207, 209, 212, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 250, 252, 253, 254, 257, 259, 262, 263, 264, 268, 270, 271, 272, 273, 274, 275, 276, 280, 281, 282, 288, 289, 290, 292, 296, 297, 298, 300, 301, 302, 304, 306, 307, 308, 311, 315, 316, 317, 318, 320, 322, 323, 324], "input": [1, 2, 12, 86, 150, 176, 203, 217, 218, 220, 228, 233, 248, 250, 251, 253, 254, 257, 259, 260, 262, 263, 266, 268, 270, 278, 299, 301, 302, 308, 311, 320, 321], "extract": [1, 2, 5, 11, 12, 180, 181, 182, 216, 217, 218, 228, 230, 240, 287, 324], "requir": [1, 2, 3, 19, 23, 69, 86, 91, 94, 95, 150, 164, 203, 204, 216, 218, 219, 220, 221, 222, 224, 237, 244, 245, 252, 253, 254, 257, 259, 272, 280, 281, 290, 291, 292, 296, 311, 323, 324], "exampl": [1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 33, 34, 35, 36, 37, 40, 41, 42, 43, 45, 46, 48, 60, 61, 62, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 80, 82, 85, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 113, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 169, 170, 171, 172, 174, 176, 177, 178, 180, 181, 182, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 203, 204, 205, 206, 214, 216, 217, 218, 222, 226, 227, 228, 230, 232, 234, 235, 237, 239, 240, 241, 242, 246, 247, 254, 257, 259, 261, 263, 264, 266, 267, 271, 272, 273, 274, 275, 278, 280, 282, 294, 296, 298, 299, 300, 308, 311, 314, 318, 321, 322, 323], "import": [1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 33, 34, 35, 36, 37, 40, 41, 42, 43, 45, 46, 48, 60, 61, 62, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 80, 82, 85, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 112, 113, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 166, 167, 169, 171, 172, 174, 176, 177, 178, 180, 181, 182, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 203, 205, 208, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 314, 315, 316, 317, 318, 319, 320, 322, 324], "df": [1, 2, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 27, 30, 33, 34, 35, 36, 37, 40, 41, 42, 45, 46, 48, 60, 61, 64, 65, 75, 76, 77, 85, 88, 89, 91, 92, 93, 94, 95, 203, 205, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 250, 251, 256, 257, 260, 261, 262, 263, 264, 265, 266, 268, 271, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 315, 316, 317, 318, 319, 320], "lambda": [1, 2, 13, 14, 15, 30, 40, 43, 91, 203, 218, 239, 242, 243, 245, 248, 305, 311], "f": [1, 2, 33, 36, 37, 40, 94, 97, 217, 218, 221, 223, 224, 237, 239, 241, 245, 253, 259, 271, 283, 289, 292, 293, 297, 298, 302, 306, 307, 310, 311, 321], "mesh": [1, 2, 3, 4, 8, 13, 14, 15, 19, 20, 21, 23, 24, 30, 32, 33, 34, 35, 36, 37, 40, 41, 42, 45, 46, 48, 60, 61, 64, 65, 75, 76, 77, 85, 88, 89, 91, 92, 93, 94, 95, 150, 203, 205, 208, 215, 216, 217, 218, 219, 221, 224, 225, 234, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 253, 256, 257, 260, 261, 262, 263, 264, 265, 266, 268, 271, 274, 282, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 315, 316, 317, 318, 319], "p1": [1, 2, 3, 4, 5, 6, 8, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 30, 33, 34, 35, 36, 37, 40, 41, 42, 45, 46, 48, 60, 61, 64, 65, 75, 76, 77, 85, 88, 89, 91, 92, 93, 94, 95, 205, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 256, 257, 260, 261, 262, 263, 264, 265, 266, 268, 271, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 315, 316, 317, 318, 319, 320], "50": [1, 2, 5, 6, 20, 21, 23, 24, 30, 203, 215, 218, 219, 220, 222, 223, 226, 230, 234, 241, 253, 267, 280, 291, 294, 295, 299, 315, 319, 320, 321], "25": [1, 2, 5, 6, 67, 216, 218, 220, 223, 225, 226, 245, 247, 248, 252, 253, 270, 271, 273, 289, 290, 293, 294, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 315, 316, 317, 318, 319, 320, 321], "0": [1, 2, 3, 4, 5, 6, 8, 11, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 30, 33, 34, 35, 36, 37, 40, 41, 42, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 60, 61, 64, 65, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 80, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 97, 98, 99, 112, 151, 152, 153, 161, 166, 176, 185, 190, 194, 197, 201, 205, 207, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 277, 278, 280, 281, 283, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 315, 316, 317, 318, 319, 320, 321], "p2": [1, 2, 3, 4, 5, 6, 8, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 30, 33, 34, 35, 36, 37, 40, 41, 42, 45, 46, 48, 60, 61, 64, 65, 75, 76, 77, 85, 88, 89, 91, 92, 93, 94, 95, 205, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 256, 257, 260, 261, 262, 263, 264, 265, 266, 268, 271, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 315, 316, 317, 318, 319, 320], "5": [1, 2, 5, 6, 13, 14, 15, 20, 23, 24, 42, 67, 70, 75, 76, 77, 85, 88, 89, 91, 92, 93, 94, 95, 157, 162, 190, 194, 198, 203, 205, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 277, 278, 280, 281, 282, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 315, 316, 317, 318, 319, 320, 323], "cell": [1, 2, 3, 5, 12, 14, 15, 19, 20, 21, 23, 24, 29, 30, 33, 34, 35, 36, 37, 40, 41, 42, 45, 46, 48, 60, 61, 64, 65, 67, 112, 203, 205, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 257, 260, 261, 262, 263, 264, 265, 266, 268, 271, 282, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 306, 307, 308, 309, 310, 311, 315, 316, 317, 318, 319, 320, 322], "region": [1, 2, 3, 5, 8, 20, 21, 22, 23, 24, 25, 30, 45, 48, 75, 76, 77, 85, 88, 89, 90, 91, 92, 93, 94, 95, 203, 205, 208, 216, 219, 224, 226, 227, 228, 229, 230, 231, 232, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 260, 261, 262, 263, 264, 265, 266, 268, 271, 274, 282, 290, 291, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 315, 316, 317, 318, 319], "dim": [1, 2, 3, 4, 8, 13, 14, 15, 19, 20, 23, 30, 33, 34, 35, 36, 37, 40, 41, 42, 45, 46, 48, 60, 61, 64, 65, 75, 76, 77, 85, 88, 89, 91, 92, 93, 94, 95, 205, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 256, 257, 260, 261, 262, 263, 264, 265, 266, 268, 271, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 315, 316, 317, 318, 319, 320], "1": [1, 2, 3, 4, 5, 6, 8, 13, 14, 15, 19, 20, 21, 23, 24, 25, 26, 30, 33, 34, 35, 36, 37, 40, 41, 42, 43, 45, 46, 48, 50, 51, 52, 53, 55, 56, 60, 61, 64, 65, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 80, 85, 86, 87, 88, 89, 91, 92, 93, 95, 97, 98, 99, 101, 106, 107, 109, 110, 112, 152, 153, 157, 161, 166, 169, 176, 185, 190, 191, 192, 193, 197, 198, 200, 201, 205, 207, 215, 216, 217, 218, 219, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 251, 254, 256, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 315, 316, 318, 320, 323], "3": [1, 2, 3, 4, 5, 6, 8, 13, 14, 15, 19, 20, 21, 23, 24, 25, 30, 33, 34, 35, 36, 37, 40, 41, 42, 45, 46, 48, 54, 60, 61, 64, 65, 67, 75, 76, 88, 91, 92, 93, 94, 98, 149, 151, 154, 155, 156, 158, 159, 160, 176, 190, 191, 193, 194, 196, 197, 201, 203, 205, 207, 209, 215, 216, 217, 218, 219, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 254, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 314, 315, 316, 318, 320, 323, 324], "14": [1, 2, 190, 194, 196, 197, 203, 205, 215, 216, 217, 218, 220, 222, 223, 224, 225, 226, 230, 231, 234, 236, 238, 239, 240, 242, 244, 245, 246, 247, 248, 252, 253, 260, 261, 262, 263, 264, 266, 268, 270, 271, 273, 278, 290, 297, 298, 301, 304, 306, 308, 311, 317, 318, 319, 320, 321], "125": [1, 290, 321], "method": [1, 2, 3, 4, 5, 6, 7, 10, 12, 17, 19, 20, 21, 22, 23, 24, 25, 30, 35, 36, 37, 48, 56, 61, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 165, 166, 167, 168, 176, 182, 190, 191, 192, 193, 194, 195, 196, 197, 203, 205, 216, 217, 218, 220, 221, 223, 224, 228, 229, 231, 234, 236, 239, 240, 241, 242, 244, 245, 246, 248, 250, 251, 254, 259, 261, 264, 265, 270, 272, 274, 275, 279, 283, 288, 290, 292, 296, 300, 301, 304, 311, 321, 324], "__abs__": [1, 2], "absolut": [1, 2, 10, 11, 12, 19, 23, 36, 176, 203, 216, 224], "norm": [1, 2, 19, 20, 23, 45, 46, 48, 60, 61, 64, 65, 67, 92, 203, 205, 216, 217, 218, 219, 220, 221, 222, 225, 238, 239, 240, 241, 242, 243, 244, 246, 248, 256, 260, 261, 262, 263, 264, 265, 266, 268, 271, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 315, 316, 317, 318, 319, 320], "oper": [1, 2, 5, 6, 98, 99, 203, 205, 206, 208, 215, 217, 222, 226, 230, 234, 235, 245, 247, 248, 252, 253, 264, 273, 288, 294, 315, 318, 320, 323, 324], "return": [1, 2, 3, 4, 5, 6, 10, 11, 12, 19, 20, 23, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 45, 46, 48, 60, 61, 64, 65, 67, 68, 69, 70, 71, 72, 87, 91, 92, 94, 95, 97, 98, 99, 112, 146, 161, 164, 165, 166, 167, 168, 169, 170, 176, 180, 181, 182, 185, 186, 200, 201, 203, 205, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 228, 229, 230, 232, 234, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 254, 258, 260, 262, 263, 266, 268, 270, 271, 275, 278, 279, 289, 291, 294, 295, 296, 298, 301, 302, 303, 304, 307, 308, 309, 311, 315, 316, 318, 320, 321], "result": [1, 2, 5, 6, 19, 29, 34, 35, 64, 67, 68, 70, 86, 98, 99, 161, 167, 176, 185, 203, 205, 211, 215, 220, 222, 226, 228, 234, 235, 245, 246, 254, 261, 271, 273, 290, 300, 302, 311, 312, 316, 321, 323], "type": [1, 2, 3, 4, 5, 6, 10, 11, 12, 19, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 43, 45, 46, 48, 60, 61, 64, 65, 67, 68, 69, 70, 71, 72, 87, 92, 94, 97, 98, 99, 112, 146, 158, 161, 164, 165, 166, 168, 169, 176, 180, 181, 182, 185, 190, 191, 192, 193, 194, 195, 197, 198, 200, 201, 203, 216, 220, 224, 233, 239, 247, 252, 253, 276, 278, 287, 302, 311, 324], "9": [1, 2, 4, 5, 6, 8, 13, 14, 15, 20, 21, 22, 23, 24, 25, 40, 41, 45, 46, 48, 60, 61, 64, 65, 75, 76, 77, 85, 88, 89, 91, 92, 93, 94, 95, 108, 112, 176, 200, 201, 205, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 273, 274, 279, 282, 283, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 315, 316, 317, 318, 319, 320, 321, 323], "2": [1, 2, 3, 4, 5, 6, 8, 13, 14, 15, 19, 20, 21, 23, 24, 25, 33, 36, 37, 40, 42, 43, 46, 48, 60, 61, 64, 65, 67, 70, 71, 72, 75, 77, 78, 80, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 102, 109, 176, 186, 193, 197, 205, 207, 215, 216, 217, 218, 219, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 251, 254, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 315, 316, 318, 320, 323], "ab": [1, 2, 176, 220, 245, 248, 271, 292, 298], "plane": [1, 2, 5, 8, 19, 20, 23, 36, 37, 40, 42, 48, 50, 60, 61, 203, 205, 208, 216, 217, 218, 221, 222, 224, 238, 239, 240, 241, 242, 243, 244, 246, 248, 261, 262, 264, 265, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 308, 309, 311, 315, 316, 318, 319, 320], "z": [1, 2, 3, 4, 5, 6, 19, 20, 23, 29, 30, 35, 36, 37, 40, 41, 42, 45, 48, 60, 61, 64, 65, 67, 76, 164, 203, 205, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 253, 260, 262, 263, 264, 266, 268, 271, 283, 289, 290, 291, 292, 294, 295, 296, 298, 299, 301, 302, 304, 306, 307, 308, 309, 311, 315, 316, 317, 318, 319, 320, 321], "averag": [1, 2, 5, 205, 248, 263, 270, 272, 274, 290, 292, 293, 297, 299, 311, 319, 320, 321], "__call__": [1, 2, 19, 21, 22, 23, 24, 25, 67], "call": [1, 2, 3, 5, 6, 7, 19, 36, 37, 75, 76, 77, 85, 87, 88, 89, 90, 91, 93, 94, 95, 98, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 166, 167, 190, 191, 192, 193, 194, 195, 196, 197, 198, 203, 215, 216, 217, 218, 220, 221, 223, 231, 234, 236, 239, 247, 248, 254, 259, 267, 272, 274, 280, 289, 300, 302, 314, 321, 324], "self": [1, 2, 3, 5, 6, 98, 164, 165, 166, 167, 168, 176, 186, 190, 191, 192, 193, 194, 195, 196, 197, 198, 216, 217, 218, 220, 250, 251, 254, 259, 276, 278, 279, 280, 281, 282, 295, 302, 304, 323], "inifinitesimali": 1, "number": [1, 2, 3, 4, 5, 6, 19, 20, 21, 22, 23, 24, 25, 29, 30, 35, 37, 40, 42, 43, 48, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 80, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 150, 161, 176, 185, 194, 197, 200, 201, 203, 205, 215, 216, 218, 220, 222, 223, 224, 225, 226, 228, 229, 230, 231, 233, 245, 247, 254, 264, 265, 267, 271, 278, 290, 298, 301, 304, 311, 320, 323], "real": [1, 2, 4, 5, 6, 20, 21, 22, 23, 24, 25, 30, 40, 42, 43, 48, 61, 64, 65, 75, 76, 77, 78, 85, 88, 89, 90, 91, 92, 93, 94, 95, 161, 176, 185, 194, 197, 200, 201, 220, 239, 242, 243, 245, 271], "__matmul__": [1, 2], "other": [1, 2, 4, 5, 6, 15, 19, 23, 26, 33, 67, 68, 70, 86, 98, 99, 150, 176, 191, 192, 193, 194, 197, 203, 215, 218, 225, 226, 227, 228, 229, 230, 234, 239, 245, 247, 253, 257, 258, 262, 263, 264, 271, 282, 289, 290, 299, 301, 302, 307, 314, 318, 321, 323], "binari": [1, 2, 6, 86, 98, 99, 150, 161, 203, 220, 221, 247, 273], "dot": [1, 2], "product": [1, 2, 3, 222, 244, 259, 296], "It": [1, 2, 4, 5, 6, 12, 19, 20, 21, 23, 24, 25, 36, 37, 67, 69, 71, 72, 86, 97, 98, 99, 150, 176, 187, 190, 191, 192, 193, 194, 197, 203, 209, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 228, 229, 230, 231, 236, 237, 239, 240, 241, 242, 243, 246, 247, 248, 249, 254, 256, 270, 277, 278, 285, 289, 300, 311, 317], "can": [1, 2, 3, 4, 5, 6, 12, 15, 19, 20, 21, 22, 23, 24, 25, 29, 30, 35, 36, 37, 42, 46, 60, 61, 65, 67, 68, 69, 70, 86, 91, 92, 94, 95, 97, 98, 99, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 167, 170, 176, 191, 196, 203, 204, 205, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324], "appli": [1, 2, 3, 6, 19, 23, 46, 67, 70, 98, 99, 176, 203, 205, 222, 238, 241, 242, 244, 248, 268, 271, 290, 291, 292, 301, 306, 308, 311, 316, 317, 318, 319], "between": [1, 2, 4, 5, 6, 19, 30, 34, 35, 48, 90, 98, 99, 169, 203, 207, 216, 218, 220, 225, 228, 232, 240, 245, 257, 262, 263, 264, 289, 290, 291, 300, 301, 303, 305, 311, 316, 320, 321], "two": [1, 2, 3, 4, 5, 6, 19, 36, 37, 67, 68, 70, 90, 94, 98, 99, 176, 203, 205, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 229, 230, 231, 234, 235, 236, 239, 245, 248, 252, 253, 257, 260, 262, 263, 266, 268, 273, 278, 280, 289, 290, 291, 293, 297, 302, 305, 308, 309, 311, 312, 315, 316, 317, 320, 321, 324], "array_lik": [1, 2, 4, 5, 6, 19, 21, 24, 25, 48, 64, 75, 88, 91, 93, 94, 321], "length": [1, 2, 4, 5, 6, 19, 21, 24, 25, 40, 75, 88, 90, 93, 94, 176, 197, 203, 205, 215, 216, 220, 222, 223, 225, 226, 228, 229, 230, 231, 234, 235, 236, 240, 242, 243, 273, 278, 281, 289, 290, 291, 293, 294, 295, 297, 304, 311, 315, 318, 319, 320], "second": [1, 2, 3, 5, 6, 21, 24, 69, 91, 94, 95, 98, 99, 146, 176, 203, 216, 218, 220, 222, 224, 226, 229, 230, 231, 235, 236, 240, 247, 248, 257, 271, 273, 291, 295, 311, 317, 322], "operand": [1, 2, 5, 6, 98, 99, 176, 220, 273, 321], "rais": [1, 2, 4, 5, 6, 19, 20, 23, 33, 35, 36, 37, 67, 68, 69, 70, 71, 72, 86, 87, 97, 98, 162, 167, 176, 185, 190, 191, 192, 193, 194, 195, 196, 197, 217, 218, 220, 226, 228, 230, 235, 237, 250, 251, 254, 255, 259, 276, 278, 281, 282, 302, 321, 322], "typeerror": [1, 2, 6, 68, 76, 85, 90, 91, 95, 98, 190, 191, 192, 193, 194, 196, 197, 198, 203, 235, 237, 250, 251, 278, 281, 282, 321], "If": [1, 2, 3, 4, 5, 6, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 30, 33, 35, 36, 37, 64, 67, 68, 69, 70, 71, 72, 75, 76, 77, 85, 86, 87, 88, 89, 91, 93, 94, 97, 98, 150, 161, 162, 164, 166, 167, 176, 180, 182, 185, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 204, 209, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 230, 231, 235, 236, 237, 244, 245, 248, 250, 251, 252, 253, 254, 257, 259, 261, 264, 270, 271, 273, 274, 276, 278, 282, 288, 290, 297, 311, 313, 321, 322, 323, 324], "cannot": [1, 2, 6, 19, 20, 23, 69, 70, 71, 72, 98, 150, 185, 190, 200, 201, 203, 217, 218, 220, 226, 259, 292, 311, 324], "ds2": 1, "__mul__": [1, 2, 6, 220], "ani": [1, 2, 4, 5, 6, 19, 20, 21, 22, 23, 24, 25, 67, 69, 70, 86, 150, 176, 195, 203, 204, 215, 216, 217, 218, 223, 224, 226, 230, 231, 232, 233, 234, 235, 236, 241, 242, 244, 246, 253, 254, 259, 267, 272, 274, 275, 276, 285, 296, 301, 302, 311, 314, 318, 321, 322, 323, 324], "dimens": [1, 2, 4, 5, 19, 20, 23, 42, 67, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 228, 237, 238, 246, 247, 289, 290, 291, 292, 294, 320, 321, 325], "multipl": [1, 2, 3, 4, 5, 6, 20, 21, 23, 24, 25, 67, 68, 70, 91, 94, 95, 150, 176, 203, 212, 220, 230, 231, 236, 247, 259, 264, 272, 273, 274, 288, 292, 318, 323], "dy": [1, 2, 5, 205, 220, 291, 292, 304], "dz": [1, 2, 5, 41, 65, 220, 291, 292], "dxdydz": 1, "true": [1, 2, 5, 6, 13, 14, 15, 19, 20, 23, 24, 36, 40, 46, 70, 71, 72, 86, 87, 98, 99, 150, 161, 162, 164, 167, 169, 170, 176, 180, 182, 190, 191, 192, 193, 194, 195, 196, 197, 198, 215, 216, 217, 218, 220, 221, 224, 226, 228, 230, 234, 239, 241, 250, 251, 253, 259, 261, 264, 276, 278, 280, 282, 289, 298, 299, 321], "int": [1, 2, 5, 6, 19, 20, 22, 25, 30, 65, 67, 69, 70, 71, 72, 86, 87, 98, 150, 161, 166, 187, 190, 194, 197, 216, 220, 230, 236, 244, 265, 278, 304, 321], "none": [2, 3, 4, 5, 6, 19, 20, 21, 22, 23, 24, 25, 30, 40, 48, 50, 54, 58, 64, 67, 70, 71, 72, 80, 82, 86, 87, 92, 98, 99, 150, 161, 176, 187, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 216, 217, 218, 222, 224, 237, 239, 247, 321], "compon": [2, 4, 6, 12, 15, 19, 23, 32, 46, 55, 67, 197, 203, 216, 217, 218, 222, 223, 224, 237, 239, 240, 243, 246, 247, 248, 256, 264, 271, 272, 274, 290, 292, 295, 304, 306, 307, 309, 315, 317, 320], "dtype": [2, 4, 237, 247, 273, 301, 321], "unit": [2, 4, 5, 6, 19, 20, 21, 23, 24, 25, 30, 33, 34, 35, 42, 48, 61, 65, 176, 203, 210, 216, 219, 220, 222, 223, 224, 226, 227, 228, 230, 231, 232, 234, 236, 237, 238, 239, 240, 242, 243, 244, 246, 247, 264, 270, 271, 274, 275, 283, 289, 301, 323], "specifi": [2, 3, 4, 5, 6, 12, 19, 20, 21, 22, 23, 24, 25, 30, 34, 35, 40, 64, 86, 91, 94, 95, 150, 161, 176, 191, 193, 194, 197, 203, 215, 216, 218, 220, 222, 223, 224, 228, 230, 233, 239, 240, 246, 247, 253, 265, 270, 279, 280, 290, 291, 292, 299, 300, 301, 306, 307, 311, 319, 320, 321, 322, 323], "its": [2, 5, 6, 23, 34, 46, 48, 65, 98, 176, 190, 191, 192, 193, 194, 195, 196, 197, 203, 204, 205, 215, 216, 217, 218, 220, 222, 223, 226, 230, 233, 234, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 252, 253, 257, 259, 260, 263, 266, 268, 270, 279, 280, 281, 282, 290, 292, 293, 294, 297, 303, 305, 308, 313, 314, 318, 319, 320, 321, 322, 323, 324], "analysi": [2, 67, 68, 70, 71, 72, 176, 323], "visualis": [2, 4, 5, 6, 15, 20, 21, 22, 23, 24, 25, 40, 41, 42, 48, 60, 61, 64, 65, 67, 176, 205, 208, 221, 222, 224, 246, 247, 270, 286, 290, 311, 315, 320, 323], "The": [2, 3, 4, 5, 6, 12, 15, 19, 20, 21, 22, 23, 24, 25, 29, 30, 31, 32, 34, 35, 40, 42, 43, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 64, 65, 67, 68, 70, 86, 91, 94, 95, 98, 112, 146, 150, 161, 167, 169, 170, 176, 185, 191, 193, 203, 205, 206, 207, 209, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 245, 247, 248, 250, 251, 252, 253, 254, 257, 258, 260, 262, 263, 264, 266, 267, 268, 270, 271, 272, 273, 275, 280, 282, 283, 285, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 308, 309, 310, 311, 313, 315, 317, 318, 320, 321, 323, 324], "pass": [2, 3, 4, 5, 6, 14, 19, 20, 21, 22, 23, 24, 25, 36, 67, 68, 69, 70, 75, 76, 77, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 170, 176, 187, 190, 191, 192, 193, 194, 197, 203, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 239, 240, 244, 247, 248, 250, 251, 252, 253, 254, 258, 259, 261, 264, 265, 266, 267, 270, 272, 274, 275, 276, 278, 280, 281, 282, 296, 300, 301, 305, 307, 310, 311, 312, 320, 321], "anoth": [2, 6, 215, 219, 226, 228, 241, 248, 252, 253, 262, 263, 272, 290, 309], "must": [2, 3, 4, 5, 6, 12, 19, 20, 23, 25, 36, 37, 40, 86, 91, 94, 95, 166, 187, 190, 194, 197, 203, 216, 218, 220, 222, 223, 224, 228, 230, 231, 236, 237, 240, 250, 251, 253, 254, 255, 256, 260, 262, 263, 266, 268, 278, 299, 302, 308, 311, 320, 321], "": [2, 5, 6, 19, 23, 48, 69, 70, 71, 72, 78, 86, 91, 92, 94, 150, 176, 203, 205, 218, 220, 231, 233, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 253, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 278, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 315, 316, 317, 318, 319, 321], "scalar": [2, 4, 6, 14, 15, 19, 20, 23, 34, 35, 36, 37, 40, 42, 48, 50, 51, 53, 54, 55, 56, 57, 58, 60, 61, 64, 65, 67, 68, 70, 76, 77, 85, 89, 91, 95, 176, 191, 193, 198, 203, 205, 217, 219, 220, 222, 223, 237, 239, 240, 242, 243, 244, 246, 247, 248, 250, 251, 257, 270, 278, 282, 290, 295, 304, 309, 315, 316, 318, 320, 323], "three": [2, 3, 4, 5, 15, 33, 36, 37, 67, 94, 197, 205, 215, 216, 217, 220, 221, 222, 223, 226, 227, 233, 237, 242, 248, 250, 256, 257, 259, 260, 278, 289, 296, 303, 305, 317, 320, 322, 324], "dimension": [2, 19, 23, 33, 36, 37, 64, 197, 205, 215, 216, 217, 218, 220, 223, 224, 237, 238, 239, 243, 244, 246, 250, 260, 261, 262, 263, 266, 268, 278, 300, 302, 308, 310, 311, 315, 316, 317, 318, 320, 325], "set": [2, 4, 5, 6, 19, 24, 25, 48, 67, 68, 70, 71, 72, 90, 92, 164, 167, 176, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 203, 206, 209, 215, 216, 219, 223, 227, 231, 235, 236, 237, 238, 239, 240, 242, 243, 244, 246, 247, 248, 255, 257, 258, 260, 262, 263, 266, 267, 268, 278, 280, 282, 285, 290, 291, 295, 303, 304, 305, 308, 309, 311, 313, 317, 320, 321, 323, 324], "detail": [2, 3, 6, 7, 8, 22, 23, 33, 36, 37, 67, 86, 91, 94, 95, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 170, 177, 203, 204, 206, 214, 216, 218, 224, 248, 254, 257, 264, 289, 290, 291, 292, 299, 301, 307, 311, 314, 319, 321, 322, 323, 324, 325], "how": [2, 19, 36, 37, 204, 206, 216, 217, 218, 220, 222, 223, 226, 228, 230, 231, 233, 234, 236, 240, 241, 245, 246, 248, 257, 259, 260, 262, 263, 264, 265, 266, 268, 272, 274, 288, 289, 293, 296, 299, 301, 302, 303, 305, 306, 308, 310, 315, 317, 318, 319, 320], "refer": [2, 3, 6, 7, 8, 19, 22, 23, 36, 60, 61, 64, 65, 67, 86, 91, 94, 95, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 170, 177, 203, 205, 206, 214, 216, 217, 218, 220, 222, 223, 226, 237, 248, 252, 253, 254, 257, 288, 299, 301, 307, 311, 314, 321, 322, 323, 324], "similarli": [2, 4, 6, 203, 217, 218, 220, 222, 225, 226, 234, 237, 245, 252, 253, 270, 278, 282, 283, 290, 293, 297, 301, 310, 317, 319, 320, 321], "ha": [2, 5, 15, 19, 23, 34, 35, 67, 68, 70, 94, 167, 190, 191, 193, 194, 197, 203, 205, 216, 218, 220, 222, 223, 224, 226, 228, 232, 236, 237, 239, 240, 242, 244, 245, 246, 247, 254, 259, 260, 262, 263, 266, 268, 271, 275, 280, 282, 300, 301, 302, 308, 309, 311, 315, 318, 321, 322, 323], "normalis": [2, 29, 203, 205, 208, 222, 260, 262, 263, 266, 268, 308], "pleas": [2, 3, 6, 7, 8, 19, 22, 23, 36, 76, 94, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 177, 204, 215, 216, 217, 218, 220, 222, 226, 230, 234, 252, 253, 264, 288, 289, 290, 291, 299, 301, 302, 305, 307, 311, 314, 315, 316, 319, 322, 323, 324, 325], "rectangular": [2, 218, 222], "callabl": [2, 19, 67, 91, 94, 95, 161, 203, 311, 320], "dict": [2, 5, 6, 19, 23, 29, 68, 70, 75, 76, 77, 85, 88, 89, 91, 93, 94, 95, 176, 182, 187, 218, 237, 239], "option": [2, 3, 4, 5, 6, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 29, 30, 34, 35, 36, 37, 40, 42, 64, 67, 69, 70, 71, 72, 78, 86, 87, 90, 91, 92, 94, 95, 98, 150, 161, 162, 164, 176, 187, 190, 191, 194, 197, 203, 205, 215, 216, 220, 224, 231, 233, 247, 248, 252, 253, 267, 299, 311, 319, 321, 322, 324], "properti": [2, 3, 4, 5, 6, 19, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 167, 168, 176, 193, 203, 205, 218, 220, 226, 231, 234, 236, 247, 250, 251, 252, 253, 254, 256, 261, 293, 297, 298, 317], "default": [2, 3, 4, 5, 6, 13, 14, 15, 19, 20, 21, 22, 23, 24, 25, 29, 30, 34, 35, 36, 37, 69, 70, 71, 72, 86, 87, 91, 92, 98, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 167, 170, 176, 180, 182, 187, 190, 203, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 227, 230, 231, 232, 236, 237, 245, 248, 255, 264, 270, 272, 274, 275, 280, 284, 290, 301, 321, 324], "mean": [2, 19, 23, 26, 42, 48, 218, 219, 220, 226, 228, 241, 271, 319, 321], "provid": [2, 19, 67, 68, 70, 71, 72, 91, 92, 94, 95, 97, 150, 203, 209, 215, 216, 217, 218, 220, 237, 245, 247, 252, 253, 254, 255, 259, 260, 262, 263, 266, 268, 270, 271, 274, 280, 282, 283, 285, 290, 291, 302, 314, 320, 321, 322, 324], "initialis": [2, 4, 76, 86, 97, 98, 203, 215, 216, 220, 222, 223, 253, 254, 255, 278, 289, 291, 293, 297, 299, 300, 303, 305, 311, 315, 316, 317, 318, 319], "zero": [2, 6, 19, 20, 23, 36, 40, 45, 48, 203, 215, 216, 217, 218, 219, 222, 223, 224, 227, 240, 290, 291, 293, 294, 295, 297, 304, 317, 321], "str": [2, 3, 4, 5, 6, 10, 11, 12, 13, 14, 15, 19, 20, 23, 24, 25, 29, 30, 34, 35, 36, 37, 61, 67, 68, 69, 70, 71, 72, 76, 86, 87, 92, 94, 97, 98, 150, 161, 164, 165, 166, 167, 168, 176, 180, 181, 182, 187, 190, 192, 196, 198, 237, 276, 281, 321], "np": [2, 40, 46, 60, 61, 65, 91, 94, 95, 176, 218, 220, 222, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 271, 289, 292, 311, 321, 325], "data": [2, 4, 11, 12, 14, 15, 19, 20, 66, 67, 68, 70, 71, 72, 86, 150, 162, 175, 176, 203, 216, 217, 218, 222, 225, 237, 261, 264, 270, 271, 272, 273, 274, 275, 289, 290, 291, 292, 299, 301, 302, 309, 310, 311, 315, 316, 317, 321, 323], "underli": [2, 215, 223, 237], "numpi": [2, 5, 40, 60, 61, 65, 75, 88, 93, 94, 95, 197, 203, 215, 218, 222, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 271, 289, 292, 311, 321], "arrai": [2, 3, 5, 19, 40, 41, 42, 215, 223, 224, 230, 237, 238, 239, 240, 242, 243, 247, 248, 261, 262, 292, 311, 318, 321, 325], "best": [2, 4, 5, 6, 20, 21, 23, 24, 25, 167, 170, 176, 218, 259], "automat": [2, 3, 4, 5, 6, 12, 19, 20, 21, 22, 23, 24, 25, 70, 71, 72, 86, 161, 176, 203, 216, 218, 222, 230, 231, 236, 259, 271, 274, 296, 305, 314, 323, 324], "determin": [2, 5, 6, 19, 20, 23, 24, 25, 98, 167, 217, 222, 240, 283], "current": [2, 19, 67, 68, 70, 76, 86, 91, 95, 150, 161, 203, 221, 222, 224, 230, 245, 252, 259, 288, 313, 316, 317, 322, 324, 325], "float64": [2, 237, 247, 273, 301, 321], "physic": [2, 6, 37, 100, 206, 224, 288, 323], "uniform": [2, 19, 23, 42, 45, 208, 216, 218, 224, 239, 248, 290, 292, 293, 297, 311, 318, 320], "nano": [2, 5, 6, 230, 231, 236, 274], "size": [2, 4, 5, 6, 20, 21, 23, 24, 25, 112, 176, 197, 203, 218, 220, 222, 225, 226, 228, 229, 230, 231, 236, 239, 250, 271, 278, 281, 289, 290, 291, 295, 296, 304, 311, 315, 316, 317, 318, 320, 321], "thin": [2, 5, 230, 231, 236, 239, 240, 290, 291, 292, 304, 316, 320], "film": [2, 5, 230, 231, 236, 240, 290, 291, 292, 304, 316, 320], "50e": [2, 5, 6, 8, 20, 22, 24, 25, 45, 46, 48, 61, 65, 200, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 247, 257, 264, 265, 294, 295, 296, 301, 304, 306, 307, 316, 319, 320], "25e": [2, 5, 6, 45, 46, 48, 60, 61, 218, 226, 246, 247, 290, 311], "5e": [2, 5, 6, 13, 14, 15, 40, 41, 64, 75, 76, 77, 85, 88, 89, 91, 93, 94, 95, 98, 99, 200, 201, 205, 216, 217, 218, 220, 221, 225, 226, 227, 228, 229, 230, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 251, 252, 253, 262, 263, 264, 265, 273, 283, 290, 291, 292, 294, 295, 296, 298, 299, 301, 304, 306, 307, 309, 310, 311, 315, 318, 320, 321], "1e": [2, 4, 5, 6, 20, 21, 23, 24, 25, 40, 41, 45, 46, 48, 60, 61, 64, 65, 76, 82, 85, 90, 91, 92, 94, 95, 97, 98, 99, 112, 162, 176, 200, 201, 203, 216, 217, 218, 220, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 240, 242, 247, 253, 256, 257, 260, 262, 263, 264, 265, 266, 267, 268, 271, 274, 275, 283, 289, 290, 291, 293, 294, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 308, 310, 311, 312, 315, 317, 318, 319, 320, 321], "10": [2, 3, 4, 5, 6, 8, 13, 14, 15, 19, 20, 21, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, 37, 42, 67, 91, 94, 176, 194, 197, 200, 201, 205, 207, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 239, 240, 241, 242, 245, 246, 247, 248, 250, 251, 252, 253, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 273, 274, 278, 290, 291, 292, 293, 294, 295, 297, 298, 299, 301, 302, 304, 308, 309, 310, 311, 315, 316, 317, 318, 319, 320, 323], "n": [2, 3, 4, 5, 6, 8, 13, 14, 15, 19, 20, 21, 23, 24, 25, 30, 34, 35, 37, 61, 67, 69, 70, 75, 76, 77, 85, 88, 89, 91, 92, 93, 94, 95, 109, 162, 176, 200, 201, 203, 205, 215, 216, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 236, 237, 247, 248, 256, 264, 265, 267, 270, 271, 274, 280, 283, 289, 290, 291, 292, 295, 297, 298, 299, 301, 303, 304, 305, 306, 307, 309, 310, 311, 312, 315, 316, 317, 318, 319, 320, 324, 325], "50e9": 2, "25e9": 2, "5e9": [2, 311], "1e9": [2, 94, 205, 217, 218, 221, 225, 253, 268, 292, 308, 310, 311], "8": [2, 5, 70, 161, 205, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 234, 236, 237, 239, 240, 241, 242, 244, 245, 246, 247, 248, 250, 251, 252, 253, 255, 256, 259, 260, 262, 263, 264, 266, 267, 268, 270, 271, 273, 274, 282, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 301, 302, 304, 305, 308, 309, 310, 311, 315, 316, 317, 318, 319, 320, 321, 323, 324], "conveni": [2, 19, 23, 28, 162, 176, 203, 216, 218, 220, 222, 237, 247, 248, 249, 270, 274, 277, 283, 289, 301, 321], "13": [2, 91, 94, 95, 158, 205, 215, 216, 217, 218, 220, 222, 223, 224, 225, 226, 230, 231, 234, 236, 239, 240, 242, 244, 245, 247, 248, 249, 250, 252, 253, 255, 259, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 273, 290, 292, 293, 295, 297, 298, 299, 301, 302, 304, 305, 308, 310, 311, 317, 318, 319, 320, 321], "__add__": [2, 98, 99, 302], "constant": [2, 3, 29, 33, 36, 37, 48, 75, 76, 77, 85, 88, 89, 90, 91, 93, 94, 98, 100, 105, 106, 107, 109, 190, 191, 192, 193, 194, 195, 196, 197, 198, 205, 212, 219, 222, 240, 245, 252, 253, 287, 288, 289, 290, 291, 292, 297, 309, 311, 315, 316, 317, 318, 319], "either": [2, 5, 6, 19, 20, 21, 24, 25, 30, 40, 75, 76, 77, 85, 88, 89, 91, 93, 94, 95, 98, 220, 222, 224, 226, 230, 234, 236, 237, 242, 245, 253, 311, 318, 320], "iter": [2, 5, 67, 68, 69, 70, 97, 98, 176, 203, 215, 226, 228, 247, 248, 261, 264, 270, 271, 290, 299, 301, 302, 310, 317, 320], "tupl": [2, 4, 5, 6, 19, 21, 23, 24, 25, 45, 46, 75, 88, 90, 93, 94, 146, 176, 197, 203, 215, 216, 220, 223, 226, 228, 229, 230, 231, 234, 235, 236, 248, 274, 278, 281, 282, 320], "list": [2, 4, 5, 19, 23, 24, 67, 68, 69, 70, 75, 80, 82, 88, 90, 93, 94, 97, 98, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 176, 180, 181, 185, 197, 198, 200, 204, 209, 215, 216, 218, 226, 228, 230, 233, 237, 247, 252, 253, 254, 271, 272, 274, 278, 283, 300, 311, 322, 323, 324], "ndarrai": [2, 75, 88, 93, 94, 197, 321], "both": [2, 4, 5, 6, 15, 19, 20, 23, 30, 182, 203, 215, 220, 226, 228, 229, 231, 236, 240, 241, 242, 246, 255, 266, 282, 288, 289, 311, 318, 324], "same": [2, 4, 5, 6, 19, 23, 67, 68, 70, 97, 98, 99, 150, 162, 167, 203, 212, 215, 216, 220, 221, 222, 223, 224, 226, 228, 230, 231, 233, 234, 236, 240, 242, 248, 254, 259, 261, 288, 293, 297, 298, 300, 303, 305, 311, 312, 315, 321, 322], "have": [2, 3, 4, 5, 6, 19, 23, 68, 94, 98, 150, 176, 203, 205, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 230, 231, 234, 235, 236, 237, 238, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 255, 257, 259, 260, 262, 263, 264, 266, 268, 270, 271, 272, 273, 278, 279, 280, 282, 290, 294, 296, 300, 301, 302, 303, 305, 307, 308, 311, 312, 314, 315, 317, 319, 320, 321, 322, 323, 324], "valueerror": [2, 4, 5, 6, 19, 20, 23, 33, 35, 36, 37, 67, 68, 71, 72, 75, 77, 88, 89, 93, 94, 98, 176, 185, 190, 191, 192, 193, 194, 195, 197, 203, 217, 218, 220, 226, 228, 235, 237, 250, 251, 255, 259, 278, 281, 282, 302], "add": [2, 4, 5, 23, 70, 71, 72, 98, 176, 205, 218, 229, 230, 231, 236, 252, 253, 255, 274, 290, 291, 302, 310, 311, 315, 318, 324], "f1": [2, 220], "f2": [2, 220], "re": [2, 6, 19, 216], "traceback": [2, 5, 6, 36, 37, 75, 76, 77, 85, 88, 89, 90, 91, 93, 94, 95, 98, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 190, 191, 192, 193, 194, 195, 196, 197, 198, 217, 218, 220, 259, 302, 321], "most": [2, 5, 6, 23, 36, 37, 41, 75, 76, 77, 85, 88, 89, 90, 91, 93, 94, 95, 98, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 190, 191, 192, 193, 194, 195, 196, 197, 198, 216, 217, 218, 220, 222, 224, 234, 239, 240, 259, 271, 282, 302, 311, 321], "recent": [2, 5, 6, 36, 37, 75, 76, 77, 85, 88, 89, 90, 91, 93, 94, 95, 98, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 190, 191, 192, 193, 194, 195, 196, 197, 198, 217, 218, 220, 259, 302, 321], "last": [2, 4, 5, 6, 36, 37, 67, 69, 75, 76, 77, 85, 88, 89, 90, 91, 93, 94, 95, 98, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 185, 190, 191, 192, 193, 194, 195, 196, 197, 198, 205, 215, 217, 218, 220, 222, 232, 237, 248, 250, 251, 259, 264, 270, 290, 300, 301, 302, 321], "__sub__": [2, 98], "__and__": 2, "cross": [2, 3, 60, 61, 222, 234, 237, 244, 309], "__array_ufunc__": 2, "ufunc": [2, 203, 321], "kwarg": [2, 3, 4, 5, 8, 19, 20, 21, 22, 23, 24, 25, 26, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 79, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 99, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 176, 177, 190, 191, 192, 193, 194, 195, 196, 197, 198, 217, 218, 254], "support": [2, 176, 203, 209, 214, 215, 216, 218, 220, 222, 227, 230, 292, 296, 318, 321, 323], "point": [2, 4, 5, 6, 12, 13, 14, 15, 19, 20, 23, 29, 40, 41, 42, 45, 48, 60, 61, 64, 65, 176, 203, 205, 215, 216, 217, 218, 219, 220, 221, 223, 225, 226, 228, 230, 234, 242, 259, 260, 262, 263, 266, 268, 271, 280, 290, 291, 295, 296, 298, 299, 301, 303, 304, 305, 307, 308, 309, 311, 317, 318, 319, 320, 321, 323], "sampl": [2, 4, 19, 36, 37, 48, 60, 61, 112, 205, 215, 216, 217, 218, 219, 221, 223, 224, 225, 227, 228, 238, 239, 240, 241, 242, 243, 244, 246, 248, 260, 262, 263, 266, 268, 270, 272, 273, 274, 275, 289, 290, 291, 292, 294, 295, 296, 300, 302, 303, 304, 305, 308, 309, 310, 311, 315, 316, 318, 319, 320], "discretis": [2, 5, 20, 21, 23, 24, 34, 35, 112, 215, 217, 218, 220, 221, 222, 223, 226, 228, 229, 230, 231, 263, 271, 282, 289, 290, 291, 292, 293, 295, 296, 297, 300, 304, 309, 311, 315, 316, 317, 318, 319, 320], "belong": [2, 5, 6, 220, 223, 226, 228, 230, 234, 321], "whose": [2, 5, 6, 150, 162, 197, 205, 215, 218, 220, 222, 223, 230, 260, 262, 263, 266, 268, 270, 279, 282, 300, 308, 321], "coordin": [2, 4, 5, 6, 19, 20, 67, 203, 215, 220, 222, 225, 226, 228, 232, 234, 235, 237, 239, 247, 289, 320], "mathbf": [2, 5, 6, 37, 42, 75, 76, 77, 78, 85, 89, 91, 93, 94, 95, 205, 220, 224, 226, 227, 230, 250, 251, 252, 253, 256, 257, 262, 263, 291, 293, 297, 298, 299, 304, 305, 310, 315, 316, 317, 318, 319, 320], "p": [2, 5, 6, 30, 48, 61, 91, 166, 169, 203, 216, 218, 224, 226, 230, 234, 241, 245, 253, 276, 283, 292, 311], "p_": [2, 5, 6, 234, 236, 320], "x": [2, 3, 4, 5, 6, 8, 14, 19, 20, 23, 29, 30, 35, 37, 40, 41, 42, 45, 48, 57, 60, 61, 63, 64, 65, 67, 68, 70, 71, 72, 76, 176, 177, 201, 203, 205, 210, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 236, 237, 239, 240, 241, 242, 244, 245, 247, 248, 253, 260, 262, 263, 264, 266, 268, 270, 271, 272, 273, 274, 275, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 304, 306, 307, 308, 309, 311, 315, 316, 317, 318, 319, 320, 321, 323], "y": [2, 4, 5, 6, 19, 20, 23, 29, 30, 35, 40, 41, 42, 45, 48, 60, 61, 64, 65, 67, 76, 176, 203, 205, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 236, 237, 239, 240, 241, 247, 248, 253, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 274, 283, 289, 290, 291, 292, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 315, 316, 317, 318, 319, 320, 321], "20": [2, 3, 6, 67, 205, 207, 216, 218, 219, 220, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 238, 239, 240, 241, 245, 247, 248, 252, 253, 263, 264, 266, 270, 271, 273, 290, 291, 292, 293, 295, 297, 299, 301, 302, 303, 304, 305, 309, 310, 311, 315, 317, 318, 319, 320, 321], "4": [2, 4, 5, 37, 40, 42, 67, 70, 75, 88, 90, 91, 93, 150, 161, 205, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 315, 316, 317, 318, 319, 320, 323], "__dir__": [2, 5, 20, 23, 98], "extens": [2, 5, 13, 14, 15, 98, 159, 160, 203, 216, 221, 233, 248, 299, 324], "dir": [2, 5, 20, 23, 98], "label": [2, 4, 5, 6, 20, 21, 23, 24, 25, 164, 176, 203, 216, 218, 220, 230, 231, 236, 237, 239, 274, 289], "remov": [2, 3, 5, 6, 13, 14, 15, 20, 23, 98, 218, 221, 222, 311, 322], "grad": [2, 220], "div": [2, 220], "depend": [2, 19, 23, 30, 45, 61, 67, 70, 71, 72, 91, 94, 95, 150, 161, 176, 203, 205, 207, 216, 227, 232, 237, 239, 245, 247, 252, 262, 270, 271, 275, 288, 289, 310, 314, 318, 321], "avalil": [2, 5, 98], "attribut": [2, 5, 67, 97, 98, 100, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 176, 190, 191, 192, 193, 194, 195, 196, 197, 198, 203, 215, 216, 218, 219, 220, 222, 223, 224, 226, 227, 228, 230, 237, 247, 250, 251, 252, 253, 254, 264, 270, 281, 282, 287, 321], "__eq__": [2, 5, 6, 98, 99], "relat": [2, 5, 6, 39, 41, 46, 47, 59, 98, 99, 150, 203, 220, 222, 224, 226, 234, 245], "ar": [2, 3, 4, 5, 6, 11, 12, 13, 14, 15, 19, 20, 23, 24, 25, 29, 30, 32, 33, 34, 35, 36, 37, 42, 43, 48, 60, 67, 68, 70, 86, 90, 91, 94, 95, 98, 99, 150, 161, 162, 166, 176, 180, 182, 185, 190, 193, 197, 203, 204, 205, 209, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 259, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 274, 275, 279, 282, 283, 288, 289, 290, 291, 292, 293, 296, 297, 298, 300, 301, 302, 303, 305, 308, 309, 310, 311, 312, 313, 315, 318, 319, 320, 321, 323, 324, 325], "consid": [2, 5, 6, 98, 99, 201, 209, 215, 217, 288, 323], "equal": [2, 5, 6, 98, 99, 203, 215, 216, 220, 228, 237, 240, 280, 289, 311], "thei": [2, 5, 6, 12, 19, 20, 98, 99, 190, 217, 230, 233, 237, 239, 245, 248, 250, 251, 257, 259, 263, 300, 302, 318], "contain": [2, 4, 5, 9, 12, 19, 29, 67, 80, 82, 91, 92, 94, 95, 99, 112, 161, 167, 203, 206, 218, 220, 222, 223, 224, 240, 247, 248, 259, 278, 280, 290, 291, 294, 296, 302, 311, 316, 319, 321, 322, 323, 324], "fals": [2, 5, 6, 7, 14, 19, 20, 23, 24, 36, 46, 70, 71, 72, 86, 87, 98, 99, 150, 162, 164, 167, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 230, 234, 237, 239, 244, 247, 248, 264, 270, 278, 295, 301, 309, 316, 321], "otherwis": [2, 5, 6, 19, 23, 30, 86, 98, 99, 166, 191, 193, 194, 197, 206, 216, 218, 223, 237, 250, 251, 254, 287, 321], "bool": [2, 5, 6, 13, 14, 15, 19, 20, 23, 24, 36, 70, 71, 72, 86, 87, 98, 99, 150, 161, 162, 164, 167, 176, 180, 182, 190, 191, 194, 195, 196, 197, 234, 321], "check": [2, 5, 6, 86, 98, 164, 166, 167, 190, 192, 203, 215, 220, 221, 234, 239, 256, 273, 278, 280, 282, 290, 293, 297, 311, 314, 317, 319], "f3": [2, 220], "__getattr__": [2, 5, 98], "attr": [2, 5, 97, 98, 237], "access": [2, 3, 5, 19, 23, 67, 70, 71, 72, 98, 164, 170, 203, 216, 218, 220, 222, 230, 233, 237, 246, 247, 252, 253, 261, 270, 314, 320, 321, 323], "individu": [2, 4, 5, 12, 19, 67, 68, 70, 71, 72, 98, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 182, 187, 192, 203, 216, 220, 247, 254, 264, 270, 297, 298, 299, 301, 303, 318, 320, 323, 324], "custom": [2, 94, 203, 216, 220, 253, 264, 284, 311, 324, 325], "manual": [2, 19, 170, 203, 216, 218, 222, 248, 280, 324], "get": [2, 3, 4, 5, 6, 61, 67, 68, 69, 70, 71, 72, 92, 97, 98, 112, 146, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 166, 167, 169, 176, 203, 204, 205, 206, 209, 216, 218, 219, 220, 223, 226, 227, 228, 230, 231, 232, 234, 235, 236, 242, 247, 248, 252, 253, 259, 264, 267, 272, 275, 288, 301, 302, 311, 316, 322, 323, 324], "mx": [2, 205, 218, 220, 247, 248, 261, 264, 270, 271, 272, 274, 275, 289, 290, 291, 292, 299, 301, 302, 310, 311, 317], "my": [2, 205, 218, 220, 230, 231, 232, 233, 236, 247, 248, 261, 264, 270, 271, 272, 274, 275, 289, 290, 292, 296, 299, 301, 302, 310, 311, 317], "mz": [2, 205, 218, 220, 247, 248, 261, 264, 270, 271, 272, 274, 289, 290, 299, 301, 302, 306, 310, 311, 317], "__getitem__": [2, 5, 67, 69, 70, 98, 203], "item": [2, 5, 6, 67, 69, 70, 98, 257, 262, 263, 321], "subregion": [2, 5, 13, 14, 15, 21, 24, 90, 150, 203, 207, 208, 220, 223, 226, 253, 260, 262, 263, 266, 268, 288, 303, 305, 308, 309], "were": [2, 5, 203, 223, 324], "dictionari": [2, 5, 19, 23, 29, 68, 70, 75, 76, 77, 85, 88, 89, 91, 93, 94, 95, 176, 182, 187, 193, 203, 216, 223, 229, 230, 257, 262, 270, 280, 282, 303, 305, 308, 311], "when": [2, 4, 5, 6, 19, 20, 23, 48, 67, 69, 70, 71, 72, 87, 164, 166, 167, 176, 190, 203, 218, 220, 221, 228, 229, 230, 234, 235, 240, 241, 246, 248, 259, 261, 265, 267, 270, 271, 276, 281, 290, 296, 300, 302, 306, 307, 311, 316, 320, 321, 323, 324], "wa": [2, 4, 5, 69, 87, 97, 191, 192, 193, 194, 195, 196, 197, 203, 217, 218, 220, 221, 250, 251, 252, 253, 255, 270, 279, 292, 301, 323, 324], "creat": [2, 3, 4, 5, 6, 19, 20, 21, 22, 23, 24, 25, 26, 40, 69, 70, 71, 72, 86, 111, 150, 161, 176, 187, 203, 204, 205, 216, 217, 218, 220, 221, 225, 230, 231, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 254, 256, 258, 259, 261, 263, 264, 271, 273, 274, 289, 290, 291, 292, 295, 296, 300, 301, 306, 307, 309, 311, 316, 317, 318, 319, 320, 322, 323, 324], "altern": [2, 5, 95, 150, 161, 164, 239, 321, 324], "minimum": [2, 5, 6, 30, 185, 203, 220, 226, 232, 234, 239, 275, 277, 289, 318, 320], "origin": [2, 5, 48, 205, 216, 220, 228, 234, 240, 241, 320], "kei": [2, 5, 19, 91, 94, 95, 182, 187, 191, 193, 223, 229, 230, 240, 257, 260, 262, 263, 266, 268, 270, 282, 303, 308, 311], "disretisedfield": [2, 5, 92, 220], "100": [2, 5, 6, 19, 20, 21, 23, 24, 30, 34, 35, 203, 205, 220, 226, 228, 230, 234, 239, 240, 244, 245, 248, 271, 291, 294, 298, 301, 311, 315, 318, 320], "r1": [2, 5, 21, 24, 90, 303, 309], "r2": [2, 5, 21, 24, 90, 303, 309], "def": [2, 8, 20, 23, 40, 41, 42, 45, 48, 60, 61, 64, 65, 91, 94, 95, 177, 186, 190, 191, 192, 193, 194, 195, 196, 197, 198, 205, 216, 217, 218, 219, 220, 221, 223, 224, 225, 238, 239, 240, 241, 242, 243, 245, 246, 248, 250, 251, 254, 258, 259, 260, 262, 263, 264, 266, 268, 272, 276, 278, 279, 281, 282, 289, 291, 294, 295, 296, 298, 301, 302, 303, 304, 307, 308, 309, 311, 315, 316, 318, 320, 321], "value_fun": [2, 13, 14, 15, 40, 41, 42, 64, 65, 217, 218, 221, 225], "els": [2, 20, 30, 40, 41, 42, 45, 48, 64, 70, 216, 217, 218, 219, 221, 223, 224, 234, 260, 263, 266, 278, 281, 289, 294, 295, 296, 298, 301, 302, 304, 307, 309, 311, 315, 316, 318, 320, 321], "subfield": 2, "9e": [2, 226, 228], "14e": [2, 5], "4e": [2, 40, 41, 64, 226, 228, 234, 238, 239, 240, 241, 242, 243, 246, 274, 295, 296, 304, 311, 320], "shape": [2, 203, 215, 222, 223, 224, 295, 310, 321], "__iter__": [2, 5, 67, 69, 97, 98], "gener": [2, 4, 5, 6, 9, 67, 70, 94, 98, 146, 150, 185, 216, 218, 222, 224, 226, 227, 228, 232, 234, 242, 245, 254, 271, 275, 277, 285, 303, 311, 321], "yield": [2, 5, 67, 69, 97, 98, 146], "all": [2, 3, 4, 5, 6, 15, 19, 20, 21, 23, 24, 25, 27, 30, 34, 35, 62, 67, 68, 69, 70, 73, 81, 83, 94, 97, 98, 113, 146, 147, 162, 166, 171, 174, 176, 178, 187, 188, 190, 197, 200, 203, 204, 205, 206, 209, 215, 216, 217, 218, 220, 222, 223, 224, 225, 226, 229, 230, 231, 234, 236, 237, 238, 239, 240, 245, 246, 247, 248, 250, 251, 258, 259, 260, 261, 262, 263, 264, 266, 268, 270, 272, 273, 274, 275, 279, 280, 282, 285, 288, 289, 290, 291, 292, 293, 294, 296, 297, 301, 302, 303, 308, 311, 313, 314, 317, 318, 319, 320, 321, 323, 324, 325], "first": [2, 4, 5, 6, 15, 19, 21, 24, 67, 69, 146, 167, 170, 176, 185, 190, 192, 203, 205, 209, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 229, 230, 231, 235, 236, 237, 239, 240, 247, 248, 259, 271, 273, 288, 291, 292, 293, 295, 296, 298, 300, 301, 304, 311, 313, 317, 321, 322, 323, 324], "wherea": [2, 4, 5, 23, 94, 146, 220, 230, 231, 232, 236, 260, 262, 263, 266, 270, 275, 303, 309], "one": [2, 4, 5, 6, 12, 15, 19, 20, 21, 23, 24, 25, 29, 30, 34, 35, 67, 68, 70, 71, 72, 86, 98, 150, 161, 176, 200, 203, 205, 215, 216, 218, 220, 221, 222, 223, 224, 226, 229, 230, 231, 234, 237, 245, 247, 248, 257, 260, 261, 262, 263, 264, 266, 267, 268, 271, 272, 273, 274, 278, 282, 288, 289, 300, 301, 302, 308, 309, 310, 311, 314, 315, 317, 318, 319, 321, 324], "through": [2, 40, 67, 70, 97, 166, 169, 226, 228, 232, 237, 239, 240, 246, 295, 296, 304, 320, 321, 323], "coord": [2, 237], "print": [2, 86, 87, 97, 98, 161, 166, 187, 203, 218, 220, 223, 226, 228, 234, 235, 237, 239, 241, 245, 247, 250, 251, 254, 255, 267, 276, 278, 280, 281, 282, 289, 290, 293, 297, 298, 320, 321, 322], "indic": [2, 5, 86, 87, 226, 227, 239, 242, 267], "__lshift__": [2, 67, 68, 70, 176], "stack": [2, 68, 230, 235], "singl": [2, 19, 30, 67, 70, 75, 76, 77, 85, 86, 88, 89, 91, 93, 94, 95, 112, 150, 161, 176, 215, 216, 220, 222, 223, 226, 228, 239, 247, 248, 271, 273, 282, 283, 289, 311, 317, 321, 322, 323], "except": [2, 86, 217, 218, 220, 226, 228, 235, 250, 251, 254, 255, 276, 278, 281, 282, 302, 321], "disrectisedfield": 2, "10e": [2, 5, 6, 13, 14, 15, 22, 24, 25, 48, 60, 61, 65, 92, 94, 216, 218, 220, 225, 230, 234, 235, 237, 256, 260, 262, 263, 264, 265, 266, 268, 291, 292, 293, 295, 296, 297, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 318, 320], "2e": [2, 40, 41, 45, 46, 48, 61, 64, 85, 158, 205, 216, 217, 218, 220, 226, 227, 228, 229, 230, 234, 235, 237, 247, 253, 257, 265, 270, 283, 299, 316, 320], "6": [2, 4, 5, 6, 20, 21, 23, 24, 25, 68, 70, 71, 72, 105, 176, 200, 201, 205, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 254, 255, 256, 259, 260, 261, 262, 263, 264, 266, 267, 268, 270, 271, 272, 273, 274, 275, 278, 280, 281, 282, 283, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 315, 317, 318, 319, 320, 323], "abstract": [2, 67, 70, 79, 84, 86, 87, 98, 99, 166, 254, 302], "variabl": [2, 5, 67, 68, 70, 71, 72, 150, 161, 167, 176, 190, 192, 203, 216, 230, 245, 248, 250, 251, 252, 253, 254, 264, 270, 271, 273, 274, 275, 278, 280, 282, 324], "e": [2, 3, 4, 5, 6, 19, 20, 21, 22, 23, 24, 25, 33, 40, 42, 43, 67, 68, 70, 75, 76, 77, 85, 86, 88, 89, 91, 93, 94, 98, 161, 176, 194, 203, 204, 205, 206, 216, 217, 218, 220, 221, 222, 229, 230, 231, 235, 236, 239, 242, 243, 245, 247, 249, 254, 261, 263, 264, 270, 271, 273, 280, 283, 289, 290, 292, 293, 297, 298, 299, 301, 302, 310, 311, 312, 317, 319, 320, 322, 323, 324], "g": [2, 4, 5, 6, 19, 20, 21, 22, 23, 24, 25, 33, 67, 68, 70, 75, 76, 77, 85, 86, 88, 89, 91, 93, 94, 98, 176, 194, 203, 204, 206, 216, 217, 218, 221, 229, 230, 231, 235, 236, 241, 245, 247, 254, 273, 280, 283, 289, 292, 311, 312, 317, 320, 322, 323], "multipli": [2, 4, 5, 6, 20, 21, 22, 23, 24, 25, 65, 91, 94, 95, 176, 199, 200, 201, 203, 217, 218, 230, 231, 232, 236, 239, 245, 253, 274, 275, 295, 304, 310, 311], "45": [2, 203, 218, 220, 222, 246, 253, 280, 289, 311, 321], "__rmul__": 2, "__truediv__": [2, 6, 220], "__neg__": 2, "unari": 2, "negat": 2, "each": [2, 6, 19, 29, 42, 70, 98, 150, 166, 205, 215, 220, 222, 224, 226, 230, 238, 240, 246, 248, 262, 263, 271, 272, 273, 274, 280, 298, 310, 318, 319, 320, 321], "equival": [2, 15, 203, 240, 242], "cdot": [2, 33, 37, 48, 61, 75, 76, 78, 85, 91, 93, 94, 95, 205, 224, 240, 242, 245, 251, 252, 253, 256, 260, 262, 266, 268, 290, 291, 293, 297, 298, 304, 305, 317, 318, 319], "3e": [2, 13, 14, 15, 217, 226, 229, 235, 247, 261, 290, 291, 292, 300, 311, 315, 316, 318], "1000": [2, 5, 203, 245, 283, 301, 311, 312, 319], "__pos__": 2, "itself": [2, 6, 11, 20, 217, 220, 226], "__pow__": [2, 220], "onli": [2, 3, 5, 6, 19, 20, 23, 24, 30, 32, 34, 35, 37, 70, 71, 72, 86, 87, 94, 98, 99, 112, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 167, 172, 190, 192, 194, 195, 196, 197, 203, 205, 215, 216, 218, 220, 222, 223, 224, 226, 227, 234, 237, 239, 240, 243, 246, 250, 251, 253, 254, 260, 262, 263, 264, 266, 268, 271, 272, 274, 278, 288, 290, 291, 295, 298, 300, 301, 304, 308, 311, 312, 317, 318, 319, 323, 324], "power": [2, 220, 240, 242], "attempt": [2, 5, 6, 36, 37, 75, 76, 77, 85, 88, 89, 90, 91, 93, 94, 95, 190, 191, 192, 193, 194, 195, 196, 197, 198, 217, 250, 251, 276, 278, 280, 281, 282, 321, 324], "__repr__": [2, 3, 4, 5, 6, 67, 68, 69, 71, 72, 92, 97, 98, 164, 165, 166, 167, 168, 176], "represent": [2, 3, 4, 5, 6, 11, 14, 15, 67, 68, 69, 71, 72, 92, 97, 98, 176, 203, 221, 223, 226, 234, 252, 253, 270, 319], "string": [2, 3, 4, 5, 6, 19, 23, 67, 68, 69, 70, 71, 72, 85, 87, 90, 91, 92, 94, 95, 97, 98, 150, 176, 192, 193, 215, 221, 226, 227, 228, 229, 230, 231, 232, 234, 236, 252, 253, 254, 260, 262, 263, 266, 268, 270, 272, 274, 278, 279, 281, 282, 308, 311, 321, 324], "intern": [2, 3, 4, 5, 6, 20, 21, 22, 23, 24, 25, 94, 176, 203, 216, 218, 222, 311, 312, 323, 325], "_repr_html_": [2, 3, 5, 6], "html": [2, 3, 5, 6, 91, 94, 95, 155, 203, 230, 231, 236, 274, 280, 289, 290, 291, 311, 322], "tag": [2, 3, 5, 6], "from": [2, 3, 4, 5, 6, 10, 11, 12, 19, 20, 23, 24, 25, 29, 40, 41, 48, 64, 65, 67, 69, 70, 86, 88, 98, 99, 146, 150, 167, 180, 181, 182, 186, 190, 191, 192, 193, 194, 195, 196, 197, 203, 205, 208, 216, 217, 218, 219, 220, 221, 222, 225, 226, 230, 231, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 248, 250, 251, 254, 258, 259, 270, 271, 272, 273, 274, 275, 278, 279, 280, 283, 289, 290, 291, 292, 296, 299, 300, 301, 309, 311, 314, 317, 318, 319, 320, 323, 324], "subtract": 2, "divid": [2, 4, 5, 6, 20, 21, 23, 24, 25, 176, 185, 206, 220, 222, 226, 230, 231, 236, 274, 295, 304, 311, 321], "divis": [2, 203], "allow": [2, 19, 67, 68, 70, 76, 94, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 167, 176, 187, 190, 191, 192, 193, 194, 195, 196, 197, 203, 216, 218, 220, 222, 227, 228, 230, 231, 232, 236, 243, 246, 250, 251, 253, 254, 255, 259, 264, 272, 274, 275, 278, 281, 292, 296, 311, 323, 324, 325], "allclos": [2, 40, 46, 298], "rtol": 2, "05": [2, 205, 207, 238, 244, 245, 247, 248, 251, 264, 267, 280, 284, 289, 291, 293], "atol": 2, "08": [2, 216, 220, 225, 226, 227, 228, 229, 230, 234, 235, 237, 247, 264, 267, 290, 292, 296, 297, 298, 299, 302, 311, 320], "whether": [2, 23, 98, 221, 235, 237], "within": [2, 203, 223], "rel": [2, 203, 242, 244], "toler": [2, 6, 203, 314], "compar": [2, 35, 98, 99, 203, 222, 226, 234, 239, 246, 298, 323], "non": [2, 19, 20, 45, 48, 61, 176, 203, 216, 217, 222, 240, 242, 243, 246, 252, 257, 273, 291, 305, 311, 315, 316, 317, 318, 320, 321, 324], "classmethod": [2, 176], "coordinate_field": [2, 203, 223], "3d": [2, 19, 23, 203, 216, 218, 222, 223, 230, 231, 236, 246, 262, 295, 304, 319, 320], "midpoint": [2, 5, 203, 226, 237], "follow": [2, 3, 19, 23, 76, 91, 92, 94, 95, 203, 207, 214, 215, 216, 218, 220, 221, 222, 225, 226, 227, 228, 231, 237, 245, 248, 249, 250, 251, 254, 271, 278, 282, 289, 311, 313, 314, 315, 316, 319, 320, 322, 323, 324], "code": [2, 23, 94, 203, 204, 205, 223, 248, 253, 271, 278, 290, 315, 319, 322], "should": [2, 5, 12, 19, 23, 48, 71, 72, 94, 150, 176, 194, 197, 203, 209, 216, 218, 220, 223, 233, 237, 253, 254, 258, 260, 262, 263, 266, 268, 281, 288, 298, 301, 311, 318, 320, 321, 323, 324], "prefer": [2, 94, 318], "over": [2, 23, 29, 36, 67, 68, 70, 91, 94, 95, 187, 191, 193, 194, 197, 203, 218, 247, 274, 280, 289, 290, 311, 314, 316, 321], "creation": [2, 19, 203, 220], "becaus": [2, 6, 19, 166, 176, 203, 205, 216, 217, 218, 220, 221, 227, 228, 234, 241, 250, 251, 253, 255, 257, 259, 273, 281, 292, 293, 297, 302, 303, 305, 311, 315, 319], "much": [2, 203, 204, 218, 220, 231, 236, 311, 317, 322], "better": [2, 203, 230, 248], "perform": [2, 48, 190, 203, 216, 220, 226, 230, 238, 239, 240, 244, 246, 274, 278, 293, 294, 297, 298, 321, 325], "cfield": [2, 220], "posit": [2, 3, 5, 48, 61, 77, 91, 176, 190, 194, 197, 203, 205, 215, 216, 218, 222, 223, 229, 234, 240, 241, 265, 278, 301, 311, 315, 316, 317, 318, 319, 320], "deriv": [2, 67, 79, 84, 86, 94, 97, 99, 190, 191, 192, 193, 194, 195, 196, 197, 205, 212, 220, 240, 249, 279, 288, 298, 304, 311], "direct": [2, 5, 6, 7, 9, 19, 23, 29, 30, 34, 35, 41, 42, 45, 46, 48, 60, 61, 64, 65, 203, 205, 215, 216, 218, 220, 224, 226, 227, 228, 229, 230, 231, 232, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 263, 266, 268, 271, 289, 290, 291, 292, 293, 295, 296, 297, 299, 301, 302, 304, 308, 311, 315, 316, 317, 318, 319, 320], "via": [2, 4, 5, 19, 23, 67, 68, 69, 70, 94, 150, 158, 161, 176, 203, 215, 217, 218, 221, 223, 234, 239, 247, 259, 263, 270, 275, 311, 323, 324], "argument": [2, 3, 4, 5, 6, 14, 19, 20, 21, 22, 23, 24, 25, 26, 67, 68, 69, 70, 76, 86, 87, 97, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 176, 198, 203, 216, 217, 218, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 239, 240, 244, 246, 248, 250, 251, 252, 253, 254, 261, 265, 270, 272, 274, 275, 280, 282, 289, 293, 296, 297, 300, 301, 307, 311, 312], "order": [2, 5, 19, 20, 61, 92, 93, 94, 167, 215, 218, 220, 222, 226, 232, 234, 237, 240, 241, 242, 243, 245, 246, 248, 253, 254, 257, 259, 260, 261, 262, 263, 268, 272, 275, 290, 292, 294, 296, 298, 300, 303, 305, 308, 311, 318, 319, 320, 324], "exist": [2, 67, 68, 70, 71, 72, 86, 161, 162, 203, 220, 223, 254, 322, 323, 324], "In": [2, 5, 6, 20, 23, 35, 40, 48, 92, 94, 192, 203, 205, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 242, 244, 245, 246, 248, 249, 253, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 266, 268, 271, 272, 274, 275, 278, 280, 281, 282, 290, 291, 292, 293, 294, 295, 296, 298, 300, 301, 302, 303, 304, 305, 308, 309, 310, 311, 315, 317, 318, 319, 320, 321, 322, 324], "case": [2, 4, 5, 6, 20, 21, 23, 24, 25, 67, 76, 176, 219, 220, 222, 223, 226, 228, 230, 231, 233, 234, 236, 253, 255, 262, 271, 274, 279, 281, 282, 288, 300, 311, 317, 318, 320], "more": [2, 3, 5, 6, 14, 20, 23, 67, 91, 94, 95, 162, 187, 203, 205, 206, 216, 218, 222, 224, 226, 227, 229, 230, 231, 233, 234, 236, 242, 243, 250, 251, 254, 257, 280, 282, 288, 289, 290, 291, 299, 301, 305, 307, 311, 314, 317, 319, 320, 322, 323, 324], "precis": [2, 5, 14, 20, 23, 86, 150, 161, 162, 203, 218, 230, 231, 233, 236, 250, 251, 280, 282, 305, 320, 321, 324], "assum": [2, 216, 218, 223, 234, 241, 246, 271, 296, 311, 313, 314, 317, 318, 320], "doe": [2, 19, 67, 68, 71, 72, 162, 166, 176, 190, 191, 192, 193, 194, 195, 196, 197, 203, 214, 215, 218, 228, 230, 231, 236, 239, 245, 253, 254, 259, 262, 263, 268, 274, 277, 282, 285, 292, 296, 301, 308, 311, 312, 321, 323], "chang": [2, 4, 5, 19, 20, 23, 67, 94, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 215, 216, 217, 218, 219, 220, 222, 223, 225, 228, 230, 231, 232, 236, 240, 241, 242, 243, 248, 252, 253, 261, 264, 270, 272, 275, 276, 279, 280, 282, 292, 296, 300, 301, 314, 317, 318, 321, 323, 324, 325], "strongli": [2, 218, 237], "boundari": [2, 3, 5, 203, 208, 222, 224, 240, 242, 243, 288, 292, 296], "condit": [2, 3, 5, 208, 222, 224, 234, 242, 243, 288, 296], "period": [2, 3, 5, 242, 243, 244, 245, 288, 296, 311], "neumann": [2, 5], "central": [2, 94, 218], "insid": [2, 6, 203, 217, 218, 219, 220, 221, 222, 240, 245, 248, 254, 258, 259, 272, 295, 296, 304, 319, 323], "forward": [2, 19, 216, 237, 311], "backward": 2, "notimplementederror": [2, 250, 251, 254], "higher": [2, 93, 187, 216, 220, 239, 242, 243, 253, 321], "than": [2, 19, 67, 68, 203, 205, 216, 222, 230, 239, 241, 280, 311], "ask": [2, 41, 219, 220, 225, 226, 227, 228, 230, 231, 232, 234, 236, 259, 280, 319, 320, 322, 323], "spatial": [2, 3, 5, 19, 23, 33, 36, 37, 45, 75, 76, 77, 85, 88, 89, 91, 93, 94, 203, 208, 216, 218, 222, 246, 250, 251, 282, 288, 292, 306, 323, 325], "vari": [2, 75, 76, 77, 85, 88, 89, 91, 93, 94, 208, 218, 232, 240, 250, 251, 257, 275, 282, 288, 306, 311, 317, 321], "we": [2, 6, 42, 48, 64, 65, 166, 203, 204, 205, 206, 207, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324], "choos": [2, 4, 176, 203, 222, 225, 230, 231, 234, 236, 262, 272, 274, 288, 290, 291, 292, 293, 297, 300, 302, 306, 307, 310, 318, 319, 324], "2x": 2, "3y": 2, "5z": 2, "accordingli": [2, 4, 5, 6, 20, 21, 23, 24, 25, 176, 229, 230, 234, 273, 282, 301, 310, 320], "expect": [2, 3, 12, 36, 227, 230, 231, 236, 260, 262, 263, 266, 268, 273, 274, 278, 293, 297, 301, 302, 308, 318, 319, 321], "100e": [2, 6, 205, 220, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 240, 241, 267, 289, 291, 294, 298, 318, 320], "try": [2, 218, 220, 226, 228, 235, 250, 251, 254, 255, 271, 276, 278, 281, 282, 288, 298, 302, 315, 319, 323, 324, 325], "howev": [2, 20, 176, 216, 217, 218, 220, 222, 223, 226, 227, 230, 231, 236, 240, 243, 245, 246, 248, 255, 264, 271, 279, 281, 282, 296, 306, 317, 320, 321, 324], "calcul": [2, 4, 5, 6, 20, 21, 23, 24, 25, 29, 31, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 86, 115, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 161, 176, 203, 205, 207, 209, 214, 220, 224, 234, 239, 240, 242, 243, 244, 245, 246, 254, 258, 288, 289, 293, 297, 312, 319, 323], "from_xarrai": [2, 203], "xa": 2, "xarrai": [2, 19, 67, 203, 208, 215, 216, 247, 325], "dataarrai": [2, 19, 67, 203, 208, 216, 247, 325], "accept": [2, 4, 5, 6, 19, 20, 21, 22, 23, 24, 25, 69, 70, 86, 150, 176, 191, 193, 194, 197, 217, 218, 230, 231, 232, 236, 250, 251, 274, 275, 282, 301, 311], "four": [2, 67, 216, 237, 245], "addition": [2, 94, 216, 218, 254, 323, 324], "comp": [2, 19, 67, 237, 247], "correspond": [2, 5, 19, 20, 205, 216, 223, 231, 232, 234, 239, 275, 320], "geometr": [2, 237], "ax": [2, 4, 5, 6, 20, 21, 22, 23, 24, 25, 26, 67, 176, 203, 218, 220, 222, 229, 230, 231, 236, 237, 239, 244, 253, 260, 272, 274, 290, 311, 321], "respect": [2, 4, 42, 43, 48, 60, 61, 67, 203, 218, 222, 227, 231, 237, 239, 242, 245, 311], "repres": [2, 4, 67, 192, 203, 205, 222, 237, 318, 321], "along": [2, 5, 6, 41, 42, 46, 64, 65, 67, 176, 203, 216, 222, 226, 232, 235, 237, 238, 239, 240, 242, 246, 271, 292, 295, 301, 304, 318, 319, 321], "axi": [2, 4, 5, 6, 20, 21, 23, 24, 25, 26, 176, 203, 216, 217, 218, 220, 222, 225, 226, 228, 230, 231, 235, 236, 237, 239, 241, 242, 243, 244, 253, 257, 260, 264, 266, 272, 274, 289, 297, 301, 302, 306, 311, 315, 316, 318, 321], "space": [2, 19, 32, 40, 42, 51, 64, 65, 79, 86, 150, 176, 217, 220, 221, 226, 228, 230, 237, 239, 240, 241, 242, 243, 257, 260, 262, 263, 266, 268, 278, 307, 308, 311], "absenc": [2, 205], "util": [2, 19, 67, 68, 70, 71, 72, 163, 183, 189, 199, 203, 240, 264, 323], "note": [2, 19, 23, 60, 70, 71, 72, 76, 86, 87, 150, 203, 214, 215, 216, 217, 218, 222, 226, 230, 234, 239, 242, 243, 245, 248, 290, 291, 305, 311, 314, 321, 322, 323, 324], "keyerror": 2, "least": 2, "miss": [2, 176, 186, 203, 204, 207, 224, 226, 273], "ndim": 2, "xr": [2, 65, 237, 325], "ones": [2, 19, 67, 230, 237, 319], "float": [2, 4, 5, 6, 36, 169, 190, 194, 197, 198, 200, 201, 203, 237, 278, 321], "arang": [2, 29, 230, 237, 311], "name": [2, 4, 5, 10, 11, 12, 13, 14, 15, 19, 23, 46, 48, 67, 68, 69, 70, 71, 72, 86, 87, 90, 92, 97, 98, 112, 146, 150, 161, 162, 165, 166, 167, 176, 180, 182, 187, 190, 191, 193, 194, 195, 196, 197, 203, 205, 215, 216, 218, 220, 223, 230, 231, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 250, 251, 252, 253, 255, 256, 260, 262, 263, 264, 265, 266, 268, 270, 271, 273, 276, 278, 280, 282, 284, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 314, 315, 316, 317, 318, 319, 320, 321, 324], "mag": [2, 67, 237, 247], "21": [2, 203, 216, 218, 220, 222, 223, 225, 226, 229, 230, 237, 238, 245, 247, 248, 252, 253, 261, 270, 271, 273, 283, 290, 293, 297, 301, 302, 310, 311, 317, 320, 321], "fromfil": [2, 9, 10, 11, 12, 13, 14, 176, 177, 221, 270, 271, 272, 273, 274, 275], "filenam": [2, 4, 5, 6, 10, 11, 12, 13, 14, 15, 23, 24, 25, 86, 176, 180, 181, 182, 218, 221, 230, 231, 233, 236, 270, 274], "read": [2, 10, 11, 12, 13, 14, 70, 71, 72, 164, 176, 181, 203, 208, 248, 254, 259, 270, 296, 323], "ovf": [2, 11, 14, 16, 17, 70, 203, 221, 233, 323], "vtk": [2, 12, 15, 16, 17, 70, 203, 216, 217, 218, 221, 233, 247, 323], "hdf5": [2, 10, 13, 221, 323], "file": [2, 5, 10, 11, 12, 13, 14, 15, 16, 17, 67, 68, 70, 71, 72, 86, 91, 94, 95, 150, 161, 162, 164, 165, 166, 168, 176, 180, 181, 182, 203, 205, 217, 218, 220, 247, 254, 258, 259, 261, 263, 267, 270, 271, 272, 273, 274, 275, 290, 296, 299, 302, 311, 314, 321, 322, 323, 324], "omf": [2, 11, 203, 221, 233, 247], "ohf": [2, 14, 221], "oef": 2, "h5": [2, 13, 221], "base": [2, 3, 4, 5, 6, 18, 19, 20, 21, 22, 23, 24, 25, 29, 31, 32, 37, 44, 48, 61, 63, 67, 69, 70, 86, 150, 161, 176, 190, 203, 216, 217, 218, 224, 226, 230, 231, 232, 234, 236, 240, 247, 248, 250, 251, 254, 274, 275, 292, 299, 301, 325], "o": [2, 13, 14, 15, 37, 67, 68, 69, 70, 71, 72, 76, 162, 176, 177, 180, 181, 182, 203, 218, 221, 224, 225, 230, 231, 233, 236, 247, 248, 253, 261, 262, 270, 271, 272, 273, 274, 275, 289, 301, 318, 324], "dirnam": [2, 67, 68, 69, 70, 71, 72, 86, 150, 161, 176, 177, 180, 181, 182, 184, 247, 248, 261, 270, 272, 273, 274, 275], "path": [2, 10, 11, 12, 13, 14, 15, 42, 67, 68, 69, 70, 71, 72, 162, 165, 167, 168, 176, 177, 180, 181, 182, 203, 221, 239, 247, 248, 259, 261, 270, 271, 272, 273, 274, 275, 280, 296, 324], "join": [2, 67, 68, 69, 70, 71, 72, 176, 177, 180, 181, 182, 247, 248, 261, 270, 271, 272, 273, 274, 275], "__file__": [2, 10, 11, 12, 67, 68, 69, 70, 71, 72, 176, 177, 180, 181, 182], "test": [2, 6, 10, 11, 12, 67, 68, 69, 70, 71, 72, 114, 115, 146, 170, 172, 176, 177, 180, 181, 182, 234, 247, 248, 258, 270, 272, 273, 274, 275, 285, 323], "test_sampl": [2, 10, 11, 12, 67, 68, 69, 70, 71, 72, 176, 177, 180, 181, 182, 247, 248, 270, 272, 273, 274, 275], "oommf": [2, 11, 72, 76, 86, 91, 94, 95, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 176, 177, 180, 181, 182, 203, 205, 209, 214, 221, 238, 239, 241, 242, 243, 244, 246, 253, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 275, 280, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 315, 316, 317, 318, 319, 323], "ovf2": [2, 11, 14], "bin4": [2, 11, 14, 86, 150, 161, 203, 221], "write": [2, 6, 9, 12, 13, 14, 15, 86, 87, 150, 164, 203, 204, 208, 219, 220, 254, 305, 311, 321, 323], "field_from_ovf": [2, 14], "field_from_vtk": [2, 15], "field_from_hdf5": [2, 13], "xyz": [2, 5, 7, 195, 220, 227, 242], "improp": [2, 7], "ce": 2, "explicitli": [2, 71, 72, 167, 216, 218, 230, 231, 236, 255, 259, 274, 279], "infinitesim": 2, "dvalu": 2, "befor": [2, 20, 23, 67, 68, 70, 167, 190, 203, 218, 220, 224, 226, 230, 234, 248, 252, 253, 311, 315, 317, 318, 319, 320, 321, 324], "cumul": 2, "volum": [2, 3, 5, 6, 29, 46, 65, 222, 234, 244, 245, 293, 297, 321, 323], "int_": [2, 41, 205, 220, 298], "mathrm": [2, 218, 245, 311, 318], "v": [2, 4, 6, 33, 37, 40, 43, 65, 205, 220, 224, 225, 234, 239, 244, 245, 250, 277, 298], "r": [2, 4, 5, 6, 218, 220, 221, 225, 230, 231, 236, 238, 239, 240, 241, 242, 243, 244, 246, 250, 251, 292, 295, 304, 320, 324], "5000": 2, "2000": 2, "3000": 2, "f_plane": 2, "500": [2, 5, 98, 205, 239, 290, 301, 306, 307, 311, 315], "flux": [2, 41, 46, 52, 244], "300": [2, 43, 216, 239, 282, 301], "x_": [2, 220], "min": [2, 6, 234, 239, 244, 277], "max": [2, 6, 220, 234, 239, 240, 242, 243, 244, 248, 270, 277, 323], "30": [2, 20, 187, 198, 205, 216, 218, 220, 222, 223, 237, 240, 241, 245, 247, 248, 253, 273, 301, 302, 309, 310, 311, 320, 321], "line": [2, 5, 6, 15, 17, 19, 23, 24, 25, 150, 203, 208, 230, 231, 233, 236, 239, 240, 295, 302, 304, 311, 315, 318, 321, 322, 324], "given": [2, 3, 5, 19, 29, 30, 33, 35, 36, 40, 41, 48, 61, 185, 223, 224, 239, 240, 243, 245, 252, 253, 311, 318, 323, 324], "_": [2, 5, 6, 40, 41, 42, 46, 48, 75, 77, 78, 89, 91, 205, 216, 224, 226, 230, 239, 240, 244, 245, 252, 253, 256, 291, 293, 297, 298, 299, 310, 317, 319], "frac": [2, 5, 6, 37, 40, 41, 42, 43, 46, 48, 60, 61, 65, 76, 77, 78, 89, 91, 95, 205, 217, 220, 224, 227, 234, 239, 240, 242, 243, 244, 245, 252, 253, 256, 262, 289, 290, 291, 293, 297, 298, 299, 304, 310, 317, 319], "outsid": [2, 5, 48, 203, 217, 218, 219, 220, 234, 240, 248, 294, 295, 304], "domain": [2, 5, 74, 217, 271, 289, 290, 291, 300, 309, 311, 313, 317, 320, 323], "pad": [2, 5, 208, 240], "pad_width": [2, 5, 229], "mode": [2, 164, 203, 240], "ad": [2, 4, 5, 6, 20, 21, 22, 23, 24, 25, 26, 69, 94, 98, 99, 150, 176, 205, 218, 229, 247, 252, 253, 255, 257, 262, 263, 273, 290, 311, 315, 321, 324], "chosen": [2, 3, 5, 36, 67, 68, 70, 94, 176, 216, 231, 234, 235, 236, 259, 318], "assign": [2, 4, 19, 34, 190, 215, 218, 230, 252, 253, 254, 259, 272, 276, 278, 281, 321], "them": [2, 4, 67, 70, 98, 216, 220, 222, 225, 226, 230, 231, 234, 236, 239, 242, 243, 252, 253, 264, 274, 278, 288, 289, 306, 318, 319, 322], "wai": [2, 5, 23, 167, 176, 204, 216, 217, 218, 221, 223, 226, 227, 228, 230, 231, 236, 239, 245, 252, 253, 257, 260, 262, 263, 266, 268, 272, 274, 280, 282, 290, 297, 300, 305, 308, 311, 315, 320, 321, 324], "go": [2, 5, 6, 23, 86, 205, 215, 218, 220, 223, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 255, 260, 262, 263, 264, 265, 266, 268, 270, 274, 275, 290, 294, 295, 296, 297, 298, 300, 302, 303, 304, 305, 308, 310, 318, 319, 321, 324], "integ": [2, 5, 185, 190, 194, 197, 215, 220, 222, 226, 228, 229, 231, 278, 281, 321], "neg": [2, 5, 61, 69, 77, 89, 190, 223, 229, 240, 250, 251, 268, 288, 305, 308, 318, 320], "pf": 2, "arg": [2, 3, 5, 67, 176, 280], "perpendicular": [2, 5, 6, 46, 220, 228, 235, 242, 244, 253, 262, 318], "intersect": [2, 5, 216, 218, 228], "centr": [2, 5, 6, 205, 217, 223, 226, 228, 230, 234, 290, 291, 320], "keyword": [2, 3, 4, 5, 6, 19, 20, 21, 22, 23, 24, 25, 26, 68, 69, 70, 97, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 176, 192, 203, 216, 217, 218, 232, 254, 275, 301], "parallel": [2, 5, 64, 65, 203, 220, 239, 242, 243, 245, 246, 259, 260, 263, 266, 268, 284, 289, 302, 308, 317, 318], "yz": [2, 5, 218, 220, 311], "15": [2, 5, 6, 176, 203, 205, 215, 216, 217, 218, 220, 222, 223, 224, 225, 226, 230, 231, 234, 236, 239, 240, 244, 245, 247, 248, 252, 253, 260, 263, 266, 268, 273, 280, 283, 290, 291, 295, 298, 301, 304, 305, 308, 310, 311, 315, 316, 318, 319, 320, 321], "specif": [2, 5, 40, 61, 74, 86, 91, 94, 95, 150, 167, 190, 191, 193, 194, 197, 198, 206, 209, 230, 239, 243, 246, 250, 251, 254, 258, 288, 300, 323, 324], "project": [2, 158, 173, 216, 218, 230, 231, 236, 278, 299, 322, 323, 325], "out": [2, 5, 19, 23, 42, 70, 166, 205, 216, 218, 234, 238, 239, 240, 241, 246, 274, 292, 309, 315, 316, 321, 324], "One": [2, 3, 76, 220, 223, 237, 312, 320], "would": [2, 69, 150, 191, 193, 194, 197, 216, 218, 222, 223, 226, 229, 230, 239, 250, 251, 273, 278, 281, 282, 298, 311, 322, 324], "certain": [2, 19, 23, 190, 196, 218, 219, 220, 224, 226, 229, 232, 257, 272, 274, 275, 278, 281, 297, 311, 321], "to_vtk": 2, "convert": [2, 5, 6, 15, 176, 203, 216, 230, 231, 233, 236, 237, 245, 247], "rectilinear": [2, 12], "grid": [2, 12, 218, 222, 289, 290, 292, 299], "conver": 2, "vtkrectilineargrid": 2, "store": [2, 4, 15, 67, 86, 150, 161, 176, 203, 225, 237, 247, 248, 270, 274, 275, 299], "cell_data": [2, 15], "rectilinear_grid": [2, 15], "attributeerror": [2, 97, 98, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 190, 191, 192, 193, 194, 195, 196, 197, 198, 220, 254, 276, 278, 282], "f_vtk": 2, "getnumberofcel": 2, "to_xarrai": [2, 67, 203, 247], "addtion": 2, "select": [2, 4, 5, 19, 37, 61, 67, 68, 69, 70, 170, 176, 205, 216, 224, 232, 237, 240, 242, 243, 245, 247, 272, 274, 275, 324], "sel": [2, 237], "bin8": [2, 11, 14, 15, 86, 150, 161, 203, 221], "extend_scalar": [2, 14], "save_subregion": [2, 5, 13, 14, 15], "written": [2, 10, 12, 13, 14, 42, 46, 86, 91, 95, 150, 161, 203, 220, 267], "field_to_vtk": [2, 12], "bin": [2, 15, 170, 203, 259, 280, 324], "txt": [2, 11, 14, 15, 86, 150, 161, 176, 180, 181, 182, 203, 221, 270, 323], "xml": [2, 15, 203], "save": [2, 4, 5, 6, 9, 13, 14, 15, 23, 24, 25, 69, 70, 71, 72, 86, 87, 150, 162, 176, 203, 205, 216, 218, 221, 230, 231, 236, 254, 261, 264, 265, 270, 274, 290, 291, 292, 301, 317], "field_to_ovf": [2, 11], "final": [2, 3, 205, 220, 221, 222, 226, 230, 231, 234, 236, 241, 246, 256, 260, 262, 263, 265, 266, 268, 270, 273, 274, 289, 290, 292, 295, 298, 300, 302, 304, 308, 312, 318, 324], "field_to_hdf5": [2, 10], "interpret": [2, 216, 226, 324], "valid": [2, 5, 6, 24, 25, 190, 191, 192, 193, 194, 195, 196, 197, 198, 219, 230, 231, 236, 250, 251, 278, 282], "format": [2, 5, 6, 24, 25, 86, 150, 161, 203, 205, 221, 233, 289, 290, 293], "json": [2, 5, 13, 14, 15, 203], "15e": [2, 218, 225, 240, 311, 315, 316], "7": [2, 5, 6, 69, 91, 205, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 250, 251, 252, 256, 259, 260, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 278, 282, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 301, 302, 304, 305, 308, 309, 310, 311, 315, 316, 317, 318, 319, 320, 321, 323], "mytestfil": [2, 13, 14, 15], "isfil": [2, 13, 14, 15, 221], "field_read": [2, 13, 14], "delet": [2, 13, 14, 15, 166, 190, 205, 221, 263, 267], "__hash__": [2, 5, 6, 98, 99], "angl": [2, 3, 23, 30, 34, 35, 55, 56, 57, 59, 65, 203, 210, 218, 241, 244, 323], "slice": [2, 5, 19, 20, 23, 36, 37, 70, 203, 217, 218, 220, 224, 228, 240, 248, 292, 319, 320], "compoen": 2, "horizont": [2, 4, 176, 218, 230, 231, 236, 272, 274, 301, 306], "radian": [2, 30, 34, 35, 224, 239, 240], "pi": [2, 3, 37, 40, 41, 60, 61, 65, 94, 95, 205, 220, 222, 224, 238, 239, 241, 242, 243, 244, 245, 289, 304, 310, 311, 318, 321], "rang": [2, 4, 5, 23, 176, 185, 218, 241, 260, 263, 266, 268, 271, 272, 274, 298, 302, 303, 305, 308, 318, 321], "unsupport": [2, 220, 321], "ones_lik": 2, "entir": [2, 220, 226, 230, 268, 274, 308], "55": [2, 218, 220, 253, 262], "conjug": [2, 65, 149, 220, 239], "complex": [2, 65, 203, 234, 236, 271], "curl": [2, 289, 298], "nabla": [2, 76, 85, 95, 205, 252, 253, 256, 262, 263, 290, 291, 293, 297, 298, 304, 305, 318, 319], "time": [2, 6, 33, 37, 42, 46, 61, 67, 70, 71, 72, 76, 77, 86, 87, 89, 91, 94, 95, 157, 169, 176, 203, 205, 207, 223, 224, 239, 242, 244, 245, 247, 250, 252, 254, 256, 259, 262, 263, 264, 270, 271, 272, 273, 274, 275, 288, 290, 291, 292, 293, 296, 297, 298, 299, 301, 304, 306, 312, 314, 315, 316, 317, 318, 319, 320, 322], "left": [2, 37, 40, 41, 42, 43, 46, 48, 61, 65, 76, 91, 205, 220, 224, 234, 239, 240, 242, 243, 244, 245, 246, 247, 253, 260, 262, 263, 266, 278, 290, 304, 317, 321, 323], "partial": [2, 37, 41, 48, 76, 205, 220, 224, 239, 240, 253, 262, 304], "v_": [2, 277], "right": [2, 26, 37, 40, 41, 42, 43, 46, 48, 61, 65, 76, 91, 205, 220, 224, 231, 234, 236, 239, 240, 242, 243, 244, 245, 246, 247, 253, 260, 262, 263, 266, 278, 290, 304, 317, 323], "2xy": [2, 220], "2y": [2, 237], "5xz": 2, "diverg": [2, 23], "sum_i": 2, "fftn": 2, "fourier": [2, 32, 40, 42, 51, 61, 65, 176, 203, 239, 242, 243, 246, 271, 292], "transform": [2, 3, 32, 42, 51, 61, 65, 176, 203, 239, 242, 243, 246, 271, 292, 311], "fft": [2, 229, 286, 292, 321], "normal": [2, 216, 239, 247, 248, 253, 324], "2d": [2, 23, 216, 231, 236, 250, 262, 298, 319], "gradient": [2, 149], "contant": 2, "hv": [2, 67, 203, 205, 216, 240, 248], "plot": [2, 4, 5, 6, 8, 19, 20, 21, 22, 23, 24, 25, 50, 51, 52, 53, 54, 55, 56, 57, 58, 67, 176, 177, 203, 205, 206, 211, 215, 222, 224, 225, 230, 232, 237, 238, 239, 241, 242, 243, 244, 262, 264, 265, 271, 274, 275, 286, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 303, 304, 305, 306, 309, 311, 315, 316, 317, 319, 320, 325], "interfac": [2, 67, 203, 214, 216, 218, 248, 314, 323, 325], "holoview": [2, 19, 67, 203, 208, 217, 218, 248, 323], "hvplot": [2, 67, 216, 218, 240], "also": [2, 12, 24, 67, 94, 150, 161, 167, 191, 192, 193, 194, 197, 203, 205, 209, 216, 217, 218, 219, 220, 222, 225, 226, 230, 231, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 253, 257, 259, 262, 263, 265, 271, 274, 279, 281, 282, 285, 289, 293, 297, 301, 311, 317, 318, 320, 321, 322, 324], "quickli": [2, 67, 216, 221], "avail": [2, 19, 37, 67, 94, 146, 167, 170, 203, 207, 216, 220, 222, 224, 241, 247, 249, 259, 267, 271, 280, 299, 311, 314, 323, 324], "document": [2, 3, 19, 23, 67, 91, 94, 95, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 203, 216, 217, 218, 220, 222, 241, 246, 248, 250, 251, 257, 279, 288, 299, 311, 314, 322], "link": [2, 67, 324], "below": [2, 67, 216, 220, 222, 240, 246, 311, 321, 324], "contour": [2, 15, 19, 23, 67, 203, 239], "kdim": [2, 19, 67, 205, 216, 240, 248], "dynamicmap": [2, 19, 67], "ifftn": 2, "invers": [2, 176, 271], "imag": [2, 19, 40, 48, 50, 64, 164, 203, 207, 220, 259, 296, 324], "imaginari": [2, 55, 220], "part": [2, 19, 70, 192, 206, 216, 220, 222, 223, 226, 234, 239, 240, 244, 247, 260, 262, 263, 266, 268, 272, 291, 299, 304, 316, 319, 320, 323], "irfftn": 2, "k3d": [2, 5, 6, 20, 21, 22, 203, 205, 208, 216, 218, 222, 246, 256, 260, 262, 263, 266, 268, 290, 291, 293, 295, 297, 300, 302, 303, 304, 305, 308, 309, 310, 315, 316, 318, 319, 320, 323, 325], "laplac": [2, 298], "laplacian": 2, "f_": [2, 33, 220, 310], "assert": 2, "mpl": [2, 4, 5, 6, 8, 22, 23, 24, 25, 40, 42, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 64, 65, 176, 177, 203, 205, 221, 222, 224, 225, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 261, 262, 264, 265, 271, 272, 274, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 315, 316, 317, 318, 319, 320], "matplotlib": [2, 4, 5, 6, 18, 23, 24, 25, 26, 40, 41, 42, 48, 60, 61, 64, 65, 176, 203, 205, 208, 216, 217, 222, 230, 231, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 262, 272, 274, 289, 290, 292, 295, 301, 304, 311, 320, 323], "light": [2, 23, 43, 52, 64, 65, 203, 239, 243, 246], "obtain": [2, 6, 23, 29, 41, 64, 94, 203, 218, 220, 222, 228, 232, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 259, 270, 271, 275, 290, 292, 315, 318, 323], "wrong": [2, 75, 76, 77, 85, 88, 89, 90, 91, 93, 94, 95, 203], "addit": [2, 3, 12, 19, 20, 23, 68, 70, 86, 150, 161, 164, 176, 187, 203, 215, 216, 218, 222, 223, 224, 231, 236, 237, 240, 241, 247, 248, 253, 254, 257, 280, 285, 290, 296, 305, 311, 318, 324], "manipul": [2, 175, 217, 237, 270, 309], "orient": [2, 37, 203, 205, 218, 220, 224, 232, 248, 275, 295, 298, 304, 309, 311, 318, 319, 323], "everi": [2, 70, 71, 72, 203, 215, 226, 247, 248, 257, 271, 280, 292, 324], "so": [2, 4, 5, 6, 20, 21, 22, 23, 24, 25, 69, 70, 88, 176, 203, 215, 216, 217, 218, 226, 230, 231, 232, 236, 239, 242, 243, 259, 260, 264, 266, 274, 275, 289, 292, 296, 298, 301, 302, 305, 306, 316, 318, 320, 322, 323, 324], "remain": [2, 19, 150, 216, 245, 262, 263, 300, 311], "unchang": 2, "phase": [2, 40, 41, 48, 50, 51, 52, 53, 54, 58, 79, 86, 94, 150, 220, 239, 240, 241], "rfftn": 2, "appropri": [2, 4, 5, 6, 20, 21, 23, 24, 25, 176, 290, 311, 315, 318, 324], "independ": [2, 23, 67, 68, 70, 71, 72, 94, 176, 203, 218, 220, 248, 254, 270, 271, 273, 274, 323, 324], "actual": [2, 203, 215, 222, 223, 259, 319, 324], "initi": [2, 3, 67, 94, 112, 190, 191, 192, 193, 194, 195, 196, 197, 203, 205, 216, 222, 238, 239, 240, 241, 242, 243, 244, 246, 247, 262, 271, 276, 291, 292, 295, 296, 300, 304, 305, 306, 307, 311, 317, 318], "anymor": [2, 215, 219, 220, 222], "value_funct": [2, 220], "now": [2, 203, 205, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 229, 230, 231, 232, 234, 235, 236, 238, 240, 242, 243, 245, 248, 250, 251, 252, 253, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 268, 270, 272, 273, 275, 278, 279, 281, 282, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 315, 317, 318, 319, 320, 321, 324], "sub1": 2, "sub2": 2, "s1": 2, "s2": 2, "zero_field": 2, "rotat": [3, 94, 203, 208, 210, 231, 236, 242, 244, 311], "dure": [3, 4, 87, 97, 150, 167, 203, 205, 215, 220, 222, 264, 290, 300, 319, 324], "new": [3, 12, 26, 67, 70, 71, 72, 167, 170, 176, 180, 181, 182, 203, 206, 209, 215, 216, 217, 218, 219, 220, 222, 223, 226, 228, 229, 237, 247, 248, 259, 270, 271, 275, 279, 281, 288, 313, 314, 319, 321, 322, 323, 324], "construct": 3, "interpol": [3, 19, 216, 218, 222, 239, 240, 242, 243, 246, 311], "onto": [3, 23, 222], "consecut": [3, 222, 247, 248], "possibl": [3, 26, 34, 35, 36, 94, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 187, 203, 204, 216, 218, 220, 221, 222, 223, 224, 234, 237, 240, 242, 243, 247, 248, 257, 259, 263, 282, 311], "without": [3, 12, 19, 46, 87, 94, 166, 203, 207, 216, 218, 228, 231, 236, 259, 297, 311, 317, 318, 322, 323], "numer": [3, 181, 203, 205, 222, 226, 290, 311, 312, 323], "error": [3, 87, 162, 164, 165, 166, 168, 203, 222, 226, 230, 259, 292, 324], "alwai": [3, 19, 176, 215, 216, 218, 220, 222, 226, 234, 273, 274, 301, 303, 320], "start": [3, 6, 29, 69, 94, 203, 206, 209, 215, 218, 222, 225, 226, 230, 231, 235, 236, 260, 262, 263, 264, 265, 266, 268, 272, 280, 288, 290, 291, 292, 297, 298, 301, 303, 305, 307, 308, 309, 310, 311, 314, 317, 318, 323], "unrot": [3, 222], "effect": [3, 19, 48, 222, 240, 243, 246, 294, 297, 317, 318, 323], "math": [3, 23, 91, 94, 95, 149, 151, 152, 153, 154, 156, 157, 205, 220, 260, 263, 266, 304, 311, 321], "field_rot": [3, 222, 241, 246], "from_eul": [3, 222, 241], "seq": [3, 222, 241], "clear_rot": [3, 222, 241], "definit": [3, 37, 94, 215, 223, 224, 230, 234, 245, 257, 294, 311, 315, 320, 321, 323], "scipi": [3, 222, 245, 289, 292, 321], "These": [3, 46, 61, 203, 216, 234, 239, 240, 242, 245, 246, 247, 248, 257, 311], "directli": [3, 19, 23, 70, 94, 150, 169, 203, 216, 222, 226, 239, 240, 245, 246, 248, 285, 311, 324], "relev": [3, 61, 222, 239, 240, 241, 242, 245, 246, 290, 299, 311, 322], "explan": [3, 94, 204, 206, 207, 216], "align_vector": [3, 222, 241, 246], "like": [3, 19, 216, 220, 221, 222, 230, 231, 234, 236, 244, 248, 262, 272, 274, 295, 301, 319, 322, 324], "kept": [3, 19, 216, 222], "fix": [3, 150, 222, 288, 311], "consist": [3, 5, 75, 88, 93, 94, 146, 203, 205, 216, 222, 227, 228, 230, 231, 252, 253, 254, 256, 260, 262, 263, 266, 268, 285, 298, 300, 302, 303, 305, 308, 309, 317, 318, 323], "step": [3, 67, 70, 91, 94, 95, 150, 185, 203, 205, 218, 222, 224, 232, 237, 247, 248, 254, 265, 267, 270, 275, 277, 280, 284, 290, 291, 292, 294, 298, 299, 300, 301, 310, 311, 312, 316, 317, 324], "remesh": [3, 222], "produc": [3, 239, 240, 242, 244, 267], "larger": [3, 19, 23, 203, 218, 222, 229, 231, 290], "done": [3, 19, 203, 217, 218, 222, 230, 247, 248, 250, 251, 270, 271, 277, 299, 305, 307, 311, 323], "mostli": [3, 6, 203], "linear": [3, 222, 242, 243], "process": [3, 94, 203, 240, 311], "notebook": [3, 203, 204, 209, 214, 216, 217, 218, 220, 234, 245, 247, 248, 252, 253, 261, 280, 288, 298, 309, 314, 321, 322, 323, 324], "from_quat": [3, 222], "from_matrix": [3, 222], "from_rotvec": [3, 222], "from_mpr": 3, "keep": [3, 215, 222, 228, 261, 300, 317], "point_column": [4, 225], "value_column": [4, 225], "panda": [4, 69, 176, 205, 237, 270, 290], "datafram": [4, 69, 176, 270, 290], "On": [4, 15, 37, 166, 203, 215, 224, 227, 229, 234, 257, 258, 259, 282, 296, 322, 323, 324], "hand": [4, 15, 215, 227, 229, 234, 247, 257, 258, 282, 289], "column": [4, 67, 68, 69, 70, 71, 72, 176, 182, 203, 205, 225, 270, 271, 272, 273, 274, 275, 301, 310, 317], "distanc": [4, 203, 232, 239, 245], "By": [4, 19, 20, 23, 203, 215, 216, 217, 218, 221, 222, 225, 226, 227, 232, 237, 255, 264, 267, 270, 272, 273, 274, 320, 321, 322, 323, 324], "where": [4, 5, 6, 19, 20, 21, 23, 24, 25, 30, 37, 40, 42, 43, 45, 46, 48, 60, 61, 65, 91, 95, 146, 150, 176, 182, 205, 216, 217, 218, 220, 222, 224, 229, 230, 231, 232, 234, 236, 239, 240, 242, 243, 244, 245, 258, 260, 261, 262, 263, 266, 268, 272, 274, 289, 290, 293, 297, 308, 314, 317, 318, 320, 321, 324], "px": [4, 225], "py": [4, 23, 216, 217, 218, 220, 225, 258, 259, 280, 295, 302, 304, 321], "pz": [4, 225], "vx": [4, 223, 225], "vy": [4, 223, 225], "vz": [4, 223, 225], "compos": 4, "retriev": [4, 221, 252, 253], "form": [4, 12, 204, 239, 242, 244, 246, 298, 300, 316], "expos": [4, 176, 217, 218, 230, 231, 236, 272, 274, 323], "repr": [4, 92, 97, 98, 164, 165, 166, 167, 168, 176, 234, 250, 251, 252, 253], "figsiz": [4, 5, 6, 23, 24, 25, 176, 218, 225, 230, 231, 236, 261, 265, 274, 289, 290, 292, 294, 298, 300, 302, 303, 305, 308, 309, 311, 316, 318], "yaxi": [4, 225, 272], "xlim": [4, 176, 177, 225, 272, 274, 292], "figur": [4, 5, 6, 23, 24, 25, 176, 203, 218, 222, 230, 231, 236, 239, 240, 246, 274, 289, 290, 292, 309, 320], "To": [4, 5, 6, 15, 19, 23, 24, 25, 94, 150, 176, 203, 205, 214, 216, 217, 218, 220, 222, 224, 227, 229, 231, 233, 235, 236, 239, 240, 241, 245, 247, 248, 252, 253, 254, 258, 271, 272, 274, 280, 296, 311, 314, 315, 317, 318, 321, 322, 323, 324], "particular": [4, 5, 19, 23, 67, 70, 161, 176, 203, 220, 237, 254, 259, 281, 290, 296, 323], "lenth": [4, 228, 230, 231, 236], "often": [4, 5, 6, 20, 21, 23, 24, 25, 176, 218, 226, 230, 234, 245, 246, 277, 278, 321], "nanoscal": [4, 5, 6, 20, 21, 23, 24, 25, 201], "veri": [4, 5, 6, 19, 20, 21, 23, 24, 25, 203, 204, 216, 223, 226, 233, 245, 247, 248, 311, 319, 322], "larg": [4, 5, 6, 20, 21, 23, 24, 25, 30, 67, 68, 70, 203, 218, 233, 247, 278, 292, 304, 311], "kilomet": [4, 5, 6, 20, 21, 23, 24, 25], "accord": [4, 5, 6, 19, 20, 21, 23, 24, 25, 176, 190, 217], "scale": [4, 5, 6, 20, 21, 23, 24, 25, 176, 203, 218, 240, 242, 243, 289, 294, 295, 304, 309], "shown": [4, 5, 6, 19, 20, 21, 23, 24, 25, 176, 203, 209, 216, 218, 220, 222, 230, 231, 232, 236, 239, 246, 253, 267, 271, 272, 274, 275, 278, 288, 290, 311, 314, 320, 322], "text": [4, 5, 6, 20, 21, 23, 24, 25, 76, 77, 78, 86, 89, 91, 94, 95, 150, 161, 176, 203, 205, 217, 218, 220, 221, 223, 226, 228, 230, 231, 234, 236, 245, 252, 253, 256, 257, 260, 262, 263, 265, 266, 268, 274, 277, 289, 290, 291, 292, 293, 297, 298, 299, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 315, 316, 317, 318, 319, 320], "nm": [4, 5, 6, 20, 21, 23, 24, 25, 46, 48, 205, 217, 218, 221, 226, 228, 230, 234, 239, 240, 244, 245, 290, 291, 292, 293, 294, 297, 309, 315, 316, 318, 319, 320], "pdf": [4, 5, 6, 23, 24, 25, 176, 218, 230, 231, 236, 274], "pyplot": [4, 5, 6, 23, 24, 25, 26, 176, 218, 230, 231, 236, 238, 239, 241, 244, 272, 274, 289, 290, 292, 301, 311], "limit": [4, 23, 176, 203, 218, 222, 225, 240, 246, 289, 311], "selector": [4, 5, 69, 176, 225, 247, 272], "interact": [4, 20, 48, 61, 90, 176, 203, 205, 207, 211, 216, 225, 231, 232, 236, 240, 242, 245, 264, 275, 286, 301, 305, 309, 311, 314, 315, 316, 317, 318, 320], "ipywidget": [4, 5, 8, 69, 70, 176, 177, 232, 275], "selectmultipl": [4, 176, 275], "widget": [4, 5, 19, 69, 70, 176, 208, 216, 218, 272, 286, 301], "slider": [4, 5, 8, 19, 70, 176, 177, 203, 216, 217, 218, 225, 240, 247, 248, 264, 272, 301, 309, 311, 315, 316], "selectionrangeslid": [4, 176], "navig": [4, 176, 232], "descript": [4, 5, 69, 70, 176, 218, 220, 223, 232, 275, 322, 323], "optimum": [4, 176], "denot": [4, 5, 229], "renam": [4, 176, 180, 182, 203, 216, 225, 270], "val": 4, "inappropri": 4, "p0": 4, "index": [4, 5, 98, 203, 226, 230, 247, 264, 301], "my_interesting_valu": 4, "bc": [5, 226, 227, 242, 243, 296, 298, 304], "m": [5, 6, 31, 33, 37, 40, 42, 43, 46, 48, 61, 65, 75, 76, 77, 78, 85, 89, 91, 92, 93, 94, 95, 104, 112, 201, 203, 205, 215, 216, 219, 220, 222, 223, 224, 226, 227, 228, 230, 231, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 251, 252, 253, 256, 257, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 283, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 315, 316, 317, 318, 319, 320, 321, 323, 324], "cubic": [5, 75, 226, 231, 234, 245, 284, 289, 319, 320], "regular": 5, "sinc": [5, 94, 220, 222, 226, 234, 253, 310, 311, 323], "span": [5, 6, 225, 228, 240, 290, 291, 320], "instead": [5, 6, 9, 12, 19, 23, 71, 72, 150, 170, 203, 214, 215, 216, 218, 219, 220, 222, 232, 233, 267, 311, 314, 315, 321, 325], "charact": [5, 192, 227, 324], "dirichlet": [5, 227], "dirichlett": 5, "still": [5, 203, 216, 230, 259, 296, 311], "experiment": [5, 38, 64, 65, 203, 238, 239, 240, 242, 243, 244, 245, 246, 323], "necessari": [5, 19, 216, 217, 218, 219, 223, 228, 230, 235, 255, 262, 263, 273, 276, 278, 282, 289, 297, 300, 307, 309, 315, 317, 321, 324], "aggreg": 5, "align": [5, 61, 222, 239, 242, 244, 260, 262, 263, 266, 268, 302, 308, 311, 317, 318, 319], "properli": 5, "diagon": [5, 6, 226, 234, 292], "opposit": [5, 6, 224, 226, 234], "d_": [5, 262], "n_": [5, 226], "empti": [5, 19, 26, 98, 191, 227, 240, 282], "well": [5, 11, 15, 94, 222, 223, 225, 226, 228, 230, 231, 234, 236, 237, 239, 252, 253, 264, 272, 282, 292, 299, 301, 305, 320, 323, 324], "ii": [5, 88], "iii": 5, "xy": [5, 218, 220, 222, 227, 228, 239, 242, 243, 248, 296, 298, 304, 311], "52": [5, 203, 218, 220, 243, 253, 266, 317, 318, 321], "mesh1": [5, 220], "mesh2": [5, 220], "mesh3": [5, 220], "len": [5, 69, 80, 82, 98, 226, 230, 239, 240, 320, 321], "pmin": [5, 6, 226, 234, 318, 320], "pmax": [5, 6, 222, 234, 318, 320], "submesh": [5, 220], "newli": [5, 86], "09": [5, 201, 205, 207, 216, 220, 225, 228, 230, 234, 237, 241, 242, 243, 246, 247, 248, 260, 262, 263, 264, 266, 268, 270, 283, 290, 300, 301, 310, 320], "__len__": [5, 98], "element": [5, 6, 19, 21, 23, 24, 46, 94, 146, 197, 200, 216, 220, 226, 229, 230, 231, 235, 236, 243, 246, 247, 311], "total": [5, 29, 87, 203, 222, 226, 230, 267, 270, 293, 297, 311, 319, 320], "__or__": [5, 6], "common": [5, 206, 218, 242, 244, 282, 323], "region1": [5, 6, 75, 76, 77, 85, 88, 89, 91, 93, 94, 203, 223, 235, 257, 260, 262, 263, 266, 268, 282, 321], "45e": 5, "20e": [5, 6, 216, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 242, 244, 245, 246, 292, 303, 307, 309, 311, 315, 318, 320], "region2": [5, 6, 75, 76, 77, 85, 88, 89, 91, 93, 94, 203, 223, 235, 257, 260, 262, 263, 266, 268, 282], "42e": 5, "13e": [5, 205], "region3": [5, 6], "axis_selector": [5, 217, 218, 232], "dropdown": [5, 232], "radiobutton": [5, 218, 232], "show": [5, 15, 19, 23, 203, 205, 206, 216, 217, 218, 220, 222, 224, 225, 226, 230, 231, 233, 234, 236, 238, 239, 241, 244, 245, 248, 259, 264, 265, 267, 272, 274, 280, 289, 290, 293, 294, 296, 297, 298, 303, 305, 306, 311, 315, 317, 318, 323, 324], "index2point": [5, 226], "i_": [5, 40, 239], "point2index": [5, 226], "load_subregion": 5, "field_filenam": 5, "load": [5, 9, 12, 203, 270, 271, 292], "neighbour": [5, 30, 34, 35, 224, 226, 227, 245, 262, 311, 318], "xz": [5, 311], "extend": [5, 204, 229, 250, 251, 320, 323], "edg": [5, 6, 24, 25, 203, 205, 222, 226, 228, 229, 234, 237, 239, 240, 241, 243, 246, 278, 289, 293, 297, 319, 320], "padded_mesh": [5, 229], "120": [5, 218, 292, 320], "110": [5, 203], "12": [5, 6, 36, 37, 43, 82, 85, 92, 97, 98, 99, 162, 176, 197, 200, 201, 203, 205, 215, 216, 217, 218, 220, 222, 223, 224, 225, 226, 228, 230, 231, 232, 234, 236, 239, 240, 242, 244, 245, 247, 248, 249, 250, 252, 253, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 273, 274, 275, 283, 290, 291, 292, 293, 294, 295, 297, 298, 300, 301, 303, 304, 305, 308, 309, 310, 311, 315, 316, 317, 318, 319, 320, 321], "11": [5, 85, 92, 98, 99, 197, 200, 205, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 256, 257, 259, 260, 262, 263, 264, 266, 268, 270, 271, 273, 278, 290, 291, 292, 293, 295, 296, 297, 298, 299, 301, 302, 304, 305, 308, 310, 311, 317, 318, 319, 320, 321], "info": [5, 67, 68, 69, 70, 205, 247, 248, 264, 280, 301], "basic": [5, 19, 187, 203, 206, 208, 215, 216, 217, 220, 222, 225, 252, 253, 254, 256, 280, 286, 298, 313, 317, 319, 320, 323], "inform": [5, 19, 23, 29, 67, 68, 69, 70, 86, 87, 161, 203, 215, 218, 223, 233, 237, 239, 244, 245, 246, 247, 248, 259, 267, 280, 299, 311, 317, 322, 324], "about": [5, 6, 22, 29, 68, 69, 70, 86, 87, 161, 203, 206, 215, 218, 226, 233, 234, 237, 241, 245, 247, 259, 289, 299, 311, 314], "plane_mesh": [5, 228], "region2slic": 5, "sr": 5, "selectionslid": [5, 232, 275], "magnitud": [5, 220, 240, 290, 292, 295, 301, 317], "color": [5, 6, 19, 20, 21, 22, 23, 24, 25, 216, 217, 218, 230, 231, 236, 239, 240, 242, 243, 244], "colour": [5, 6, 15, 20, 21, 22, 23, 24, 25, 216, 217, 218, 230, 231, 239, 240, 242, 243, 290], "voxel": [5, 6, 20, 21, 22, 217, 230, 231, 236], "wirefram": [5, 6, 20, 21, 22, 230], "palett": [5, 6, 20, 21, 22, 24, 25], "namedtupl": [5, 19], "collect": [5, 222, 321, 323, 324], "depict": [5, 6, 24, 25, 218, 230, 231, 236], "linewidth": [5, 6, 24, 25, 218, 239, 301], "linestyl": [5, 6, 24, 25, 230, 231, 236, 301], "box_aspect": [5, 6, 24, 25, 203], "aspect": [5, 6, 24, 25, 203, 222], "ratio": [5, 6, 24, 25, 103, 203, 205, 222, 252, 271, 290, 291, 311, 315, 316, 317, 319], "auto": [5, 6, 24, 25, 203], "vertic": [5, 218, 226, 230, 231, 232, 236, 275, 306], "tolerance_factor": [6, 203], "cuboid": [6, 290, 291, 292, 295, 296, 304], "corner": [6, 222, 226, 227, 231, 234, 236, 241, 260, 262, 263, 266, 268, 295, 296, 304, 308], "_1": [6, 61, 242], "_2": 6, "_i": [6, 42, 239, 245], "p_x": 6, "p_y": 6, "p_z": 6, "mainli": [6, 203], "factor": [6, 48, 91, 94, 95, 102, 239, 240, 242, 243, 245, 252], "comparison": [6, 203, 311], "adjust": [6, 20, 94, 203, 216, 218], "accur": [6, 205, 321], "__contains__": [6, 98, 203], "le": [6, 201, 318, 320], "maximum": [6, 30, 34, 64, 176, 185, 200, 203, 224, 232, 234, 239, 240, 246, 270, 273, 275, 277, 289, 320], "usag": [6, 176, 191, 192, 193, 194, 195, 196, 197, 213, 233, 278], "face": [6, 90, 208, 305], "move": [6, 203, 205, 235, 311, 315], "minu": [6, 235, 311], "infin": [6, 235], "enter": [6, 235], "leav": [6, 235], "third": [6, 216, 218, 224, 226, 235, 311], "find": [6, 23, 87, 167, 200, 201, 206, 235, 259, 280, 289], "p11": [6, 235], "p12": [6, 235], "p21": [6, 235], "p22": [6, 235], "30e": [6, 235, 240, 241, 261, 300, 303, 316, 320], "random_point": [6, 219, 234], "random": [6, 234, 238, 239, 240, 242, 243, 244, 246, 260, 262, 263, 266, 268, 302, 303, 305, 308, 311], "200e": [6, 234], "ellipsi": 6, "exact": [6, 289, 311], "to_dict": 6, "middl": [6, 220, 227, 228, 320], "p_c": 6, "l": [6, 205, 245, 289, 292, 298, 311, 315, 318, 319], "p_2": 6, "p_1": 6, "l_": [6, 226, 230, 234, 236, 289, 290, 291], "th": 6, "l_x": 6, "l_y": 6, "l_z": 6, "discrteisedfield": 7, "decor": [8, 177, 190, 191, 192, 193, 194, 195, 196, 197, 198, 272, 287, 323], "wrapper": [8, 177], "around": [8, 23, 94, 176, 177, 222, 240], "packag": [8, 15, 27, 62, 73, 86, 87, 113, 147, 166, 171, 173, 174, 177, 178, 187, 188, 203, 204, 206, 239, 241, 242, 243, 245, 246, 249, 254, 258, 264, 271, 280, 285, 288, 295, 301, 304, 314, 316, 317, 320, 321, 322, 324], "myplot": [8, 177, 217, 218, 225, 290, 316], "modul": [9, 39, 44, 47, 59, 63, 100, 148, 203, 217, 220, 244, 258, 259, 289, 290, 291, 292, 297, 303, 305, 309, 310, 311, 317, 319], "discourag": 9, "pathlib": [10, 11, 12, 13, 14, 15, 70, 203], "current_path": [10, 11, 12], "parent": [10, 11, 12, 81, 83, 186], "filepath": [10, 11, 12], "version": [11, 12, 166, 176, 180, 182, 203, 209, 220, 234, 280, 314, 322, 323, 324], "ovf1": 11, "do": [12, 19, 203, 204, 205, 215, 216, 218, 220, 230, 231, 234, 236, 239, 242, 243, 244, 245, 248, 257, 259, 260, 261, 262, 263, 264, 266, 267, 268, 274, 290, 291, 300, 301, 308, 311, 319, 322, 323, 324], "appear": [12, 23, 237, 239], "componentnam": 12, "older": 12, "did": [12, 203, 215, 222, 226, 264, 281, 301, 316, 319], "old": [12, 176, 177, 203, 220, 222, 272, 273, 274], "correct": [12, 19, 71, 72, 166, 203, 245, 271, 278, 299, 313], "user": [12, 20, 70, 71, 72, 86, 94, 150, 203, 206, 216, 222, 230, 259, 296, 311, 312, 322, 323, 324], "dataset": 15, "enabl": [15, 19, 203, 216, 238, 245], "easi": [15, 239, 240, 245, 246, 289, 311, 315, 316], "some": [15, 176, 203, 205, 216, 218, 220, 222, 223, 226, 230, 231, 234, 236, 242, 243, 245, 249, 250, 251, 252, 253, 254, 256, 259, 272, 290, 296, 298, 301, 303, 311, 317, 319, 320, 321, 322, 323, 324], "open": [15, 204, 227, 314, 322], "paraview": [15, 203, 221, 247], "mayavi": [15, 221], "filter": [15, 19, 23, 42, 203, 216, 218, 239, 246], "convers": [16, 17, 70, 203, 210, 233, 313, 321], "command": [17, 86, 87, 167, 203, 216, 233, 245, 259, 280, 314, 319, 324], "key_dim": 19, "callback": [19, 67, 68, 70, 203, 248], "vdim_guess_callback": 19, "prior": 19, "norm_filt": [19, 216], "control": [19, 23, 91, 94, 95, 150, 161, 167, 170, 187, 203, 218, 232, 275, 284, 287, 312, 324], "behaviour": [19, 203, 218, 248, 254], "typic": [19, 67, 68, 70, 150, 161, 203, 215, 230, 239], "disabl": [19, 23, 216, 218], "global": [19, 259], "hv_key_dim": 19, "dynam": [19, 77, 81, 89, 91, 92, 95, 98, 99, 112, 203, 207, 212, 248, 256, 260, 262, 263, 265, 266, 268, 271, 290, 291, 294, 298, 299, 306, 307, 308, 310, 311, 313, 315, 316, 318, 321, 323], "arbitrari": [19, 65, 91, 94, 95, 203, 216, 242, 246, 311, 325], "vdims_guess_callback": 19, "guess": [19, 311, 319], "vdim": [19, 23, 205, 216, 218, 239], "roi": [19, 216], "scalar_kw": [19, 23, 203, 205, 216, 218, 248, 298, 302], "vector_kw": [19, 23, 203, 216, 218, 248, 294, 309], "optim": [19, 23, 289], "combin": [19, 23, 61, 67, 68, 70, 159, 203, 215, 222, 242, 246, 247, 311, 323], "quick": [19, 23, 231, 236, 319], "ignor": [19, 218, 222], "drop": [19, 216], "down": [19, 216, 278], "tri": [19, 167, 203, 322], "match": [19, 98, 176, 237, 272, 273, 274], "work": [19, 86, 150, 166, 203, 218, 220, 222, 230, 231, 236, 248, 274, 322, 323], "exclud": 19, "area": [19, 220, 222, 224, 240, 242, 243, 321], "hide": [19, 216], "reli": [19, 86, 87, 259, 267], "broadcast": [19, 321], "been": [19, 23, 167, 203, 216, 220, 222, 245, 248, 259, 271, 322, 323], "subplot": [19, 23, 26, 203, 218, 239, 244, 290, 311], "understand": [19, 23, 217, 223, 248, 311, 317, 319, 321], "reduc": [19, 35, 106, 203, 216, 218, 222, 224, 321], "simpl": [19, 203, 216, 218, 222, 231, 232, 236, 240, 245, 248, 260, 261, 262, 263, 264, 265, 266, 268, 275, 290, 300, 301, 308, 311, 317, 319, 320], "sort": [19, 203, 204, 240, 311], "just": [19, 205, 216, 220, 227, 234, 240, 242, 243, 319, 320], "pick": [19, 216], "nearest": [19, 222, 237, 245], "extrem": [19, 216, 311], "equidist": 19, "directon": [19, 216], "arrow": [19, 23, 216], "associ": [19, 23, 162, 198, 218, 226, 321], "includ": [19, 91, 94, 95, 204, 223, 227, 239, 242, 243, 244, 271, 280, 315, 321, 324], "output": [19, 64, 67, 70, 71, 72, 86, 87, 150, 161, 203, 205, 216, 233, 239, 240, 246, 248, 254, 267, 290, 299, 317, 321], "level": [19, 23, 187, 216, 218, 239, 261, 280, 284, 323], "greater": [19, 222, 239], "panel": [19, 231, 236, 324], "cut": [19, 94, 220, 222, 242, 310], "No": [19, 150, 323], "opt": [19, 216, 245, 259, 280, 295, 304, 321], "modifi": [19, 216, 217, 222, 230, 231, 236, 289, 315, 317, 325], "after": [19, 67, 166, 170, 190, 191, 192, 193, 194, 195, 196, 197, 203, 205, 215, 220, 222, 223, 248, 258, 259, 260, 262, 263, 266, 268, 276, 291, 296, 299, 301, 308, 317, 318, 319, 320, 323, 324], "containt": 19, "standard": [19, 87, 203, 216, 242, 267, 288], "cdim": [19, 216], "use_color": [19, 23, 216, 218, 239], "vectorfield": 19, "encod": [19, 23], "vectorplot": 19, "warn": [19, 187, 216, 218, 223, 230, 280], "black": [19, 216], "blue": [19, 216, 222], "implement": [20, 23, 32, 203, 207, 220, 222, 248, 250, 251, 252, 253, 254, 271, 278, 279, 294, 298, 321, 325], "nonzero": [20, 217, 222, 246, 295, 309, 320], "5010096": [20, 21, 22], "interactive_field": [20, 217, 315], "being": [20, 67, 68, 70, 150, 203, 216, 230, 231, 236, 239, 240, 242, 246, 285, 318], "displai": [20, 23, 86, 87, 203, 205, 217, 218, 230, 231, 236, 237, 248, 309, 315], "extern": [20, 86, 87, 94, 112, 203, 205, 240, 244, 253, 254, 268, 271, 290, 291, 292, 297, 301, 306, 307, 308, 310, 311, 317, 318, 319], "whole": [20, 24, 230, 240, 248, 323], "normfun": 20, "filter_field": [20, 23, 203, 217, 218, 295, 309, 316, 318], "cmap": [20, 23, 205, 216, 217, 218, 239, 242, 243, 246, 248, 290, 295], "cividi": [20, 216, 218, 248], "colormap": [20, 23, 218, 248], "those": [20, 23, 215, 220, 223, 228, 230, 231, 236, 265, 270, 273, 274, 320], "color_field": [20, 23, 216, 217, 218, 260, 262, 263, 266, 268, 295, 308, 309, 318, 319], "head_siz": [20, 295, 309, 318, 319, 320], "point_siz": 20, "vector_multipli": 20, "head": [20, 29, 299, 301], "fit": 20, "togeth": [20, 217, 218, 239, 252, 253, 272, 311], "14517330": 21, "5613672": 21, "12865106": 21, "8483507": 21, "9664608": 21, "14322627": 21, "9211020": 21, "13416820": 21, "6600141": 21, "seealso": [23, 150], "func": [23, 91, 94, 95, 161, 176, 253, 306, 307, 310, 311], "what": [23, 94, 215, 220, 223, 225, 226, 231, 235, 236, 270, 274, 290, 301, 316, 317, 318, 319, 321, 322], "understood": [23, 86, 220], "snippet": [23, 322], "scalar_field": 23, "vector_field": 23, "fig": [23, 26, 218, 230, 231, 236, 239, 244, 274, 290, 311], "plt": [23, 26, 218, 230, 231, 236, 238, 239, 241, 244, 274, 289, 290, 292, 311], "add_subplot": [23, 230, 231, 236, 274], "111": [23, 230, 231, 236, 246, 274], "savefig": 23, "bbox_inch": 23, "tight": 23, "pad_inch": 23, "02": [23, 205, 207, 259, 261, 264, 265, 284, 289, 290, 291, 293, 294, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 315, 316, 317, 318, 319], "therefor": [23, 36, 37, 86, 87, 94, 203, 216, 217, 218, 222, 223, 224, 226, 228, 230, 231, 232, 234, 236, 248, 250, 251, 260, 262, 263, 266, 267, 268, 271, 274, 275, 290, 291, 308, 311, 318, 319, 324], "turn": [23, 205, 218], "colorbar": [23, 203, 216, 218, 239], "colorbar_label": [23, 218, 239, 240, 242, 243, 246], "pixel": 23, "hidden": 23, "init_valu": [23, 224], "sin": [23, 60, 61, 65, 94, 95, 218, 220, 241, 244, 253, 289, 306, 307, 310, 311, 321], "lightness_field": [23, 218], "clim": [23, 205, 216, 218, 239, 248, 298, 302], "colorwheel": [23, 26], "colorwheel_xlabel": [23, 218, 239], "colorwheel_ylabel": [23, 218, 239], "colorwheel_arg": [23, 218, 239], "hsv": [23, 26, 217, 218, 239], "1d": 23, "hue": 23, "see": [23, 26, 94, 205, 215, 216, 217, 218, 220, 222, 226, 229, 231, 236, 241, 242, 243, 248, 259, 261, 264, 280, 289, 290, 300, 301, 302, 303, 305, 309, 311, 314, 315, 317, 318, 319, 321], "mpl_toolkit": [23, 26, 218], "axes_grid1": [23, 26, 218], "inset_loc": [23, 26, 218], "inset_ax": [23, 26, 218], "symmetric_clim": [23, 203, 218], "symmetr": [23, 88, 218], "preced": 23, "imshow": [23, 218], "quiver": [23, 203, 218, 295, 304], "fail": [23, 203, 216], "sometim": [23, 216, 217, 218, 219, 222, 223, 228, 230, 231, 232, 234, 235, 236, 249, 255, 261, 273, 274, 275, 276, 279, 297], "too": [23, 218, 234, 239, 311], "resolv": [23, 292, 323], "word": [23, 192, 226, 228, 290], "smaller": [23, 222, 226, 230, 231], "vice": 23, "versa": 23, "1e20": 23, "mpl_scalar": [23, 218], "4c72b0": [24, 25], "dd8452": 24, "55a868": 24, "c44e52": 24, "8172b3": 24, "937860": 24, "da8bc3": 24, "8c8c8c": 24, "ccb974": 24, "64b5cd": 24, "show_region": [24, 230], "width": [26, 64, 216, 218, 230, 231, 236, 239, 240, 246, 290, 291, 295, 304, 311, 315], "height": [26, 216, 218, 230, 231, 236, 239, 240], "loc": [26, 218], "lower": [26, 29, 239, 280, 321], "inset": 26, "dfp": [26, 218], "doctest": 26, "skip": 26, "ins_ax": 26, "run": [27, 62, 70, 71, 72, 73, 86, 87, 94, 113, 147, 150, 161, 162, 166, 167, 169, 171, 172, 174, 178, 188, 203, 205, 216, 217, 218, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 254, 259, 260, 261, 262, 263, 264, 266, 268, 270, 273, 284, 285, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 314, 315, 316, 317, 318, 319, 322, 324], "bloch": [29, 309, 323], "count": [29, 30, 69, 239, 270], "arrang": 29, "emerg": [29, 33, 309], "magnet": [29, 33, 35, 40, 41, 42, 46, 47, 48, 51, 52, 53, 54, 58, 61, 64, 65, 67, 69, 74, 94, 109, 112, 114, 203, 210, 238, 242, 243, 244, 245, 246, 247, 248, 253, 260, 262, 263, 266, 268, 271, 289, 290, 291, 292, 294, 297, 301, 302, 303, 305, 306, 307, 308, 310, 311, 317, 318, 319, 320, 323], "subvolum": 29, "increas": [29, 238, 273], "local": [29, 314, 318], "sum": [29, 60, 61, 99, 220, 222, 242, 252, 253, 273, 293, 297, 302, 319, 321], "jump": [29, 248], "tail": [29, 289, 290], "end": [29, 41, 61, 69, 203, 216, 218, 223, 239, 240, 242, 243, 244, 245, 259, 262, 289, 290, 296, 301, 311, 318, 320, 324], "stai": 29, "report": [29, 204, 309, 322, 324], "bp": 29, "min_angl": [30, 224], "rad": [30, 34, 35, 224, 244], "abov": [30, 216, 218, 224, 237, 238, 239, 240, 241, 242, 243, 244, 246, 271, 295, 296, 306, 307, 311, 317, 318, 321, 322, 323, 324], "threshold": 30, "taken": [30, 205, 222, 223, 224, 246, 311, 321], "account": [30, 203, 222, 224, 246, 280], "degre": [30, 34, 35, 224, 241, 311], "deg": [30, 34, 35, 224, 270], "dft": [30, 31, 33, 34, 35, 36, 37, 205, 220, 224, 248, 304], "90": [30, 224], "tensor": [31, 32, 203], "demagnetis": [31, 46, 78, 205, 229, 240, 244, 290, 291, 294, 319], "demag": [31, 32, 46, 48, 82, 92, 98, 99, 203, 205, 239, 240, 244, 246, 253, 265, 289, 290, 291, 292, 293, 294, 295, 297, 301, 309, 311, 318, 319], "albert": [31, 32, 292], "et": [31, 32, 309], "al": [31, 32, 309], "jmmm": [31, 32], "387": [31, 32], "2015": [31, 32], "http": [31, 32, 91, 94, 95, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 203, 230, 231, 236, 237, 259, 274, 280, 289, 290, 291, 296, 299, 311, 314, 316, 322, 324], "doi": [31, 32, 316, 323], "org": [31, 32, 230, 231, 236, 274, 280, 289, 290, 291, 314, 316, 323], "1016": [31, 32], "j": [31, 32, 33, 37, 88, 91, 105, 106, 107, 110, 205, 224, 245, 257, 260, 262, 263, 266, 270, 289, 290, 291, 292, 293, 297, 311, 315, 316, 318, 319], "03": [31, 32, 205, 207, 264, 284, 295, 297, 310], "081": [31, 32], "magnetis": [31, 42, 46, 48, 60, 61, 64, 65, 67, 68, 70, 71, 72, 86, 87, 92, 112, 150, 161, 203, 205, 218, 224, 237, 239, 240, 241, 242, 243, 244, 246, 247, 256, 260, 262, 263, 264, 265, 266, 268, 271, 272, 274, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 315, 316, 317, 318, 323], "obatain": 31, "demag_tensor": 31, "six": [32, 34, 224], "nxx": 32, "nyi": 32, "nzz": 32, "nxy": 32, "nxz": 32, "nyz": 32, "boldsymbol": [33, 95, 252, 291], "kl": 33, "partial_k": 33, "partial_l": 33, "volovik": 33, "rysti": 33, "m\u00e4kinen": 33, "t": [33, 40, 41, 67, 71, 72, 76, 77, 89, 91, 92, 94, 95, 110, 162, 176, 177, 190, 191, 192, 193, 194, 195, 196, 197, 198, 203, 205, 207, 216, 218, 220, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 250, 251, 253, 254, 259, 262, 264, 265, 267, 270, 271, 272, 273, 274, 275, 276, 278, 281, 282, 283, 290, 291, 292, 296, 299, 301, 306, 307, 309, 310, 311, 312, 315, 316, 317, 318, 320, 321], "eltsov": 33, "b": [33, 37, 41, 46, 186, 191, 193, 198, 216, 217, 218, 220, 224, 239, 244, 245, 278, 279, 280, 301], "spin": [33, 60, 61, 91, 95, 150, 203, 242, 245, 261, 270, 300, 311, 315, 316, 317, 318], "orbit": 33, "weyl": 33, "glass": 33, "topolog": [33, 36, 37, 203, 323], "superfluid": 33, "low": [33, 242, 243, 323], "temp": 33, "phy": 33, "196": [33, 203, 270, 271, 290, 310, 317], "82": [33, 203, 220], "101": [33, 190, 198, 203, 271, 299], "2019": [33, 240, 242, 309], "charg": [33, 36, 37, 43, 101, 203, 239, 323], "densiti": [33, 36, 37, 41, 46, 52, 94, 161, 203, 205, 216, 244, 260, 262, 263, 266, 268, 289, 293, 297, 318], "less": [34, 35, 68], "moment": [35, 46, 48, 226, 227, 238, 240, 244, 245, 260, 262, 263, 266, 268, 271, 302, 308, 310, 318], "invalid": [35, 190, 191, 192, 193, 194, 195, 196, 197, 198, 250, 251, 259, 278, 295, 304, 321], "continu": [36, 37, 224, 242, 290, 298], "There": [36, 94, 203, 204, 215, 216, 217, 218, 220, 221, 223, 224, 226, 233, 234, 236, 237, 242, 252, 253, 257, 259, 260, 263, 264, 266, 268, 271, 277, 296, 301, 302, 308, 311, 319, 320, 324], "topological_charge_dens": [36, 224, 248], "berg": [36, 37, 205, 220, 224, 304], "luescher": [36, 37, 205, 220, 224, 304], "q": [37, 48, 60, 61, 205, 224, 240, 242], "found": [37, 69, 70, 71, 72, 86, 165, 166, 167, 200, 201, 203, 218, 220, 223, 224, 237, 241, 246, 250, 251, 289, 290, 291, 292, 324], "statist": [37, 224], "distribut": [37, 216, 224, 239, 324], "lattic": [37, 224, 245], "sigma": [37, 61, 90, 224, 242, 243, 253, 305], "model": [37, 158, 224, 226, 256, 290, 311, 319, 323], "nuclear": [37, 224], "190": [37, 224], "412": [37, 224], "424": [37, 224], "1981": [37, 224], "kim": [37, 224], "mulker": [37, 224, 323], "quantifi": [37, 224], "micromagnet": [37, 66, 92, 161, 162, 203, 205, 212, 221, 224, 252, 253, 254, 270, 290, 293, 297, 311, 312, 315, 317, 318, 319, 320, 323, 324], "approach": [37, 218, 224], "iop": [37, 224], "scinot": [37, 224], "025211": [37, 224], "2020": [37, 224, 246, 323], "topological_charg": [37, 205, 220, 224, 304], "simul": [38, 70, 71, 72, 86, 87, 150, 161, 166, 203, 205, 211, 221, 222, 245, 254, 259, 260, 261, 262, 263, 266, 267, 268, 270, 282, 284, 288, 292, 296, 298, 300, 305, 308, 309, 310, 312, 313, 314, 315, 316, 321, 323, 324], "measur": [38, 48, 64, 65, 203, 238, 239, 240, 243, 244, 245, 246, 292], "lorentz": [39, 210, 241, 323], "transmiss": [39, 210, 241, 323], "electron": [39, 40, 41, 42, 43, 108, 210, 241, 323], "microscopi": [39, 47, 210, 241, 323], "quantiti": [39, 41, 47, 59, 60, 63, 222, 239, 240, 245, 246, 311], "c": [40, 41, 43, 50, 61, 101, 103, 191, 193, 205, 216, 217, 218, 221, 225, 234, 239, 245, 268, 278, 292, 308, 310, 324], "df_length": [40, 41, 50, 239], "0002": [40, 50], "voltag": [40, 41, 43, 50, 239, 241], "wavelength": [40, 43, 50, 239, 242, 243, 246], "defocus": [40, 241], "wavefunct": [40, 239], "shift": [40, 42, 48, 51, 53, 54, 58, 94, 220, 239, 240, 253, 306, 307, 310], "phi_m": [40, 239], "psi_0": [40, 239], "propag": [40, 42, 50, 64, 65, 239, 242, 243, 246], "microscop": 40, "contrast": [40, 48, 239, 240, 241, 318], "transfer": [40, 91, 95, 239, 315], "defocu": [40, 50, 239], "delta": [40, 48, 239, 240, 270, 277, 292, 298, 317], "widetild": [40, 42, 61, 65, 239, 242, 243], "psi": [40, 239], "_0": [40, 61, 239, 242], "k": [40, 42, 48, 54, 61, 75, 93, 97, 107, 239, 240, 242, 243, 244, 245, 246, 253, 257, 283, 289, 293, 295, 296, 297, 298, 301, 303, 304, 305, 311, 315, 316, 318], "c_": [40, 239, 262, 318], "relativist": [40, 43, 239], "spheric": [40, 239], "aberr": [40, 239], "coeffici": 40, "wavevector": [40, 242], "intens": [40, 65, 239, 242, 243], "vert": [40, 65, 239, 243], "psi_": [40, 239], "focu": [40, 239, 322], "acceler": [40, 43, 239], "u": [40, 43, 75, 93, 95, 97, 205, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 239, 240, 244, 245, 246, 250, 251, 252, 253, 254, 257, 259, 261, 262, 263, 264, 268, 270, 272, 273, 274, 275, 277, 279, 281, 282, 283, 289, 291, 292, 293, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 308, 311, 315, 316, 317, 318, 319, 320], "ft_phase": [40, 41, 42, 239], "df_img": [40, 41], "300e3": [40, 41, 43, 239, 241], "8000": [40, 41, 239], "relativistic_wavelength": 40, "beam": [41, 42, 60, 61, 64, 65, 239, 242, 243, 246], "bf": [41, 42, 46, 48, 61, 239, 240, 242, 243, 244, 245], "perp": [41, 42, 239, 245], "phi_0": [41, 239], "begin": [41, 61, 216, 218, 223, 239, 240, 242, 243, 244, 245, 262, 318, 320], "jame": [41, 276, 323], "close": [41, 203], "holographi": [41, 58, 210, 239, 323], "defocus_imag": [41, 50, 239], "imf": [41, 239], "kcx": [42, 50, 51, 52, 53, 239], "kcy": [42, 50, 51, 52, 53, 239], "experienc": 42, "phi": [42, 48, 239, 240, 241], "_m": [42, 239], "k_x": [42, 239], "k_y": [42, 239], "mu_0": [42, 46, 48, 239, 240, 244], "k_": [42, 93, 239, 245, 253, 266, 289], "h": [42, 43, 46, 48, 77, 78, 89, 94, 98, 99, 112, 203, 205, 233, 238, 239, 240, 241, 242, 243, 244, 245, 246, 249, 252, 253, 255, 256, 261, 264, 265, 271, 290, 291, 292, 293, 295, 296, 297, 298, 299, 302, 304, 306, 307, 310, 311, 317, 318, 319, 323], "_z": [42, 239], "k_c": [42, 239], "here": [42, 64, 65, 69, 91, 95, 204, 206, 209, 216, 218, 220, 224, 227, 231, 234, 235, 236, 239, 240, 241, 242, 244, 245, 248, 250, 251, 252, 253, 258, 259, 280, 288, 296, 298, 302, 305, 306, 311, 314, 318, 322, 324], "vacuum": [42, 239], "permeabl": [42, 239], "radiu": [42, 78, 219, 239, 295, 320], "cx": [42, 205, 217, 218, 221], "dk_x": 42, "cy": [42, 205, 217, 218, 221], "dk_y": 42, "resolut": [42, 240, 246, 248, 311], "radii": 42, "tikhonov": [42, 239], "m_e": 43, "sqrt": [43, 241, 289], "mass": [43, 108], "speed": [43, 203, 321], "kv": [43, 239], "9687489006848795e": 43, "techniqu": [44, 238, 239, 240, 242, 243, 244, 246, 323], "textrm": [45, 46, 48], "am": [45, 46, 48, 205, 260, 262, 263, 266, 268, 302, 308], "micromagneticmodel": [45, 46, 48, 60, 61, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 150, 161, 162, 203, 205, 207, 209, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 264, 265, 266, 267, 268, 271, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 315, 316, 317, 318, 319, 323, 324], "mm": [45, 46, 48, 60, 61, 75, 76, 77, 78, 80, 82, 85, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 112, 161, 162, 205, 207, 238, 239, 240, 241, 242, 243, 244, 246, 249, 250, 251, 252, 253, 254, 255, 256, 260, 261, 262, 263, 264, 265, 266, 267, 268, 271, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 315, 316, 317, 318, 319], "1e6": [45, 46, 75, 88, 92, 93, 94, 99, 112, 217, 218, 220, 221, 225, 238, 239, 240, 241, 242, 243, 246, 252, 253, 255, 256, 261, 264, 265, 268, 289, 294, 295, 296, 300, 301, 302, 304, 306, 307, 308, 310, 318], "1000000": [45, 238, 247, 252, 253, 283], "v_fun": [45, 48, 60, 61], "elif": [45, 48, 64, 223, 321], "325269": 45, "1193457478": 45, "405269": 45, "1193455959": 45, "460000": 45, "use_demag": [46, 244], "tau": [46, 244], "equat": [46, 61, 92, 98, 112, 158, 203, 205, 207, 212, 239, 240, 242, 243, 244, 245, 255, 256, 260, 262, 263, 266, 268, 271, 290, 291, 292, 297, 298, 300, 302, 305, 308, 310, 311, 313, 315, 323], "term": [46, 75, 76, 77, 78, 80, 81, 82, 83, 85, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 104, 112, 161, 203, 205, 212, 240, 244, 284, 288, 290, 291, 296, 298, 307, 308, 311, 315, 317, 318, 319], "constitu": 46, "app": [46, 244], "system": [46, 48, 69, 70, 71, 72, 79, 86, 112, 150, 161, 162, 203, 212, 220, 222, 224, 234, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 252, 253, 254, 260, 261, 262, 263, 264, 265, 266, 267, 268, 271, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 315, 316, 317, 318, 320, 323, 324], "box2": [46, 48, 238, 239, 240, 241, 242, 243, 244, 246], "energi": [46, 48, 75, 76, 78, 83, 85, 88, 90, 92, 93, 94, 98, 99, 112, 153, 161, 203, 207, 212, 238, 239, 240, 241, 242, 243, 244, 245, 246, 250, 256, 257, 261, 264, 265, 270, 271, 284, 288, 290, 291, 292, 294, 295, 296, 300, 301, 304, 306, 307, 308, 309, 310, 311, 313, 315, 316, 317, 323], "zeeman": [46, 98, 99, 112, 161, 203, 205, 207, 238, 239, 240, 241, 242, 243, 244, 246, 247, 255, 256, 261, 262, 263, 264, 265, 271, 284, 290, 291, 292, 293, 295, 296, 297, 302, 304, 306, 307, 308, 310, 317, 319, 323], "1256637": 46, "061435814": 46, "forc": [47, 210, 239, 241, 323], "tip_m": [48, 54, 240], "qualiti": [48, 54, 240], "650": [48, 54, 240], "tip_q": [48, 54, 240], "fwhm": [48, 54, 58, 64, 240, 246], "tip": 48, "oscil": [48, 240], "cantilev": [48, 240], "strai": [48, 240, 288], "As": [48, 67, 68, 70, 94, 104, 166, 205, 216, 218, 220, 222, 226, 230, 234, 235, 237, 239, 240, 242, 243, 245, 246, 248, 252, 253, 261, 271, 273, 290, 291, 297, 298, 300, 301, 303, 308, 311, 315, 316, 317, 318, 319, 323], "airbox": [48, 240, 288], "satur": [48, 112, 205, 240, 260, 262, 263, 266, 268, 271, 289, 290, 291, 292, 294, 295, 297, 302, 308, 309, 311, 315, 316, 317, 318, 319, 320], "wish": [48, 240, 245], "driven": [48, 69, 86, 150, 256], "reson": [48, 240, 271], "frequenc": [48, 94, 176, 239, 240, 242, 243, 253, 306, 307, 310, 311], "presenc": [48, 203, 243, 246], "sz": [48, 240], "_t": [48, 240], "spring": [48, 240], "monopol": [48, 240], "dipol": [48, 238, 240], "due": [48, 240, 241, 242, 243, 246, 292, 300], "ms_fun": [48, 295, 301, 309, 316, 318], "po": [48, 217, 218, 219, 220, 221, 223, 238, 239, 240, 241, 242, 243, 246, 260, 262, 263, 266, 268, 289, 291, 294, 295, 296, 302, 304, 308, 311, 315, 316, 318, 320], "384e3": 48, "16": [48, 205, 215, 216, 217, 218, 220, 222, 223, 224, 225, 226, 230, 234, 239, 240, 245, 247, 248, 252, 253, 259, 260, 261, 263, 264, 266, 268, 271, 273, 289, 290, 295, 296, 297, 298, 301, 307, 308, 311, 318, 319, 320, 321], "40e": [48, 230, 311, 315, 316], "quickplot": [50, 51, 52, 53, 54, 55, 56, 57, 58], "ltem": [50, 51, 52, 53, 54, 58, 323], "integrated_magnetic_flux_dens": [52, 239], "z0": [54, 240], "mfm": [54, 323], "phase_shift": [54, 240], "polaris": [55, 56, 60, 61, 203, 242, 243, 246, 315, 316, 317], "neutron": [55, 56, 59, 61, 210, 323], "scatter": [55, 56, 57, 59, 61, 65, 210, 238, 244, 246, 323], "chiral": [55, 60, 242], "san": [55, 56, 323], "chiral_funct": [55, 242], "pattern": [56, 57, 64, 65, 239, 240, 241, 242, 244], "cross_sect": [56, 242, 243, 289], "rai": [57, 63, 64, 65, 210, 323], "x_rai": [57, 58, 243, 246], "chi": [60, 242], "omega": [60, 61, 95, 242, 243, 311], "flip": [60, 61, 242], "section": [60, 61, 222, 234, 237, 248, 288, 309, 311, 322], "turpl": [60, 61, 176], "incom": [60, 61, 242], "reutron": [60, 61], "frame": [60, 61, 64, 65], "co": [60, 61, 65, 218, 241, 244, 289, 311, 321], "1e5": [60, 61, 75, 77, 89, 93, 95, 240, 253, 257, 260, 264, 265, 266, 298, 302, 304, 305], "cf": 60, "sim": [61, 242, 245], "pauli": [61, 242], "bmatrix": [61, 242], "sigma_x": [61, 242], "sigma_i": [61, 242], "sigma_z": [61, 242], "pmatrix": [61, 239, 242], "hat": [61, 76, 242, 253, 262, 316], "geometri": [61, 205, 237, 238, 239, 240, 241, 242, 243, 244, 246, 289, 290, 291, 292, 295, 296, 298, 299, 306, 307, 309, 316, 320], "half": [61, 64, 230, 240, 242, 246], "further": [61, 94, 216, 217, 237, 246, 257, 259, 296], "unpolaris": [61, 242], "pp": [61, 242, 323], "nn": [61, 242], "pn": [61, 242], "negit": 61, "unpol": [61, 242], "arbitari": 61, "circular": [64, 65, 243, 246], "dichroism": [64, 65, 243, 246], "holograph": [64, 246], "convolut": [64, 246], "gaussian": [64, 240, 246], "full": [64, 94, 150, 203, 218, 220, 223, 237, 240, 244, 246, 248, 250, 251, 271, 305, 314, 324], "3e6": [64, 65, 94, 283, 310], "xrh": 64, "xrh2": 64, "m_i": 65, "propto": [65, 243], "qx": 65, "analys": [66, 211, 220, 264, 273, 301], "micromagneticdata": [67, 68, 69, 70, 71, 72, 203, 205, 209, 247, 248, 311, 315, 316, 323, 324], "drive": [67, 68, 69, 71, 72, 79, 86, 87, 150, 161, 162, 163, 203, 205, 238, 239, 240, 241, 242, 243, 244, 246, 254, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 271, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 315, 316, 317, 318, 323], "md": [67, 68, 69, 70, 71, 72, 152, 153, 171, 172, 205, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 260, 261, 262, 263, 264, 266, 267, 268, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 308, 309, 311, 315, 316, 318, 319], "system_nam": [67, 68, 69, 70, 71, 72, 247, 248], "concaten": [67, 68, 70, 176, 247], "timedriv": [67, 68, 70, 162, 203, 205, 207, 247, 248, 264, 265, 270, 271, 290, 291, 292, 299, 306, 307, 310, 311, 315, 316, 317], "tabl": [67, 68, 70, 71, 72, 177, 180, 181, 182, 205, 207, 245, 247, 248, 261, 264, 286, 289, 290, 291, 292, 299, 301, 302, 306, 307, 310, 311, 317], "combineddr": [67, 70, 203], "append": [67, 68, 70, 86, 161, 203, 218, 238, 247, 273, 289, 302, 321], "drive_0": [67, 68, 70], "drive_1": [67, 68, 70], "register_callback": [67, 68, 70, 248], "regist": [67, 68, 70, 203, 248], "export": [67, 150, 203, 208, 324], "driver": [67, 70, 71, 72, 86, 97, 152, 153, 157, 203, 205, 212, 247, 248, 256, 259, 264, 270, 271, 289, 290, 298, 299, 301, 318, 319], "mai": [67, 239, 289, 321, 322], "extra": [67, 321], "proper": [67, 203, 237], "hysteresisdriv": [67, 203, 238, 248, 301], "b_hysteresi": [67, 68, 71, 72, 176, 203, 248, 301], "bx_hysteresi": [67, 68, 71, 72, 301], "by_hysteresi": [67, 301], "bz_hysteresi": [67, 248, 301], "hysteresi": [67, 68, 71, 72, 152, 185, 203, 287, 288], "while": [67, 150, 237, 242, 245, 292, 318], "rest": [67, 220, 319], "besid": 67, "xr_drive": 67, "isel": 67, "m0": [67, 247, 248], "init": [67, 222], "row": [67, 205, 270, 271, 273, 290, 301, 310, 317], "ubermagt": [67, 68, 70, 176, 203, 209, 247, 270, 271, 272, 273, 274, 275, 323, 324], "abstractdr": 68, "oommfdriv": [68, 69, 70, 203, 247], "directori": [69, 70, 71, 72, 86, 150, 161, 162, 164, 184, 203, 221, 230, 231, 236, 247, 248, 250, 251, 254, 258, 259, 274, 284, 289, 290, 291, 296, 314, 324], "defult": [69, 70, 71, 72], "ioerror": [69, 70, 71, 72], "0th": 69, "1th": 69, "mumax3dr": [69, 70, 203, 247], "6th": 69, "boundedinttext": 69, "mismatch": 69, "nan": [69, 176, 203, 205, 244, 247, 248, 264, 273], "drive_numb": [69, 205, 247, 248, 264, 301], "use_cach": [70, 71, 72], "tabular": [70, 71, 72, 175, 176], "onc": [70, 71, 72, 167, 314], "prevent": [70, 71, 72, 222], "detect": [70, 71, 72, 216], "look": [70, 71, 72, 205, 209, 216, 218, 220, 222, 223, 226, 227, 231, 234, 236, 240, 242, 246, 248, 262, 264, 271, 288, 298, 301, 302, 307, 311, 317, 318, 319, 320, 322, 323, 324], "objet": 70, "subpart": 70, "static": [70, 218, 231, 236, 311], "__new__": 70, "cl": [70, 186], "structur": [70, 205, 217, 238, 239, 240, 241, 242, 243, 244, 245, 246, 323], "subdirectori": [70, 86, 161, 314], "ovf2vtk": [70, 208, 247], "intslid": 70, "calculator_script": [70, 71, 72, 247], "mif": [70, 71, 72, 91, 94, 95, 150, 203, 247, 259, 299, 311, 322], "content": [70, 71, 72, 164, 165, 166, 168, 221, 258], "mx3": [70, 71, 72], "todo": [70, 71, 72, 216, 224, 248], "mumax3": [70, 71, 72, 86, 176, 180, 181, 182, 209, 214, 270, 323, 324], "pre": [70, 71, 72, 91, 94, 95, 254, 271], "cach": [70, 167, 170, 259], "clear": [70, 222], "sub": [71, 72, 203, 204, 321, 322, 323], "languag": [74, 321, 322, 323], "anisotropi": [75, 93, 244, 257, 262, 263, 284, 289, 297, 302, 305, 311, 315, 316], "w": [75, 76, 78, 85, 88, 93, 94, 218, 239, 282, 292, 293, 297, 298, 311, 315, 317], "5e5": [75, 77, 89, 93, 257], "per": [75, 76, 77, 85, 88, 89, 91, 93, 94, 187, 245, 248, 280], "u1": [75, 237, 247, 253, 260], "u2": [75, 253, 260], "ca": [75, 260], "1e4": [75, 205, 298, 303, 311, 321], "4e5": [75, 301], "dzyaloshinskii": [76, 245, 284, 309, 315, 316], "moriya": [76, 245, 284, 309, 311, 315, 316, 324], "w_x": 76, "cnv": [76, 203, 207, 253, 304, 318], "m_": [76, 78, 88, 94, 205, 218, 245, 253, 256, 260, 262, 263, 266, 268, 289, 290, 291, 292, 293, 297, 298, 302, 304, 308, 309, 317, 318, 319], "w_y": 76, "w_z": 76, "d2d": [76, 203, 253, 318], "unsign": [76, 85, 89, 194, 197, 226, 250, 251, 278], "incompat": 76, "crystalclass": [76, 207, 238, 239, 240, 241, 242, 243, 246, 253, 262, 295, 296, 298, 301, 304, 309, 311, 315, 316, 318], "crystalograph": [76, 318, 324], "cnv_x": [76, 253], "cnv_y": [76, 253], "cnv_z": [76, 241, 253, 262, 295, 296, 304, 311, 315, 316, 318], "d2d_x": [76, 253], "d2d_y": [76, 253], "d2d_z": [76, 253], "sensit": [76, 239, 311], "7e": [76, 226, 228], "gamma_": [77, 89, 205, 252, 256, 290, 291, 298, 299, 317, 319], "alpha": [77, 80, 89, 91, 92, 95, 97, 98, 99, 112, 205, 252, 256, 265, 271, 290, 291, 292, 294, 298, 299, 306, 307, 310, 311, 315, 316, 317, 319], "eff": [77, 89, 205, 252, 256, 290, 291, 298, 299, 317, 319], "01": [77, 95, 97, 99, 152, 153, 205, 207, 264, 284, 296, 311], "005": [77, 252, 253, 317], "012": [77, 95], "mu_": [78, 91, 94, 205, 245, 253, 256, 268, 289, 290, 291, 293, 297, 298, 304, 317, 318, 319], "asymptotic_radiu": 78, "asymptot": 78, "precess": [80, 92, 98, 99, 104, 112, 205, 207, 248, 256, 265, 271, 290, 291, 292, 294, 299, 306, 307, 310, 311, 315, 316, 317, 319, 323], "gamma0": [80, 89, 92, 98, 99, 112, 205, 249, 252, 256, 265, 271, 290, 291, 292, 294, 298, 299, 306, 307, 310, 311, 315, 316, 317, 319], "const": [80, 89, 92, 98, 99, 112, 190, 191, 192, 193, 194, 195, 196, 197, 198, 205, 245, 249, 256, 265, 276, 282, 289, 290, 293, 294, 297, 298, 299, 301, 306, 307, 310], "damp": [80, 92, 97, 98, 99, 112, 205, 248, 256, 265, 271, 290, 291, 292, 294, 298, 299, 306, 307, 310, 311, 315, 316, 317, 319, 323], "exchang": [82, 90, 92, 97, 98, 99, 203, 205, 207, 221, 238, 239, 240, 241, 242, 243, 244, 246, 247, 256, 257, 262, 265, 270, 284, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 300, 301, 304, 305, 309, 310, 311, 315, 316, 319, 323], "123": [85, 203], "runner": [86, 87, 161, 164, 165, 166, 168, 203, 280, 284, 288, 324], "ovf_format": [86, 150, 161, 203], "verbos": [86, 87, 161, 203, 205, 238, 240, 244, 284], "director": 86, "alreadi": [86, 87, 98, 161, 203, 218, 222, 226, 230, 245, 267, 270, 271, 302, 311, 322, 323, 324], "could": [86, 150, 215, 216, 218, 220, 226, 234, 270, 280, 305, 311], "drive_kwargs_setup": [86, 150], "workinng": [86, 150, 161], "externalrunn": 86, "tool": [86, 114, 179, 203, 205, 208, 220, 248, 270, 292, 304, 323], "doubl": [86, 150, 161, 203, 318, 321], "runtim": [86, 87, 161, 203, 311], "stdout": [86, 87, 161, 187, 259, 280], "progress": [86, 87, 203], "bar": [86, 87, 203, 218, 240, 242, 243], "snapshot": [86, 87, 203, 323], "disk": [86, 87, 203, 222, 267, 271, 288, 309, 320], "give": [86, 87, 150, 170, 203, 205, 209, 215, 218, 220, 222, 226, 228, 230, 234, 239, 242, 245, 248, 267, 271, 288, 289, 302, 311, 314, 319, 323], "rough": [86, 87, 94, 203, 267], "fileexistserror": 86, "schedul": [86, 150, 203, 247, 254], "cmd": [86, 272], "header": [86, 150, 203], "script_nam": [86, 91, 94, 95, 311], "job": [86, 150, 203, 254], "sh": 86, "submit": [86, 203, 254], "machin": [86, 259, 296, 323, 324], "slurm": [86, 203], "resourc": [86, 203], "respons": [86, 150, 203, 230], "ensur": [86, 150, 203, 222, 285, 292, 300, 305, 324], "execut": [86, 150, 164, 165, 167, 203, 259, 265, 296, 323, 324], "submiss": [86, 203], "program": [86, 203, 204, 322], "sbatch": 86, "cpu": [86, 150], "memori": [86, 203], "script": [86, 91, 94, 95, 311, 324], "schedule_kwargs_setup": [86, 150], "argstr": 87, "need_stderr": 87, "glob_nam": 87, "dry_run": [87, 203], "captur": 87, "updat": [87, 203, 218, 254, 297, 298], "glob": 87, "express": [87, 234, 245, 250, 251, 289], "runtimeerror": 87, "occur": [87, 289, 305, 318], "success": [87, 176, 324], "package_nam": [87, 166], "magneto": [88, 203], "elast": [88, 203], "b_": 88, "sum_": [88, 245], "epsilon_": 88, "ne": 88, "ij": [88, 245], "b1": 88, "1e7": [88, 94, 218, 309, 320], "5e7": 88, "b2": 88, "e_diag": 88, "e_offdiag": 88, "strain": 88, "matrix": [88, 94, 222, 311], "assembl": [88, 256, 260, 262, 263, 266, 268, 308, 318], "eps11": 88, "eps22": 88, "eps33": 88, "eps23": 88, "eps32": 88, "eps13": 88, "eps31": 88, "eps12": 88, "eps21": 88, "mel": [88, 203], "2e7": 88, "gamma": [89, 91, 104, 252, 315, 316, 317], "2e6": [89, 245, 271, 304, 310, 317], "closest": [90, 305], "mutual": [90, 253, 303, 305], "bilinear": [90, 218], "interfaci": [90, 207, 295, 304, 318], "sigma2": [90, 305], "biquadrat": 90, "torqu": [91, 95, 203, 210, 245, 315], "beta": [91, 95, 252, 291, 311, 315, 316], "epsilon": [91, 245], "hbar": [91, 249], "tm_": 91, "evalu": [91, 94, 95, 205, 311], "dt": [91, 94, 95, 270, 271, 290, 298, 299, 310, 311, 317], "tcl_string": [91, 94, 95, 311], "tcl": [91, 94, 95, 167, 168, 253, 259, 280, 296, 324], "5e12": 91, "3e12": 91, "mp": [91, 311], "35": [91, 203, 216, 218, 220, 223, 226, 253, 270, 273, 290, 291, 301, 302, 311, 321], "eps_prim": 91, "script_arg": [91, 94, 95, 311], "nist": [91, 94, 95, 149, 151, 152, 153, 154, 156, 157, 289, 290, 291, 311, 324], "gov": [91, 94, 95, 149, 151, 152, 153, 154, 156, 157, 289, 290, 291, 311], "doc": [91, 94, 95, 164, 237, 279, 280, 311], "userguide20a3": [91, 94, 95, 311], "userguid": [91, 94, 95, 311], "standard_oxs_ext_child_cla": [91, 94, 95, 311], "sx": [91, 95], "1e12": 91, "exponenti": [91, 94, 311], "decai": [91, 94, 95, 311], "t_0": [91, 94], "exp": [91, 94, 220, 241, 311], "unnam": 92, "uniqu": [92, 176, 223, 248, 260, 262, 263, 266, 268, 273, 302], "temperatur": [92, 158, 160, 203, 245, 282, 288], "my_cool_system": 92, "dynamicsterm": [92, 250], "yet": 92, "001": [92, 245, 283], "21e5": 92, "221000": 92, "energyterm": [92, 251], "uniaxi": [93, 244, 257, 260, 284, 289, 297, 305, 311, 315, 316], "k1": [93, 253, 266], "k2": [93, 253, 266], "ua": [93, 97, 266], "2e3": 93, "sine": [94, 253, 288, 307, 310, 311], "wave": [94, 239, 242, 243, 253, 306, 307, 310, 311], "puls": [94, 253, 310], "built": [94, 215, 218, 239, 242, 243, 246, 272], "t0": [94, 253, 306, 307, 310, 311], "t_": [94, 245, 253, 310], "off": [94, 176, 205, 239, 240, 292, 310, 311], "separ": [94, 216, 218, 220, 222, 252, 253, 311], "up": [94, 187, 203, 219, 222, 234, 235, 238, 239, 240, 242, 243, 244, 246, 255, 295, 298, 303, 304, 305, 311, 322], "desir": [94, 237, 239, 240, 242, 246, 321, 324], "stabl": [94, 237, 309], "reason": [94, 203, 220, 222, 244, 301, 303, 324], "guidelin": [94, 324], "nine": [94, 311], "m11": 94, "m12": 94, "m13": 94, "m21": 94, "m22": 94, "m23": 94, "m31": 94, "m32": 94, "m33": 94, "complic": [94, 216, 240, 319], "tz": [94, 311], "flexibl": [94, 150, 222], "sever": [94, 204, 216, 217, 218, 220, 222, 223, 232, 252, 253, 275, 280, 282, 311, 320, 323], "time_depend": [94, 311], "tstep": [94, 311], "easier": [94, 230, 323], "hz": [94, 311], "predefin": [94, 195, 205, 249, 253], "su": [94, 311], "websit": [94, 203, 218, 311, 324], "zhang": [95, 155, 203, 292, 315], "li": [95, 155, 203, 315], "behav": [95, 216, 247, 311], "similar": [95, 203, 216, 218, 223, 224, 225, 228, 230, 231, 232, 236, 247, 248, 263, 264, 266, 275, 282, 290, 291, 311, 314], "slonczewski": [95, 156, 160, 203], "oxs_spinxferevolv": [95, 156], "5e6": [95, 97, 311, 315, 316, 319], "sinusoid": [95, 311], "sin_wav": 95, "evolv": [97, 149, 151, 154, 155, 156, 158, 159, 160, 212, 247, 270, 271, 290, 299, 316], "_allowed_attribut": [97, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 250, 251, 254], "lowercas": [97, 98, 255], "uniaxialanisotropi": [97, 239, 240, 244, 246, 253, 266, 270, 289, 293, 295, 296, 297, 298, 301, 303, 304, 305, 311, 315, 316, 318], "my_damp": 97, "termscontain": 98, "present": [98, 203, 243, 246, 275, 311, 316, 318, 320, 321], "termcontain": 98, "my_exchang": 98, "energy1": 98, "energy2": 98, "dmi": [98, 203, 207, 238, 239, 240, 241, 242, 243, 246, 253, 262, 270, 295, 296, 301, 304, 309, 311, 315, 316, 323], "stt": [98, 291, 311, 315, 316], "indexerror": 98, "6021766208e": [101, 249], "19": [101, 215, 216, 218, 220, 222, 223, 225, 226, 227, 230, 245, 247, 248, 249, 252, 253, 260, 261, 264, 266, 270, 273, 280, 290, 293, 297, 298, 301, 308, 310, 311, 318, 320, 321], "elementari": 101, "00231930436182": [102, 249], "land": 102, "176085964286": [103, 249], "56906": [103, 249], "gyrotrop": [103, 252, 315, 316, 319], "kg": [103, 108], "221276": [104, 249], "14872118403": [104, 249], "llg": [104, 205, 207, 290, 291, 292, 317, 318], "62607004081e": [105, 249], "34": [105, 106, 205, 216, 218, 220, 223, 249, 253, 259, 273, 280, 296, 301, 302, 310, 311, 321], "planck": [105, 106, 323], "0545718002680283e": [106, 249], "3806485279e": [107, 249], "23": [107, 110, 205, 215, 216, 218, 220, 223, 225, 226, 234, 241, 245, 247, 248, 249, 252, 253, 270, 273, 281, 301, 302, 311, 320, 321], "boltzmann": [107, 245], "1093835611e": [108, 249], "31": [108, 203, 216, 218, 220, 223, 237, 245, 247, 249, 253, 273, 292, 301, 311, 321], "2566370614359173e": [109, 249], "06": [109, 200, 201, 205, 207, 239, 247, 249, 283, 292, 294, 296, 297, 302, 311, 321], "8569529235961887e": [110, 249], "bohr": [110, 245], "magneton": [110, 245], "micromagnetictest": [116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 209, 258, 323, 324], "calculatortest": [116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 258], "tmp_path": 141, "mt": [146, 147, 290, 301], "oommfc": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 165, 166, 167, 168, 187, 203, 205, 207, 209, 214, 238, 239, 240, 241, 242, 243, 244, 246, 247, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 271, 280, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 315, 316, 317, 318, 319, 323, 324], "oxs_cgevolv": [149, 247], "oc": [149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 166, 167, 169, 207, 214, 238, 239, 240, 241, 242, 243, 244, 246, 260, 262, 263, 266, 267, 268, 289, 290, 291, 292, 293, 294, 295, 316, 318], "polak": 149, "ribier": 149, "myarg": [149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "fixed_subregion": [150, 300], "output_step": [150, 264], "n_thread": [150, 161, 265], "thread": [150, 161, 265], "environ": [150, 161, 167, 203, 280, 314], "oommf_thread": [150, 161], "instal": [150, 161, 203, 245, 259, 280, 285, 296, 314, 323], "impli": 150, "activ": [150, 216, 314, 324, 325], "conda": [150, 203, 245, 280, 314, 324], "request": 150, "node": 150, "write_mif": [150, 203], "subdirectiori": 150, "encourag": [150, 322], "advanc": [150, 216, 226, 311], "euler": [151, 222], "oxs_eulerevolv": 151, "min_timestep": 151, "oxs_mindriv": [152, 153, 247], "mc": [152, 162, 205, 207, 214, 261, 264, 265, 271, 278, 293, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 315, 317, 319], "hd": [152, 301], "stopping_mxhxm": [152, 153, 247], "minimis": [153, 207, 260, 262, 263, 264, 266, 268, 290, 291, 295, 302, 303, 304, 308, 309, 318, 319], "rung": [154, 159], "kutta": [154, 159], "oxs_rungekuttaevolv": 154, "rk4": [154, 155, 156, 159, 160], "anv_spintevolv": 155, "www": [155, 158, 259, 289, 290, 291, 296, 299], "zurich": 155, "ibm": 155, "com": [155, 159, 160, 164, 259, 296, 299, 324], "st": [155, 311], "nanomagnet": 155, "oxs_timedriv": 157, "td": [157, 162, 205, 265, 267, 271, 290, 291, 292, 299, 306, 307, 310, 311, 315, 316, 317], "total_iteration_limit": 157, "langevin": 158, "thetaevolv": [158, 299], "nanosci": [158, 299], "de": [158, 270, 271, 290, 299, 310, 317], "group_r": [158, 299], "stm": [158, 299], "spstm": [158, 299], "download": [158, 259, 296, 299, 323, 324], "shtml": [158, 299], "fixed_timestep": [158, 299], "60": [158, 207, 218, 220, 222, 299], "xf_thermheun": 159, "uhh_thetaevolv": [159, 203], "kelvinxyfong": [159, 160], "wordpress": [159, 160], "research": [159, 160, 323], "interest": [159, 160, 218, 220, 289], "effective_field": [161, 251, 293, 294, 297, 298], "macrospin": [161, 162, 166, 169, 259, 267, 271, 311], "22": [161, 207, 216, 218, 220, 223, 225, 226, 230, 245, 247, 248, 252, 253, 260, 262, 263, 266, 268, 270, 271, 273, 301, 310, 311, 317, 320, 321], "silent": [162, 203], "filenotfounderror": 162, "docker_ex": [164, 167, 259, 280], "docker": [164, 167, 172, 203, 207, 259, 280, 296, 324], "20a3": [164, 207], "selinux": [164, 203], "dockerhub": 164, "flag": 164, "mount": 164, "caution": 164, "storag": 164, "bind": 164, "configur": [164, 205, 238, 239, 240, 241, 242, 243, 244, 246, 256, 280, 289, 290, 292, 295, 296, 304, 312, 317, 318, 319], "you": [164, 203, 204, 209, 216, 217, 220, 245, 248, 258, 259, 288, 296, 311, 313, 314, 316, 317, 319, 322, 323, 324], "permiss": 164, "boxsii": [164, 165, 166, 168], "oommf_ex": [165, 167, 259, 280, 296], "__del__": 166, "kill": [166, 260, 262, 263, 266, 268, 280], "applic": [166, 224], "goe": 166, "scope": [166, 258], "window": [166, 203, 259, 272, 296, 314, 324], "ownership": 166, "consequ": [166, 222, 324], "platform": [166, 203], "seen": [166, 216, 218, 222, 223, 239, 241], "statu": [166, 167, 203, 259, 267, 324], "cache_runn": [167, 259, 280], "subsequ": [167, 203, 218, 259, 290, 324], "oommfrunn": [167, 170, 203, 259], "caus": [167, 203, 222, 239, 278, 321], "again": [167, 218, 222, 227, 248, 250, 251, 264, 311, 318, 323, 324], "envvar": [167, 259, 280], "oommftcl": [167, 259, 280, 324], "autoselect_runn": [167, 170, 259, 280], "suitabl": [167, 324], "ooommf_ex": 167, "docker_runn": [167, 296], "environmenterror": 167, "long": [167, 203, 230, 231, 236, 272, 274, 315], "reset": [167, 170, 216, 311], "host": [167, 203], "isinst": [167, 169, 190, 220, 302], "dockeroommfrunn": [167, 203, 241, 242, 243, 246, 296], "oommf_tcl": [168, 259, 296], "though": 169, "exeoommfrunn": [170, 203, 205, 238, 239, 244, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 315, 316, 317, 318, 319], "usr": 170, "share": [170, 323], "miniconda": 170, "env": [170, 245, 259, 280, 295, 304, 321], "unset": [170, 259], "let": [170, 205, 215, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 234, 235, 236, 250, 251, 252, 253, 254, 257, 260, 261, 262, 263, 264, 266, 268, 272, 273, 274, 277, 279, 281, 282, 296, 300, 301, 302, 304, 308, 311, 315, 317, 318, 319, 320], "overwrit": [170, 259, 289], "meta": [173, 285, 314, 323, 324], "build": [176, 209, 217, 221, 225, 254, 301, 324], "make": [176, 217, 218, 222, 230, 231, 236, 237, 241, 242, 243, 245, 246, 250, 251, 260, 262, 263, 266, 268, 278, 279, 290, 298, 302, 303, 308, 319, 323, 324], "recommend": [176, 206, 218, 311, 314], "odt": [176, 177, 180, 181, 182, 203, 270, 271, 272, 273, 274, 275, 323], "map": [176, 222, 239, 240, 242, 243], "ut": [176, 177, 178, 270, 272, 273, 274, 275], "odtfil": [176, 177, 180, 181, 182, 270, 271, 272, 274, 275], "file1": [176, 177, 180, 181, 182, 233, 273], "merg": [176, 286], "xmax": [176, 244, 270, 273], "odtfile1": [176, 273], "odtfile2": [176, 273], "file2": [176, 182, 233, 270, 272, 273, 274, 275], "table1": [176, 273], "table2": [176, 273], "merged_t": [176, 273], "picosecond": [176, 274, 275], "24": [176, 203, 205, 216, 218, 220, 223, 225, 226, 245, 247, 248, 252, 253, 270, 273, 283, 290, 301, 311, 320, 321], "999": 176, "39": [176, 215, 217, 218, 220, 223, 225, 227, 230, 231, 234, 235, 236, 247, 250, 251, 252, 253, 254, 255, 256, 259, 269, 270, 273, 274, 279, 280, 281, 282, 283, 291, 293, 296, 301, 302, 311, 321], "99": [176, 271], "file3": [176, 181, 233], "fuction": [176, 294], "new_tabl": 176, "shorter": [176, 180, 182, 311, 319, 320], "hysteresis1": 176, "irfft": [176, 271], "fast": [176, 237], "file5": 176, "ifft_tabl": [176, 271], "rfft": [176, 271], "nanosecond": [176, 311], "fft_tabl": [176, 271], "uu": [180, 181, 182, 185, 188, 200, 201, 238, 239, 240, 242, 243, 244, 246, 277, 283], "across": [183, 203, 240], "ubermag": [183, 187, 203, 204, 205, 206, 209, 214, 216, 217, 218, 220, 227, 238, 239, 240, 242, 243, 244, 245, 246, 259, 261, 269, 271, 280, 288, 296, 298, 301, 302, 305, 313, 314, 318, 320, 321, 322, 325], "context": [184, 203, 224, 226], "manag": [184, 203, 324], "vmin": [185, 242, 243, 277], "vmax": [185, 242, 243, 277], "loop": [185, 226, 228, 238, 248, 277, 289], "copi": 186, "docstr": [186, 321], "__init__": [186, 190, 191, 192, 193, 194, 195, 196, 197, 198, 218, 276, 278, 279, 281, 282], "squar": [186, 205, 216, 278, 299, 321], "__doc__": [186, 279], "package_level": [187, 280], "log": [187, 203, 287, 321], "logger": [187, 280], "fine": [187, 248, 280, 290], "grain": [187, 203, 280], "subpackag": [187, 203, 206, 280, 285, 313, 314, 323, 324], "debug": [187, 280], "ubermagutil": [190, 191, 192, 193, 194, 195, 196, 197, 203, 209, 238, 239, 240, 242, 243, 244, 246, 250, 251, 253, 276, 277, 279, 280, 281, 282, 283, 323, 324], "typesystem": [190, 191, 192, 193, 194, 195, 196, 197, 250, 251, 253, 276, 281, 282, 287, 323, 325], "__set__": [190, 191, 192, 193, 194, 195, 196, 197], "instanti": [190, 215, 250, 251, 278, 281, 282], "never": [190, 259, 278], "positiveint": 190, "super": 190, "myattribut": [190, 191, 192, 193, 194, 195, 196, 197], "decoratedclass": [190, 191, 192, 193, 194, 195, 196, 197, 198, 281], "dc": [190, 191, 192, 193, 194, 195, 196, 197, 198, 210, 281], "beed": 190, "affect": [190, 191, 192, 193, 194, 197, 215, 248, 281, 318], "__delete__": 190, "nikola": [190, 192, 196, 198, 276, 278], "tesla": [190, 192, 196, 198, 276, 278], "del": [190, 278], "john": [190, 191, 192, 193, 194, 195, 196, 197], "jane": [190, 191, 192, 193, 194, 195, 196, 197], "descriptor": [191, 192, 193, 194, 195, 196, 197, 198, 250, 251, 253, 276, 287, 323], "key_descriptor": 191, "value_descriptor": 191, "allow_empti": 191, "prioriti": [191, 193, 194, 197], "inherit": [191, 192, 193, 194, 195, 196, 197, 279], "identifi": [192, 235, 302, 305, 319], "allowed_char": 192, "split": 192, "object_nam": 192, "newnam": 192, "123newnam": 192, "describ": [193, 216, 218, 224, 245, 323], "abc": [193, 278], "expected_typ": [194, 196, 197, 198, 276, 278], "subset": [194, 197, 253, 278], "neither": [194, 197, 260, 266], "nor": [194, 197, 260, 266], "sample_set": [195, 278], "unpack": [195, 226, 278, 320], "yx": [195, 311], "zyyyyx": 195, "allow_non": 196, "mihajlo": [196, 198, 281], "pupin": [196, 198, 281], "component_typ": 197, "impos": [198, 250, 251, 281, 282, 287], "si": [199, 200, 201, 230, 231, 234, 236, 274, 287], "si_multipli": [200, 283], "largest": [200, 283], "500e": [200, 201, 290, 311, 315], "5000e": 200, "microscal": 201, "picoscal": 201, "si_max_multipli": [201, 239, 283], "furthermor": [203, 216, 218, 248, 254], "reorganis": 203, "invis": 203, "io": [203, 322], "158": [203, 280], "163": 203, "getitem": 203, "116": [203, 302], "mpl_subregion": [203, 230], "replac": [203, 214, 239, 314, 319, 324, 325], "164": 203, "improv": [203, 217, 311, 325], "194": [203, 280], "greatli": [203, 322], "render": [203, 237, 323], "avoid": [203, 216, 224, 239, 292, 324], "problem": [203, 217, 288, 311, 322, 323], "slow": 203, "might": [203, 206, 216, 314], "commit": 203, "4a8fca4": 203, "159": [203, 280], "rewrit": 203, "consumpt": 203, "roughli": 203, "had": [203, 298], "peak": [203, 242, 243], "33": [203, 205, 216, 218, 220, 223, 247, 253, 270, 273, 301, 302, 311, 321], "latex": [203, 252, 253], "landau": [203, 205, 290, 317], "lifshitz": [203, 205, 290, 317], "gilbert": [203, 205, 252, 271, 290, 291, 292, 311, 315, 316, 317, 319], "mumax3c": [203, 207, 209, 323, 324], "mumax": [203, 207, 209, 270, 324], "140": 203, "26": [203, 216, 218, 220, 223, 226, 245, 247, 248, 252, 253, 270, 273, 301, 311, 320, 321], "jupyt": [203, 204, 217, 218, 234, 313, 319, 321, 322, 323, 324], "dynacm": 203, "104": 203, "sent": 203, "subprocess": 203, "don": [203, 218, 220], "rescal": 203, "149": [203, 242, 323], "mag2exp": [203, 209, 222, 238, 239, 240, 242, 243, 244, 246, 323], "previous": [203, 220, 226, 278, 298, 299, 303, 324], "46": [203, 218, 220, 253, 292, 311, 321], "overhead": 203, "temporari": 203, "cover": [203, 230, 288], "2de6360": 203, "despit": [203, 216], "153": [203, 299], "stop": [203, 311], "keyboardinterrupt": 203, "103": 203, "upon": 203, "complet": [203, 290, 301, 324], "interrupt": 203, "counter": 203, "openh264": 203, "146": 203, "speedup": 203, "135": 203, "stabil": 203, "inaccuraci": [203, 222], "introduc": [203, 206, 222, 230, 292, 310, 313, 321], "refactor": [203, 325], "133": 203, "overlap": [203, 218, 230, 235], "tick": 203, "dealt": 203, "easili": [203, 222, 240, 245], "fashion": [203, 323], "134": 203, "textual": 203, "isosurfac": 203, "huge": 203, "200": [203, 216, 239, 240, 264, 265, 270, 271, 280, 282, 290, 301, 310, 311, 316, 317], "129": [203, 270], "mathemat": [203, 206, 215, 323], "141": 203, "144": 203, "18": [203, 205, 215, 216, 218, 220, 222, 223, 224, 225, 226, 230, 245, 246, 247, 248, 252, 253, 260, 261, 263, 264, 265, 266, 270, 271, 273, 283, 290, 293, 294, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 318, 319, 320, 321], "drive1": 203, "drive2": 203, "hint": 203, "27": [203, 216, 218, 220, 223, 226, 245, 247, 248, 253, 270, 273, 301, 302, 311, 320, 321], "137": 203, "directiori": 203, "readabl": [203, 319], "writabl": 203, "95": 203, "0a2": [203, 207], "84": 203, "198": [203, 270, 271, 280, 290, 310, 317], "crystallograph": [203, 253, 262, 318], "maco": [203, 272, 314, 324], "linux": [203, 259, 272, 296, 314, 324], "ligh": [203, 218], "fieldrot": [203, 241, 246], "105": [203, 310], "datatyp": 203, "114": [203, 302], "118": 203, "significantli": 203, "10_000": 203, "117": 203, "million": 203, "files": 203, "9m": 203, "1730": 203, "63000": 203, "56": [203, 218, 220, 253, 264, 310, 318], "1125": 203, "8m": 203, "1860": 203, "64000": 203, "762": 203, "15m": 203, "4920": 203, "401": 203, "69000": 203, "4510": 203, "represen": 203, "121": 203, "need": [203, 205, 216, 217, 218, 220, 222, 224, 226, 228, 229, 230, 232, 234, 245, 247, 248, 253, 259, 260, 262, 263, 266, 268, 275, 277, 282, 290, 291, 295, 296, 302, 304, 308, 309, 310, 311, 315, 317, 319, 320, 323, 324], "77": [203, 220], "anyth": [203, 323], "summari": [203, 324], "80": [203, 220, 239, 292], "108": 203, "simultan": [203, 259], "106": 203, "broke": 203, "191": 203, "solv": [203, 206, 226, 288, 323], "issu": [203, 204, 321, 322], "unifi": 203, "github": [203, 204, 322, 324], "sync": 203, "switch": [203, 311], "lab": [203, 218, 313, 324], "situat": [203, 216], "generalis": [203, 220, 325], "dmi_cnv": [203, 270], "dmi_d2d": 203, "dmi_cnv_z": [203, 253], "zhangli": [203, 252, 291, 311, 315, 316], "xf_thermheunevolv": 203, "xf_thermspinxferevolv": 203, "setup_log": [203, 280], "colourbar": [203, 218], "twice": [203, 240], "139": 203, "pyenv": 203, "172": [203, 270], "magnetoelast": 203, "syntax": [203, 321], "highli": 204, "welcom": [204, 322, 325], "mani": [204, 218, 220, 228, 234, 238, 265, 305, 319], "skill": 204, "few": [204, 220, 222, 319], "answer": [204, 206, 322], "question": [204, 206, 288, 318, 321, 322, 323], "help": [204, 217, 233, 237, 259, 296, 323, 324], "repositori": [204, 322, 324], "mail": [204, 322, 323], "encount": [204, 295, 304, 322], "reproduc": [204, 305, 323], "pull": [204, 259, 296], "someth": [204, 218], "why": [204, 220, 240], "want": [204, 205, 215, 216, 218, 219, 220, 222, 223, 225, 226, 228, 229, 230, 231, 232, 234, 236, 246, 250, 251, 252, 253, 258, 259, 261, 264, 268, 272, 273, 274, 277, 278, 290, 292, 293, 296, 297, 298, 300, 301, 305, 308, 311, 315, 316, 318, 319, 320, 321, 322, 323, 324], "yourself": 204, "touch": 204, "beforehand": [204, 216], "core": [205, 216, 321], "develop": [205, 322, 325], "abl": [205, 223, 243, 245, 246, 248, 281, 282, 315, 322], "permalloi": [205, 290, 291, 292], "thick": [205, 228, 239, 290, 291, 292, 298, 309, 318, 320], "Its": [205, 215, 223, 230, 231, 236, 260, 262, 263, 266, 268, 285, 308, 318], "ferromagnet": [205, 271], "w_": [205, 260, 262, 263, 266, 268, 318], "pj": [205, 315, 316, 318, 319], "govern": [205, 290, 317], "211": [205, 290, 291, 315, 316, 317], "state": [205, 218, 239, 271, 290, 291, 292, 293, 297, 303, 305, 311, 318, 319], "config": 205, "inlinebackend": 205, "figure_format": 205, "svg": 205, "pd": 205, "max_row": 205, "float_format": 205, "materi": [205, 230, 245, 289, 290, 291, 292, 295, 298, 304, 315, 320, 323], "8e5": [205, 260, 262, 263, 266, 268, 290, 291, 292, 293, 294, 297, 302, 308, 311, 315, 316], "gyromagnet": [205, 271, 290, 291, 311, 315, 316, 317], "vortex_dynam": [205, 248], "omit": [205, 216, 223, 233, 322], "m_init": [205, 289, 295, 296, 304, 316], "place": [205, 261, 306, 313, 321], "investig": [205, 215, 242, 243, 318], "carri": [205, 237, 238, 316, 324], "calul": 205, "mindriv": [205, 207, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 260, 261, 262, 263, 266, 267, 268, 284, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 302, 303, 304, 305, 308, 309, 311, 315, 316, 318, 319], "2022": [205, 207, 238, 239, 244, 247, 248, 259, 261, 264, 265, 267, 280, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 315, 316, 317, 318, 319, 323], "next": [205, 217, 221, 226, 248, 256, 292, 294, 298, 311, 317, 319, 324], "back": [205, 216, 220, 222], "00e": 205, "52e": 205, "35e": [205, 316, 320], "04": [205, 247, 248, 264, 284, 310], "32e": 205, "85e": 205, "36e": 205, "31e": 205, "498": 205, "99e": 205, "90e": 205, "33e": 205, "29e": 205, "77e": 205, "499": 205, "83e": 205, "26e": 205, "idea": [205, 220, 289], "date": [205, 207, 247, 248, 264, 301, 325], "inspect": [205, 217, 223, 261, 290, 309, 317, 318, 320], "viridi": 205, "wind": 205, "iint": 205, "400369334831906": 205, "wing": 205, "commonli": [205, 240, 311], "naiv": 205, "5005803208541971": 205, "17": [205, 207, 215, 216, 218, 220, 222, 223, 224, 225, 226, 230, 234, 240, 245, 247, 248, 252, 253, 260, 263, 264, 266, 267, 268, 273, 289, 290, 295, 298, 301, 308, 310, 311, 315, 316, 317, 318, 319, 320, 321], "tutori": [206, 218, 222, 225, 226, 234, 236, 238, 239, 241, 244, 246, 254, 256, 259, 264, 265, 272, 284, 288, 289, 293, 295, 296, 299, 301, 303, 304, 305, 307, 308, 310, 313, 314, 315, 317, 318, 319, 321], "concept": [206, 209, 288, 311, 313], "technic": [206, 209, 288, 323], "api": [206, 220, 223, 230, 231, 236, 237, 254, 274, 288, 323], "faq": 206, "short": [206, 248, 252, 253, 318, 324], "difficult": [206, 217, 242, 243, 248], "summaris": [207, 247, 301], "abbrevi": 207, "partli": 207, "Not": [207, 218], "bulk": 207, "rkky": [207, 288], "relax": [207, 238, 239, 240, 241, 242, 243, 244, 246, 290, 291, 294, 295, 296, 297, 300, 301, 304, 305, 309, 311, 315, 316, 318, 319], "relaxdriv": [207, 247, 248], "evolut": [207, 271, 290, 292, 311, 317], "releas": [207, 209, 227, 322, 324], "66": [207, 220], "0b0": 207, "65": [207, 218, 220, 271, 317], "07": [207, 220, 226, 227, 228, 229, 230, 234, 235, 245, 247, 248, 290, 301, 320], "0a3": [207, 280], "64": [207, 218, 220, 301, 324], "63": [207, 218, 220, 269], "29": [207, 216, 218, 220, 223, 226, 245, 247, 248, 253, 259, 270, 273, 290, 301, 311, 320, 321], "62": [207, 218, 220, 301], "61": [207, 218, 220, 270], "2021": [207, 241, 242, 243, 246, 260, 262, 263, 266, 268, 323], "20a2": 207, "51": [207, 218, 220, 253, 263, 271, 280, 299, 315, 316, 317, 321], "0a1": 207, "featur": [209, 216, 218, 222, 239, 242, 243, 267, 288, 311, 322], "gentl": [209, 288, 323], "introduct": [209, 222, 288, 314, 323], "compat": [209, 214, 222], "page": [209, 311, 323], "overview": 209, "licens": 209, "under": [209, 239, 240, 246, 271, 323, 324], "latest": [209, 324], "coverag": 209, "binder": [209, 323], "magnetometri": [210, 245], "top": [214, 216, 230, 231, 236, 240, 305, 309], "your": [214, 216, 230, 258, 296, 311, 314, 323, 324], "everyth": [214, 298, 321, 324], "main": [215, 218, 221, 223, 226, 231, 233, 236, 247, 252, 253, 254, 256, 285, 296, 311, 320, 325], "achiev": [215, 219, 222, 262, 263, 273, 278, 282, 289, 294, 322], "simpli": [215, 218, 226, 228, 230, 240, 245, 289], "far": [215, 218, 264, 301, 318, 322], "serv": [215, 292], "distinguish": 215, "lost": [215, 222], "librari": [216, 217, 218], "pyvista": [216, 217, 218], "studi": [216, 317, 318, 323], "elipt": 216, "cylind": [216, 217, 218, 221, 295, 304], "vortex": [216, 218, 248, 289, 291, 323], "swap": [216, 218], "sign": [216, 224, 309, 322], "web": 216, "session": [216, 298, 319, 323], "colourmap": 216, "symmetri": [216, 241, 292, 295, 304], "explain": [216, 222, 311, 314, 317, 322, 324], "discuss": [216, 220, 222, 226, 234], "come": [216, 238, 324], "plasma": [216, 218, 248], "rare": [216, 229], "clabel": 216, "our": [216, 220, 223, 226, 227, 229, 230, 231, 234, 235, 236, 240, 241, 244, 246, 248, 259, 261, 272, 274, 281, 294, 296, 298, 302, 303, 305, 309, 310, 311, 313, 314, 317, 318, 320, 322, 324], "accomplish": 216, "potenti": [216, 240, 311], "care": [216, 222, 223, 322], "know": [216, 226, 231, 236, 277, 323, 324], "field_2d": 216, "confus": [216, 321], "40": [216, 218, 220, 223, 241, 253, 301, 302, 311, 320, 321], "fourierspac": [216, 219, 220, 222, 223, 224, 226, 227, 228, 230, 237, 247, 264], "isplan": [216, 218, 219, 220, 222, 223, 224, 226, 227, 228, 230, 237, 247, 264], "wouldn": 216, "field_4d": [216, 220], "home": [216, 218, 280, 324], "mlang": [216, 218], "repo": [216, 217, 218, 220, 259, 280, 302], "devtool": [216, 217, 218, 220, 259, 280, 302, 324], "367": 216, "userwarn": [216, 218], "coolwarm": [216, 248, 295], "28": [216, 218, 220, 223, 226, 245, 247, 248, 253, 270, 273, 301, 311, 318, 320, 321], "32": [216, 218, 220, 223, 242, 245, 247, 253, 273, 301, 311, 321, 324], "36": [216, 218, 220, 223, 253, 273, 301, 311, 321], "layout": 216, "37": [216, 218, 220, 223, 253, 264, 271, 273, 301, 304, 311, 317, 321], "widget_loc": [216, 248], "bottom": [216, 248, 305, 309], "locat": [216, 318, 320, 324, 325], "bokeh": [216, 248], "38": [216, 218, 220, 223, 253, 264, 267, 273, 301, 311, 321], "scalar_z": 216, "contour_z": 216, "plasma_r": 216, "show_legend": 216, "vector_z": 216, "turbo": [216, 218], "frame_height": 216, "experi": [217, 222, 239, 246, 322], "sure": [217, 236, 250, 251, 279, 303, 319, 324], "googl": 217, "chrome": 217, "sai": [217, 218, 219, 220, 221, 226, 228, 229, 230, 234, 250, 251, 252, 253, 257, 260, 261, 262, 263, 266, 268, 272, 277, 279, 281, 282, 301, 302, 308, 320], "ellipsoid": 217, "cz": [217, 218, 221], "norm_fun": [217, 218, 221, 294], "mous": 217, "0x27ae60": 217, "lt": [217, 218, 220, 223, 226, 228, 237, 247, 248, 259, 260, 262, 263, 266, 268, 280, 291, 302, 311, 321], "gt": [217, 218, 220, 223, 226, 228, 237, 245, 247, 248, 259, 260, 262, 263, 266, 268, 280, 291, 302, 311, 321], "phd": [217, 220, 259, 280], "k3d_field": 217, "233": 217, "k3dfield": 217, "231": 217, "232": 217, "msg": [217, 218, 220, 302], "235": 217, "236": 217, "norm_field": 217, "cascad": 217, "factori": 217, "pleaas": 217, "deactiv": 217, "plese": [217, 257], "plot1": 217, "continuous_upd": [217, 218, 225, 264, 301, 309, 316], "getattr": [217, 218, 297, 302], "firstli": [218, 221, 240, 241, 245, 246, 256, 289, 291, 292, 324], "nanocylind": 218, "diametr": 218, "secondli": [218, 291], "vortex_field": 218, "discertisedfield": 218, "3024": 218, "2992": 218, "2993": 218, "2994": 218, "2995": 218, "2996": 218, "3022": 218, "3023": 218, "mplfield": 218, "mpl_field": 218, "43": [218, 220, 253, 311, 321], "41": [218, 220, 223, 226, 253, 301, 311, 321], "42": [218, 220, 223, 253, 264, 311, 321], "47": [218, 220, 253, 301, 311, 321], "planeaxi": [218, 220, 228], "probabl": [218, 233, 319], "lose": 218, "notic": [218, 237, 315], "decreas": [218, 293, 297, 311], "simplifi": [218, 223, 239, 245, 311, 324], "plane_xi": 218, "plane_yz": 218, "got": [218, 226, 234, 316], "reconstruct": [218, 237, 246], "arround": 218, "asign": 218, "red": [218, 222, 239], "magma": [218, 290], "style": 218, "headwidth": 218, "plane_2d": 218, "606": 218, "491": 218, "492": 218, "493": 218, "603": 218, "604": 218, "605": 218, "607": 218, "_setup_ax": 218, "609": 218, "_setup_multipli": 218, "646": [218, 271, 317], "henc": [218, 222, 237, 239, 240, 242, 244, 311, 312], "demonstr": [218, 222, 227, 229, 245, 247, 248, 254, 259, 267, 272, 274, 288, 293, 299, 302, 305, 311, 318], "sens": [218, 230], "scheme": 218, "m_x": [218, 239, 317], "m_y": [218, 239, 317], "lighness_field": 218, "44": [218, 220, 253, 268, 271, 311, 317, 321], "draw": 218, "separatli": 218, "add_colorwheel": 218, "axeshostax": 218, "widht": 218, "center": [218, 323], "briefli": [218, 311], "respectivli": 218, "mplplot": 218, "48": [218, 220, 253, 301, 310, 321], "49": [218, 220, 253, 321], "Then": [218, 222, 230, 311, 320], "nrow": 218, "ncol": 218, "white": 218, "set_titl": 218, "suptitl": 218, "fontsiz": 218, "xx": [218, 311], "tight_layout": 218, "53": [218, 220, 241, 253, 266, 319, 321], "init_m": 218, "54": [218, 220, 253], "dpi": [218, 239, 244], "spline16": [218, 239, 240, 242, 243, 246], "75": [218, 220, 239, 289], "bfbfbf": 218, "ipython": 218, "57": [218, 220, 239, 253, 264, 289], "58": [218, 220, 253, 260, 271, 289, 317, 323], "correctli": [218, 321], "59": [218, 220, 253], "nbval_ignore_output": [218, 222, 226, 228, 230, 234, 238, 239, 240, 241, 242, 243, 244, 245, 246, 256, 260, 262, 263, 266, 268, 271, 272, 289], "explor": [218, 231, 236, 252, 253, 308, 317, 318, 319], "field_valu": 218, "rememb": [218, 240, 323, 324], "zip": [218, 322, 324], "m_z": [218, 238, 243, 246, 317], "xlabel": [218, 238, 289, 291, 292], "ylabel": [218, 238, 289, 292], "legend": [218, 239, 289], "0x7f3685f9f190": 218, "apart": [219, 270, 324], "7320508075688772": 219, "5773502691896258": 219, "099504938362077": 219, "pyhton": [219, 226], "sphere": [219, 320], "norm_funct": 219, "sphere_field": 219, "625": [220, 223], "1250": 220, "15625": [220, 223], "x_compon": 220, "overrid": 220, "c1": 220, "c2": 220, "c3": 220, "c4": 220, "portion": 220, "mesh4": 220, "although": 220, "dimes": 220, "extact": 220, "resampl": [220, 223, 248], "faster": [220, 298], "That": [220, 278, 321], "cartesian": [220, 234], "intesect": 220, "axis1": [220, 228], "axis2": [220, 228], "5j": 220, "3j": 220, "0j": 220, "982793723247329": 220, "5707963267948966": 220, "later": [220, 228, 230, 231, 236, 259, 260, 262, 263, 266, 268, 308, 319], "1331": 220, "1328": 220, "1329": 220, "1330": 220, "1332": 220, "1333": 220, "1334": 220, "1424": 220, "1359": 220, "1360": 220, "1361": 220, "1362": 220, "1422": 220, "1423": [220, 271, 317], "1102": 220, "1100": 220, "1101": 220, "1103": 220, "1104": 220, "1105": 220, "titl": [220, 323], "accomod": 220, "theori": 220, "behind": 220, "hopefulli": 220, "000000000017728e": 220, "00000000001152e": 220, "000000000000003e": 220, "999999999999996e": 220, "67": 220, "999999999999999e": [220, 273], "68": 220, "9999999999999975e": 220, "69": 220, "8999999999999995e": 220, "y_": 220, "70": [220, 245], "71": [220, 244], "integrand": 220, "mind": [220, 319], "72": [220, 291], "73": 220, "skyrmion": [220, 241, 288, 296, 298, 304, 316, 323], "dxdy": [220, 304], "74": 220, "Or": 220, "76": 220, "78": [220, 301], "79": 220, "2246467991473532e": 220, "81": [220, 301], "141592653589793": [220, 321], "718281828459045": 220, "83": 220, "nanospher": 221, "vtkfilenam": 221, "my_vtk_fil": 221, "omffilenam": 221, "my_omf_fil": 221, "ascii": 221, "hdf5filenam": 221, "read_field": 221, "previouli": [221, 223, 323], "periodict": 222, "predominantli": 222, "own": [222, 323], "mayb": 222, "systemat": 222, "accumult": 222, "special": [222, 223, 259, 296], "handl": [222, 237, 245, 311], "rotation_quaternion": 222, "ident": [222, 303], "transfom": 222, "from_mrp": 222, "slightli": [222, 292], "000000000000007": 222, "000000000000004": 222, "purpos": [222, 232, 234, 254, 275, 285, 321], "jag": 222, "maximis": 222, "mention": [222, 303, 311], "illustr": [222, 315], "rfield": 222, "stripe": 222, "inner": 222, "subsect": 222, "procc": 222, "fulli": [222, 290], "enclos": [222, 322], "quadrat": 222, "grow": [222, 278], "accumul": [222, 321], "clearer": 222, "princibl": 222, "theoret": 222, "known": [222, 239, 259, 296], "nx": 222, "ny": 222, "nz": 222, "resiz": 222, "round": [222, 321], "aproxim": 222, "linearli": 222, "satisfi": [223, 245, 282], "criteria": 223, "discertis": 223, "my_value_funct": 223, "__main__": [223, 248], "sourc": [223, 324], "getsourc": 223, "violent": 223, "vector_value_funct": 223, "emploi": [223, 289, 292], "regions_funct": 223, "And": [223, 295, 305, 311, 315], "region_valu": 223, "explicit": [223, 296, 299], "new_mesh": 223, "new_field": 223, "coord_field": 223, "specialis": 224, "convenic": 224, "usecas": 224, "focus": 224, "triangul": 224, "contribut": [224, 242, 318, 322, 324, 325], "triangl": 224, "everywher": 224, "useful": [224, 230], "cancel": 224, "angles_x": 224, "neigbouring_cell_angl": 224, "angles_i": 224, "treat": [224, 320], "angle_max": 224, "max_neigbouring_cell_angl": 224, "threashold": 224, "connect": 224, "count_large_cell_angle_region": 224, "180": 224, "000000e": [225, 247, 248, 264, 270, 271, 273, 290, 299, 310, 317], "00": [225, 264, 271], "982466": 225, "610991": 225, "103417": 225, "537999": 225, "155126": 225, "306999": 225, "041667e": 225, "958333e": 225, "978240": 225, "074002": 225, "115087": 225, "067530": 225, "172630": 225, "601295": 225, "083333e": 225, "916667e": 225, "972305": 225, "585328": 225, "129640": 225, "744710": 225, "194461": 225, "117066": 225, "125000e": 225, "875000e": 225, "963624": 225, "111659": 225, "148249": 225, "863332": 225, "222374": 225, "794998": 225, "166667e": 225, "833333e": 225, "950255": 225, "268139": 225, "172773": 225, "685116": 225, "259160": 225, "527674": 225, "208333e": 225, "791667e": 225, "928279": 225, "121633": 225, "206284": 225, "249252": 225, "309426": 225, "373878": 225, "250000e": [225, 310], "750000e": 225, "889000": 225, "889001": 225, "254000": 225, "381000": 225, "381001": 225, "291667e": 225, "708333e": 225, "811107": 225, "105654": 225, "324442": 225, "842262": 225, "486664": 225, "263392": 225, "333333e": 225, "666667e": 225, "639602": 225, "149067": 225, "426401": 225, "432711": 225, "375000e": 225, "267261": 225, "241912": 225, "534522": 225, "483825": 225, "801783": 225, "725737": 225, "145833e": 225, "458333e": 225, "500000e": [225, 247, 248, 271, 273, 310, 317], "354167e": 225, "541667e": 225, "583333e": 225, "562500e": 225, "625000e": 225, "770833e": 225, "979167e": 225, "985578": 225, "834374": 225, "93864": 225, "650893": 225, "140796": 225, "976339": 225, "187500e": 225, "987934": 225, "593051": 225, "85907": 225, "355918": 225, "128861": 225, "033876": 225, "989759": 225, "478081": 225, "79180": 225, "758246": 225, "118771": 225, "137370": 225, "395833e": 225, "991201": 225, "182589": 225, "73422": 225, "309821": 225, "110133": 225, "464732": 225, "992359": 225, "570702": 225, "68438": 225, "591083": 225, "102657": 225, "886624": 225, "xval": 225, "yval": 225, "zval": 225, "marker": [225, 230, 231, 236, 274, 301, 318], "deal": 226, "chunk": 226, "cube": [226, 241, 289, 293, 294, 297, 319], "previou": [226, 236, 259, 263, 266, 272, 315, 319, 320], "piec": [226, 273], "decid": [226, 259], "exactli": [226, 277, 298], "whatsoev": 226, "saw": [226, 298], "lenght": [226, 231, 274], "conclud": 226, "0x7f8d19a7df90": 226, "fifth": 226, "thing": [226, 250, 251, 254, 273, 305, 319], "75e": [226, 247], "0000000000000004e": [226, 228], "6e": [226, 228, 238, 239, 240, 241, 242, 243, 245, 246, 283, 290, 295, 296, 304, 310], "71e": 226, "000000000000001e": [226, 228], "8e": [226, 228, 247, 291, 318], "mesh_sam": 226, "mesh_differ": 226, "earlier": [226, 234, 317, 319], "boudari": 227, "neigbour": 227, "neghbour": 227, "At": [227, 271, 319], "futur": [227, 325], "0x7fa939edc040": 228, "2000000000000002e": 228, "4000000000000001e": 228, "8000000000000002e": 228, "usual": [228, 231, 233, 234, 236, 240, 241, 253, 261, 264, 291, 293, 297, 301, 311], "layer": [228, 303, 305, 309], "disctionari": 229, "05e": 229, "4999999999999996e": 229, "life": 230, "dash": [230, 231, 236, 301], "bottom_subregion": 230, "top_subregion": 230, "lx": [230, 290, 291, 292], "ly": [230, 290, 291, 292], "lz": [230, 290, 291, 292], "bottom_region": 230, "top_region": 230, "lot": [230, 278], "freedom": [230, 324], "regard": 230, "800": [230, 290, 301], "400": [230, 270, 271, 301, 311, 315, 316, 317], "k3d_subregion": 230, "rgb": [230, 231, 236], "hex": [230, 231, 236], "onlin": [230, 231, 236, 314, 323], "cycl": 230, "f33f00": 230, "0000cf": 230, "prefix": [230, 231, 234, 236, 274, 287], "micro": [230, 231, 236, 274, 283], "mu": [230, 231, 236, 245], "_as_gen": [230, 231, 236, 274], "__": [230, 231, 236, 237, 274], "customis": [230, 231, 236, 272, 274], "ourselv": [230, 231, 236, 274, 319], "set_xlabel": [230, 231, 236, 244, 274], "set_ylabel": [230, 231, 236, 244, 274], "set_zlabel": [230, 231, 236], "alltogeth": 230, "80e": 230, "12345": 230, "54321": 230, "trick": [231, 236], "matploltlib": [231, 236], "good": [231, 236, 237, 311], "proport": [231, 236], "thinner": [231, 236, 239], "impress": [231, 236], "disadvatag": [231, 236], "zoom": [231, 236], "contol": [231, 236], "pair": [231, 311, 313], "9400d3": [231, 236], "0000ff": 231, "754321": 231, "123456": 231, "opac": [231, 236], "slide": 232, "picomet": 232, "menu": 232, "radio": 232, "button": 232, "python3": [233, 245, 295, 304, 321, 324], "messag": [233, 280], "exit": [233, 239], "simplest": [233, 239, 317, 318], "fie": 233, "infil": 233, "simplic": [234, 240], "alia": [234, 235, 236, 321], "choic": [234, 292], "obvious": 234, "999999999999998e": 234, "lazi": 234, "think": 234, "807246802450429e": 234, "9394886042542286e": 234, "683419701051645e": 234, "unlik": [234, 262, 263], "parenthesi": 234, "region_sam": 234, "region_differ": 234, "pretier": 234, "thought": 236, "654321": 236, "dev": [237, 324], "en": 237, "multi": [237, 322], "visual": 237, "candid": 237, "metadata": 237, "utilis": 237, "x27": [237, 247], "2z": 237, "2comp": 237, "0arrai": 237, "float642": [237, 247], "09unit": 237, "marrai": [237, 247], "nonecel": 237, "prove": 237, "xarray_2": 237, "field_new": 237, "xdr": 237, "09arrai": 237, "field_xdr": 237, "lastli": 237, "advis": 237, "softwar": [238, 239, 244, 322], "magnetomet": 238, "varieti": [238, 245], "vibrat": 238, "superconduct": 238, "quantum": [238, 239], "interfer": [238, 239, 246], "devic": 238, "abil": [238, 242, 246], "congruent": [238, 242, 244], "inlin": [238, 239, 243, 246, 322], "seed": [238, 239, 240, 242, 243, 244, 246, 302, 303, 305, 311], "150e": [238, 239, 243, 244, 246, 309, 316], "m_fun": [238, 239, 240, 242, 243, 246, 260, 262, 263, 266, 268, 302, 308], "rand": [238, 239, 240, 242, 243, 246], "minim": [238, 239, 240, 241, 242, 243, 244, 246, 292, 295, 304, 314, 318], "net": 238, "3518": 238, "084594232684": 238, "8389": 238, "317283463413": 238, "25604": 238, "572753826702": 238, "mimic": 238, "procedur": 238, "mag_arr": 238, "h_arr": 238, "linspac": [238, 244, 289], "recov": 239, "incid": [239, 242, 246], "particl": [239, 289], "deflect": [239, 241], "specimen": 239, "travel": 239, "excess": 239, "defici": 239, "blank": 239, "longer": [239, 242, 247], "variat": [239, 292], "wire": 239, "biprism": 239, "bring": 239, "worth": 239, "veloc": [239, 252, 291, 311, 315, 316], "magntic": [239, 240, 242], "51e6": [239, 246, 295, 296], "2e5": [239, 240, 241, 242, 243, 246, 295, 296], "ref": [239, 243, 246, 289, 290, 291, 292, 321], "beleggia": 239, "2010": 239, "singular": 239, "view": [239, 241, 242, 243, 246, 301, 311], "grai": [239, 242, 243], "quick_plot": [239, 240, 241, 246], "design": [239, 240, 246, 323], "textur": [239, 240, 241, 242, 243, 246], "intermediari": [239, 240, 246], "hood": [239, 240, 246], "theme": [239, 240, 246], "ltem_phas": 239, "circl": 239, "high": [239, 242, 243, 244], "obliter": 239, "signific": 239, "NOT": [239, 242, 243], "angular": [239, 242, 243], "neq": [239, 242, 243, 245], "patch": 239, "ellips": 239, "centre_region": 239, "30e6": 239, "add_patch": 239, "edgecolor": 239, "facecolor": 239, "frameon": 239, "ltem_ft_phas": 239, "free": [239, 300, 311, 323], "bonevich": 239, "1994": 239, "electromagnet": 239, "featureless": 239, "ltem_defocus_imag": 239, "ltem_defocu": [239, 241], "rule": [239, 282], "thumb": 239, "rm": [239, 244], "1f": 239, "tanas": 239, "2009": 239, "ltem_integrated_mfd": 239, "resembl": 239, "examin": [240, 242, 271], "role": 240, "flat": 240, "dual": 240, "raster": 240, "scan": 240, "topographi": 240, "tap": 240, "omega_0": 240, "kazakova": 240, "lift": 240, "z_0": 240, "probe": 240, "characteris": 240, "ten": 240, "nanometr": 240, "diment": [240, 242], "put": [240, 272, 303], "m_field": 240, "harmon": 240, "motion": [240, 311, 313], "sub_region": 240, "phase_shift_2": 240, "phase_shift_3": 240, "recreat": [240, 242], "convolv": 240, "conv_phas": 240, "gaussian_filt": 240, "mfm_phase_shift": 240, "boundarynorm": 240, "sub_phas": 240, "conv_mag2exp": 240, "ncolor": 240, "256": 240, "n\u00e9el": 241, "magentis": [241, 319], "knowledg": [241, 246], "topic": [241, 246], "rho_func": 241, "s_size": 241, "differnt": 241, "phi_func": 241, "n_top": 241, "m_fun_2": 241, "theta": [241, 321], "arctan2": 241, "rho": 241, "box": [241, 294], "rather": 241, "overal": 241, "break": [241, 292, 295, 304], "thu": [241, 292], "reciproc": [242, 243], "mesoscop": [242, 243], "atom": [242, 245], "impact": 242, "approxim": [242, 243, 246], "m\u00fchlbauer": 242, "predict": 242, "160e": 242, "logarithm": [242, 243], "reveal": [242, 243, 244], "diffract": [242, 243], "lognorm": [242, 243], "sans_region": 242, "40e6": [242, 243], "arb": 242, "2i": 242, "asymmetri": 242, "circularli": [243, 246], "absorb": [243, 246], "tune": [243, 246, 290], "absorpt": [243, 246], "van": 243, "der": 243, "laan": 243, "300e": 243, "145": 243, "1e40": 243, "saxs_region": 243, "characterist": [244, 290, 294], "aris": 244, "rewritten": 244, "65e5": 244, "h_mag": 244, "38e6": 244, "78e": [244, 298, 309, 318], "18e6": 244, "3803181647963356e": 244, "1670664434859646e": 244, "4494604241106688e": 244, "torque_val_x": 244, "full_lik": 244, "torque_val_i": 244, "torque_val_z": 244, "enumer": 244, "hline": 244, "xmin": 244, "set_xlim": 244, "mixtur": 245, "convin": 245, "astropi": 245, "aim": [245, 318], "astrophys": 245, "commun": [245, 316, 322, 323, 324], "pip": [245, 314, 324], "sake": 245, "miniconda3": [245, 259, 280, 295, 304, 321], "ubermagdev": [245, 259, 280, 295, 304, 321], "lib": [245, 295, 304, 321], "site": [245, 289, 290, 291, 295, 304, 321], "pyerfa": 245, "initalis": 245, "gauss": 245, "throughout": [245, 248], "field2": 245, "magnetic_mo": 245, "erg": 245, "detach": 245, "numerv": 245, "t_k": 245, "temperature_energi": 245, "7296934": 245, "induct": 245, "strength": [245, 318], "induction_field": 245, "mu0": [245, 249, 289, 290, 293, 297, 298, 301], "7957": 245, "7472": 245, "hamiltonian": [245, 252, 253, 256, 260, 262, 263, 266, 268, 290, 291, 292, 293, 295, 304, 317, 318], "lead": 245, "cal": 245, "ex": [245, 259, 289, 296, 318, 324], "j_": 245, "_j": 245, "lvert": 245, "rvert": 245, "normais": 245, "curi": 245, "3k_": 245, "garanin": 245, "1996": 245, "tc_to_j": 245, "tc": 245, "t_c": 245, "fcc": 245, "808": 245, "271810024752475e": 245, "correl": 245, "zjl": 245, "12v": 245, "heisenberg": 245, "neighbor": 245, "crystal": 245, "j_to_a": 245, "84e": 245, "24e": 245, "922285495270508e": 245, "tc_to_a": 245, "922285495270509e": 245, "zdl": 245, "d_to_d": 245, "01e": 245, "137678571428571e": 245, "helic": 245, "p_to_d": 245, "d_to_p": 245, "jm": [245, 260, 262, 263, 266], "7699111843077517e": 245, "converst": 245, "mu_b": 245, "formula": 245, "ms_mub_to_am": 245, "24375e": 245, "33066": 245, "10835716991": 245, "ms_to_mu": 245, "6e5": 245, "3440000000000002e": 245, "weight": [245, 321], "k_to_k": 245, "fege": 245, "ge": [245, 250, 251], "fe": 245, "6995": 245, "\u00e5": 245, "881": 245, "wilhelm": 245, "2007": 245, "yamada": 245, "2003": 245, "278": 245, "lebech": 245, "1989": 245, "yu": 245, "2011": [245, 246], "6995e": 245, "881e": 245, "ms_orig": 245, "70e": 245, "594746713121875e": 245, "382433": 245, "88973569183": 245, "644": 245, "76621650209023e": 245, "000855629185622006": 245, "coher": 246, "slit": 246, "hologram": 246, "detector": 246, "duckworth": 246, "turnbul": 246, "holo": 246, "rdbu": 246, "meter": 246, "holo2": 246, "x_ray_holographi": 246, "With": [247, 290, 321, 323], "creata": [247, 248], "250": [247, 248, 282], "setopt": 247, "basenam": 247, "scalar_output_format": 247, "12g": 247, "scalar_field_output_format": 247, "vector_field_output_format": 247, "boxatla": 247, "main_atla": 247, "oxs_boxatla": 247, "xrang": 247, "yrang": 247, "zrang": 247, "rectangularmesh": 247, "oxs_rectangularmesh": 247, "cellsiz": [247, 289], "atla": 247, "uniformexchang": [247, 270], "oxs_uniformexchang": 247, "fixedzeeman": 247, "oxs_fixedzeeman": 247, "oxs_filevectorfield": 247, "m0_norm": 247, "oxs_vecmagscalarfield": 247, "cgevolv": 247, "destin": 247, "mmarchiv": [247, 260, 262, 263, 266, 268], "datat": [247, 290, 317], "drive_select": 247, "50067876e": 247, "98022376e": 247, "73831082e": 247, "41540277e": 247, "81017399e": 247, "00000000e": 247, "mindriverxarrai": 247, "14x": 247, "20y": 247, "10z": 247, "4comp": 247, "501e": 247, "98e": 247, "738e": 247, "415e": 247, "81e": 247, "05arrai": 247, "08unit": 247, "float640": 247, "0unit": 247, "6date": 247, "11time": 247, "17driver": 247, "side": 247, "290": 247, "27584": 247, "49540021": 247, "658579": 247, "77501927": 247, "453334": 247, "06616874": 247, "797212": 247, "875": 247, "51317": 247, "65625": 247, "42639": 247, "36328125": 247, "423e": 247, "445e": 247, "466e": 247, "timedriverxarrai": 247, "290x": 247, "758e": 247, "586e": 247, "533e": 247, "972e": 247, "132e": 247, "264e": 247, "04arrai": 247, "float641": 247, "10unit": 247, "sarrai": 247, "423237e": 247, "444648e": 247, "466095e": 247, "logo": 248, "time_dr": 248, "colorlimit": 248, "800000": 248, "full_time_dr": 248, "resulut": 248, "coarser": 248, "seri": 248, "notat": 248, "5th": 248, "familiar": [248, 313], "afterward": [248, 311], "time_drive_tcd_1": 248, "repeat": [248, 311, 317], "select_plan": 248, "time_drive_tcd_2": 248, "funtion": 248, "explanatori": 248, "hmin": [248, 301], "hmax": [248, 301], "795774": [248, 301], "7154594767": [248, 301], "stage": [248, 261, 264, 270, 271, 291, 299, 301, 302, 310, 317], "fundament": 249, "me": 249, "kb": 249, "mub": 249, "specialdynam": 250, "xi": 250, "sd": 250, "_reprlatex": [250, 251], "dmdt": 250, "specialenergi": 251, "se": 251, "valid_nam": 251, "211e5": [252, 271, 290, 291, 292, 311, 315, 316, 317, 319], "221100": 252, "adiabat": [252, 291, 311, 315, 316], "mydynamicsterm": 252, "nydynamicsterm": 252, "arbitratri": 253, "ghz": [253, 292, 306, 307, 311], "zeeman_sin": 253, "1000000000": [253, 283], "zeeman_sinc": 253, "100000": [253, 302], "1e3": [253, 266, 293, 297], "dm": [253, 262, 270, 318], "mandatori": [253, 320], "dmi_cnv_x": 253, "dmi_cnv_i": 253, "dmi_t": 253, "dmi_d2d_x": 253, "dmi_d2d_i": 253, "dmi_d2d_z": 253, "cubicanisotropi": [253, 260], "sigma_": 253, "subregion1": [253, 308], "subregion2": [253, 308], "0001": 253, "dzyaloshinkii": [253, 311, 315, 316, 324], "myenergi": 253, "myexchang": 253, "Their": 254, "mydriv": 254, "_x": 254, "arg1": 254, "arg2": 254, "_allowed_kwarg": 254, "rase": 254, "arg3": 254, "externaldriv": 254, "zeeman1": [255, 302], "zeeman2": [255, 302], "my_zeeman_term": 255, "entiti": 256, "discretisationfield": 256, "mysystem": 256, "times10": [257, 260, 262, 263, 266, 268, 302, 308, 318], "3e5": 257, "colon": [257, 303], "ot": [257, 264], "trivial": 257, "manner": 257, "testdmi": 258, "testexchang": 258, "conftest": 258, "fixtur": 258, "pytest": 258, "member": 259, "cloud": [259, 296], "destroi": [259, 296], "happen": [259, 261, 296, 317], "background": [259, 261, 271, 296], "assist": [259, 296], "desktop": [259, 296], "delai": [259, 296], "tcloommfrunn": [259, 296], "couldn": [259, 296], "tclsh": 259, "boxsi": [259, 280], "fg": [259, 280], "exitondon": [259, 280], "stderr": [259, 280], "432": 259, "429": 259, "setter": [259, 278], "430": 259, "431": 259, "433": 259, "_runner": 259, "expectedli": 259, "paragraph": 259, "choosen": [259, 311], "search": 259, "sucessfulli": 259, "tend": [260, 262, 263, 266, 268, 318], "antiparallel": [260, 266, 302, 318], "chain": [260, 262, 263, 266, 268, 302, 308, 310, 318], "cubicanisotropy_constant_k_u": 260, "made": [260, 262, 263, 266, 268, 271, 308], "cubicanisotropy_dict_k": 260, "spatailli": [260, 266], "nbsphinx": [260, 263, 266], "k_fun": 260, "cubicanisotropy_field_u": 260, "organis": 261, "my_simul": 261, "instruct": [261, 314, 324], "my_project": 261, "isdir": 261, "max_mxhxm": [261, 264, 301, 302], "delta_": [261, 264, 270, 271, 290, 299, 301, 302, 310, 317], "bracket_count": [261, 264, 301, 302], "line_min_count": [261, 264, 301, 302], "conjugate_cycle_count": [261, 264, 301, 302], "cycle_count": [261, 264, 301, 302], "cycle_sub_count": [261, 264, 301, 302], "energy_calc_count": [261, 264, 301, 302], "e_zeeman": [261, 264, 271, 290, 307, 310, 317], "stage_iter": [261, 264, 270, 271, 290, 299, 301, 302, 310, 317], "503365e": 261, "785840e": 261, "350143e": 261, "ll": 262, "nv": [262, 318], "dzyaloshinksii": 262, "dmi_constant_d": 262, "orthogon": 262, "dmi_dict_d": 262, "exchange_constant_a": 263, "exchange_dict_a": 263, "allign": 263, "a_fun": 263, "exchange_field_a": 263, "mindriver_step": [264, 265], "relex": 264, "000000": 264, "999996e": 264, "206285e": 264, "000873": 264, "848078e": 264, "400340e": 264, "388277e": 264, "173648": 264, "396926e": 264, "727747e": 264, "327407e": 264, "342020": 264, "660254e": 264, "911504e": 264, "183757e": 264, "500000": 264, "660444e": 264, "885258e": 264, "973754e": 264, "642788": 264, "427876e": 264, "058904e": 264, "703780e": 264, "766044": 264, "197108e": 264, "382038e": 264, "866025": 264, "464669e": 264, "296684e": 264, "957653e": 264, "938062": 264, "420201e": 264, "298938e": 264, "253721e": 264, "939693": 264, "981052e": 264, "354905e": 264, "596679e": 264, "980181": 264, "736482e": 264, "361301e": 264, "395896e": 264, "984808": 264, "305027e": 264, "379550e": 264, "824996e": 264, "998010": 264, "366695e": 264, "382301e": 264, "750291e": 264, "fecault": 264, "creationg": 264, "my_plot": [264, 301, 309, 311, 315], "uniaxialanisotropy_constant_k_u": 266, "uniaxialanisotropy_dict_k": 266, "u_fun": 266, "uniaxialanisotropy_field_u": 266, "uniaxialanisotropy_higher_ord": 266, "screen": [267, 280], "sole": 267, "cleanup": 267, "zeeman_constant_h": [268, 308], "zeeman_dict_h": [268, 308], "h_fun": [268, 308], "zeeman_field_h": [268, 308], "__version__": [269, 322], "e_calc_count": [270, 271, 290, 299, 310, 317], "max_dmdt": [270, 299], "average_u": [270, 311], "e_exchang": [270, 290, 301, 310], "max_spin_ang_exchang": [270, 290, 310], "stage_max_spin_ang_exchang": [270, 290, 310], "run_max_spin_ang_exchang": [270, 290, 310], "e_dmi": 270, "e_uniaxialanisotropi": 270, "last_time_step": [270, 271, 290, 299, 310, 317], "138757e": 270, "5105": 270, "786662": 270, "131548e": 270, "234439e": 270, "819720e": 270, "981919": 270, "791404e": 270, "955566e": 270, "004356": 270, "001711": 270, "779309": 270, "146802e": 270, "123365e": 270, "92": 270, "5393": 270, "820357": 270, "881778e": 270, "714936e": 270, "859070e": 270, "999114": 270, "795166e": 270, "969222e": 270, "007399": 270, "002527": 270, "779212": 270, "481817e": 270, "101629e": 270, "5478": 270, "105937": 270, "410525e": 270, "525909e": 270, "908188e": 270, "839540": 270, "800156e": 270, "991741e": 270, "010058": 270, "002596": 270, "779103": 270, "371456e": 270, "075651e": 270, "5775": 270, "596117": 270, "750961e": 270, "026333e": 270, "963184e": 270, "523018": 270, "806035e": 270, "021517e": 270, "012243": 270, "002078": 270, "779037": 270, "397143e": 270, "046980e": 270, "209": 270, "6099": 270, "408455": 270, "938665e": 270, "417659e": 270, "020796e": 270, "968494": 270, "812650e": 270, "058726e": 270, "013915": 270, "001139": 270, "779058": 270, "838847e": 270, "195": [270, 271, 290, 310, 317], "666219e": 270, "7786": 270, "6419": 270, "713717": 270, "798949e": 270, "373560e": 270, "222876e": 270, "279242": 270, "396487": 270, "740702": 270, "937412e": 270, "678731e": 270, "1372": 270, "007893": 270, "008017": 270, "899229": 270, "094469e": 270, "960000e": 270, "634379e": 270, "7829": 270, "6444": 270, "188876": 270, "763562e": 270, "564748e": 270, "222846e": 270, "358338": 270, "936677e": 270, "674871e": 270, "1379": 270, "007885": 270, "008007": 270, "899298": 270, "044352e": 270, "970000e": 270, "197": [270, 271, 280, 290, 310, 317], "601751e": 270, "7866": 270, "6397": 270, "295744": 270, "905618e": 270, "926693e": 270, "222790e": 270, "418283": 270, "935846e": 270, "670387e": 270, "1386": 270, "007876": 270, "007998": 270, "899383": 270, "101084e": 270, "980000e": 270, "568193e": 270, "7909": 270, "6374": 270, "587944": 270, "124776e": 270, "795553e": 270, "222710e": 270, "397007": 270, "419861": 270, "934920e": 270, "665281e": 270, "1393": 270, "007866": 270, "007989": 270, "899482": 270, "961504e": 270, "990000e": 270, "199": [270, 271, 290, 310, 317], "533615e": 270, "7946": 270, "6479": 270, "674566": 270, "377564e": 270, "490729e": 270, "222607e": 270, "301311": 270, "933899e": 270, "659556e": 270, "1400": 270, "007854": 270, "007981": 270, "899595": 270, "547542e": 270, "shorten": 270, "table_not_renam": 270, "spintevolv": 270, "calc": 270, "ang": 270, "knew": 270, "phenomena": 271, "8e6": [271, 303, 305, 317, 318, 319, 320], "indepent": 271, "max_dm": [271, 290, 310, 317], "400762e": [271, 317], "25204": [271, 317], "415522": [271, 317], "798712e": [271, 317], "269612e": [271, 317], "975901": [271, 317], "217115": [271, 317], "021888": [271, 317], "715017e": [271, 317], "797309e": [271, 317], "25186": [271, 317], "311578": [271, 317], "786077e": [271, 317], "396547e": [271, 317], "904810": [271, 317], "423562": [271, 317], "043754": [271, 317], "318544e": [271, 317], "25156": [271, 317], "186455": [271, 317], "765071e": [271, 317], "388134e": [271, 317], "790286": [271, 317], "609218": [271, 317], "065579": [271, 317], "756100e": [271, 317], "25114": [271, 317], "112032": [271, 317], "735776e": [271, 317], "375555e": [271, 317], "638055": [271, 317], "765021": [271, 317], "087341": [271, 317], "191985e": [271, 317], "25060": [271, 317], "188355": [271, 317], "698302e": [271, 317], "358857e": [271, 317], "455710": [271, 317], "883427": [271, 317], "109020": [271, 317], "009865e": [271, 317], "1402": [271, 317], "690": [271, 317], "438568": [271, 317], "602614e": [271, 317], "374608e": [271, 317], "396": [271, 317], "013011": [271, 317], "024099": [271, 317], "999625": [271, 317], "800000e": [271, 273, 290, 317], "009897e": [271, 317], "1409": [271, 317], "675": [271, 317], "493807": [271, 317], "319876e": [271, 317], "230101e": [271, 317], "398": [271, 317], "017545": [271, 317], "020251": [271, 317], "999641": [271, 317], "850000e": [271, 290, 317], "009928e": [271, 317], "1416": [271, 317], "660": [271, 317], "872303": [271, 317], "049242e": [271, 317], "091780e": [271, 317], "021059": [271, 317], "015612": [271, 317], "999656": [271, 317], "900000e": [271, 273, 290, 310, 317], "009958e": [271, 317], "567078": [271, 317], "790193e": [271, 317], "959381e": [271, 317], "402": [271, 317], "023428": [271, 317], "010435": [271, 317], "999671": [271, 317], "950000e": [271, 290, 310, 317], "009986e": [271, 317], "1430": [271, 317], "632": [271, 317], "571305": [271, 317], "542233e": [271, 317], "832649e": [271, 317], "404": [271, 317], "024591": [271, 317], "004988": [271, 317], "999685": [271, 317], "ft_mx": 271, "ft_my": 271, "521315": 271, "000000j": 271, "487159": 271, "543484": 271, "663425j": 271, "585720": 271, "150552j": 271, "616125": 271, "426352j": 271, "912330": 271, "322464j": 271, "759313": 271, "452269j": 271, "590649": 271, "544779j": 271, "989438": 271, "140613j": 271, "995293": 271, "839505j": 271, "96": 271, "600000e": [271, 273], "487614": 271, "030294j": 271, "055860": 271, "006899j": 271, "97": 271, "700000e": [271, 273], "487593": 271, "022707j": 271, "055952": 271, "005171j": 271, "98": 271, "487579": 271, "015131j": 271, "056017": 271, "003446j": 271, "487570": 271, "007564j": 271, "056056": 271, "001722j": 271, "487567": 271, "056069": 271, "ft_mz": 271, "168": 271, "841749": 271, "166086": 271, "032844j": 271, "088546": 271, "908290j": 271, "313478": 271, "167120j": 271, "9890680": 271, "7393600j": 271, "4943940": 271, "0307590j": 271, "4943850": 271, "0230560j": 271, "4943780": 271, "0153640j": 271, "4943740": 271, "0076800j": 271, "4943730": 271, "0000000j": 271, "my_interactive_plot": 272, "hold": 272, "ctrl": 272, "interv": 273, "4999999999999994e": 273, "monoton": 273, "100000e": 273, "200000e": 273, "300000e": 273, "400000e": 273, "restrict": [274, 275], "12e": [274, 305], "forbid": [276, 282], "person": 276, "clerk": 276, "maxwel": 276, "fuinction": 277, "hysteresis_valu": 277, "_a": 278, "repetit": 278, "myclass": 278, "reject": [278, 282], "challeng": 279, "overwritten": 279, "ihnerit": 279, "unless": [279, 311], "method1": 279, "method2": 279, "blass": 279, "howto": 280, "metapackag": 280, "setup": [280, 323], "wanr": 280, "martin": [280, 323], "510": 280, "523": 280, "548": 280, "554": 280, "ouput": 280, "201": 280, "573": 280, "279": 280, "575": 280, "completedprocess": 280, "returncod": 280, "51622": 280, "noommf": 280, "lookup": 280, "failur": [280, 311], "156": 280, "157": 280, "244": 280, "51659": 280, "otheriws": 281, "variou": [282, 290], "satisi": 282, "weather": 282, "pico": 283, "mega": 283, "si_prefix": 283, "ordereddict": 283, "1000000000000": 283, "1000000000000000": 283, "intend": [285, 319, 324], "inherit_doc": 287, "tailor": 288, "concis": 288, "fmr": 288, "flower": 289, "splai": 289, "intrins": 289, "magnetostat": 289, "princip": 289, "initiais": 289, "m_init_flow": 289, "norm_squar": 289, "m_init_vortex": 289, "minimise_system_energi": 289, "__name__": 289, "cubes": 289, "lex": 289, "km": 289, "stdprob3": 289, "transit": 289, "occurr": 289, "l_arrai": 289, "vortex_energi": 289, "flower_energi": 289, "4l_": 289, "6l_": 289, "root": [289, 324], "bisect": 289, "algorithm": 289, "energy_differ": 289, "xtol": 289, "nthe": 289, "425": 289, "4375": 289, "\u00b5mag": [289, 290, 291], "ctcm": [289, 290, 291], "rdm": [289, 290, 291], "mumag": [289, 290, 291], "underbrac": [290, 317], "equlibrium": [290, 319], "125e": 290, "stdprob4": 290, "littl": 290, "bit": [290, 311, 324], "resulot": 290, "ni": 290, "773766": 290, "2113000217": 290, "99856": 290, "85902016422": 290, "0031607521877565227": 290, "799979": 290, "2760196766": 290, "5758": 290, "293066036878": 290, "005025602440378236": 290, "h1": [290, 302], "drove": 290, "e_demag": 290, "676342e": 290, "3736": 290, "1162": 290, "551057": 290, "697359e": 290, "278388e": 290, "548545e": 290, "913555": 290, "281298": 290, "612838": 290, "530166e": 290, "624844e": 290, "784": 290, "984260": 290, "010971": 290, "033987": 290, "374338e": 290, "685463e": 290, "3755": 290, "1260": 290, "313987": 290, "935225e": 290, "621609e": 290, "637446e": 290, "157990": 290, "844369e": 290, "656275e": 290, "788": 290, "987086": 290, "021592": 290, "039286": 290, "373844e": 290, "695498e": 290, "3774": 290, "1384": 290, "782639": 290, "057789e": 290, "813911e": 290, "039753e": 290, "727732": 290, "074607e": 290, "683357e": 290, "792": 290, "988092": 290, "057824": 290, "042604": 290, "373936e": 290, "705827e": 290, "3793": 290, "1351": 290, "611579": 290, "053171e": 290, "832074e": 290, "586011e": 290, "669397": 290, "772022": 290, "220444e": 290, "703732e": 290, "796": 290, "986964": 290, "095870": 290, "043794": 290, "374355e": 290, "715833e": 290, "3812": 290, "1191": 290, "084437": 290, "931645e": 290, "687310e": 290, "141300e": 290, "354487": 290, "291427e": 290, "716389e": 290, "983765": 290, "133793": 290, "042832": 290, "375196e": 290, "snap": 290, "shot": 290, "fluctuat": 290, "pydata": 290, "u_": 291, "ux": [291, 311, 315, 316], "stdprob5": 291, "m_vortex": 291, "displac": 291, "axessubplot": 291, "irregular": 292, "discret": 292, "enough": [292, 311, 321], "neglect": [292, 311], "008": 292, "bia": 292, "ka": 292, "715": 292, "degener": 292, "eigenmod": 292, "suffici": 292, "converg": 292, "equilibrium": 292, "quasistat": 292, "alter": 292, "record": [292, 323], "120e": [292, 320], "8e4": 292, "81345856316858023": 292, "58162287266553481": 292, "stdprobfmr": 292, "81923192051904048": 292, "57346234436332832": 292, "4000": 292, "psd": 292, "log10": [292, 321], "f_axi": 292, "fftfreq": 292, "psa": 292, "baker": 292, "beg": [292, 309, 323], "ashton": 292, "chernyshenko": 292, "wang": 292, "bisotti": 292, "franchin": 292, "hu": 292, "stamp": 292, "hesjed": 292, "fangohr": [292, 322, 323, 324, 325], "magn": 292, "mater": 292, "421": 292, "428": 292, "2017": 292, "afetr": 293, "intialis": [293, 297], "hex_eff": [293, 297], "3470795322e": [293, 297], "35285533145e": [293, 297], "1217018942e": 293, "chack": 293, "total_energi": [293, 297], "352855331441701e": 293, "edgl": 294, "airbox_method": 294, "confirm": 294, "stray_field": 294, "confin": 295, "cylindr": 295, "50nm": 295, "definr": 295, "10nm": [295, 304], "magnets": [295, 304], "689": [295, 304], "runtimewarn": [295, 304], "double_scalar": [295, 304], "widthu_per_lenu": [295, 304], "49e": [295, 304], "tcl_runner": 296, "exe_runn": 296, "tell": 296, "energy_comput": 297, "m3": 297, "heff": [297, 298], "12170206653e": 297, "simpler": [297, 311], "3528553314865004e": 297, "84e5": [298, 309, 318], "58e": [298, 309, 318], "m_initi": [298, 318], "volume_integr": 298, "wdf": 298, "wmc": 298, "edf": 298, "emc": 298, "rerr": 298, "0347218596939451e": 298, "03472185969e": 298, "8126911702142893e": 298, "hdf": 298, "hmc": 298, "2k": 298, "043355901311158e": 298, "04335590131e": 298, "668156582818925e": 298, "2a": 298, "7438374238126347e": 298, "74383742381e": 298, "510847357640387e": 298, "350588324058675e": 298, "35058832406e": 298, "045656594100094e": 298, "heff_funct": 298, "dmdt_function": 298, "soon": 299, "publish": 299, "60k": 299, "uniformli": [299, 303], "1700e3": 299, "timestep": [299, 311], "offici": [299, 324], "68871": 299, "265081": 299, "842372": 299, "002361": 299, "003408": 299, "102": 299, "69924": 299, "226300": 299, "710945": 299, "001004": 299, "001404": 299, "78886": 299, "820644": 299, "152": 299, "600855": 299, "002175": 299, "005869": 299, "204": 299, "67798": 299, "361453": 299, "203": 299, "502902": 299, "003426": 299, "002623": 299, "255": 299, "75905": 299, "774117": 299, "254": 299, "425940": 299, "003645": 299, "007141": 299, "somethom": 300, "fixed1": 300, "27e": 300, "fixed2": 300, "fixed_spin": 300, "duri": 300, "anf": 300, "neel": 300, "wall": [300, 311, 313], "offer": 301, "arhument": 301, "081201": 301, "296243e": 301, "958228e": 301, "178506e": 301, "550275e": 301, "411539e": 301, "998400": 301, "079326": 301, "769135e": 301, "874685e": 301, "301416e": 301, "900": 301, "481374e": 301, "722528e": 301, "998216": 301, "056126": 301, "242133e": 301, "479114e": 301, "445097e": 301, "100550e": 301, "791429e": 301, "997999": 301, "086456": 301, "715256e": 301, "465190e": 301, "614662e": 301, "700": 301, "752309e": 301, "515825e": 301, "997739": 301, "053076": 301, "188531e": 301, "451266e": 301, "816966e": 301, "600": 301, "854727e": 301, "997422": 301, "bz": 301, "h2": 302, "multiple_term": 302, "115": 302, "113": 302, "_container_class": 302, "378": 302, "369": 302, "370": 302, "__class__": 302, "371": 302, "_term": 302, "372": 302, "373": 302, "374": 302, "375": 302, "376": 302, "377": 302, "379": 302, "380": 302, "e_zeeman_zeeman1": 302, "e_zeeman_zeeman2": 302, "002808": 302, "843445e": 302, "222237e": 302, "421723e": 302, "707107": 302, "862214e": 302, "mark": [302, 321], "gave": 302, "plan": [303, 324, 325], "coupl": [303, 305], "antiferomagnet": 303, "60e": [303, 305], "r3": 303, "negative_a": 303, "adict": 303, "m_random": 303, "antiferromagnet": [303, 305], "infinit": 304, "9249451991543435": 304, "9244762913568568": 304, "9244762913568569": 304, "9997455664839123": 304, "spacer": 305, "22e": 305, "sine_hysteresi": 306, "1e2": 306, "2e9": [306, 307], "bz_zeeman": [306, 310, 311], "space_time_varying_field": 307, "hspace": 307, "scientif": [309, 323], "7959": 309, "150": 309, "hb": 309, "ht": 309, "bloch_point": 309, "vortic": 309, "closer": 309, "amp": 310, "time_dependent_field": 310, "by_zeeman": [310, 311], "297563e": 310, "434031e": 310, "147568e": 310, "812700e": 310, "931627e": 310, "897440e": 310, "758989": 310, "183653": 310, "624666": 310, "515634e": 310, "562001e": 310, "766104e": 310, "954602e": 310, "204656e": 310, "766444e": 310, "164967e": 310, "090633": 310, "038564": 310, "995137": 310, "425770e": 310, "759093e": 310, "290846e": 310, "636140e": 310, "221901e": 310, "141003e": 310, "711504e": 310, "784284": 310, "261449": 310, "562622": 310, "631440e": 310, "863542e": 310, "184": 310, "673341e": 310, "207088e": 310, "112468e": 310, "477265e": 310, "215898e": 310, "015202": 310, "010857": 310, "999825": 310, "449728e": 310, "848036e": 310, "299": 310, "014752e": 310, "675974e": 310, "915541e": 310, "777153e": 310, "665730e": 310, "497085": 310, "051994": 310, "866143": 310, "913664e": 310, "436379e": 310, "20614": 310, "906705e": 310, "837992e": 310, "268306e": 310, "3450": 310, "020176": 310, "114665": 310, "993199": 310, "918021e": 310, "422674e": 310, "20687": 310, "474584e": 310, "221479e": 310, "046823e": 310, "3463": 310, "848044": 310, "209072": 310, "486939": 310, "197700e": 310, "925000e": 310, "328011e": 310, "20742": 310, "004530e": 310, "502211e": 310, "083878e": 310, "3473": 310, "063640": 310, "149399": 310, "986727": 310, "412896e": 310, "178128e": 310, "20779": 310, "087140e": 310, "673789e": 310, "358762e": 310, "3480": 310, "822805": 310, "116178": 310, "556322": 310, "059389e": 310, "975000e": 310, "088592e": 310, "20804": 310, "629445e": 310, "731610e": 310, "217703e": 310, "032019e": 310, "048028e": 310, "3485": 310, "041748": 310, "107200": 310, "993361": 310, "687671e": 310, "bx_zeeman": [310, 311], "cardin": 310, "prefactor": 311, "mechan": 311, "nevertheless": 311, "micromagnetimodel": 311, "correstpond": 311, "coars": 311, "somewher": 311, "userguide12b3": 311, "stem": 311, "differen": 311, "amplitud": 311, "toi": 311, "exter": 311, "observ": 311, "durat": 311, "particularli": 311, "5e4": 311, "almost": 311, "ninti": 311, "t_func": 311, "macrospin_puls": 311, "ax1": 311, "ax2": 311, "macrospin_pulse_dr": 311, "tion": 311, "offset": 311, "macrospin_sin": 311, "macrospin_sinc": 311, "profil": 311, "artif": 311, "nois": 311, "smooth": 311, "t_sampl": 311, "1001": 311, "10n": 311, "10p": 311, "measured_time_depend": 311, "randn": 311, "26263374": 311, "32470813": 311, "18966045": 311, "19483294": 311, "line2d": 311, "0x7fa269d430a0": 311, "wrap": 311, "accuraci": 311, "interp": 311, "macrospin_measur": 311, "userguide20a2": 311, "r_": 311, "yy": 311, "zx": 311, "zy": 311, "zz": 311, "h_field": 311, "system_tcl": 311, "custom_tcl": 311, "oxs_transformzeeman": 311, "easiest": 311, "proc": 311, "timefunct": 311, "total_tim": 311, "expr": 311, "atan": 311, "ct": 311, "mct": 311, "cosin": 311, "mst": 311, "domain_wal": [311, 315], "dw": [311, 315], "m_valu": [311, 315, 320], "time_func": 311, "5t": 311, "movement": 311, "2e12": 311, "average_j": 311, "influenc": 312, "learn": [313, 314, 323], "exercis": 313, "induc": 313, "newer": 314, "anaconda": [314, 324], "prompt": [314, 324], "termin": [314, 324], "venv": [314, 324], "ubermag_env": [314, 324], "browser": [314, 323], "tab": [314, 324], "ui": 314, "click": 314, "screenshot": 314, "mj": [315, 316], "domain_wall_pair": 315, "solut": [315, 317, 320], "narrow": 316, "constrain": 316, "zhou": 316, "ezawa": 316, "2014": 316, "revers": 316, "junction": 316, "natur": [316, 321], "1038": 316, "ncomms5652": 316, "dw_pair_convers": 316, "wider": 316, "excit": 317, "initial_m": 317, "41e6": 317, "intuit": 317, "uniaxial_anisotropi": 318, "6e6": 318, "aniostropi": 318, "preferenti": 318, "hamiltoninan": 318, "exchange_and_zeeman": 318, "plu": 318, "approx": 318, "exchange_and_dmi": 318, "28e": 318, "diamet": [318, 320], "goal": [319, 325], "comfort": 319, "eventu": 319, "skeleton": 319, "worri": 319, "difer": 319, "first_ubermag_simul": 319, "simulaton": 319, "mistak": 319, "human": 319, "sligtli": 319, "workshop": [319, 322, 323], "7860158": 319, "235916737": 319, "007325129149015993": 319, "0489096641540526e": 319, "9825197794895917": 319, "156411379107609e": 319, "498001805406602e": 319, "quantitit": 320, "8000000": 320, "disrectis": 320, "ms_valu": 320, "decim": 321, "bracket": 321, "3333333333333335": 321, "live": 321, "14159": 321, "65358979335273e": 321, "9999999999964793": 321, "51000": 321, "mutabl": 321, "new_el": 321, "region797": 321, "quot": 321, "branch": 321, "sum_of_el": 321, "syntaxerror": 321, "indentationerror": 321, "block": [321, 322], "my_var": 321, "nameerror": 321, "scp": 321, "typo": 321, "scpy": 321, "my_object": 321, "signatur": 321, "keepdim": 321, "arithmet": 321, "flatten": 321, "intermedi": 321, "versionad": 321, "cast": 321, "against": 321, "std": 321, "var": 321, "nanmean": 321, "nanstd": 321, "nanvar": 321, "inaccur": 321, "especi": 321, "float32": 321, "allevi": 321, "float16": 321, "512": 321, "54999924": 321, "55000000074505806": 321, "fromnumer": 321, "bug": 322, "public": [322, 323], "zulip": [322, 323], "chat": [322, 323], "everyon": 322, "subscrib": [322, 323], "announc": [322, 323], "archiv": 322, "perhap": 322, "ideal": 322, "upload": [322, 323], "confidenti": 322, "backtick": 322, "inline_cod": 322, "excerpt": 322, "enhanc": 322, "chanc": 322, "who": 322, "patient": 322, "repli": 322, "immedi": 322, "suggest": 322, "phrase": 322, "smartquest": 322, "anyon": 322, "fellow": 322, "buid": 322, "task": [322, 323], "micromagnetic simul": 323, "finite differ": 323, "lorentz transmission electron microscopi": 323, "small-angle neutron scatt": 323, "small angle x-ray scatt": 323, "sax": 323, "magnetic force microscopi": 323, "torque magnetometri": 323, "dc magnetometry x-ray holographi": 323, "taylor": 323, "fluid": 323, "framework": 323, "sit": 323, "\u00fcber": 323, "backend": [323, 324], "ecosystem": 323, "popular": 323, "becom": 323, "readili": 323, "deleg": 323, "toward": 323, "spacif": 323, "blender": 323, "june": 323, "spintalk": 323, "ieee": 323, "societi": 323, "ieeemagnet": 323, "youtub": 323, "badg": 323, "scratch": 323, "prepar": 323, "marijan": 323, "lang": 323, "samuel": 323, "holt": 323, "ryan": 323, "pepper": 323, "thoma": 323, "kluyver": 323, "loudon": 323, "hicken": 323, "david": 323, "cort\u00e9": 323, "ortu\u00f1o": 323, "jeroen": 323, "jonathan": 323, "leliaert": 323, "han": 323, "depart": 323, "earth": 323, "scienc": 323, "engin": 323, "imperi": 323, "colleg": 323, "london": 323, "sw7": 323, "2az": 323, "kingdom": 323, "faculti": 323, "univers": [323, 325], "southampton": [323, 325], "so17": 323, "1bj": 323, "institut": 323, "matter": 323, "lurup": 323, "chausse": 323, "22761": 323, "hamburg": [323, 325], "germani": [323, 325], "warwick": 323, "coventri": 323, "cv4": 323, "7al": 323, "european": 323, "xfel": 323, "gmbh": 323, "holzkoppel": 323, "22869": 323, "schenefeld": 323, "metallurgi": 323, "cambridg": 323, "cb3": 323, "0f": 323, "durham": 323, "dh1": 323, "3le": 323, "ghent": 323, "krijgslaan": 323, "281": 323, "s12": 323, "9000": 323, "belgium": 323, "laser": 323, "workflow": 323, "transact": 323, "vol": 323, "feb": 323, "art": 323, "7300205": 323, "1109": 323, "tmag": 323, "3078896": 323, "articl": 323, "beg2022": 323, "journal": 323, "year": 323, "bsd": 323, "claus": 323, "revis": 323, "horizon": 323, "infrastructur": 323, "opendreamkit": 323, "id": 323, "676541": 323, "fond": 323, "wetenschappelijk": 323, "onderzoek": 323, "fwo": 323, "vlaanderen": 323, "g098917n": 323, "postdoctor": 323, "fellowship": 323, "forg": 324, "pypi": 324, "ubermagdata": 324, "virtual": 324, "ubermag_venv": 324, "folder": 324, "bat": 324, "channel": 324, "mumax3_ex": 324, "raw": 324, "backslash": 324, "escap": 324, "sequenc": 324, "upgrad": 324, "unzip": 324, "among": 324, "step2": 324, "compil": 324, "xcode": 324, "appstor": 324, "git": 324, "clone": 324, "cd": 324, "bash_profil": 324, "edit": 324, "refresh": 324, "bashrc": 324, "reopen": 324, "ubuntu": 324, "privileg": 324, "sudo": 324, "apt": 324, "tk": 324, "reporsitori": 324, "emd": 324, "until": 324, "deamon": 324, "helper": 324, "feasibl": 324, "peopl": 324, "dissemin": 325, "decemb": 325, "8th": 325, "15th": 325, "uk": 325, "contact": 325, "soton": 325, "ac": 325, "port": 325, "dataclass": 325, "brainstorm": 325, "august": 325, "22nd": 325, "27th": 325, "mpsd": 325}, "objects": {"": [[0, 0, 0, "-", "discretisedfield"], [38, 0, 0, "-", "mag2exp"], [66, 0, 0, "-", "micromagneticdata"], [74, 0, 0, "-", "micromagneticmodel"], [114, 0, 0, "-", "micromagnetictests"], [148, 0, 0, "-", "oommfc"], [173, 0, 0, "-", "ubermag"], [175, 0, 0, "-", "ubermagtable"], [183, 0, 0, "-", "ubermagutil"]], "discretisedfield": [[1, 1, 1, "", "DValue"], [2, 1, 1, "", "Field"], [3, 1, 1, "", "FieldRotator"], [4, 1, 1, "", "Line"], [5, 1, 1, "", "Mesh"], [6, 1, 1, "", "Region"], [7, 5, 1, "", "integral"], [8, 5, 1, "", "interact"], [9, 0, 0, "-", "io"], [18, 0, 0, "-", "plotting"], [27, 5, 1, "", "test"], [28, 0, 0, "-", "tools"]], "discretisedfield.DValue": [[1, 2, 1, "", "__abs__"], [1, 2, 1, "", "__call__"], [1, 2, 1, "", "__matmul__"], [1, 2, 1, "", "__mul__"]], "discretisedfield.Field": [[2, 2, 1, "", "__abs__"], [2, 2, 1, "", "__add__"], [2, 2, 1, "", "__and__"], [2, 2, 1, "", "__array_ufunc__"], [2, 2, 1, "", "__call__"], [2, 2, 1, "", "__dir__"], [2, 2, 1, "", "__eq__"], [2, 2, 1, "", "__getattr__"], [2, 2, 1, "", "__getitem__"], [2, 3, 1, "", "__hash__"], [2, 2, 1, "", "__iter__"], [2, 2, 1, "", "__lshift__"], [2, 2, 1, "", "__matmul__"], [2, 2, 1, "", "__mul__"], [2, 2, 1, "", "__neg__"], [2, 2, 1, "", "__pos__"], [2, 2, 1, "", "__pow__"], [2, 2, 1, "", "__repr__"], [2, 2, 1, "", "__sub__"], [2, 2, 1, "", "__truediv__"], [2, 2, 1, "", "allclose"], [2, 4, 1, "", "angle"], [2, 4, 1, "", "array"], [2, 4, 1, "", "average"], [2, 4, 1, "", "components"], [2, 4, 1, "", "conjugate"], [2, 2, 1, "", "coordinate_field"], [2, 4, 1, "", "curl"], [2, 2, 1, "", "derivative"], [2, 4, 1, "", "div"], [2, 4, 1, "", "fftn"], [2, 2, 1, "", "from_xarray"], [2, 2, 1, "", "fromfile"], [2, 4, 1, "", "grad"], [2, 4, 1, "", "hv"], [2, 4, 1, "", "ifftn"], [2, 4, 1, "", "imag"], [2, 2, 1, "", "integral"], [2, 4, 1, "", "irfftn"], [2, 4, 1, "", "k3d"], [2, 4, 1, "", "laplace"], [2, 2, 1, "", "line"], [2, 4, 1, "", "mpl"], [2, 4, 1, "", "norm"], [2, 4, 1, "", "orientation"], [2, 2, 1, "", "pad"], [2, 4, 1, "", "phase"], [2, 2, 1, "", "plane"], [2, 2, 1, "", "project"], [2, 4, 1, "", "real"], [2, 4, 1, "", "rfftn"], [2, 2, 1, "", "to_vtk"], [2, 2, 1, "", "to_xarray"], [2, 4, 1, "", "value"], [2, 2, 1, "", "write"], [2, 4, 1, "", "zero"]], "discretisedfield.FieldRotator": [[3, 2, 1, "", "__repr__"], [3, 2, 1, "", "clear_rotation"], [3, 4, 1, "", "field"], [3, 2, 1, "", "rotate"]], "discretisedfield.Line": [[4, 2, 1, "", "__repr__"], [4, 4, 1, "", "length"], [4, 2, 1, "", "mpl"], [4, 4, 1, "", "point_columns"], [4, 2, 1, "", "selector"], [4, 2, 1, "", "slider"], [4, 4, 1, "", "value_columns"]], "discretisedfield.Mesh": [[5, 2, 1, "", "__dir__"], [5, 2, 1, "", "__eq__"], [5, 2, 1, "", "__getattr__"], [5, 2, 1, "", "__getitem__"], [5, 3, 1, "", "__hash__"], [5, 2, 1, "", "__iter__"], [5, 2, 1, "", "__len__"], [5, 2, 1, "", "__or__"], [5, 2, 1, "", "__repr__"], [5, 2, 1, "", "axis_selector"], [5, 4, 1, "", "dS"], [5, 4, 1, "", "dV"], [5, 2, 1, "", "index2point"], [5, 4, 1, "", "indices"], [5, 4, 1, "", "k3d"], [5, 2, 1, "", "line"], [5, 2, 1, "", "load_subregions"], [5, 4, 1, "", "midpoints"], [5, 4, 1, "", "mpl"], [5, 2, 1, "", "neighbours"], [5, 2, 1, "", "pad"], [5, 2, 1, "", "plane"], [5, 2, 1, "", "point2index"], [5, 2, 1, "", "region2slices"], [5, 2, 1, "", "save_subregions"], [5, 2, 1, "", "slider"], [5, 4, 1, "", "subregions"], [5, 4, 1, "", "vertices"]], "discretisedfield.Region": [[6, 2, 1, "", "__contains__"], [6, 2, 1, "", "__eq__"], [6, 3, 1, "", "__hash__"], [6, 2, 1, "", "__mul__"], [6, 2, 1, "", "__or__"], [6, 2, 1, "", "__repr__"], [6, 2, 1, "", "__truediv__"], [6, 4, 1, "", "centre"], [6, 4, 1, "", "edges"], [6, 4, 1, "", "k3d"], [6, 4, 1, "", "mpl"], [6, 4, 1, "", "multiplier"], [6, 4, 1, "", "pmax"], [6, 4, 1, "", "pmin"], [6, 2, 1, "", "random_point"], [6, 2, 1, "", "to_dict"], [6, 4, 1, "", "volume"]], "discretisedfield.io": [[10, 5, 1, "", "field_from_hdf5"], [11, 5, 1, "", "field_from_ovf"], [12, 5, 1, "", "field_from_vtk"], [13, 5, 1, "", "field_to_hdf5"], [14, 5, 1, "", "field_to_ovf"], [15, 5, 1, "", "field_to_vtk"], [16, 0, 0, "-", "ovf2vtk"]], "discretisedfield.io.ovf2vtk": [[17, 5, 1, "", "ovf2vtk"]], "discretisedfield.plotting": [[19, 1, 1, "", "Hv"], [20, 1, 1, "", "K3dField"], [21, 1, 1, "", "K3dMesh"], [22, 1, 1, "", "K3dRegion"], [23, 1, 1, "", "MplField"], [24, 1, 1, "", "MplMesh"], [25, 1, 1, "", "MplRegion"], [26, 5, 1, "", "add_colorwheel"]], "discretisedfield.plotting.Hv": [[19, 2, 1, "", "__call__"], [19, 2, 1, "", "contour"], [19, 2, 1, "", "scalar"], [19, 2, 1, "", "vector"]], "discretisedfield.plotting.K3dField": [[20, 2, 1, "", "__dir__"], [20, 2, 1, "", "nonzero"], [20, 2, 1, "", "scalar"], [20, 2, 1, "", "vector"]], "discretisedfield.plotting.K3dMesh": [[21, 2, 1, "", "__call__"], [21, 2, 1, "", "subregions"]], "discretisedfield.plotting.K3dRegion": [[22, 2, 1, "", "__call__"]], "discretisedfield.plotting.MplField": [[23, 2, 1, "", "__call__"], [23, 2, 1, "", "__dir__"], [23, 2, 1, "", "contour"], [23, 2, 1, "", "lightness"], [23, 2, 1, "", "scalar"], [23, 2, 1, "", "vector"]], "discretisedfield.plotting.MplMesh": [[24, 2, 1, "", "__call__"], [24, 2, 1, "", "subregions"]], "discretisedfield.plotting.MplRegion": [[25, 2, 1, "", "__call__"]], "discretisedfield.tools": [[29, 5, 1, "", "count_bps"], [30, 5, 1, "", "count_large_cell_angle_regions"], [31, 5, 1, "", "demag_field"], [32, 5, 1, "", "demag_tensor"], [33, 5, 1, "", "emergent_magnetic_field"], [34, 5, 1, "", "max_neigbouring_cell_angle"], [35, 5, 1, "", "neigbouring_cell_angle"], [36, 5, 1, "", "topological_charge"], [37, 5, 1, "", "topological_charge_density"]], "mag2exp": [[39, 0, 0, "-", "ltem"], [44, 0, 0, "-", "magnetometry"], [47, 0, 0, "-", "mfm"], [49, 0, 0, "-", "quick_plots"], [59, 0, 0, "-", "sans"], [62, 5, 1, "", "test"], [63, 0, 0, "-", "x_ray"]], "mag2exp.ltem": [[40, 5, 1, "", "defocus_image"], [41, 5, 1, "", "integrated_magnetic_flux_density"], [42, 5, 1, "", "phase"], [43, 5, 1, "", "relativistic_wavelength"]], "mag2exp.magnetometry": [[45, 5, 1, "", "magnetisation"], [46, 5, 1, "", "torque"]], "mag2exp.mfm": [[48, 5, 1, "", "phase_shift"]], "mag2exp.quick_plots": [[50, 5, 1, "", "ltem_defocus"], [51, 5, 1, "", "ltem_ft_phase"], [52, 5, 1, "", "ltem_integrated_mfd"], [53, 5, 1, "", "ltem_phase"], [54, 5, 1, "", "mfm_phase_shift"], [55, 5, 1, "", "sans_chiral_function"], [56, 5, 1, "", "sans_cross_section"], [57, 5, 1, "", "saxs"], [58, 5, 1, "", "x_ray_holography"]], "mag2exp.sans": [[60, 5, 1, "", "chiral_function"], [61, 5, 1, "", "cross_section"]], "mag2exp.x_ray": [[64, 5, 1, "", "holography"], [65, 5, 1, "", "saxs"]], "micromagneticdata": [[67, 1, 1, "", "AbstractDrive"], [68, 1, 1, "", "CombinedDrive"], [69, 1, 1, "", "Data"], [70, 1, 1, "", "Drive"], [71, 1, 1, "", "Mumax3Drive"], [72, 1, 1, "", "OOMMFDrive"], [73, 5, 1, "", "test"]], "micromagneticdata.AbstractDrive": [[67, 2, 1, "", "__getitem__"], [67, 2, 1, "", "__iter__"], [67, 2, 1, "", "__lshift__"], [67, 2, 1, "", "__repr__"], [67, 4, 1, "", "callbacks"], [67, 4, 1, "", "hv"], [67, 4, 1, "", "info"], [67, 4, 1, "", "m0"], [67, 4, 1, "", "n"], [67, 2, 1, "", "register_callback"], [67, 4, 1, "", "table"], [67, 2, 1, "", "to_xarray"], [67, 4, 1, "", "x"]], "micromagneticdata.CombinedDrive": [[68, 2, 1, "", "__lshift__"], [68, 2, 1, "", "__repr__"], [68, 4, 1, "", "info"], [68, 2, 1, "", "register_callback"], [68, 4, 1, "", "table"], [68, 4, 1, "", "x"]], "micromagneticdata.Data": [[69, 2, 1, "", "__getitem__"], [69, 2, 1, "", "__iter__"], [69, 2, 1, "", "__repr__"], [69, 4, 1, "", "info"], [69, 4, 1, "", "n"], [69, 2, 1, "", "selector"]], "micromagneticdata.Drive": [[70, 2, 1, "", "__getitem__"], [70, 2, 1, "", "__lshift__"], [70, 2, 1, "", "__new__"], [70, 4, 1, "", "calculator_script"], [70, 4, 1, "", "info"], [70, 2, 1, "", "ovf2vtk"], [70, 2, 1, "", "register_callback"], [70, 2, 1, "", "slider"], [70, 4, 1, "", "table"], [70, 4, 1, "", "use_cache"]], "micromagneticdata.Mumax3Drive": [[71, 2, 1, "", "__repr__"], [71, 4, 1, "", "calculator_script"], [71, 4, 1, "", "x"]], "micromagneticdata.OOMMFDrive": [[72, 2, 1, "", "__repr__"], [72, 4, 1, "", "calculator_script"], [72, 4, 1, "", "x"]], "micromagneticmodel": [[75, 1, 1, "", "CubicAnisotropy"], [76, 1, 1, "", "DMI"], [77, 1, 1, "", "Damping"], [78, 1, 1, "", "Demag"], [79, 1, 1, "", "Driver"], [80, 1, 1, "", "Dynamics"], [81, 1, 1, "", "DynamicsTerm"], [82, 1, 1, "", "Energy"], [83, 1, 1, "", "EnergyTerm"], [84, 1, 1, "", "Evolver"], [85, 1, 1, "", "Exchange"], [86, 1, 1, "", "ExternalDriver"], [87, 1, 1, "", "ExternalRunner"], [88, 1, 1, "", "MagnetoElastic"], [89, 1, 1, "", "Precession"], [90, 1, 1, "", "RKKY"], [91, 1, 1, "", "Slonczewski"], [92, 1, 1, "", "System"], [93, 1, 1, "", "UniaxialAnisotropy"], [94, 1, 1, "", "Zeeman"], [95, 1, 1, "", "ZhangLi"], [96, 0, 0, "-", "abstract"], [100, 0, 0, "-", "consts"], [111, 0, 0, "-", "examples"], [113, 5, 1, "", "test"]], "micromagneticmodel.Driver": [[79, 2, 1, "", "drive"]], "micromagneticmodel.ExternalDriver": [[86, 2, 1, "", "drive"], [86, 2, 1, "", "drive_kwargs_setup"], [86, 2, 1, "", "schedule"], [86, 2, 1, "", "schedule_kwargs_setup"]], "micromagneticmodel.ExternalRunner": [[87, 2, 1, "", "call"], [87, 4, 1, "", "package_name"]], "micromagneticmodel.System": [[92, 2, 1, "", "__repr__"], [92, 4, 1, "", "dynamics"], [92, 4, 1, "", "energy"]], "micromagneticmodel.abstract": [[97, 1, 1, "", "Abstract"], [98, 1, 1, "", "Container"], [99, 1, 1, "", "Term"]], "micromagneticmodel.abstract.Abstract": [[97, 2, 1, "", "__iter__"], [97, 2, 1, "", "__repr__"], [97, 4, 1, "", "name"]], "micromagneticmodel.abstract.Container": [[98, 2, 1, "", "__add__"], [98, 2, 1, "", "__contains__"], [98, 2, 1, "", "__dir__"], [98, 2, 1, "", "__eq__"], [98, 2, 1, "", "__getattr__"], [98, 2, 1, "", "__getitem__"], [98, 3, 1, "", "__hash__"], [98, 2, 1, "", "__iter__"], [98, 2, 1, "", "__len__"], [98, 2, 1, "", "__repr__"], [98, 2, 1, "", "__sub__"], [98, 2, 1, "", "get"]], "micromagneticmodel.abstract.Term": [[99, 2, 1, "", "__add__"], [99, 2, 1, "", "__eq__"], [99, 3, 1, "", "__hash__"]], "micromagneticmodel.consts": [[101, 6, 1, "", "e"], [102, 6, 1, "", "g"], [103, 6, 1, "", "gamma"], [104, 6, 1, "", "gamma0"], [105, 6, 1, "", "h"], [106, 6, 1, "", "hbar"], [107, 6, 1, "", "kB"], [108, 6, 1, "", "me"], [109, 6, 1, "", "mu0"], [110, 6, 1, "", "muB"]], "micromagneticmodel.examples": [[112, 5, 1, "", "macrospin"]], "micromagnetictests": [[115, 0, 0, "-", "calculatortests"], [146, 5, 1, "", "get_tests"], [147, 5, 1, "", "test"]], "micromagnetictests.calculatortests": [[116, 1, 1, "", "TestCompute"], [117, 1, 1, "", "TestCubicAnisotropy"], [118, 1, 1, "", "TestDMI"], [119, 1, 1, "", "TestDamping"], [120, 1, 1, "", "TestDemag"], [121, 1, 1, "", "TestDynamics"], [122, 1, 1, "", "TestEnergy"], [123, 1, 1, "", "TestExchange"], [124, 1, 1, "", "TestFixedSubregions"], [125, 1, 1, "", "TestHysteresisDriver"], [126, 1, 1, "", "TestMesh"], [127, 1, 1, "", "TestMinDriver"], [128, 1, 1, "", "TestPrecession"], [129, 1, 1, "", "TestRKKY"], [130, 1, 1, "", "TestSlonczewski"], [131, 1, 1, "", "TestThreads"], [132, 1, 1, "", "TestTimeDriver"], [133, 1, 1, "", "TestUniaxialAnisotropy"], [134, 1, 1, "", "TestZeeman"], [135, 1, 1, "", "TestZhangLi"], [136, 5, 1, "", "test_dirname"], [137, 5, 1, "", "test_format"], [138, 5, 1, "", "test_info_file"], [139, 5, 1, "", "test_multiple_drives"], [140, 5, 1, "", "test_outputstep"], [141, 5, 1, "", "test_schedule"], [142, 5, 1, "", "test_skyrmion"], [143, 5, 1, "", "test_stdprob3"], [144, 5, 1, "", "test_stdprob4"], [145, 5, 1, "", "test_stdprob5"]], "oommfc": [[149, 1, 1, "", "CGEvolver"], [150, 1, 1, "", "Driver"], [151, 1, 1, "", "EulerEvolver"], [152, 1, 1, "", "HysteresisDriver"], [153, 1, 1, "", "MinDriver"], [154, 1, 1, "", "RungeKuttaEvolver"], [155, 1, 1, "", "SpinTEvolver"], [156, 1, 1, "", "SpinXferEvolver"], [157, 1, 1, "", "TimeDriver"], [158, 1, 1, "", "UHH_ThetaEvolver"], [159, 1, 1, "", "Xf_ThermHeunEvolver"], [160, 1, 1, "", "Xf_ThermSpinXferEvolver"], [161, 5, 1, "", "compute"], [162, 5, 1, "", "delete"], [163, 0, 0, "-", "oommf"], [170, 6, 1, "", "runner"], [171, 5, 1, "", "test"], [172, 5, 1, "", "test_docker"]], "oommfc.Driver": [[150, 2, 1, "", "drive_kwargs_setup"], [150, 2, 1, "", "schedule_kwargs_setup"], [150, 2, 1, "", "write_mif"]], "oommfc.oommf": [[164, 1, 1, "", "DockerOOMMFRunner"], [165, 1, 1, "", "ExeOOMMFRunner"], [166, 1, 1, "", "OOMMFRunner"], [167, 1, 1, "", "Runner"], [168, 1, 1, "", "TclOOMMFRunner"], [169, 5, 1, "", "overhead"]], "oommfc.oommf.DockerOOMMFRunner": [[164, 2, 1, "", "__repr__"], [164, 2, 1, "", "errors"]], "oommfc.oommf.ExeOOMMFRunner": [[165, 2, 1, "", "__repr__"], [165, 2, 1, "", "errors"]], "oommfc.oommf.OOMMFRunner": [[166, 2, 1, "", "__del__"], [166, 2, 1, "", "__repr__"], [166, 2, 1, "", "errors"], [166, 4, 1, "", "package_name"], [166, 4, 1, "", "platform"], [166, 4, 1, "", "status"], [166, 4, 1, "", "version"]], "oommfc.oommf.Runner": [[167, 2, 1, "", "__repr__"], [167, 2, 1, "", "autoselect_runner"], [167, 4, 1, "", "runner"]], "oommfc.oommf.TclOOMMFRunner": [[168, 2, 1, "", "__repr__"], [168, 2, 1, "", "errors"]], "ubermag": [[174, 5, 1, "", "test"]], "ubermagtable": [[176, 1, 1, "", "Table"], [177, 5, 1, "", "interact"], [178, 5, 1, "", "test"], [179, 0, 0, "-", "util"]], "ubermagtable.Table": [[176, 2, 1, "", "__lshift__"], [176, 2, 1, "", "__repr__"], [176, 2, 1, "", "apply"], [176, 4, 1, "", "dx"], [176, 2, 1, "", "fromfile"], [176, 2, 1, "", "irfft"], [176, 2, 1, "", "mpl"], [176, 2, 1, "", "rfft"], [176, 2, 1, "", "selector"], [176, 2, 1, "", "slider"], [176, 4, 1, "", "x"], [176, 4, 1, "", "xmax"], [176, 4, 1, "", "y"]], "ubermagtable.util": [[180, 5, 1, "", "columns"], [181, 5, 1, "", "data"], [182, 5, 1, "", "units"]], "ubermagutil": [[184, 5, 1, "", "changedir"], [185, 5, 1, "", "hysteresis_values"], [186, 5, 1, "", "inherit_docs"], [187, 5, 1, "", "setup_logging"], [188, 5, 1, "", "test"], [189, 0, 0, "-", "typesystem"], [199, 0, 0, "-", "units"]], "ubermagutil.typesystem": [[190, 1, 1, "", "Descriptor"], [191, 1, 1, "", "Dictionary"], [192, 1, 1, "", "Name"], [193, 1, 1, "", "Parameter"], [194, 1, 1, "", "Scalar"], [195, 1, 1, "", "Subset"], [196, 1, 1, "", "Typed"], [197, 1, 1, "", "Vector"], [198, 5, 1, "", "typesystem"]], "ubermagutil.typesystem.Descriptor": [[190, 2, 1, "", "__delete__"], [190, 2, 1, "", "__set__"]], "ubermagutil.typesystem.Dictionary": [[191, 2, 1, "", "__set__"]], "ubermagutil.typesystem.Name": [[192, 2, 1, "", "__set__"]], "ubermagutil.typesystem.Parameter": [[193, 2, 1, "", "__set__"]], "ubermagutil.typesystem.Scalar": [[194, 2, 1, "", "__set__"]], "ubermagutil.typesystem.Subset": [[195, 2, 1, "", "__set__"]], "ubermagutil.typesystem.Typed": [[196, 2, 1, "", "__set__"]], "ubermagutil.typesystem.Vector": [[197, 2, 1, "", "__set__"]], "ubermagutil.units": [[200, 5, 1, "", "si_max_multiplier"], [201, 5, 1, "", "si_multiplier"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:property", "5": "py:function", "6": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"], "6": ["py", "data", "Python data"]}, "titleterms": {"discretisedfield": [0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 208, 237, 257, 260, 263, 266, 268], "dvalu": 1, "field": [2, 205, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 237, 257, 260, 263, 266, 268, 290, 293, 294, 298, 307, 310, 311, 320], "fieldrot": [3, 222], "line": [4, 216, 218, 220, 225, 228, 267], "mesh": [5, 220, 222, 223, 226, 227, 228, 229, 230, 231, 232, 320], "region": [6, 220, 222, 223, 234, 235, 236, 257, 320], "integr": [7, 220, 239], "interact": [8, 177, 217, 218, 248, 272], "io": [9, 10, 11, 12, 13, 14, 15, 16, 17], "field_from_hdf5": 10, "field_from_ovf": 11, "field_from_vtk": 12, "field_to_hdf5": 13, "field_to_ovf": 14, "field_to_vtk": 15, "ovf2vtk": [16, 17, 233], "plot": [18, 26, 216, 217, 218, 231, 236, 240, 246, 248, 272, 301], "hv": 19, "k3dfield": 20, "k3dmesh": 21, "k3dregion": 22, "mplfield": 23, "mplmesh": 24, "mplregion": 25, "add_colorwheel": 26, "test": [27, 62, 73, 113, 147, 171, 174, 178, 188, 324], "tool": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 224, 233], "count_bp": 29, "count_large_cell_angle_region": 30, "demag_field": 31, "demag_tensor": 32, "emergent_magnetic_field": 33, "max_neigbouring_cell_angl": 34, "neigbouring_cell_angl": 35, "topological_charg": 36, "topological_charge_dens": 37, "mag2exp": [38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 210, 241], "ltem": [39, 40, 41, 42, 43, 239, 241], "defocus_imag": 40, "integrated_magnetic_flux_dens": 41, "phase": 42, "relativistic_wavelength": 43, "magnetometri": [44, 45, 46, 238, 244], "magnetis": [45, 238, 245, 248, 289, 298, 319, 320], "torqu": [46, 244], "mfm": [47, 48, 240], "phase_shift": 48, "quick_plot": [49, 50, 51, 52, 53, 54, 55, 56, 57, 58], "ltem_defocu": 50, "ltem_ft_phas": 51, "ltem_integrated_mfd": 52, "ltem_phas": 53, "mfm_phase_shift": 54, "sans_chiral_funct": 55, "sans_cross_sect": 56, "sax": [57, 65, 243], "x_ray_holographi": 58, "san": [59, 60, 61, 242], "chiral_funct": 60, "cross_sect": 61, "x_rai": [63, 64, 65], "holographi": [64, 246], "micromagneticdata": [66, 73, 211, 264, 301], "abstractdr": 67, "combineddr": [68, 247], "data": [69, 181, 205, 247, 248], "drive": [70, 247, 248, 319], "mumax3dr": 71, "oommfdriv": 72, "micromagneticmodel": [74, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 212], "cubicanisotropi": 75, "dmi": [76, 245, 298, 318], "damp": [77, 252], "demag": [78, 224], "driver": [79, 150, 254], "dynam": [80, 205, 250, 252, 292, 317, 319], "dynamicsterm": 81, "energi": [82, 205, 251, 253, 255, 260, 262, 263, 266, 268, 289, 293, 297, 298, 302, 303, 305, 318, 319], "energyterm": 83, "evolv": [84, 254], "exchang": [85, 245, 253, 263, 298, 303, 318], "externaldriv": 86, "externalrunn": 87, "magnetoelast": 88, "precess": [89, 249, 252], "rkky": [90, 253, 305], "slonczewski": [91, 311], "system": [92, 205, 256, 293, 319], "uniaxialanisotropi": 93, "zeeman": [94, 253, 268, 298, 311, 318], "zhangli": 95, "abstract": [96, 97], "contain": 98, "term": [99, 249, 250, 251, 252, 253, 255, 257, 260, 262, 263, 266, 268, 293, 297, 302, 305], "const": [100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110], "e": [101, 321], "g": [102, 249, 321], "gamma": [103, 249], "gamma0": 104, "h": [105, 268, 308], "hbar": 106, "kb": 107, "me": 108, "mu0": 109, "mub": 110, "exampl": [111, 112, 220, 245, 248, 288, 320], "macrospin": [112, 317], "micromagnetictest": [114, 115, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 213], "calculatortest": [115, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "testcomput": 116, "testcubicanisotropi": 117, "testdmi": 118, "testdamp": 119, "testdemag": 120, "testdynam": 121, "testenergi": 122, "testexchang": 123, "testfixedsubregion": 124, "testhysteresisdriv": 125, "testmesh": 126, "testmindriv": 127, "testprecess": 128, "testrkki": 129, "testslonczewski": 130, "testthread": 131, "testtimedriv": 132, "testuniaxialanisotropi": 133, "testzeeman": 134, "testzhangli": 135, "test_dirnam": 136, "test_format": 137, "test_info_fil": 138, "test_multiple_dr": 139, "test_outputstep": 140, "test_schedul": 141, "test_skyrmion": 142, "test_stdprob3": 143, "test_stdprob4": 144, "test_stdprob5": 145, "get_test": 146, "oommfc": [148, 161, 162, 163, 169, 170, 171, 172, 284], "cgevolv": 149, "eulerevolv": 151, "hysteresisdriv": 152, "mindriv": [153, 264], "rungekuttaevolv": 154, "spintevolv": 155, "spinxferevolv": 156, "timedriv": [157, 267, 312], "uhh_thetaevolv": [158, 299], "xf_thermheunevolv": [159, 299], "xf_thermspinxferevolv": [160, 299], "comput": [161, 220, 239, 240, 241, 242, 243, 244, 246, 248, 293, 297], "delet": [162, 278], "oommf": [163, 169, 207, 324], "dockeroommfrunn": 164, "exeoommfrunn": 165, "oommfrunn": 166, "runner": [167, 170, 259, 296], "tcloommfrunn": 168, "overhead": 169, "test_dock": 172, "ubermag": [173, 174, 207, 285, 319, 323, 324], "ubermagt": [175, 177, 178, 179, 180, 181, 182, 286], "tabl": [176, 270, 271, 272, 273, 274, 275], "util": [179, 180, 181, 182], "column": 180, "unit": [182, 199, 200, 201, 215, 245], "ubermagutil": [183, 184, 185, 186, 187, 188, 189, 198, 199, 200, 201, 278, 287], "changedir": 184, "hysteresis_valu": 185, "inherit_doc": [186, 279], "setup_log": 187, "typesystem": [189, 198, 278], "descriptor": [190, 282], "dictionari": [191, 260, 263, 266, 268, 321], "name": [192, 261], "paramet": [193, 245, 257, 282, 308, 309], "scalar": [194, 215, 216, 218, 311], "subset": 195, "type": [196, 259, 281, 321], "vector": [197, 215, 216, 218, 220, 222, 311], "si_max_multipli": 200, "si_multipli": 201, "api": 202, "refer": [202, 238, 239, 240, 242, 243, 244, 246, 289, 290, 291, 292, 316], "changelog": 203, "0": 203, "66": 203, "oct": 203, "20": 203, "2022": [203, 325], "ad": 203, "chang": [203, 259], "fix": [203, 204, 300], "65": 203, "jul": 203, "17": 203, "64": 203, "03": [203, 266], "63": 203, "jun": 203, "29": 203, "62": 203, "1": [203, 222, 224, 233, 248, 249, 252, 253, 257, 260, 290, 308, 317, 319, 321], "09": 203, "mai": 203, "22": 203, "remov": 203, "61": 203, "2": [203, 220, 222, 224, 233, 248, 249, 252, 253, 257, 298, 309, 317, 319, 321], "mar": 203, "feb": 203, "gener": 203, "60": 203, "2021": 203, "51": 203, "10": [203, 249, 321], "contribut": 204, "bug": 204, "featur": [204, 207, 323], "request": [204, 322], "document": [204, 206, 209, 323], "demo": 205, "vortex": 205, "initialis": 205, "minimis": 205, "displac": 205, "magnet": [205, 224, 239, 240, 249], "free": 205, "relax": [205, 289, 292, 293], "analysi": [205, 264, 301], "compat": 207, "mumax3": 207, "support": 207, "version": 207, "packag": [209, 323], "mumax3c": 214, "defin": [215, 256, 257, 281, 311], "uniform": 215, "visualis": [216, 217, 218, 225, 230, 231, 236, 248, 274], "us": [216, 217, 218, 223, 237, 241, 257, 278, 294, 321], "holoview": 216, "contour": [216, 218], "combin": [216, 218, 248], "multipl": [216, 217, 222, 233, 248, 255, 302, 321], "k3d": [217, 230, 231, 236], "same": [217, 255, 302], "matplotlib": 218, "mpl": [218, 230, 231, 236], "avail": 218, "function": [218, 220, 223, 311, 321], "2d": 218, "hsl": 218, "light": 218, "colorwheel": 218, "build": 218, "custom": [218, 261], "deprec": 218, "valu": [218, 222, 223, 275, 277, 293, 320, 321], "along": [218, 220], "normalis": [219, 248], "oper": [220, 298, 321], "sampl": 220, "extract": [220, 283], "compon": 220, "smaller": 220, "subfield": 220, "align": 220, "ani": 220, "averag": 220, "iter": [220, 321], "through": 220, "intersect": 220, "plane": [220, 228], "cascad": 220, "complex": 220, "algebra": 220, "compund": 220, "product": 220, "dot": 220, "cross": [220, 242, 243, 289], "calculu": 220, "gradient": 220, "nabla": 220, "f": 220, "diverg": 220, "cdot": 220, "curl": 220, "time": [220, 248, 253, 307, 310, 311, 321], "laplac": 220, "volum": 220, "surfac": [220, 235], "improp": 220, "pipelin": 220, "appli": 220, "numpi": 220, "univers": 220, "other": [220, 223, 322], "read": 221, "write": 221, "file": [221, 233, 312], "rotat": [222, 241, 246], "origin": 222, "method": [222, 237, 294], "90": 222, "about": 222, "arbitrari": 222, "angl": [222, 224, 242, 243], "point": 222, "certain": 222, "direct": 222, "detail": 222, "process": 222, "3": [222, 224, 233, 249, 252, 253, 257, 289, 317, 319, 321], "spatial": [223, 260, 262, 263, 266, 268, 307, 308, 309, 320], "vari": [223, 260, 262, 263, 266, 268, 307, 308, 309, 310, 320], "python": [223, 311, 321], "properti": [223, 237, 278], "anoth": 223, "object": [223, 225, 257, 319, 321], "creat": 223, "coordin": 223, "topolog": [224, 248], "charg": [224, 248, 249], "densiti": [224, 239, 248, 298], "between": 224, "cell": 224, "emerg": 224, "count": 224, "bp": 224, "4": [224, 249, 253, 290, 321], "tensor": 224, "basic": [226, 231, 234, 236, 270, 321], "boundari": [227, 304], "condit": [227, 304], "period": [227, 304], "experiment": [227, 311], "neumann": 227, "dirichet": 227, "pad": 229, "subregion": [230, 300], "advanc": [231, 236, 324], "widget": [232, 247, 275], "slider": [232, 275], "axi": 232, "selector": [232, 275], "singl": [233, 315], "wildcard": 233, "face": 235, "import": [237, 321], "export": 237, "from": [237, 252, 253], "xarrai": 237, "dataarrai": 237, "few": 237, "to_xarrai": 237, "except": 237, "from_xarrai": 237, "expect": 237, "input": 237, "dc": 238, "frame": [238, 239, 240, 242, 243, 244, 246], "The": [238, 239, 240, 242, 243, 244, 246, 259, 319], "micromagnet": [238, 239, 240, 242, 243, 244, 245, 246, 256, 298], "simul": [238, 239, 240, 242, 243, 244, 246, 247, 248, 265, 289, 290, 291, 293, 299, 301, 311, 317, 319], "lorentz": 239, "transmiss": 239, "electron": [239, 249], "microscopi": [239, 240], "imag": [239, 240, 241, 246], "defocus": 239, "flux": 239, "forc": 240, "finit": [240, 299], "size": 240, "tip": 240, "quick": [240, 246], "small": [242, 243, 321], "neutron": 242, "scatter": [242, 243], "section": [242, 243], "x": [243, 246], "rai": [243, 246], "recreat": 244, "experi": 244, "convers": [245, 316], "cg": 245, "si": [245, 283], "equival": 245, "atomist": 245, "micromagent": 245, "satur": 245, "anisotropi": [245, 253, 260, 266, 298, 318], "work": 245, "analys": 247, "result": [247, 317], "evolut": 248, "deriv": [248, 250, 251, 254, 293], "quantiti": 248, "select": [248, 321], "onli": [248, 267], "part": 248, "hysteresi": [248, 277, 301, 306], "constant": [249, 257, 260, 262, 263, 266, 268, 276, 303, 308], "elementari": 249, "": [249, 320], "mass": 249, "boltzmann": 249, "5": [249, 253, 291, 321], "planck": 249, "6": [249, 253, 321], "land": 249, "factor": 249, "7": [249, 253], "reduc": 249, "8": 249, "gyrotrop": 249, "ratio": 249, "9": 249, "bohr": 249, "magneton": 249, "llg": 249, "an": [251, 278, 294, 321], "equat": [252, 253, 317, 318, 319], "zhang": [252, 311], "li": [252, 311], "acces": [252, 253], "individu": [252, 253, 293], "independ": 253, "depend": [253, 311], "uniaxi": [253, 266, 298, 318], "demagnetis": 253, "dzyaloshinskii": [253, 262, 318], "moriya": [253, 262, 318], "cubic": [253, 260], "class": [254, 255, 278, 302], "per": 257, "usag": 258, "control": [259, 280], "default": [259, 267], "differ": 259, "go": 259, "back": 259, "tutori": [260, 262, 263, 266, 268, 323], "05": 260, "k_": 260, "mathbf": [260, 266, 268, 290, 308], "u": [260, 266], "k": [260, 266], "_": [260, 290], "directori": 261, "04": 262, "d": 262, "02": 263, "A": 263, "step": 264, "run": [265, 267], "parallel": 265, "higher": 266, "order": 266, "verbos": 267, "level": 267, "One": 267, "summari": 267, "silent": 267, "progress": 267, "bar": 267, "01": 268, "fft": 271, "merg": 273, "attribut": [276, 278], "impos": 278, "decor": 279, "log": 280, "otherwis": 281, "prefix": 283, "standard": [289, 290, 291, 292, 324], "problem": [289, 290, 291, 292, 315, 316], "specif": [289, 290, 291, 292], "state": 289, "first": [290, 319], "stage": [290, 292], "second": 290, "b": [290, 321], "postprocess": [290, 292], "spin": 291, "polaris": 291, "current": [291, 311, 315], "fmr": 292, "effect": [293, 298], "calcul": [294, 298, 324], "strai": 294, "airbox": 294, "skyrmion": [295, 318], "disk": [295, 312, 318], "choos": 296, "t": 298, "oversimplifi": 298, "temperatur": 299, "loop": 301, "neg": 303, "sine": 306, "both": 307, "how": [311, 322, 323, 324], "properli": 311, "thi": 311, "puls": 311, "pre": 311, "measur": 311, "tcl": 311, "faq": 312, "number": [312, 321], "written": 312, "get": [313, 321], "start": 313, "jupyt": 314, "lab": 314, "exercis": [315, 316, 317, 320], "induc": 315, "domain": [315, 316], "wall": [315, 316], "motion": 315, "descript": [315, 316], "pair": [315, 316], "solut": 316, "competit": 318, "our": 319, "main": 319, "initi": 319, "inspect": 319, "m_": 320, "mathrm": 320, "variabl": 321, "larg": 321, "addit": 321, "c": 321, "subtract": 321, "divis": 321, "power": 321, "more": 321, "complic": 321, "list": 321, "tupl": 321, "index": 321, "length": 321, "element": 321, "unpack": 321, "keyword": 321, "argument": 321, "common": 321, "mistak": 321, "No": 321, "colon": 321, "indent": 321, "mix": 321, "undefin": 321, "modul": 321, "i": [321, 322, 323], "orient": 321, "program": 321, "help": [321, 322], "prepar": 322, "your": 322, "render": 322, "output": 322, "similar": 322, "what": 323, "cloud": 323, "author": 323, "cite": 323, "licens": 323, "acknowledg": 323, "instal": 324, "recommend": 324, "environ": 324, "updat": 324, "check": 324, "doe": 324, "find": 324, "develop": 324, "new": 325, "winter": 325, "workshop": 325, "summer": 325, "code": 325, "sprint": 325}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx": 57}, "alltitles": {"discretisedfield": [[0, "module-discretisedfield"], [208, "discretisedfield"], [208, null]], "DValue": [[1, "dvalue"]], "Field": [[2, "field"], [320, "Field"]], "FieldRotator": [[3, "fieldrotator"], [222, "FieldRotator"]], "Line": [[4, "line"]], "Mesh": [[5, "mesh"], [320, "Mesh"]], "Region": [[6, "region"], [320, "Region"]], "discretisedfield.integral": [[7, "discretisedfield-integral"]], "discretisedfield.interact": [[8, "discretisedfield-interact"]], "discretisedfield.io": [[9, "module-discretisedfield.io"]], "discretisedfield.io.field_from_hdf5": [[10, "discretisedfield-io-field-from-hdf5"]], "discretisedfield.io.field_from_ovf": [[11, "discretisedfield-io-field-from-ovf"]], "discretisedfield.io.field_from_vtk": [[12, "discretisedfield-io-field-from-vtk"]], "discretisedfield.io.field_to_hdf5": [[13, "discretisedfield-io-field-to-hdf5"]], "discretisedfield.io.field_to_ovf": [[14, "discretisedfield-io-field-to-ovf"]], "discretisedfield.io.field_to_vtk": [[15, "discretisedfield-io-field-to-vtk"]], "discretisedfield.io.ovf2vtk": [[16, "module-discretisedfield.io.ovf2vtk"]], "discretisedfield.io.ovf2vtk.ovf2vtk": [[17, "discretisedfield-io-ovf2vtk-ovf2vtk"]], "discretisedfield.plotting": [[18, "module-discretisedfield.plotting"]], "Hv": [[19, "hv"]], "K3dField": [[20, "k3dfield"]], "K3dMesh": [[21, "k3dmesh"]], "K3dRegion": [[22, "k3dregion"]], "MplField": [[23, "mplfield"]], "MplMesh": [[24, "mplmesh"]], "MplRegion": [[25, "mplregion"]], "discretisedfield.plotting.add_colorwheel": [[26, "discretisedfield-plotting-add-colorwheel"]], "discretisedfield.test": [[27, "discretisedfield-test"]], "discretisedfield.tools": [[28, "module-discretisedfield.tools"]], "discretisedfield.tools.count_bps": [[29, "discretisedfield-tools-count-bps"]], "discretisedfield.tools.count_large_cell_angle_regions": [[30, "discretisedfield-tools-count-large-cell-angle-regions"]], "discretisedfield.tools.demag_field": [[31, "discretisedfield-tools-demag-field"]], "discretisedfield.tools.demag_tensor": [[32, "discretisedfield-tools-demag-tensor"]], "discretisedfield.tools.emergent_magnetic_field": [[33, "discretisedfield-tools-emergent-magnetic-field"]], "discretisedfield.tools.max_neigbouring_cell_angle": [[34, "discretisedfield-tools-max-neigbouring-cell-angle"]], "discretisedfield.tools.neigbouring_cell_angle": [[35, "discretisedfield-tools-neigbouring-cell-angle"]], "discretisedfield.tools.topological_charge": [[36, "discretisedfield-tools-topological-charge"]], "discretisedfield.tools.topological_charge_density": [[37, "discretisedfield-tools-topological-charge-density"]], "mag2exp": [[38, "module-mag2exp"], [210, "mag2exp"], [210, null]], "mag2exp.ltem": [[39, "module-mag2exp.ltem"]], "mag2exp.ltem.defocus_image": [[40, "mag2exp-ltem-defocus-image"]], "mag2exp.ltem.integrated_magnetic_flux_density": [[41, "mag2exp-ltem-integrated-magnetic-flux-density"]], "mag2exp.ltem.phase": [[42, "mag2exp-ltem-phase"]], "mag2exp.ltem.relativistic_wavelength": [[43, "mag2exp-ltem-relativistic-wavelength"]], "mag2exp.magnetometry": [[44, "module-mag2exp.magnetometry"]], "mag2exp.magnetometry.magnetisation": [[45, "mag2exp-magnetometry-magnetisation"]], "mag2exp.magnetometry.torque": [[46, "mag2exp-magnetometry-torque"]], "mag2exp.mfm": [[47, "module-mag2exp.mfm"]], "mag2exp.mfm.phase_shift": [[48, "mag2exp-mfm-phase-shift"]], "mag2exp.quick_plots": [[49, "module-mag2exp.quick_plots"]], "mag2exp.quick_plots.ltem_defocus": [[50, "mag2exp-quick-plots-ltem-defocus"]], "mag2exp.quick_plots.ltem_ft_phase": [[51, "mag2exp-quick-plots-ltem-ft-phase"]], "mag2exp.quick_plots.ltem_integrated_mfd": [[52, "mag2exp-quick-plots-ltem-integrated-mfd"]], "mag2exp.quick_plots.ltem_phase": [[53, "mag2exp-quick-plots-ltem-phase"]], "mag2exp.quick_plots.mfm_phase_shift": [[54, "mag2exp-quick-plots-mfm-phase-shift"]], "mag2exp.quick_plots.sans_chiral_function": [[55, "mag2exp-quick-plots-sans-chiral-function"]], "mag2exp.quick_plots.sans_cross_section": [[56, "mag2exp-quick-plots-sans-cross-section"]], "mag2exp.quick_plots.saxs": [[57, "mag2exp-quick-plots-saxs"]], "mag2exp.quick_plots.x_ray_holography": [[58, "mag2exp-quick-plots-x-ray-holography"]], "mag2exp.sans": [[59, "module-mag2exp.sans"]], "mag2exp.sans.chiral_function": [[60, "mag2exp-sans-chiral-function"]], "mag2exp.sans.cross_section": [[61, "mag2exp-sans-cross-section"]], "mag2exp.test": [[62, "mag2exp-test"]], "mag2exp.x_ray": [[63, "module-mag2exp.x_ray"]], "mag2exp.x_ray.holography": [[64, "mag2exp-x-ray-holography"]], "mag2exp.x_ray.saxs": [[65, "mag2exp-x-ray-saxs"]], "micromagneticdata": [[66, "module-micromagneticdata"], [211, "micromagneticdata"], [211, null]], "AbstractDrive": [[67, "abstractdrive"]], "CombinedDrive": [[68, "combineddrive"], [247, "CombinedDrive"]], "Data": [[69, "data"], [247, "Data"]], "Drive": [[70, "drive"], [247, "Drive"]], "Mumax3Drive": [[71, "mumax3drive"]], "OOMMFDrive": [[72, "oommfdrive"]], "micromagneticdata.test": [[73, "micromagneticdata-test"]], "micromagneticmodel": [[74, "module-micromagneticmodel"], [212, "micromagneticmodel"], [212, null]], "CubicAnisotropy": [[75, "cubicanisotropy"]], "DMI": [[76, "dmi"], [245, "DMI"]], "Damping": [[77, "damping"]], "Demag": [[78, "demag"]], "Driver": [[79, "driver"], [150, "driver"]], "Dynamics": [[80, "dynamics"]], "DynamicsTerm": [[81, "dynamicsterm"]], "Energy": [[82, "energy"], [298, "Energy"], [298, "id2"], [298, "id5"], [298, "id8"]], "EnergyTerm": [[83, "energyterm"]], "Evolver": [[84, "evolver"]], "Exchange": [[85, "exchange"], [245, "Exchange"], [298, "Exchange"]], "ExternalDriver": [[86, "externaldriver"]], "ExternalRunner": [[87, "externalrunner"]], "MagnetoElastic": [[88, "magnetoelastic"]], "Precession": [[89, "precession"]], "RKKY": [[90, "rkky"]], "Slonczewski": [[91, "slonczewski"]], "System": [[92, "system"]], "UniaxialAnisotropy": [[93, "uniaxialanisotropy"]], "Zeeman": [[94, "zeeman"], [298, "Zeeman"]], "ZhangLi": [[95, "zhangli"]], "micromagneticmodel.abstract": [[96, "module-micromagneticmodel.abstract"]], "Abstract": [[97, "abstract"]], "Container": [[98, "container"]], "Term": [[99, "term"]], "micromagneticmodel.consts": [[100, "module-micromagneticmodel.consts"]], "micromagneticmodel.consts.e": [[101, "micromagneticmodel-consts-e"]], "micromagneticmodel.consts.g": [[102, "micromagneticmodel-consts-g"]], "micromagneticmodel.consts.gamma": [[103, "micromagneticmodel-consts-gamma"]], "micromagneticmodel.consts.gamma0": [[104, "micromagneticmodel-consts-gamma0"]], "micromagneticmodel.consts.h": [[105, "micromagneticmodel-consts-h"]], "micromagneticmodel.consts.hbar": [[106, "micromagneticmodel-consts-hbar"]], "micromagneticmodel.consts.kB": [[107, "micromagneticmodel-consts-kb"]], "micromagneticmodel.consts.me": [[108, "micromagneticmodel-consts-me"]], "micromagneticmodel.consts.mu0": [[109, "micromagneticmodel-consts-mu0"]], "micromagneticmodel.consts.muB": [[110, "micromagneticmodel-consts-mub"]], "micromagneticmodel.examples": [[111, "module-micromagneticmodel.examples"]], "micromagneticmodel.examples.macrospin": [[112, "micromagneticmodel-examples-macrospin"]], "micromagneticmodel.test": [[113, "micromagneticmodel-test"]], "micromagnetictests": [[114, "module-micromagnetictests"], [213, "micromagnetictests"], [213, null]], "micromagnetictests.calculatortests": [[115, "module-micromagnetictests.calculatortests"]], "TestCompute": [[116, "testcompute"]], "TestCubicAnisotropy": [[117, "testcubicanisotropy"]], "TestDMI": [[118, "testdmi"]], "TestDamping": [[119, "testdamping"]], "TestDemag": [[120, "testdemag"]], "TestDynamics": [[121, "testdynamics"]], "TestEnergy": [[122, "testenergy"]], "TestExchange": [[123, "testexchange"]], "TestFixedSubregions": [[124, "testfixedsubregions"]], "TestHysteresisDriver": [[125, "testhysteresisdriver"]], "TestMesh": [[126, "testmesh"]], "TestMinDriver": [[127, "testmindriver"]], "TestPrecession": [[128, "testprecession"]], "TestRKKY": [[129, "testrkky"]], "TestSlonczewski": [[130, "testslonczewski"]], "TestThreads": [[131, "testthreads"]], "TestTimeDriver": [[132, "testtimedriver"]], "TestUniaxialAnisotropy": [[133, "testuniaxialanisotropy"]], "TestZeeman": [[134, "testzeeman"]], "TestZhangLi": [[135, "testzhangli"]], "micromagnetictests.calculatortests.test_dirname": [[136, "micromagnetictests-calculatortests-test-dirname"]], "micromagnetictests.calculatortests.test_format": [[137, "micromagnetictests-calculatortests-test-format"]], "micromagnetictests.calculatortests.test_info_file": [[138, "micromagnetictests-calculatortests-test-info-file"]], "micromagnetictests.calculatortests.test_multiple_drives": [[139, "micromagnetictests-calculatortests-test-multiple-drives"]], "micromagnetictests.calculatortests.test_outputstep": [[140, "micromagnetictests-calculatortests-test-outputstep"]], "micromagnetictests.calculatortests.test_schedule": [[141, "micromagnetictests-calculatortests-test-schedule"]], "micromagnetictests.calculatortests.test_skyrmion": [[142, "micromagnetictests-calculatortests-test-skyrmion"]], "micromagnetictests.calculatortests.test_stdprob3": [[143, "micromagnetictests-calculatortests-test-stdprob3"]], "micromagnetictests.calculatortests.test_stdprob4": [[144, "micromagnetictests-calculatortests-test-stdprob4"]], "micromagnetictests.calculatortests.test_stdprob5": [[145, "micromagnetictests-calculatortests-test-stdprob5"]], "micromagnetictests.get_tests": [[146, "micromagnetictests-get-tests"]], "micromagnetictests.test": [[147, "micromagnetictests-test"]], "oommfc": [[148, "module-oommfc"], [284, "oommfc"], [284, null]], "CGEvolver": [[149, "cgevolver"]], "EulerEvolver": [[151, "eulerevolver"]], "HysteresisDriver": [[152, "hysteresisdriver"]], "MinDriver": [[153, "mindriver"]], "RungeKuttaEvolver": [[154, "rungekuttaevolver"]], "SpinTEvolver": [[155, "spintevolver"]], "SpinXferEvolver": [[156, "spinxferevolver"]], "TimeDriver": [[157, "timedriver"]], "UHH_ThetaEvolver": [[158, "uhh-thetaevolver"], [299, "UHH_ThetaEvolver"]], "Xf_ThermHeunEvolver": [[159, "xf-thermheunevolver"], [299, "Xf_ThermHeunEvolver"]], "Xf_ThermSpinXferEvolver": [[160, "xf-thermspinxferevolver"], [299, "Xf_ThermSpinXferEvolver"]], "oommfc.compute": [[161, "oommfc-compute"]], "oommfc.delete": [[162, "oommfc-delete"]], "oommfc.oommf": [[163, "module-oommfc.oommf"]], "DockerOOMMFRunner": [[164, "dockeroommfrunner"]], "ExeOOMMFRunner": [[165, "exeoommfrunner"]], "OOMMFRunner": [[166, "oommfrunner"]], "Runner": [[167, "runner"]], "TclOOMMFRunner": [[168, "tcloommfrunner"]], "oommfc.oommf.overhead": [[169, "oommfc-oommf-overhead"]], "oommfc.runner": [[170, "oommfc-runner"]], "oommfc.test": [[171, "oommfc-test"]], "oommfc.test_docker": [[172, "oommfc-test-docker"]], "ubermag": [[173, "module-ubermag"], [285, "ubermag"]], "ubermag.test": [[174, "ubermag-test"]], "ubermagtable": [[175, "module-ubermagtable"], [286, "ubermagtable"], [286, null]], "Table": [[176, "table"]], "ubermagtable.interact": [[177, "ubermagtable-interact"]], "ubermagtable.test": [[178, "ubermagtable-test"]], "ubermagtable.util": [[179, "module-ubermagtable.util"]], "ubermagtable.util.columns": [[180, "ubermagtable-util-columns"]], "ubermagtable.util.data": [[181, "ubermagtable-util-data"]], "ubermagtable.util.units": [[182, "ubermagtable-util-units"]], "ubermagutil": [[183, "module-ubermagutil"], [287, "ubermagutil"], [287, null]], "ubermagutil.changedir": [[184, "ubermagutil-changedir"]], "ubermagutil.hysteresis_values": [[185, "ubermagutil-hysteresis-values"]], "ubermagutil.inherit_docs": [[186, "ubermagutil-inherit-docs"]], "ubermagutil.setup_logging": [[187, "ubermagutil-setup-logging"]], "ubermagutil.test": [[188, "ubermagutil-test"]], "ubermagutil.typesystem": [[189, "module-ubermagutil.typesystem"]], "Descriptor": [[190, "descriptor"]], "Dictionary": [[191, "dictionary"], [260, "Dictionary"], [263, "Dictionary"], [266, "Dictionary"], [268, "Dictionary"]], "Name": [[192, "name"]], "Parameter": [[193, "parameter"]], "Scalar": [[194, "scalar"], [311, "Scalar"]], "Subset": [[195, "subset"]], "Typed": [[196, "typed"]], "Vector": [[197, "vector"], [311, "Vector"]], "ubermagutil.typesystem.typesystem": [[198, "ubermagutil-typesystem-typesystem"]], "ubermagutil.units": [[199, "module-ubermagutil.units"]], "ubermagutil.units.si_max_multiplier": [[200, "ubermagutil-units-si-max-multiplier"]], "ubermagutil.units.si_multiplier": [[201, "ubermagutil-units-si-multiplier"]], "API Reference": [[202, "api-reference"]], "Changelog": [[203, "changelog"]], "0.66.0 (Oct 20, 2022)": [[203, "oct-20-2022"]], "Added": [[203, "added"], [203, "id2"], [203, "id6"], [203, "id9"], [203, "id13"]], "Changed": [[203, "changed"], [203, "id1"], [203, "id3"], [203, "id10"]], "Fixed": [[203, "fixed"], [203, "id4"], [203, "id5"], [203, "id7"], [203, "id8"], [203, "id11"], [203, "id14"]], "0.65.0 (Jul 17, 2022)": [[203, "jul-17-2022"]], "0.64.0 (Jul 03, 2022)": [[203, "jul-03-2022"]], "0.63.0 (Jun 29, 2022)": [[203, "jun-29-2022"]], "0.62.1 (Jun 09, 2022)": [[203, "jun-09-2022"]], "0.62.0 (May 22, 2022)": [[203, "may-22-2022"]], "Removed": [[203, "removed"]], "0.61.2 (Mar 17, 2022)": [[203, "mar-17-2022"]], "0.61.0 (Feb 22, 2022)": [[203, "feb-22-2022"]], "General": [[203, "general"], [203, "id12"]], "0.60.0 (Oct 1, 2021)": [[203, "oct-1-2021"]], "0.51 (Feb 10, 2021)": [[203, "feb-10-2021"]], "Contributing": [[204, "contributing"]], "Bugs": [[204, "bugs"]], "Fixing a Bug": [[204, "fixing-a-bug"]], "Feature requests": [[204, "feature-requests"]], "Documentation": [[204, "documentation"], [206, "documentation"]], "Demo": [[205, "Demo"]], "Vortex dynamics": [[205, "Vortex-dynamics"]], "System initialisation": [[205, "System-initialisation"]], "Energy minimisation": [[205, "Energy-minimisation"]], "Displacement with magnetic field": [[205, "Displacement-with-magnetic-field"]], "Free relaxation": [[205, "Free-relaxation"]], "Data analysis": [[205, "Data-analysis"]], "Compatibility: Ubermag - OOMMF - mumax3": [[207, "compatibility-ubermag-oommf-mumax3"]], "Supported features": [[207, "supported-features"]], "Compatible versions": [[207, "compatible-versions"]], "Package documentation": [[209, "package-documentation"]], "mumax3c": [[214, "mumax3c"]], "Defining a uniform field": [[215, "Defining-a-uniform-field"]], "Scalar field": [[215, "Scalar-field"]], "Vector field": [[215, "Vector-field"]], "Field units": [[215, "Field-units"]], "Visualising field using holoviews": [[216, "Visualising-field-using-holoviews"]], "Scalar plot": [[216, "Scalar-plot"]], "Vector plot": [[216, "Vector-plot"]], "Contour lines": [[216, "Contour-lines"]], "Combining multiple plots": [[216, "Combining-multiple-plots"]], "Field visualisation using k3d": [[217, "Field-visualisation-using-k3d"]], "Multiple visualisation on the same plot": [[217, "Multiple-visualisation-on-the-same-plot"]], "k3d interactive plots": [[217, "k3d-interactive-plots"]], "Visualising field using matplotlib": [[218, "Visualising-field-using-matplotlib"]], "Plotting using Field.mpl()": [[218, "Plotting-using-Field.mpl()"]], "Available plotting functions": [[218, "Available-plotting-functions"]], "Scalar field visualisation \u2013 mpl.scalar": [[218, "Scalar-field-visualisation-\u2013-mpl.scalar"]], "Vector field visualisation \u2013 mpl.vector": [[218, "Vector-field-visualisation-\u2013-mpl.vector"]], "2d vector fields": [[218, "2d-vector-fields"]], "Contour line plots \u2013 mpl.contour": [[218, "Contour-line-plots-\u2013-mpl.contour"]], "HSL plots \u2013 mpl.lightness": [[218, "HSL-plots-\u2013-mpl.lightness"]], "colorwheel": [[218, "colorwheel"]], "Combining scalar and vector plots \u2013 mpl()": [[218, "Combining-scalar-and-vector-plots-\u2013-mpl()"]], "Building a custom plot": [[218, "Building-a-custom-plot"]], "[DEPRECATED] Interactive plots": [[218, "[DEPRECATED]-Interactive-plots"]], "Plotting field values along the line": [[218, "Plotting-field-values-along-the-line"]], "Field normalisation": [[219, "Field-normalisation"]], "Field operations": [[220, "Field-operations"]], "Sampling the field": [[220, "Sampling-the-field"]], "Extracting the component of a vector field": [[220, "Extracting-the-component-of-a-vector-field"]], "Extracting smaller region": [[220, "Extracting-smaller-region"]], "Extracting subfield on aligned mesh": [[220, "Extracting-subfield-on-aligned-mesh"]], "Extracting field on any mesh": [[220, "Extracting-field-on-any-mesh"]], "Computing the average": [[220, "Computing-the-average"]], "Iterating through the field": [[220, "Iterating-through-the-field"]], "Sampling the field along the line": [[220, "Sampling-the-field-along-the-line"]], "Intersecting the field with a plane": [[220, "Intersecting-the-field-with-a-plane"]], "Cascading the operations": [[220, "Cascading-the-operations"]], "Complex fields": [[220, "Complex-fields"]], "Algebra operations": [[220, "Algebra-operations"]], "+ operation": [[220, "+-operation"]], "- operation": [[220, "--operation"]], "* operation": [[220, "*-operation"]], "/ operation": [[220, "/-operation"]], "** operator": [[220, "**-operator"]], "Compund operations": [[220, "Compund-operations"]], "Vector products": [[220, "Vector-products"]], "Dot product": [[220, "Dot-product"]], "Cross product": [[220, "Cross-product"]], "Vector calculus": [[220, "Vector-calculus"]], "Gradient (\\nabla f)": [[220, "Gradient-(\\nabla-f)"]], "Divergence (\\nabla \\cdot f)": [[220, "Divergence-(\\nabla-\\cdot-f)"]], "Curl (\\nabla \\times f)": [[220, "Curl-(\\nabla-\\times-f)"]], "Laplace operator (\\nabla^{2} f)": [[220, "Laplace-operator-(\\nabla^{2}-f)"]], "Integrals": [[220, "Integrals"]], "Volume integral": [[220, "Volume-integral"]], "Surface integral": [[220, "Surface-integral"]], "Line integrals": [[220, "Line-integrals"]], "Improper integrals": [[220, "Improper-integrals"]], "Example": [[220, "Example"], [220, "id4"], [320, "Example"]], "Operation pipelines": [[220, "Operation-pipelines"]], "Applying numpys universal functions": [[220, "Applying-numpys-universal-functions"]], "Other": [[220, "Other"], [223, "Other"]], "Reading and writing fields": [[221, "Reading-and-writing-fields"]], "Writing the field to a file": [[221, "Writing-the-field-to-a-file"]], "Reading files": [[221, "Reading-files"]], "Field rotation": [[222, "Field-rotation"]], "Rotating a field": [[222, "Rotating-a-field"]], "Original field": [[222, "Original-field"]], "Rotation methods": [[222, "Rotation-methods"]], "Rotations by multiples of 90\u00b0": [[222, "Rotations-by-multiples-of-90\u00b0"]], "Rotations about arbitrary angles": [[222, "Rotations-about-arbitrary-angles"]], "Rotating a vector to point in a certain direction": [[222, "Rotating-a-vector-to-point-in-a-certain-direction"]], "Details of the rotation process": [[222, "Details-of-the-rotation-process"]], "1. Rotation of the region": [[222, "1.-Rotation-of-the-region"]], "2. Rotation of the mesh": [[222, "2.-Rotation-of-the-mesh"]], "3. Rotation of the field values": [[222, "3.-Rotation-of-the-field-values"]], "Spatially varying fields": [[223, "Spatially-varying-fields"]], "Using a Python function": [[223, "Using-a-Python-function"]], "Value property": [[223, "Value-property"]], "Using mesh regions": [[223, "Using-mesh-regions"]], "Using another Field object": [[223, "Using-another-Field-object"]], "Creating a field with coordinate values": [[223, "Creating-a-field-with-coordinate-values"]], "Field tools": [[224, "Field-tools"]], "1. Topological charge/topological charge density": [[224, "1.-Topological-charge/topological-charge-density"]], "2. Angles between cells": [[224, "2.-Angles-between-cells"]], "3. Emergent magnetic field and counting of BPs": [[224, "3.-Emergent-magnetic-field-and-counting-of-BPs"]], "4. Demag tensor": [[224, "4.-Demag-tensor"]], "Line object": [[225, "Line-object"]], "Line visualisation": [[225, "Line-visualisation"]], "Mesh basics": [[226, "Mesh-basics"]], "Mesh boundary conditions": [[227, "Mesh-boundary-conditions"]], "Periodic boundary conditions": [[227, "Periodic-boundary-conditions"], [304, "Periodic-boundary-conditions"]], "Experimental: Neumann and Dirichet boundary conditions": [[227, "Experimental:-Neumann-and-Dirichet-boundary-conditions"]], "Mesh plane and line": [[228, "Mesh-plane-and-line"]], "Plane mesh": [[228, "Plane-mesh"]], "Mesh pad": [[229, "Mesh-pad"]], "Mesh subregions": [[230, "Mesh-subregions"]], "Mesh subregions visualisation": [[230, "Mesh-subregions-visualisation"]], "mpl": [[230, "mpl"], [231, "mpl"], [236, "mpl"]], "k3d": [[230, "k3d"], [231, "k3d"], [236, "k3d"]], "Mesh visualisation": [[231, "Mesh-visualisation"]], "Basic plotting": [[231, "Basic-plotting"], [236, "Basic-plotting"]], "Advanced plotting": [[231, "Advanced-plotting"], [236, "Advanced-plotting"]], "Mesh widgets": [[232, "Mesh-widgets"]], "Slider": [[232, "Slider"], [275, "Slider"]], "Axis selector": [[232, "Axis-selector"]], "ovf2vtk tool": [[233, "ovf2vtk-tool"]], "1. Single file": [[233, "1.-Single-file"]], "2. Multiple files": [[233, "2.-Multiple-files"]], "3. Wildcard": [[233, "3.-Wildcard"]], "Region basics": [[234, "Region-basics"]], "Region facing surfaces": [[235, "Region-facing-surfaces"]], "Region visualisation": [[236, "Region-visualisation"]], "Importing/Exporting field from/to xarray.DataArray": [[237, "Importing/Exporting-field-from/to-xarray.DataArray"]], "Exporting discretisedfield.Field to xarray.DataArray": [[237, "Exporting-discretisedfield.Field-to-xarray.DataArray"]], "Few useful xarray.DataArray methods": [[237, "Few-useful-xarray.DataArray-methods"]], "to_xarray exceptions": [[237, "to_xarray-exceptions"]], "from_xarray exceptions and expected properties of input xarray.DataArray": [[237, "from_xarray-exceptions-and-expected-properties-of-input-xarray.DataArray"]], "DC magnetometry": [[238, "DC-magnetometry"]], "Magnetometry Reference frame": [[238, "Magnetometry-Reference-frame"], [244, "Magnetometry-Reference-frame"]], "The micromagnetic simulation": [[238, "The-micromagnetic-simulation"], [239, "The-micromagnetic-simulation"], [240, "The-micromagnetic-simulation"], [242, "The-micromagnetic-simulation"], [243, "The-micromagnetic-simulation"], [244, "The-micromagnetic-simulation"], [246, "The-micromagnetic-simulation"]], "DC Magnetisation": [[238, "DC-Magnetisation"]], "Lorentz Transmission Electron Microscopy": [[239, "Lorentz-Transmission-Electron-Microscopy"]], "LTEM Reference frame": [[239, "LTEM-Reference-frame"]], "Computing LTEM images": [[239, "Computing-LTEM-images"], [241, "Computing-LTEM-images"]], "Defocused Imaging": [[239, "Defocused-Imaging"]], "Integrated magnetic flux density": [[239, "Integrated-magnetic-flux-density"]], "Magnetic Force Microscopy": [[240, "Magnetic-Force-Microscopy"]], "MFM Reference frame": [[240, "MFM-Reference-frame"]], "Computing MFM images": [[240, "Computing-MFM-images"]], "The finite size of the tip": [[240, "The-finite-size-of-the-tip"]], "Quick plots": [[240, "Quick-plots"], [246, "Quick-plots"]], "Using Rotations with mag2exp": [[241, "Using-Rotations-with-mag2exp"]], "Small Angle Neutron Scattering": [[242, "Small-Angle-Neutron-Scattering"]], "SANS Reference frame": [[242, "SANS-Reference-frame"]], "Computing SANS Cross-sections": [[242, "Computing-SANS-Cross-sections"]], "Small Angle X-ray Scattering": [[243, "Small-Angle-X-ray-Scattering"]], "SAXS Reference frame": [[243, "SAXS-Reference-frame"]], "Computing SAXS Cross-sections": [[243, "Computing-SAXS-Cross-sections"]], "Torque magnetometry": [[244, "Torque-magnetometry"]], "Computing Torque Magnetometry": [[244, "Computing-Torque-Magnetometry"]], "Recreating experiments": [[244, "Recreating-experiments"]], "Unit Conversions": [[245, "Unit-Conversions"]], "CGS to SI": [[245, "CGS-to-SI"]], "Equivalencies": [[245, "Equivalencies"]], "Parameters": [[245, "Parameters"]], "Atomistic": [[245, "Atomistic"], [245, "id1"], [245, "id2"], [245, "id4"]], "Micromagnetic": [[245, "Micromagnetic"], [245, "id3"]], "Micromagentic": [[245, "Micromagentic"]], "Saturation Magnetisation": [[245, "Saturation-Magnetisation"]], "Micromagnetics": [[245, "Micromagnetics"]], "Anisotropy": [[245, "Anisotropy"]], "Worked Example": [[245, "Worked-Example"]], "X-ray Holography": [[246, "X-ray-Holography"]], "X-ray holography reference frame": [[246, "X-ray-holography-reference-frame"]], "Computing X-ray holography images": [[246, "Computing-X-ray-holography-images"]], "Rotations": [[246, "Rotations"]], "Analysing simulation results": [[247, "Analysing-simulation-results"]], "Widgets": [[247, "Widgets"]], "Interactive plots": [[248, "Interactive-plots"]], "Visualising computed magnetisation data": [[248, "Visualising-computed-magnetisation-data"]], "Time evolution of the magnetisation": [[248, "Time-evolution-of-the-magnetisation"], [248, "id1"], [248, "id2"]], "Combining multiple drives": [[248, "Combining-multiple-drives"]], "Computing derived quantities": [[248, "Computing-derived-quantities"]], "Selecting only a part of the drive": [[248, "Selecting-only-a-part-of-the-drive"]], "Normalised magnetisation": [[248, "Normalised-magnetisation"]], "Topological charge density - example 1": [[248, "Topological-charge-density---example-1"]], "Topological charge density - example 2": [[248, "Topological-charge-density---example-2"]], "Hysteresis simulation": [[248, "Hysteresis-simulation"]], "Constants": [[249, "Constants"]], "1. Magnetic constant": [[249, "1.-Magnetic-constant"]], "2. Elementary charge": [[249, "2.-Elementary-charge"]], "3. Electron\u2019s mass": [[249, "3.-Electron\u2019s-mass"]], "4. Boltzmann constant": [[249, "4.-Boltzmann-constant"]], "5. Planck\u2019s constant": [[249, "5.-Planck\u2019s-constant"]], "6. Lande g-factor": [[249, "6.-Lande-g-factor"]], "7. Reduced Planck constant": [[249, "7.-Reduced-Planck-constant"]], "8. Gyrotropic ratio": [[249, "8.-Gyrotropic-ratio"]], "9. Bohr magneton": [[249, "9.-Bohr-magneton"]], "10. LLG precession term gamma": [[249, "10.-LLG-precession-term-gamma"]], "Deriving a dynamics term": [[250, "Deriving-a-dynamics-term"]], "Deriving an energy term": [[251, "Deriving-an-energy-term"]], "Dynamics terms and dynamics equation": [[252, "Dynamics-terms-and-dynamics-equation"]], "Dynamics terms": [[252, "Dynamics-terms"]], "1. Precession": [[252, "1.-Precession"]], "2. Damping": [[252, "2.-Damping"]], "3. Zhang-Li term": [[252, "3.-Zhang-Li-term"]], "Dynamics equation": [[252, "Dynamics-equation"], [317, "Dynamics-equation"]], "Accesing individual dynamics terms from the dynamics equation": [[252, "Accesing-individual-dynamics-terms-from-the-dynamics-equation"]], "Energy terms and energy equation": [[253, "Energy-terms-and-energy-equation"]], "Energy terms": [[253, "Energy-terms"]], "1. Exchange energy": [[253, "1.-Exchange-energy"]], "2. Zeeman energy": [[253, "2.-Zeeman-energy"]], "Time-independent": [[253, "Time-independent"]], "Time-dependent": [[253, "Time-dependent"]], "3. Uniaxial anisotropy": [[253, "3.-Uniaxial-anisotropy"]], "4. Demagnetisation energy": [[253, "4.-Demagnetisation-energy"]], "5. Dzyaloshinskii-Moriya energy": [[253, "5.-Dzyaloshinskii-Moriya-energy"]], "6. Cubic anisotropy": [[253, "6.-Cubic-anisotropy"]], "7. RKKY": [[253, "7.-RKKY"]], "Energy equation": [[253, "Energy-equation"], [318, "Energy-equation"]], "Accesing the individual energy terms from the energy equation": [[253, "Accesing-the-individual-energy-terms-from-the-energy-equation"]], "Deriving evolver and driver classes": [[254, "Deriving-evolver-and-driver-classes"]], "Multiple energy terms of the same class": [[255, "Multiple-energy-terms-of-the-same-class"], [302, "Multiple-energy-terms-of-the-same-class"]], "Defining micromagnetic system": [[256, "Defining-micromagnetic-system"]], "Term parameters": [[257, "Term-parameters"]], "1. Constant parameters": [[257, "1.-Constant-parameters"]], "2. Parameters defined \u201cper region\u201d": [[257, "2.-Parameters-defined-\u201cper-region\u201d"]], "3. Parameters defined using discretisedfield.Field object": [[257, "3.-Parameters-defined-using-discretisedfield.Field-object"]], "Usage": [[258, "Usage"]], "Controlling the default runner": [[259, "Controlling-the-default-runner"]], "Different runners": [[259, "Different-runners"]], "The default runner": [[259, "The-default-runner"]], "Defaults for the different runner types": [[259, "Defaults-for-the-different-runner-types"]], "Changing the default runner": [[259, "Changing-the-default-runner"]], "Going back to the default runner": [[259, "Going-back-to-the-default-runner"]], "Tutorial 05: Cubic anisotropy energy term": [[260, "Tutorial-05:-Cubic-anisotropy-energy-term"]], "Spatially constant K_{1} and \\mathbf{u}": [[260, "Spatially-constant-K_{1}-and-\\mathbf{u}"]], "Spatially varying \\mathbf{K}_{1}": [[260, "Spatially-varying-\\mathbf{K}_{1}"]], "discretisedfield.Field": [[260, "discretisedfield.Field"], [263, "discretisedfield.Field"], [266, "discretisedfield.Field"], [268, "discretisedfield.Field"]], "Custom directory name": [[261, "Custom-directory-name"]], "Tutorial 04: Dzyaloshinskii-Moriya energy term": [[262, "Tutorial-04:-Dzyaloshinskii-Moriya-energy-term"]], "Spatially constant D": [[262, "Spatially-constant-D"]], "Spatially varying D": [[262, "Spatially-varying-D"]], "Tutorial 02: Exchange energy term": [[263, "Tutorial-02:-Exchange-energy-term"]], "Spatially constant A": [[263, "Spatially-constant-A"]], "Spatially varying A": [[263, "Spatially-varying-A"]], "MinDriver steps": [[264, "MinDriver-steps"]], "micromagneticdata analysis": [[264, "micromagneticdata-analysis"], [301, "micromagneticdata-analysis"]], "Running simulations in parallel": [[265, "Running-simulations-in-parallel"]], "Tutorial 03: Uniaxial anisotropy energy term": [[266, "Tutorial-03:-Uniaxial-anisotropy-energy-term"]], "Spatially constant K and \\mathbf{u}": [[266, "Spatially-constant-K-and-\\mathbf{u}"]], "Spatially varying \\mathbf{K}": [[266, "Spatially-varying-\\mathbf{K}"]], "Higher-order uniaxial anisotropy": [[266, "Higher-order-uniaxial-anisotropy"]], "Verbosity levels": [[267, "Verbosity-levels"]], "One summary line (default)": [[267, "One-summary-line-(default)"]], "Silent run": [[267, "Silent-run"]], "Progress bar (TimeDriver only)": [[267, "Progress-bar-(TimeDriver-only)"]], "Tutorial 01: Zeeman energy term": [[268, "Tutorial-01:-Zeeman-energy-term"]], "Spatially constant \\mathbf{H}": [[268, "Spatially-constant-\\mathbf{H}"], [308, "Spatially-constant-\\mathbf{H}"]], "Spatially varying \\mathbf{H}": [[268, "Spatially-varying-\\mathbf{H}"]], "Table basics": [[270, "Table-basics"]], "Table FFT": [[271, "Table-FFT"]], "Table interactive plot": [[272, "Table-interactive-plot"]], "Table merge": [[273, "Table-merge"]], "Table visualisation": [[274, "Table-visualisation"]], "Table widgets": [[275, "Table-widgets"]], "Value selector": [[275, "Value-selector"]], "Constant attributes": [[276, "Constant-attributes"]], "Hysteresis values": [[277, "Hysteresis-values"]], "Imposing typesystem on a class": [[278, "Imposing-typesystem-on-a-class"]], "Properties": [[278, "Properties"]], "Imposing typesystem using ubermagutil.typesystem": [[278, "Imposing-typesystem-using-ubermagutil.typesystem"]], "Deleting an attribute": [[278, "Deleting-an-attribute"]], "inherit_docs decorator": [[279, "inherit_docs-decorator"]], "Logging control": [[280, "Logging-control"]], "Defining otherwise type": [[281, "Defining-otherwise-type"]], "Parameter descriptor": [[282, "Parameter-descriptor"]], "Extracting the SI prefix": [[283, "Extracting-the-SI-prefix"]], "Examples": [[288, "examples"]], "Standard problem 3": [[289, "Standard-problem-3"]], "Problem specification": [[289, "Problem-specification"], [290, "Problem-specification"], [291, "Problem-specification"], [292, "Problem-specification"]], "Simulation": [[289, "Simulation"], [290, "Simulation"], [291, "Simulation"], [293, "Simulation"]], "Relaxed magnetisation states": [[289, "Relaxed-magnetisation-states"]], "Energy crossing": [[289, "Energy-crossing"]], "References": [[289, "References"], [290, "References"], [291, "References"], [292, "References"], [316, "References"]], "Standard problem 4": [[290, "Standard-problem-4"]], "First stage": [[290, "First-stage"]], "Second stage: field \\mathbf{B}_{1}": [[290, "Second-stage:-field-\\mathbf{B}_{1}"]], "Postprocessing": [[290, "Postprocessing"], [292, "Postprocessing"]], "Standard problem 5": [[291, "Standard-problem-5"]], "Spin-polarised current": [[291, "Spin-polarised-current"]], "FMR standard problem": [[292, "FMR-standard-problem"]], "Relaxation stage": [[292, "Relaxation-stage"]], "Dynamic stage": [[292, "Dynamic-stage"]], "Deriving energy values": [[293, "Deriving-energy-values"]], "Effective field": [[293, "Effective-field"], [298, "Effective-field"], [298, "id3"], [298, "id6"], [298, "id9"]], "Relax the system": [[293, "Relax-the-system"]], "Computing energies of individual term": [[293, "Computing-energies-of-individual-term"]], "Calculating a stray field using an airbox method": [[294, "Calculating-a-stray-field-using-an-airbox-method"]], "Skyrmion in a disk": [[295, "Skyrmion-in-a-disk"], [318, "Skyrmion-in-a-disk"]], "Choosing runner": [[296, "Choosing-runner"]], "Energy term computations": [[297, "Energy-term-computations"]], "Field operations 2": [[298, "Field-operations-2"]], "Magnetisation": [[298, "Magnetisation"]], "Energy density": [[298, "Energy-density"], [298, "id1"], [298, "id4"], [298, "id7"]], "Uniaxial anisotropy": [[298, "Uniaxial-anisotropy"], [318, "Uniaxial-anisotropy"]], "DMI (T)": [[298, "DMI-(T)"]], "(Oversimplified) micromagnetic calculator": [[298, "(Oversimplified)-micromagnetic-calculator"]], "Simulation at finite temperature": [[299, "Simulation-at-finite-temperature"]], "Fixed subregions": [[300, "Fixed-subregions"]], "Hysteresis simulations": [[301, "Hysteresis-simulations"]], "Plotting hysteresis loop": [[301, "Plotting-hysteresis-loop"]], "Negative exchange energy constant": [[303, "Negative-exchange-energy-constant"]], "RKKY energy term": [[305, "RKKY-energy-term"]], "Sine-hysteresis": [[306, "Sine-hysteresis"]], "Both spatially and time varying field": [[307, "Both-spatially-and-time-varying-field"]], "Spatially varying parameters 1": [[308, "Spatially-varying-parameters-1"]], "Spatially varying H": [[308, "Spatially-varying-H"]], "Spatially varying parameters 2": [[309, "Spatially-varying-parameters-2"]], "Time-varying field": [[310, "Time-varying-field"]], "Time-dependent fields and currents": [[311, "Time-dependent-fields-and-currents"]], "Zeeman field": [[311, "Zeeman-field"]], "Python function": [[311, "Python-function"], [311, "id1"]], "How to properly simulate this field pulse": [[311, "How-to-properly-simulate-this-field-pulse"]], "Pre-defined functions": [[311, "Pre-defined-functions"]], "Experimentally measured time-dependence": [[311, "Experimentally-measured-time-dependence"]], "Tcl": [[311, "Tcl"], [311, "id2"]], "Slonczewski and Zhang-Li currents": [[311, "Slonczewski-and-Zhang-Li-currents"]], "FAQ": [[312, "faq"]], "Number of files written to disk with TimeDriver": [[312, "number-of-files-written-to-disk-with-timedriver"]], "Getting started": [[313, "getting-started"]], "Jupyter lab": [[314, "jupyter-lab"]], "Exercise: Current induced domain wall motion": [[315, "Exercise:-Current-induced-domain-wall-motion"]], "Problem description": [[315, "Problem-description"], [316, "Problem-description"]], "Domain-wall pair": [[315, "Domain-wall-pair"]], "Single domain wall": [[315, "Single-domain-wall"]], "Exercise: Domain wall pair conversion": [[316, "Exercise:-Domain-wall-pair-conversion"]], "Solution": [[316, "Solution"]], "Macrospin": [[317, "Macrospin"]], "Dynamics simulation": [[317, "Dynamics-simulation"]], "Simulation results": [[317, "Simulation-results"]], "Exercise 1": [[317, "Exercise-1"]], "Exercise 2": [[317, "Exercise-2"]], "Exercise 3": [[317, "Exercise-3"]], "Zeeman energy": [[318, "Zeeman-energy"]], "Exchange energy": [[318, "Exchange-energy"]], "Dzyaloshinskii-Moriya energy": [[318, "Dzyaloshinskii-Moriya-energy"]], "Exchange and Zeeman energies": [[318, "Exchange-and-Zeeman-energies"]], "Competition of DMI and exchange": [[318, "Competition-of-DMI-and-exchange"]], "Our first ubermag simulation": [[319, "Our-first-ubermag-simulation"]], "The main object in Ubermag: System object": [[319, "The-main-object-in-Ubermag:-System-object"]], "1. Energy equation": [[319, "1.-Energy-equation"]], "2. Dynamics equation": [[319, "2.-Dynamics-equation"]], "3. Initial magnetisation": [[319, "3.-Initial-magnetisation"]], "Inspecting system object": [[319, "Inspecting-system-object"]], "Driving the system": [[319, "Driving-the-system"]], "Magnetisation field": [[320, "Magnetisation-field"]], "Spatially varying field value": [[320, "Spatially-varying-field-value"]], "Spatially varying M_\\mathrm{s}": [[320, "Spatially-varying-M_\\mathrm{s}"]], "Exercise": [[320, "Exercise"]], "Python basics": [[321, "Python-basics"]], "Variables": [[321, "Variables"]], "Large/small values, e.g.\u00a0a = 2.1 \\times 10^{6}": [[321, "Large/small-values,-e.g.\u00a0a-=-2.1-\\times-10^{6}"]], "Basic operations": [[321, "Basic-operations"]], "1. Addition c = a + b": [[321, "1.-Addition-c-=-a-+-b"]], "2. Subtraction: a - b": [[321, "2.-Subtraction:-a---b"]], "3. Multiplication: a \\times b": [[321, "3.-Multiplication:-a-\\times-b"]], "4. Division: a / b": [[321, "4.-Division:-a-/-b"]], "5. Power a^{b}": [[321, "5.-Power-a^{b}"]], "6. More complicated operations": [[321, "6.-More-complicated-operations"]], "Lists and tuples": [[321, "Lists-and-tuples"]], "Indexing": [[321, "Indexing"]], "Length (the number of elements)": [[321, "Length-(the-number-of-elements)"]], "Unpacking": [[321, "Unpacking"]], "Dictionaries": [[321, "Dictionaries"]], "Selection": [[321, "Selection"]], "Iteration": [[321, "Iteration"]], "Functions": [[321, "Functions"]], "Keyword arguments": [[321, "Keyword-arguments"]], "Imports": [[321, "Imports"]], "Common mistakes": [[321, "Common-mistakes"]], "1. No colon": [[321, "1.-No-colon"]], "2. No indentation": [[321, "2.-No-indentation"]], "3. Mixing types": [[321, "3.-Mixing-types"]], "4. Using an undefined variable": [[321, "4.-Using-an-undefined-variable"]], "5. Module is not imported": [[321, "5.-Module-is-not-imported"]], "Object oriented programming basics": [[321, "Object-oriented-programming-basics"]], "Getting help": [[321, "Getting-help"]], "Help": [[322, "help"]], "How to prepare your request for help": [[322, "how-to-prepare-your-request-for-help"]], "rendered output is similar to": [[322, null], [322, null], [322, null]], "Help others": [[322, "help-others"]], "Ubermag": [[323, "ubermag"]], "Features and packages": [[323, "features-and-packages"]], "What is ubermag?": [[323, "what-is-ubermag"]], "Documentation and tutorials": [[323, "documentation-and-tutorials"]], "ubermag in the cloud": [[323, "ubermag-in-the-cloud"]], "Authors": [[323, "authors"]], "How to cite": [[323, "how-to-cite"]], "License": [[323, "license"]], "Acknowledgements": [[323, "acknowledgements"]], "Installation": [[324, "installation"], [324, "id1"]], "Standard installation \u2013 recommended": [[324, "standard-installation-recommended"]], "Installation environment": [[324, "installation-environment"]], "Installing a calculator": [[324, "installing-a-calculator"]], "Testing": [[324, "testing"]], "Update": [[324, "update"]], "Advanced installation": [[324, "advanced-installation"]], "Check the installation": [[324, "check-the-installation"]], "How does Ubermag find OOMMF?": [[324, "how-does-ubermag-find-oommf"]], "Development installation": [[324, "development-installation"]], "News": [[325, "news"]], "2022 winter workshop": [[325, "winter-workshop"]], "2022 summer code sprint": [[325, "summer-code-sprint"]]}, "indexentries": {"discretisedfield": [[0, "module-discretisedfield"]], "module": [[0, "module-discretisedfield"], [9, "module-discretisedfield.io"], [16, "module-discretisedfield.io.ovf2vtk"], [18, "module-discretisedfield.plotting"], [28, "module-discretisedfield.tools"], [38, "module-mag2exp"], [39, "module-mag2exp.ltem"], [44, "module-mag2exp.magnetometry"], [47, "module-mag2exp.mfm"], [49, "module-mag2exp.quick_plots"], [59, "module-mag2exp.sans"], [63, "module-mag2exp.x_ray"], [66, "module-micromagneticdata"], [74, "module-micromagneticmodel"], [96, "module-micromagneticmodel.abstract"], [100, "module-micromagneticmodel.consts"], [111, "module-micromagneticmodel.examples"], [114, "module-micromagnetictests"], [115, "module-micromagnetictests.calculatortests"], [148, "module-oommfc"], [163, "module-oommfc.oommf"], [173, "module-ubermag"], [175, "module-ubermagtable"], [179, "module-ubermagtable.util"], [183, "module-ubermagutil"], [189, "module-ubermagutil.typesystem"], [199, "module-ubermagutil.units"]], "dvalue (class in discretisedfield)": [[1, "discretisedfield.DValue"]], "__abs__() (discretisedfield.dvalue method)": [[1, "discretisedfield.DValue.__abs__"]], "__call__() (discretisedfield.dvalue method)": [[1, "discretisedfield.DValue.__call__"]], "__matmul__() (discretisedfield.dvalue method)": [[1, "discretisedfield.DValue.__matmul__"]], "__mul__() (discretisedfield.dvalue method)": [[1, "discretisedfield.DValue.__mul__"]], "field (class in discretisedfield)": [[2, "discretisedfield.Field"]], "__abs__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__abs__"]], "__add__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__add__"]], "__and__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__and__"]], "__array_ufunc__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__array_ufunc__"]], "__call__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__call__"]], "__dir__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__dir__"]], "__eq__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__eq__"]], "__getattr__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__getattr__"]], "__getitem__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__getitem__"]], "__hash__ (discretisedfield.field attribute)": [[2, "discretisedfield.Field.__hash__"]], "__iter__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__iter__"]], "__lshift__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__lshift__"]], "__matmul__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__matmul__"]], "__mul__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__mul__"]], "__neg__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__neg__"]], "__pos__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__pos__"]], "__pow__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__pow__"]], "__repr__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__repr__"]], "__sub__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__sub__"]], "__truediv__() (discretisedfield.field method)": [[2, "discretisedfield.Field.__truediv__"]], "allclose() (discretisedfield.field method)": [[2, "discretisedfield.Field.allclose"]], "angle (discretisedfield.field property)": [[2, "discretisedfield.Field.angle"]], "array (discretisedfield.field property)": [[2, "discretisedfield.Field.array"]], "average (discretisedfield.field property)": [[2, "discretisedfield.Field.average"]], "components (discretisedfield.field property)": [[2, "discretisedfield.Field.components"]], "conjugate (discretisedfield.field property)": [[2, "discretisedfield.Field.conjugate"]], "coordinate_field() (discretisedfield.field class method)": [[2, "discretisedfield.Field.coordinate_field"]], "curl (discretisedfield.field property)": [[2, "discretisedfield.Field.curl"]], "derivative() (discretisedfield.field method)": [[2, "discretisedfield.Field.derivative"]], "div (discretisedfield.field property)": [[2, "discretisedfield.Field.div"]], "fftn (discretisedfield.field property)": [[2, "discretisedfield.Field.fftn"]], "from_xarray() (discretisedfield.field class method)": [[2, "discretisedfield.Field.from_xarray"]], "fromfile() (discretisedfield.field class method)": [[2, "discretisedfield.Field.fromfile"]], "grad (discretisedfield.field property)": [[2, "discretisedfield.Field.grad"]], "hv (discretisedfield.field property)": [[2, "discretisedfield.Field.hv"]], "ifftn (discretisedfield.field property)": [[2, "discretisedfield.Field.ifftn"]], "imag (discretisedfield.field property)": [[2, "discretisedfield.Field.imag"]], "integral() (discretisedfield.field method)": [[2, "discretisedfield.Field.integral"]], "irfftn (discretisedfield.field property)": [[2, "discretisedfield.Field.irfftn"]], "k3d (discretisedfield.field property)": [[2, "discretisedfield.Field.k3d"]], "laplace (discretisedfield.field property)": [[2, "discretisedfield.Field.laplace"]], "line() (discretisedfield.field method)": [[2, "discretisedfield.Field.line"]], "mpl (discretisedfield.field property)": [[2, "discretisedfield.Field.mpl"]], "norm (discretisedfield.field property)": [[2, "discretisedfield.Field.norm"]], "orientation (discretisedfield.field property)": [[2, "discretisedfield.Field.orientation"]], "pad() (discretisedfield.field method)": [[2, "discretisedfield.Field.pad"]], "phase (discretisedfield.field property)": [[2, "discretisedfield.Field.phase"]], "plane() (discretisedfield.field method)": [[2, "discretisedfield.Field.plane"]], "project() (discretisedfield.field method)": [[2, "discretisedfield.Field.project"]], "real (discretisedfield.field property)": [[2, "discretisedfield.Field.real"]], "rfftn (discretisedfield.field property)": [[2, "discretisedfield.Field.rfftn"]], "to_vtk() (discretisedfield.field method)": [[2, "discretisedfield.Field.to_vtk"]], "to_xarray() (discretisedfield.field method)": [[2, "discretisedfield.Field.to_xarray"]], "value (discretisedfield.field property)": [[2, "discretisedfield.Field.value"]], "write() (discretisedfield.field method)": [[2, "discretisedfield.Field.write"]], "zero (discretisedfield.field property)": [[2, "discretisedfield.Field.zero"]], "fieldrotator (class in discretisedfield)": [[3, "discretisedfield.FieldRotator"]], "__repr__() (discretisedfield.fieldrotator method)": [[3, "discretisedfield.FieldRotator.__repr__"]], "clear_rotation() (discretisedfield.fieldrotator method)": [[3, "discretisedfield.FieldRotator.clear_rotation"]], "field (discretisedfield.fieldrotator property)": [[3, "discretisedfield.FieldRotator.field"]], "rotate() (discretisedfield.fieldrotator method)": [[3, "discretisedfield.FieldRotator.rotate"]], "line (class in discretisedfield)": [[4, "discretisedfield.Line"]], "__repr__() (discretisedfield.line method)": [[4, "discretisedfield.Line.__repr__"]], "length (discretisedfield.line property)": [[4, "discretisedfield.Line.length"]], "mpl() (discretisedfield.line method)": [[4, "discretisedfield.Line.mpl"]], "point_columns (discretisedfield.line property)": [[4, "discretisedfield.Line.point_columns"]], "selector() (discretisedfield.line method)": [[4, "discretisedfield.Line.selector"]], "slider() (discretisedfield.line method)": [[4, "discretisedfield.Line.slider"]], "value_columns (discretisedfield.line property)": [[4, "discretisedfield.Line.value_columns"]], "mesh (class in discretisedfield)": [[5, "discretisedfield.Mesh"]], "__dir__() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.__dir__"]], "__eq__() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.__eq__"]], "__getattr__() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.__getattr__"]], "__getitem__() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.__getitem__"]], "__hash__ (discretisedfield.mesh attribute)": [[5, "discretisedfield.Mesh.__hash__"]], "__iter__() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.__iter__"]], "__len__() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.__len__"]], "__or__() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.__or__"]], "__repr__() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.__repr__"]], "axis_selector() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.axis_selector"]], "ds (discretisedfield.mesh property)": [[5, "discretisedfield.Mesh.dS"]], "dv (discretisedfield.mesh property)": [[5, "discretisedfield.Mesh.dV"]], "index2point() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.index2point"]], "indices (discretisedfield.mesh property)": [[5, "discretisedfield.Mesh.indices"]], "k3d (discretisedfield.mesh property)": [[5, "discretisedfield.Mesh.k3d"]], "line() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.line"]], "load_subregions() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.load_subregions"]], "midpoints (discretisedfield.mesh property)": [[5, "discretisedfield.Mesh.midpoints"]], "mpl (discretisedfield.mesh property)": [[5, "discretisedfield.Mesh.mpl"]], "neighbours() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.neighbours"]], "pad() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.pad"]], "plane() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.plane"]], "point2index() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.point2index"]], "region2slices() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.region2slices"]], "save_subregions() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.save_subregions"]], "slider() (discretisedfield.mesh method)": [[5, "discretisedfield.Mesh.slider"]], "subregions (discretisedfield.mesh property)": [[5, "discretisedfield.Mesh.subregions"]], "vertices (discretisedfield.mesh property)": [[5, "discretisedfield.Mesh.vertices"]], "region (class in discretisedfield)": [[6, "discretisedfield.Region"]], "__contains__() (discretisedfield.region method)": [[6, "discretisedfield.Region.__contains__"]], "__eq__() (discretisedfield.region method)": [[6, "discretisedfield.Region.__eq__"]], "__hash__ (discretisedfield.region attribute)": [[6, "discretisedfield.Region.__hash__"]], "__mul__() (discretisedfield.region method)": [[6, "discretisedfield.Region.__mul__"]], "__or__() (discretisedfield.region method)": [[6, "discretisedfield.Region.__or__"]], "__repr__() (discretisedfield.region method)": [[6, "discretisedfield.Region.__repr__"]], "__truediv__() (discretisedfield.region method)": [[6, "discretisedfield.Region.__truediv__"]], "centre (discretisedfield.region property)": [[6, "discretisedfield.Region.centre"]], "edges (discretisedfield.region property)": [[6, "discretisedfield.Region.edges"]], "k3d (discretisedfield.region property)": [[6, "discretisedfield.Region.k3d"]], "mpl (discretisedfield.region property)": [[6, "discretisedfield.Region.mpl"]], "multiplier (discretisedfield.region property)": [[6, "discretisedfield.Region.multiplier"]], "pmax (discretisedfield.region property)": [[6, "discretisedfield.Region.pmax"]], "pmin (discretisedfield.region property)": [[6, "discretisedfield.Region.pmin"]], "random_point() (discretisedfield.region method)": [[6, "discretisedfield.Region.random_point"]], "to_dict() (discretisedfield.region method)": [[6, "discretisedfield.Region.to_dict"]], "volume (discretisedfield.region property)": [[6, "discretisedfield.Region.volume"]], "integral() (in module discretisedfield)": [[7, "discretisedfield.integral"]], "interact() (in module discretisedfield)": [[8, "discretisedfield.interact"]], "discretisedfield.io": [[9, "module-discretisedfield.io"]], "field_from_hdf5() (in module discretisedfield.io)": [[10, "discretisedfield.io.field_from_hdf5"]], "field_from_ovf() (in module discretisedfield.io)": [[11, "discretisedfield.io.field_from_ovf"]], "field_from_vtk() (in module discretisedfield.io)": [[12, "discretisedfield.io.field_from_vtk"]], "field_to_hdf5() (in module discretisedfield.io)": [[13, "discretisedfield.io.field_to_hdf5"]], "field_to_ovf() (in module discretisedfield.io)": [[14, "discretisedfield.io.field_to_ovf"]], "field_to_vtk() (in module discretisedfield.io)": [[15, "discretisedfield.io.field_to_vtk"]], "discretisedfield.io.ovf2vtk": [[16, "module-discretisedfield.io.ovf2vtk"]], "ovf2vtk() (in module discretisedfield.io.ovf2vtk)": [[17, "discretisedfield.io.ovf2vtk.ovf2vtk"]], "discretisedfield.plotting": [[18, "module-discretisedfield.plotting"]], "hv (class in discretisedfield.plotting)": [[19, "discretisedfield.plotting.Hv"]], "__call__() (discretisedfield.plotting.hv method)": [[19, "discretisedfield.plotting.Hv.__call__"]], "contour() (discretisedfield.plotting.hv method)": [[19, "discretisedfield.plotting.Hv.contour"]], "scalar() (discretisedfield.plotting.hv method)": [[19, "discretisedfield.plotting.Hv.scalar"]], "vector() (discretisedfield.plotting.hv method)": [[19, "discretisedfield.plotting.Hv.vector"]], "k3dfield (class in discretisedfield.plotting)": [[20, "discretisedfield.plotting.K3dField"]], "__dir__() (discretisedfield.plotting.k3dfield method)": [[20, "discretisedfield.plotting.K3dField.__dir__"]], "nonzero() (discretisedfield.plotting.k3dfield method)": [[20, "discretisedfield.plotting.K3dField.nonzero"]], "scalar() (discretisedfield.plotting.k3dfield method)": [[20, "discretisedfield.plotting.K3dField.scalar"]], "vector() (discretisedfield.plotting.k3dfield method)": [[20, "discretisedfield.plotting.K3dField.vector"]], "k3dmesh (class in discretisedfield.plotting)": [[21, "discretisedfield.plotting.K3dMesh"]], "__call__() (discretisedfield.plotting.k3dmesh method)": [[21, "discretisedfield.plotting.K3dMesh.__call__"]], "subregions() (discretisedfield.plotting.k3dmesh method)": [[21, "discretisedfield.plotting.K3dMesh.subregions"]], "k3dregion (class in discretisedfield.plotting)": [[22, "discretisedfield.plotting.K3dRegion"]], "__call__() (discretisedfield.plotting.k3dregion method)": [[22, "discretisedfield.plotting.K3dRegion.__call__"]], "mplfield (class in discretisedfield.plotting)": [[23, "discretisedfield.plotting.MplField"]], "__call__() (discretisedfield.plotting.mplfield method)": [[23, "discretisedfield.plotting.MplField.__call__"]], "__dir__() (discretisedfield.plotting.mplfield method)": [[23, "discretisedfield.plotting.MplField.__dir__"]], "contour() (discretisedfield.plotting.mplfield method)": [[23, "discretisedfield.plotting.MplField.contour"]], "lightness() (discretisedfield.plotting.mplfield method)": [[23, "discretisedfield.plotting.MplField.lightness"]], "scalar() (discretisedfield.plotting.mplfield method)": [[23, "discretisedfield.plotting.MplField.scalar"]], "vector() (discretisedfield.plotting.mplfield method)": [[23, "discretisedfield.plotting.MplField.vector"]], "mplmesh (class in discretisedfield.plotting)": [[24, "discretisedfield.plotting.MplMesh"]], "__call__() (discretisedfield.plotting.mplmesh method)": [[24, "discretisedfield.plotting.MplMesh.__call__"]], "subregions() (discretisedfield.plotting.mplmesh method)": [[24, "discretisedfield.plotting.MplMesh.subregions"]], "mplregion (class in discretisedfield.plotting)": [[25, "discretisedfield.plotting.MplRegion"]], "__call__() (discretisedfield.plotting.mplregion method)": [[25, "discretisedfield.plotting.MplRegion.__call__"]], "add_colorwheel() (in module discretisedfield.plotting)": [[26, "discretisedfield.plotting.add_colorwheel"]], "test() (in module discretisedfield)": [[27, "discretisedfield.test"]], "discretisedfield.tools": [[28, "module-discretisedfield.tools"]], "count_bps() (in module discretisedfield.tools)": [[29, "discretisedfield.tools.count_bps"]], "count_large_cell_angle_regions() (in module discretisedfield.tools)": [[30, "discretisedfield.tools.count_large_cell_angle_regions"]], "demag_field() (in module discretisedfield.tools)": [[31, "discretisedfield.tools.demag_field"]], "demag_tensor() (in module discretisedfield.tools)": [[32, "discretisedfield.tools.demag_tensor"]], "emergent_magnetic_field() (in module discretisedfield.tools)": [[33, "discretisedfield.tools.emergent_magnetic_field"]], "max_neigbouring_cell_angle() (in module discretisedfield.tools)": [[34, "discretisedfield.tools.max_neigbouring_cell_angle"]], "neigbouring_cell_angle() (in module discretisedfield.tools)": [[35, "discretisedfield.tools.neigbouring_cell_angle"]], "topological_charge() (in module discretisedfield.tools)": [[36, "discretisedfield.tools.topological_charge"]], "topological_charge_density() (in module discretisedfield.tools)": [[37, "discretisedfield.tools.topological_charge_density"]], "mag2exp": [[38, "module-mag2exp"]], "mag2exp.ltem": [[39, "module-mag2exp.ltem"]], "defocus_image() (in module mag2exp.ltem)": [[40, "mag2exp.ltem.defocus_image"]], "integrated_magnetic_flux_density() (in module mag2exp.ltem)": [[41, "mag2exp.ltem.integrated_magnetic_flux_density"]], "phase() (in module mag2exp.ltem)": [[42, "mag2exp.ltem.phase"]], "relativistic_wavelength() (in module mag2exp.ltem)": [[43, "mag2exp.ltem.relativistic_wavelength"]], "mag2exp.magnetometry": [[44, "module-mag2exp.magnetometry"]], "magnetisation() (in module mag2exp.magnetometry)": [[45, "mag2exp.magnetometry.magnetisation"]], "torque() (in module mag2exp.magnetometry)": [[46, "mag2exp.magnetometry.torque"]], "mag2exp.mfm": [[47, "module-mag2exp.mfm"]], "phase_shift() (in module mag2exp.mfm)": [[48, "mag2exp.mfm.phase_shift"]], "mag2exp.quick_plots": [[49, "module-mag2exp.quick_plots"]], "ltem_defocus() (in module mag2exp.quick_plots)": [[50, "mag2exp.quick_plots.ltem_defocus"]], "ltem_ft_phase() (in module mag2exp.quick_plots)": [[51, "mag2exp.quick_plots.ltem_ft_phase"]], "ltem_integrated_mfd() (in module mag2exp.quick_plots)": [[52, "mag2exp.quick_plots.ltem_integrated_mfd"]], "ltem_phase() (in module mag2exp.quick_plots)": [[53, "mag2exp.quick_plots.ltem_phase"]], "mfm_phase_shift() (in module mag2exp.quick_plots)": [[54, "mag2exp.quick_plots.mfm_phase_shift"]], "sans_chiral_function() (in module mag2exp.quick_plots)": [[55, "mag2exp.quick_plots.sans_chiral_function"]], "sans_cross_section() (in module mag2exp.quick_plots)": [[56, "mag2exp.quick_plots.sans_cross_section"]], "saxs() (in module mag2exp.quick_plots)": [[57, "mag2exp.quick_plots.saxs"]], "x_ray_holography() (in module mag2exp.quick_plots)": [[58, "mag2exp.quick_plots.x_ray_holography"]], "mag2exp.sans": [[59, "module-mag2exp.sans"]], "chiral_function() (in module mag2exp.sans)": [[60, "mag2exp.sans.chiral_function"]], "cross_section() (in module mag2exp.sans)": [[61, "mag2exp.sans.cross_section"]], "test() (in module mag2exp)": [[62, "mag2exp.test"]], "mag2exp.x_ray": [[63, "module-mag2exp.x_ray"]], "holography() (in module mag2exp.x_ray)": [[64, "mag2exp.x_ray.holography"]], "saxs() (in module mag2exp.x_ray)": [[65, "mag2exp.x_ray.saxs"]], "micromagneticdata": [[66, "module-micromagneticdata"]], "abstractdrive (class in micromagneticdata)": [[67, "micromagneticdata.AbstractDrive"]], "__getitem__() (micromagneticdata.abstractdrive method)": [[67, "micromagneticdata.AbstractDrive.__getitem__"]], "__iter__() (micromagneticdata.abstractdrive method)": [[67, "micromagneticdata.AbstractDrive.__iter__"]], "__lshift__() (micromagneticdata.abstractdrive method)": [[67, "micromagneticdata.AbstractDrive.__lshift__"]], "__repr__() (micromagneticdata.abstractdrive method)": [[67, "micromagneticdata.AbstractDrive.__repr__"]], "callbacks (micromagneticdata.abstractdrive property)": [[67, "micromagneticdata.AbstractDrive.callbacks"]], "hv (micromagneticdata.abstractdrive property)": [[67, "micromagneticdata.AbstractDrive.hv"]], "info (micromagneticdata.abstractdrive property)": [[67, "micromagneticdata.AbstractDrive.info"]], "m0 (micromagneticdata.abstractdrive property)": [[67, "micromagneticdata.AbstractDrive.m0"]], "n (micromagneticdata.abstractdrive property)": [[67, "micromagneticdata.AbstractDrive.n"]], "register_callback() (micromagneticdata.abstractdrive method)": [[67, "micromagneticdata.AbstractDrive.register_callback"]], "table (micromagneticdata.abstractdrive property)": [[67, "micromagneticdata.AbstractDrive.table"]], "to_xarray() (micromagneticdata.abstractdrive method)": [[67, "micromagneticdata.AbstractDrive.to_xarray"]], "x (micromagneticdata.abstractdrive property)": [[67, "micromagneticdata.AbstractDrive.x"]], "combineddrive (class in micromagneticdata)": [[68, "micromagneticdata.CombinedDrive"]], "__lshift__() (micromagneticdata.combineddrive method)": [[68, "micromagneticdata.CombinedDrive.__lshift__"]], "__repr__() (micromagneticdata.combineddrive method)": [[68, "micromagneticdata.CombinedDrive.__repr__"]], "info (micromagneticdata.combineddrive property)": [[68, "micromagneticdata.CombinedDrive.info"]], "register_callback() (micromagneticdata.combineddrive method)": [[68, "micromagneticdata.CombinedDrive.register_callback"]], "table (micromagneticdata.combineddrive property)": [[68, "micromagneticdata.CombinedDrive.table"]], "x (micromagneticdata.combineddrive property)": [[68, "micromagneticdata.CombinedDrive.x"]], "data (class in micromagneticdata)": [[69, "micromagneticdata.Data"]], "__getitem__() (micromagneticdata.data method)": [[69, "micromagneticdata.Data.__getitem__"]], "__iter__() (micromagneticdata.data method)": [[69, "micromagneticdata.Data.__iter__"]], "__repr__() (micromagneticdata.data method)": [[69, "micromagneticdata.Data.__repr__"]], "info (micromagneticdata.data property)": [[69, "micromagneticdata.Data.info"]], "n (micromagneticdata.data property)": [[69, "micromagneticdata.Data.n"]], "selector() (micromagneticdata.data method)": [[69, "micromagneticdata.Data.selector"]], "drive (class in micromagneticdata)": [[70, "micromagneticdata.Drive"]], "__getitem__() (micromagneticdata.drive method)": [[70, "micromagneticdata.Drive.__getitem__"]], "__lshift__() (micromagneticdata.drive method)": [[70, "micromagneticdata.Drive.__lshift__"]], "__new__() (micromagneticdata.drive static method)": [[70, "micromagneticdata.Drive.__new__"]], "calculator_script (micromagneticdata.drive property)": [[70, "micromagneticdata.Drive.calculator_script"]], "info (micromagneticdata.drive property)": [[70, "micromagneticdata.Drive.info"]], "ovf2vtk() (micromagneticdata.drive method)": [[70, "micromagneticdata.Drive.ovf2vtk"]], "register_callback() (micromagneticdata.drive method)": [[70, "micromagneticdata.Drive.register_callback"]], "slider() (micromagneticdata.drive method)": [[70, "micromagneticdata.Drive.slider"]], "table (micromagneticdata.drive property)": [[70, "micromagneticdata.Drive.table"]], "use_cache (micromagneticdata.drive property)": [[70, "micromagneticdata.Drive.use_cache"]], "mumax3drive (class in micromagneticdata)": [[71, "micromagneticdata.Mumax3Drive"]], "__repr__() (micromagneticdata.mumax3drive method)": [[71, "micromagneticdata.Mumax3Drive.__repr__"]], "calculator_script (micromagneticdata.mumax3drive property)": [[71, "micromagneticdata.Mumax3Drive.calculator_script"]], "x (micromagneticdata.mumax3drive property)": [[71, "micromagneticdata.Mumax3Drive.x"]], "oommfdrive (class in micromagneticdata)": [[72, "micromagneticdata.OOMMFDrive"]], "__repr__() (micromagneticdata.oommfdrive method)": [[72, "micromagneticdata.OOMMFDrive.__repr__"]], "calculator_script (micromagneticdata.oommfdrive property)": [[72, "micromagneticdata.OOMMFDrive.calculator_script"]], "x (micromagneticdata.oommfdrive property)": [[72, "micromagneticdata.OOMMFDrive.x"]], "test() (in module micromagneticdata)": [[73, "micromagneticdata.test"]], "micromagneticmodel": [[74, "module-micromagneticmodel"]], "cubicanisotropy (class in micromagneticmodel)": [[75, "micromagneticmodel.CubicAnisotropy"]], "dmi (class in micromagneticmodel)": [[76, "micromagneticmodel.DMI"]], "damping (class in micromagneticmodel)": [[77, "micromagneticmodel.Damping"]], "demag (class in micromagneticmodel)": [[78, "micromagneticmodel.Demag"]], "driver (class in micromagneticmodel)": [[79, "micromagneticmodel.Driver"]], "drive() (micromagneticmodel.driver method)": [[79, "micromagneticmodel.Driver.drive"]], "dynamics (class in micromagneticmodel)": [[80, "micromagneticmodel.Dynamics"]], "dynamicsterm (class in micromagneticmodel)": [[81, "micromagneticmodel.DynamicsTerm"]], "energy (class in micromagneticmodel)": [[82, "micromagneticmodel.Energy"]], "energyterm (class in micromagneticmodel)": [[83, "micromagneticmodel.EnergyTerm"]], "evolver (class in micromagneticmodel)": [[84, "micromagneticmodel.Evolver"]], "exchange (class in micromagneticmodel)": [[85, "micromagneticmodel.Exchange"]], "externaldriver (class in micromagneticmodel)": [[86, "micromagneticmodel.ExternalDriver"]], "drive() (micromagneticmodel.externaldriver method)": [[86, "micromagneticmodel.ExternalDriver.drive"]], "drive_kwargs_setup() (micromagneticmodel.externaldriver method)": [[86, "micromagneticmodel.ExternalDriver.drive_kwargs_setup"]], "schedule() (micromagneticmodel.externaldriver method)": [[86, "micromagneticmodel.ExternalDriver.schedule"]], "schedule_kwargs_setup() (micromagneticmodel.externaldriver method)": [[86, "micromagneticmodel.ExternalDriver.schedule_kwargs_setup"]], "externalrunner (class in micromagneticmodel)": [[87, "micromagneticmodel.ExternalRunner"]], "call() (micromagneticmodel.externalrunner method)": [[87, "micromagneticmodel.ExternalRunner.call"]], "package_name (micromagneticmodel.externalrunner property)": [[87, "micromagneticmodel.ExternalRunner.package_name"]], "magnetoelastic (class in micromagneticmodel)": [[88, "micromagneticmodel.MagnetoElastic"]], "precession (class in micromagneticmodel)": [[89, "micromagneticmodel.Precession"]], "rkky (class in micromagneticmodel)": [[90, "micromagneticmodel.RKKY"]], "slonczewski (class in micromagneticmodel)": [[91, "micromagneticmodel.Slonczewski"]], "system (class in micromagneticmodel)": [[92, "micromagneticmodel.System"]], "__repr__() (micromagneticmodel.system method)": [[92, "micromagneticmodel.System.__repr__"]], "dynamics (micromagneticmodel.system property)": [[92, "micromagneticmodel.System.dynamics"]], "energy (micromagneticmodel.system property)": [[92, "micromagneticmodel.System.energy"]], "uniaxialanisotropy (class in micromagneticmodel)": [[93, "micromagneticmodel.UniaxialAnisotropy"]], "zeeman (class in micromagneticmodel)": [[94, "micromagneticmodel.Zeeman"]], "zhangli (class in micromagneticmodel)": [[95, "micromagneticmodel.ZhangLi"]], "micromagneticmodel.abstract": [[96, "module-micromagneticmodel.abstract"]], "abstract (class in micromagneticmodel.abstract)": [[97, "micromagneticmodel.abstract.Abstract"]], "__iter__() (micromagneticmodel.abstract.abstract method)": [[97, "micromagneticmodel.abstract.Abstract.__iter__"]], "__repr__() (micromagneticmodel.abstract.abstract method)": [[97, "micromagneticmodel.abstract.Abstract.__repr__"]], "name (micromagneticmodel.abstract.abstract property)": [[97, "micromagneticmodel.abstract.Abstract.name"]], "container (class in micromagneticmodel.abstract)": [[98, "micromagneticmodel.abstract.Container"]], "__add__() (micromagneticmodel.abstract.container method)": [[98, "micromagneticmodel.abstract.Container.__add__"]], "__contains__() (micromagneticmodel.abstract.container method)": [[98, "micromagneticmodel.abstract.Container.__contains__"]], "__dir__() (micromagneticmodel.abstract.container method)": [[98, "micromagneticmodel.abstract.Container.__dir__"]], "__eq__() (micromagneticmodel.abstract.container method)": [[98, "micromagneticmodel.abstract.Container.__eq__"]], "__getattr__() (micromagneticmodel.abstract.container method)": [[98, "micromagneticmodel.abstract.Container.__getattr__"]], "__getitem__() (micromagneticmodel.abstract.container method)": [[98, "micromagneticmodel.abstract.Container.__getitem__"]], "__hash__ (micromagneticmodel.abstract.container attribute)": [[98, "micromagneticmodel.abstract.Container.__hash__"]], "__iter__() (micromagneticmodel.abstract.container method)": [[98, "micromagneticmodel.abstract.Container.__iter__"]], "__len__() (micromagneticmodel.abstract.container method)": [[98, "micromagneticmodel.abstract.Container.__len__"]], "__repr__() (micromagneticmodel.abstract.container method)": [[98, "micromagneticmodel.abstract.Container.__repr__"]], "__sub__() (micromagneticmodel.abstract.container method)": [[98, "micromagneticmodel.abstract.Container.__sub__"]], "get() (micromagneticmodel.abstract.container method)": [[98, "micromagneticmodel.abstract.Container.get"]], "term (class in micromagneticmodel.abstract)": [[99, "micromagneticmodel.abstract.Term"]], "__add__() (micromagneticmodel.abstract.term method)": [[99, "micromagneticmodel.abstract.Term.__add__"]], "__eq__() (micromagneticmodel.abstract.term method)": [[99, "micromagneticmodel.abstract.Term.__eq__"]], "__hash__ (micromagneticmodel.abstract.term attribute)": [[99, "micromagneticmodel.abstract.Term.__hash__"]], "micromagneticmodel.consts": [[100, "module-micromagneticmodel.consts"]], "e (in module micromagneticmodel.consts)": [[101, "micromagneticmodel.consts.e"]], "g (in module micromagneticmodel.consts)": [[102, "micromagneticmodel.consts.g"]], "gamma (in module micromagneticmodel.consts)": [[103, "micromagneticmodel.consts.gamma"]], "gamma0 (in module micromagneticmodel.consts)": [[104, "micromagneticmodel.consts.gamma0"]], "h (in module micromagneticmodel.consts)": [[105, "micromagneticmodel.consts.h"]], "hbar (in module micromagneticmodel.consts)": [[106, "micromagneticmodel.consts.hbar"]], "kb (in module micromagneticmodel.consts)": [[107, "micromagneticmodel.consts.kB"]], "me (in module micromagneticmodel.consts)": [[108, "micromagneticmodel.consts.me"]], "mu0 (in module micromagneticmodel.consts)": [[109, "micromagneticmodel.consts.mu0"]], "mub (in module micromagneticmodel.consts)": [[110, "micromagneticmodel.consts.muB"]], "micromagneticmodel.examples": [[111, "module-micromagneticmodel.examples"]], "macrospin() (in module micromagneticmodel.examples)": [[112, "micromagneticmodel.examples.macrospin"]], "test() (in module micromagneticmodel)": [[113, "micromagneticmodel.test"]], "micromagnetictests": [[114, "module-micromagnetictests"]], "micromagnetictests.calculatortests": [[115, "module-micromagnetictests.calculatortests"]], "testcompute (class in micromagnetictests.calculatortests)": [[116, "micromagnetictests.calculatortests.TestCompute"]], "testcubicanisotropy (class in micromagnetictests.calculatortests)": [[117, "micromagnetictests.calculatortests.TestCubicAnisotropy"]], "testdmi (class in micromagnetictests.calculatortests)": [[118, "micromagnetictests.calculatortests.TestDMI"]], "testdamping (class in micromagnetictests.calculatortests)": [[119, "micromagnetictests.calculatortests.TestDamping"]], "testdemag (class in micromagnetictests.calculatortests)": [[120, "micromagnetictests.calculatortests.TestDemag"]], "testdynamics (class in micromagnetictests.calculatortests)": [[121, "micromagnetictests.calculatortests.TestDynamics"]], "testenergy (class in micromagnetictests.calculatortests)": [[122, "micromagnetictests.calculatortests.TestEnergy"]], "testexchange (class in micromagnetictests.calculatortests)": [[123, "micromagnetictests.calculatortests.TestExchange"]], "testfixedsubregions (class in micromagnetictests.calculatortests)": [[124, "micromagnetictests.calculatortests.TestFixedSubregions"]], "testhysteresisdriver (class in micromagnetictests.calculatortests)": [[125, "micromagnetictests.calculatortests.TestHysteresisDriver"]], "testmesh (class in micromagnetictests.calculatortests)": [[126, "micromagnetictests.calculatortests.TestMesh"]], "testmindriver (class in micromagnetictests.calculatortests)": [[127, "micromagnetictests.calculatortests.TestMinDriver"]], "testprecession (class in micromagnetictests.calculatortests)": [[128, "micromagnetictests.calculatortests.TestPrecession"]], "testrkky (class in micromagnetictests.calculatortests)": [[129, "micromagnetictests.calculatortests.TestRKKY"]], "testslonczewski (class in micromagnetictests.calculatortests)": [[130, "micromagnetictests.calculatortests.TestSlonczewski"]], "testthreads (class in micromagnetictests.calculatortests)": [[131, "micromagnetictests.calculatortests.TestThreads"]], "testtimedriver (class in micromagnetictests.calculatortests)": [[132, "micromagnetictests.calculatortests.TestTimeDriver"]], "testuniaxialanisotropy (class in micromagnetictests.calculatortests)": [[133, "micromagnetictests.calculatortests.TestUniaxialAnisotropy"]], "testzeeman (class in micromagnetictests.calculatortests)": [[134, "micromagnetictests.calculatortests.TestZeeman"]], "testzhangli (class in micromagnetictests.calculatortests)": [[135, "micromagnetictests.calculatortests.TestZhangLi"]], "test_dirname() (in module micromagnetictests.calculatortests)": [[136, "micromagnetictests.calculatortests.test_dirname"]], "test_format() (in module micromagnetictests.calculatortests)": [[137, "micromagnetictests.calculatortests.test_format"]], "test_info_file() (in module micromagnetictests.calculatortests)": [[138, "micromagnetictests.calculatortests.test_info_file"]], "test_multiple_drives() (in module micromagnetictests.calculatortests)": [[139, "micromagnetictests.calculatortests.test_multiple_drives"]], "test_outputstep() (in module micromagnetictests.calculatortests)": [[140, "micromagnetictests.calculatortests.test_outputstep"]], "test_schedule() (in module micromagnetictests.calculatortests)": [[141, "micromagnetictests.calculatortests.test_schedule"]], "test_skyrmion() (in module micromagnetictests.calculatortests)": [[142, "micromagnetictests.calculatortests.test_skyrmion"]], "test_stdprob3() (in module micromagnetictests.calculatortests)": [[143, "micromagnetictests.calculatortests.test_stdprob3"]], "test_stdprob4() (in module micromagnetictests.calculatortests)": [[144, "micromagnetictests.calculatortests.test_stdprob4"]], "test_stdprob5() (in module micromagnetictests.calculatortests)": [[145, "micromagnetictests.calculatortests.test_stdprob5"]], "get_tests() (in module micromagnetictests)": [[146, "micromagnetictests.get_tests"]], "test() (in module micromagnetictests)": [[147, "micromagnetictests.test"]], "oommfc": [[148, "module-oommfc"]], "cgevolver (class in oommfc)": [[149, "oommfc.CGEvolver"]], "driver (class in oommfc)": [[150, "oommfc.Driver"]], "drive_kwargs_setup() (oommfc.driver method)": [[150, "oommfc.Driver.drive_kwargs_setup"]], "schedule_kwargs_setup() (oommfc.driver method)": [[150, "oommfc.Driver.schedule_kwargs_setup"]], "write_mif() (oommfc.driver method)": [[150, "oommfc.Driver.write_mif"]], "eulerevolver (class in oommfc)": [[151, "oommfc.EulerEvolver"]], "hysteresisdriver (class in oommfc)": [[152, "oommfc.HysteresisDriver"]], "mindriver (class in oommfc)": [[153, "oommfc.MinDriver"]], "rungekuttaevolver (class in oommfc)": [[154, "oommfc.RungeKuttaEvolver"]], "spintevolver (class in oommfc)": [[155, "oommfc.SpinTEvolver"]], "spinxferevolver (class in oommfc)": [[156, "oommfc.SpinXferEvolver"]], "timedriver (class in oommfc)": [[157, "oommfc.TimeDriver"]], "uhh_thetaevolver (class in oommfc)": [[158, "oommfc.UHH_ThetaEvolver"]], "xf_thermheunevolver (class in oommfc)": [[159, "oommfc.Xf_ThermHeunEvolver"]], "xf_thermspinxferevolver (class in oommfc)": [[160, "oommfc.Xf_ThermSpinXferEvolver"]], "compute() (in module oommfc)": [[161, "oommfc.compute"]], "delete() (in module oommfc)": [[162, "oommfc.delete"]], "oommfc.oommf": [[163, "module-oommfc.oommf"]], "dockeroommfrunner (class in oommfc.oommf)": [[164, "oommfc.oommf.DockerOOMMFRunner"]], "__repr__() (oommfc.oommf.dockeroommfrunner method)": [[164, "oommfc.oommf.DockerOOMMFRunner.__repr__"]], "errors() (oommfc.oommf.dockeroommfrunner method)": [[164, "oommfc.oommf.DockerOOMMFRunner.errors"]], "exeoommfrunner (class in oommfc.oommf)": [[165, "oommfc.oommf.ExeOOMMFRunner"]], "__repr__() (oommfc.oommf.exeoommfrunner method)": [[165, "oommfc.oommf.ExeOOMMFRunner.__repr__"]], "errors() (oommfc.oommf.exeoommfrunner method)": [[165, "oommfc.oommf.ExeOOMMFRunner.errors"]], "oommfrunner (class in oommfc.oommf)": [[166, "oommfc.oommf.OOMMFRunner"]], "__del__() (oommfc.oommf.oommfrunner method)": [[166, "oommfc.oommf.OOMMFRunner.__del__"]], "__repr__() (oommfc.oommf.oommfrunner method)": [[166, "oommfc.oommf.OOMMFRunner.__repr__"]], "errors() (oommfc.oommf.oommfrunner method)": [[166, "oommfc.oommf.OOMMFRunner.errors"]], "package_name (oommfc.oommf.oommfrunner property)": [[166, "oommfc.oommf.OOMMFRunner.package_name"]], "platform (oommfc.oommf.oommfrunner property)": [[166, "oommfc.oommf.OOMMFRunner.platform"]], "status (oommfc.oommf.oommfrunner property)": [[166, "oommfc.oommf.OOMMFRunner.status"]], "version (oommfc.oommf.oommfrunner property)": [[166, "oommfc.oommf.OOMMFRunner.version"]], "runner (class in oommfc.oommf)": [[167, "oommfc.oommf.Runner"]], "__repr__() (oommfc.oommf.runner method)": [[167, "oommfc.oommf.Runner.__repr__"]], "autoselect_runner() (oommfc.oommf.runner method)": [[167, "oommfc.oommf.Runner.autoselect_runner"]], "runner (oommfc.oommf.runner property)": [[167, "oommfc.oommf.Runner.runner"]], "tcloommfrunner (class in oommfc.oommf)": [[168, "oommfc.oommf.TclOOMMFRunner"]], "__repr__() (oommfc.oommf.tcloommfrunner method)": [[168, "oommfc.oommf.TclOOMMFRunner.__repr__"]], "errors() (oommfc.oommf.tcloommfrunner method)": [[168, "oommfc.oommf.TclOOMMFRunner.errors"]], "overhead() (in module oommfc.oommf)": [[169, "oommfc.oommf.overhead"]], "runner (in module oommfc)": [[170, "oommfc.runner"]], "test() (in module oommfc)": [[171, "oommfc.test"]], "test_docker() (in module oommfc)": [[172, "oommfc.test_docker"]], "ubermag": [[173, "module-ubermag"]], "test() (in module ubermag)": [[174, "ubermag.test"]], "ubermagtable": [[175, "module-ubermagtable"]], "table (class in ubermagtable)": [[176, "ubermagtable.Table"]], "__lshift__() (ubermagtable.table method)": [[176, "ubermagtable.Table.__lshift__"]], "__repr__() (ubermagtable.table method)": [[176, "ubermagtable.Table.__repr__"]], "apply() (ubermagtable.table method)": [[176, "ubermagtable.Table.apply"]], "dx (ubermagtable.table property)": [[176, "ubermagtable.Table.dx"]], "fromfile() (ubermagtable.table class method)": [[176, "ubermagtable.Table.fromfile"]], "irfft() (ubermagtable.table method)": [[176, "ubermagtable.Table.irfft"]], "mpl() (ubermagtable.table method)": [[176, "ubermagtable.Table.mpl"]], "rfft() (ubermagtable.table method)": [[176, "ubermagtable.Table.rfft"]], "selector() (ubermagtable.table method)": [[176, "ubermagtable.Table.selector"]], "slider() (ubermagtable.table method)": [[176, "ubermagtable.Table.slider"]], "x (ubermagtable.table property)": [[176, "ubermagtable.Table.x"]], "xmax (ubermagtable.table property)": [[176, "ubermagtable.Table.xmax"]], "y (ubermagtable.table property)": [[176, "ubermagtable.Table.y"]], "interact() (in module ubermagtable)": [[177, "ubermagtable.interact"]], "test() (in module ubermagtable)": [[178, "ubermagtable.test"]], "ubermagtable.util": [[179, "module-ubermagtable.util"]], "columns() (in module ubermagtable.util)": [[180, "ubermagtable.util.columns"]], "data() (in module ubermagtable.util)": [[181, "ubermagtable.util.data"]], "units() (in module ubermagtable.util)": [[182, "ubermagtable.util.units"]], "ubermagutil": [[183, "module-ubermagutil"]], "changedir() (in module ubermagutil)": [[184, "ubermagutil.changedir"]], "hysteresis_values() (in module ubermagutil)": [[185, "ubermagutil.hysteresis_values"]], "inherit_docs() (in module ubermagutil)": [[186, "ubermagutil.inherit_docs"]], "setup_logging() (in module ubermagutil)": [[187, "ubermagutil.setup_logging"]], "test() (in module ubermagutil)": [[188, "ubermagutil.test"]], "ubermagutil.typesystem": [[189, "module-ubermagutil.typesystem"]], "descriptor (class in ubermagutil.typesystem)": [[190, "ubermagutil.typesystem.Descriptor"]], "__delete__() (ubermagutil.typesystem.descriptor method)": [[190, "ubermagutil.typesystem.Descriptor.__delete__"]], "__set__() (ubermagutil.typesystem.descriptor method)": [[190, "ubermagutil.typesystem.Descriptor.__set__"]], "dictionary (class in ubermagutil.typesystem)": [[191, "ubermagutil.typesystem.Dictionary"]], "__set__() (ubermagutil.typesystem.dictionary method)": [[191, "ubermagutil.typesystem.Dictionary.__set__"]], "name (class in ubermagutil.typesystem)": [[192, "ubermagutil.typesystem.Name"]], "__set__() (ubermagutil.typesystem.name method)": [[192, "ubermagutil.typesystem.Name.__set__"]], "parameter (class in ubermagutil.typesystem)": [[193, "ubermagutil.typesystem.Parameter"]], "__set__() (ubermagutil.typesystem.parameter method)": [[193, "ubermagutil.typesystem.Parameter.__set__"]], "scalar (class in ubermagutil.typesystem)": [[194, "ubermagutil.typesystem.Scalar"]], "__set__() (ubermagutil.typesystem.scalar method)": [[194, "ubermagutil.typesystem.Scalar.__set__"]], "subset (class in ubermagutil.typesystem)": [[195, "ubermagutil.typesystem.Subset"]], "__set__() (ubermagutil.typesystem.subset method)": [[195, "ubermagutil.typesystem.Subset.__set__"]], "typed (class in ubermagutil.typesystem)": [[196, "ubermagutil.typesystem.Typed"]], "__set__() (ubermagutil.typesystem.typed method)": [[196, "ubermagutil.typesystem.Typed.__set__"]], "vector (class in ubermagutil.typesystem)": [[197, "ubermagutil.typesystem.Vector"]], "__set__() (ubermagutil.typesystem.vector method)": [[197, "ubermagutil.typesystem.Vector.__set__"]], "typesystem() (in module ubermagutil.typesystem)": [[198, "ubermagutil.typesystem.typesystem"]], "ubermagutil.units": [[199, "module-ubermagutil.units"]], "si_max_multiplier() (in module ubermagutil.units)": [[200, "ubermagutil.units.si_max_multiplier"]], "si_multiplier() (in module ubermagutil.units)": [[201, "ubermagutil.units.si_multiplier"]]}})